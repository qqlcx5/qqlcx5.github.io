(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{451:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一、关于取值的吐槽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、关于取值的吐槽"}},[t._v("#")]),t._v(" 一、关于取值的吐槽")]),t._v(" "),s("p",[t._v("取值在程序中非常常见，比如从对象"),s("code",[t._v("obj")]),t._v("中取值。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("c")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("d")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[s("strong",[t._v("吐槽")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("或者")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" g "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("吐槽：“不会用ES6的解构赋值来取值吗？5行代码用1行代码搞定不香吗？直接用对象名加属性名去取值，要是对象名短还好，很长呢？搞得代码中到处都是这个对象名。”")]),t._v(" "),s("p",[s("strong",[t._v("改进")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const {a,b,c,d,e} = obj;\nconst f = a + d;\nconst g = c + e;\n\n")])])]),s("p",[s("strong",[t._v("反驳")])]),t._v(" "),s("p",[t._v("不是不用ES6的解构赋值，而是服务端返回的数据对象中的属性名不是我想要的，这样取值，不是还得重新创建个遍历赋值。")]),t._v(" "),s("p",[s("strong",[t._v("吐槽")])]),t._v(" "),s("p",[t._v("看来你对ES6的解构赋值掌握的还是不够彻底。如果想创建的变量名和对象的属性名不一致，可以这么写：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const {a:a1} = obj;\nconsole.log(a1);// 1\n\n")])])]),s("p",[s("strong",[t._v("补充")])]),t._v(" "),s("p",[t._v("ES6的解构赋值虽然好用。但是要注意解构的对象不能为"),s("code",[t._v("undefined")]),t._v("、"),s("code",[t._v("null")]),t._v("。否则会报错，故要给被解构的对象一个默认值。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const {a,b,c,d,e} = obj || {};\n\n")])])]),s("h2",{attrs:{id:"二、关于合并数据的吐槽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、关于合并数据的吐槽"}},[t._v("#")]),t._v(" 二、关于合并数据的吐槽")]),t._v(" "),s("p",[t._v("比如合并两个数组，合并两个对象。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const a = [1,2,3];\nconst b = [1,5,6];\nconst c = a.concat(b);//[1,2,3,1,5,6]\n\nconst obj1 = {\n  a:1,\n}\nconst obj1 = {\n  b:1,\n}\nconst obj = Object.assign({}, obj1, obj2);//{a:1,b:1}\n\n")])])]),s("p",[s("strong",[t._v("吐槽")])]),t._v(" "),s("p",[t._v("ES6的扩展运算符是不是忘记了，还有数组的合并不考虑去重吗？")]),t._v(" "),s("p",[s("strong",[t._v("改进")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const a = [1,2,3];\nconst b = [1,5,6];\nconst c = [...new Set([...a,...b])];//[1,2,3,5,6]\n\nconst obj1 = {\n  a:1,\n}\nconst obj2 = {\n  b:1,\n}\nconst obj = {...obj1,...obj2};//{a:1,b:1}\n\n")])])]),s("h2",{attrs:{id:"三、关于拼接字符串的吐槽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、关于拼接字符串的吐槽"}},[t._v("#")]),t._v(" 三、关于拼接字符串的吐槽")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const name = '小明';\nconst score = 59;\nlet result = '';\nif(score > 60){\n  result = `${name}的考试成绩及格`; \n}else{\n  result = `${name}的考试成绩不及格`; \n}\n\n")])])]),s("p",[s("strong",[t._v("吐槽")])]),t._v(" "),s("p",[t._v("像你们这样用ES6字符串模板，还不如不用，你们根本不清楚在"),s("code",[t._v("${}")]),t._v("中可以做什么操作。在"),s("code",[t._v("${}")]),t._v("中可以放入任意的JavaScript表达式，可以进行运算，以及引用对象属性。")]),t._v(" "),s("p",[s("strong",[t._v("改进")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const name = '小明';\nconst score = 59;\nconst result = `${name}${score > 60?'的考试成绩及格':'的考试成绩不及格'}`;\n\n")])])]),s("h2",{attrs:{id:"四、关于if中判断条件的吐槽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、关于if中判断条件的吐槽"}},[t._v("#")]),t._v(" 四、关于if中判断条件的吐槽")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("if(\n    type == 1 ||\n    type == 2 ||\n    type == 3 ||\n    type == 4 ||\n){\n   //...\n}\n\n")])])]),s("p",[s("strong",[t._v("吐槽")])]),t._v(" "),s("p",[t._v("ES6中数组实例方法"),s("code",[t._v("includes")]),t._v("会不会使用呢？")]),t._v(" "),s("p",[s("strong",[t._v("改进")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const condition = [1,2,3,4];\n\nif( condition.includes(type) ){\n   //...\n}\n\n")])])]),s("h2",{attrs:{id:"五、关于列表搜索的吐槽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、关于列表搜索的吐槽"}},[t._v("#")]),t._v(" 五、关于列表搜索的吐槽")]),t._v(" "),s("p",[t._v("在项目中，一些没分页的列表的搜索功能由前端来实现，搜索一般分为精确搜索和模糊搜索。搜索也要叫过滤，一般用"),s("code",[t._v("filter")]),t._v("来实现。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const a = [1,2,3,4,5];\nconst result = a.filter( \n  item =>{\n    return item === 3\n  }\n)\n\n")])])]),s("p",[s("strong",[t._v("吐槽")])]),t._v(" "),s("p",[t._v("如果是精确搜索不会用ES6中的"),s("code",[t._v("find")]),t._v("吗？性能优化懂么，"),s("code",[t._v("find")]),t._v("方法中找到符合条件的项，就不会继续遍历数组。")]),t._v(" "),s("p",[s("strong",[t._v("改进")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const a = [1,2,3,4,5];\nconst result = a.find( \n  item =>{\n    return item === 3\n  }\n)\n\n")])])]),s("h2",{attrs:{id:"六、关于扁平化数组的吐槽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、关于扁平化数组的吐槽"}},[t._v("#")]),t._v(" 六、关于扁平化数组的吐槽")]),t._v(" "),s("p",[t._v("一个部门JSON数据中，属性名是部门id，属性值是个部门成员id数组集合，现在要把有部门的成员id都提取到一个数组集合中。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const deps = {\n'采购部':[1,2,3],\n'人事部':[5,8,12],\n'行政部':[5,14,79],\n'运输部':[3,64,105],\n}\nlet member = [];\nfor (let item in deps){\n    const value = deps[item];\n    if(Array.isArray(value)){\n        member = [...member,...value]\n    }\n}\nmember = [...new Set(member)]\n\n")])])]),s("p",[s("strong",[t._v("吐槽")])]),t._v(" "),s("p",[t._v("获取对象的全部属性值还要遍历吗？"),s("code",[t._v("Object.values")]),t._v("忘记了吗？还有涉及到数组的扁平化处理，为啥不用ES6提供的"),s("code",[t._v("flat")]),t._v("方法呢，还好这次的数组的深度最多只到2维，还要是遇到4维、5维深度的数组，是不是得循环嵌套循环来扁平化？")]),t._v(" "),s("p",[s("strong",[t._v("改进")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const deps = {\n    '采购部':[1,2,3],\n    '人事部':[5,8,12],\n    '行政部':[5,14,79],\n    '运输部':[3,64,105],\n}\nlet member = Object.values(deps).flat(Infinity);\n\n")])])]),s("p",[t._v("其中使用"),s("code",[t._v("Infinity")]),t._v("作为"),s("code",[t._v("flat")]),t._v("的参数，使得无需知道被扁平化的数组的维度。")]),t._v(" "),s("p",[s("strong",[t._v("补充")])]),t._v(" "),s("p",[s("code",[t._v("flat")]),t._v("方法不支持IE浏览器。")]),t._v(" "),s("h2",{attrs:{id:"七、关于获取对象属性值的吐槽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、关于获取对象属性值的吐槽"}},[t._v("#")]),t._v(" 七、关于获取对象属性值的吐槽")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const name = obj && obj.name;\n\n")])])]),s("p",[s("strong",[t._v("吐槽")])]),t._v(" "),s("p",[t._v("ES6中的可选链操作符会使用么？")]),t._v(" "),s("p",[s("strong",[t._v("改进")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const name = obj?.name;\n\n")])])]),s("h2",{attrs:{id:"八、关于添加对象属性的吐槽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、关于添加对象属性的吐槽"}},[t._v("#")]),t._v(" 八、关于添加对象属性的吐槽")]),t._v(" "),s("p",[t._v("当给对象添加属性时，如果属性名是动态变化的，该怎么处理。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let obj = {};\nlet index = 1;\nlet key = `topic${index}`;\nobj[key] = '话题内容';\n\n")])])]),s("p",[s("strong",[t._v("吐槽")])]),t._v(" "),s("p",[t._v("为何要额外创建一个变量。不知道ES6中的对象属性名是可以用表达式吗？")]),t._v(" "),s("p",[s("strong",[t._v("改进")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let obj = {};\nlet index = 1;\nobj[`topic${index}`] = '话题内容';\n\n")])])]),s("h2",{attrs:{id:"九、关于输入框非空的判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#九、关于输入框非空的判断"}},[t._v("#")]),t._v(" 九、关于输入框非空的判断")]),t._v(" "),s("p",[t._v("在处理输入框相关业务时，往往会判断输入框未输入值的场景。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("if(value !== null && value !== undefined && value !== ''){\n    //...\n}\n\n")])])]),s("p",[s("strong",[t._v("吐槽")])]),t._v(" "),s("p",[t._v("ES6中新出的空值合并运算符了解过吗，要写那么多条件吗？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("if(value??'' !== ''){\n  //...\n}\n\n")])])]),s("h2",{attrs:{id:"十、关于异步函数的吐槽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十、关于异步函数的吐槽"}},[t._v("#")]),t._v(" 十、关于异步函数的吐槽")]),t._v(" "),s("p",[t._v("异步函数很常见，经常是用 Promise 来实现。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const fn1 = () =>{\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(1);\n    }, 300);\n  });\n}\nconst fn2 = () =>{\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(2);\n    }, 600);\n  });\n}\nconst fn = () =>{\n   fn1().then(res1 =>{\n      console.log(res1);// 1\n      fn2().then(res2 =>{\n        console.log(res2)\n      })\n   })\n}\n\n")])])]),s("p",[s("strong",[t._v("吐槽")])]),t._v(" "),s("p",[t._v("如果这样调用异步函数，不怕形成地狱回调啊！")]),t._v(" "),s("p",[s("strong",[t._v("改进")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const fn = async () =>{\n  const res1 = await fn1();\n  const res2 = await fn2();\n  console.log(res1);// 1\n  console.log(res2);// 2\n}\n\n")])])]),s("p",[s("strong",[t._v("补充")])]),t._v(" "),s("p",[t._v("但是要做并发请求时，还是要用到"),s("code",[t._v("Promise.all()")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const fn = () =>{\n   Promise.all([fn1(),fn2()]).then(res =>{\n       console.log(res);// [1,2]\n   }) \n}\n\n")])])]),s("p",[t._v("如果并发请求时，只要其中一个异步函数处理完成，就返回结果，要用到"),s("code",[t._v("Promise.race()")]),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("作者：红尘炼心\nhttps://juejin.cn/post/7016520448204603423")])])])}),[],!1,null,null,null);s.default=e.exports}}]);