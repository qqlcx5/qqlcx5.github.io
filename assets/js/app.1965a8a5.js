(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var r,a,s=e[0],l=e[1],c=e[2],u=0,p=[];u<s.length;u++)a=s[u],Object.prototype.hasOwnProperty.call(o,a)&&o[a]&&p.push(o[a][0]),o[a]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(n[r]=l[r]);for(d&&d(e);p.length;)p.shift()();return i.push.apply(i,c||[]),t()}function t(){for(var n,e=0;e<i.length;e++){for(var t=i[e],r=!0,s=1;s<t.length;s++){var l=t[s];0!==o[l]&&(r=!1)}r&&(i.splice(e--,1),n=a(a.s=t[0]))}return n}var r={},o={8:0},i=[];function a(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.e=function(n){var e=[],t=o[n];if(0!==t)if(t)e.push(t[2]);else{var r=new Promise((function(e,r){t=o[n]=[e,r]}));e.push(t[2]=r);var i,s=document.createElement("script");s.charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.src=function(n){return a.p+"assets/js/"+({9:"vendors~docsearch"}[n]||n)+"."+{1:"c2a23ba8",2:"b40b70ca",3:"3bc689f7",4:"52ba796c",5:"fd608770",6:"0361877b",7:"db0ee8b8",9:"38838867",10:"30b78787",11:"b4d9f2bd",12:"8372fc44",13:"ac9cfd02",14:"2002d3e5",15:"ede9e9c3",16:"0dd9f3de",17:"f89318dc",18:"adc13302",19:"45a006eb",20:"ed630b78",21:"39ce5f9a",22:"12b3d4c7",23:"1103575d",24:"59d22e64",25:"b7baa96e",26:"e3339714",27:"e19bd1d0",28:"06a3d779",29:"b654ba19",30:"0724e350",31:"91aea1a7",32:"973f530c",33:"c0683264",34:"b675e51a",35:"e8d5c52b",36:"c5c09031",37:"59b21bd2",38:"0a04a860",39:"b9776daf",40:"ce8366f8",41:"c28cb87d",42:"3bba8f4e",43:"ad138a82",44:"035b858f",45:"03dbbc74",46:"3c950ed1",47:"27f8a6e8",48:"3ee3d9cc",49:"3441860c",50:"5b2c231b",51:"07f3933e",52:"062e4361",53:"3da58dac",54:"6ff39994",55:"e2a332a2",56:"c3ea6a73",57:"10dc49d6",58:"ce7b8b81",59:"f88ca8c0",60:"3de59b65",61:"f3b917b7",62:"b549648e",63:"8a433967",64:"fc2805fd",65:"c026149e",66:"d7de4b66",67:"1126447b",68:"d2b3f75c",69:"e3b91a64",70:"01113a3d",71:"3bbb82c0",72:"6139299d",73:"6ac431d9",74:"2f0012aa",75:"2113ca68",76:"3ed80b05",77:"95532af6",78:"a1a8e47a",79:"d8051b28",80:"33b1d6d1",81:"7f70af67",82:"6b0a1fe4",83:"e81f6dc0",84:"c9fdca93",85:"70000d58",86:"73b81bf5",87:"19f27515",88:"f87ec452",89:"deba264e",90:"6777d500",91:"11d802ae",92:"9e51b548",93:"ef299757",94:"b4fcb24d",95:"21dd552b",96:"9c079966",97:"697fb682",98:"d17bf372",99:"e2a05886",100:"19912a5b",101:"a282b6bb",102:"f2dbea2e",103:"3e085583",104:"3b12691c",105:"663e61a1",106:"6bc945d3",107:"4c60ec9c",108:"b78d814d",109:"b78d1d29",110:"3a573d0f",111:"95edd9f9",112:"d3190a09",113:"47c05ffa",114:"8c6bf175",115:"b53e8a85",116:"a8fa2499",117:"172eb660",118:"2b248feb",119:"0a14011b",120:"eae82d37",121:"a3511580",122:"9561470a",123:"fc29236a",124:"8fc5bc4e",125:"0d06064c",126:"9f304c5d",127:"0b825954",128:"7a80c67c",129:"18e90175"}[n]+".js"}(n);var l=new Error;i=function(e){s.onerror=s.onload=null,clearTimeout(c);var t=o[n];if(0!==t){if(t){var r=e&&("load"===e.type?"missing":e.type),i=e&&e.target&&e.target.src;l.message="Loading chunk "+n+" failed.\n("+r+": "+i+")",l.name="ChunkLoadError",l.type=r,l.request=i,t[1](l)}o[n]=void 0}};var c=setTimeout((function(){i({type:"timeout",target:s})}),12e4);s.onerror=s.onload=i,document.head.appendChild(s)}return Promise.all(e)},a.m=n,a.c=r,a.d=function(n,e,t){a.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},a.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},a.t=function(n,e){if(1&e&&(n=a(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)a.d(t,r,function(e){return n[e]}.bind(null,r));return t},a.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(e,"a",e),e},a.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},a.p="/",a.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=e,s=s.slice();for(var c=0;c<s.length;c++)e(s[c]);var d=l;i.push([132,0]),t()}([function(n,e,t){"use strict";t.d(e,"a",(function(){return Nn})),t.d(e,"b",(function(){return Xt})),t.d(e,"c",(function(){return He})),t.d(e,"d",(function(){return Ue})),t.d(e,"e",(function(){return Mn}));
/*!
 * Vue.js v2.7.16
 * (c) 2014-2023 Evan You
 * Released under the MIT License.
 */
var r=Object.freeze({}),o=Array.isArray;function i(n){return null==n}function a(n){return null!=n}function s(n){return!0===n}function l(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function c(n){return"function"==typeof n}function d(n){return null!==n&&"object"==typeof n}var u=Object.prototype.toString;function p(n){return"[object Object]"===u.call(n)}function m(n){return"[object RegExp]"===u.call(n)}function h(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function g(n){return a(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function f(n){return null==n?"":Array.isArray(n)||p(n)&&n.toString===u?JSON.stringify(n,v,2):String(n)}function v(n,e){return e&&e.__v_isRef?e.value:e}function b(n){var e=parseFloat(n);return isNaN(e)?n:e}function w(n,e){for(var t=Object.create(null),r=n.split(","),o=0;o<r.length;o++)t[r[o]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}w("slot,component",!0);var y=w("key,ref,slot,slot-scope,is");function k(n,e){var t=n.length;if(t){if(e===n[t-1])return void(n.length=t-1);var r=n.indexOf(e);if(r>-1)return n.splice(r,1)}}var x=Object.prototype.hasOwnProperty;function _(n,e){return x.call(n,e)}function S(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var j=/-(\w)/g,T=S((function(n){return n.replace(j,(function(n,e){return e?e.toUpperCase():""}))})),C=S((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),E=/\B([A-Z])/g,A=S((function(n){return n.replace(E,"-$1").toLowerCase()}));var z=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var r=arguments.length;return r?r>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function I(n,e){e=e||0;for(var t=n.length-e,r=new Array(t);t--;)r[t]=n[t+e];return r}function P(n,e){for(var t in e)n[t]=e[t];return n}function $(n){for(var e={},t=0;t<n.length;t++)n[t]&&P(e,n[t]);return e}function B(n,e,t){}var O=function(n,e,t){return!1},D=function(n){return n};function q(n,e){if(n===e)return!0;var t=d(n),r=d(e);if(!t||!r)return!t&&!r&&String(n)===String(e);try{var o=Array.isArray(n),i=Array.isArray(e);if(o&&i)return n.length===e.length&&n.every((function(n,t){return q(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(o||i)return!1;var a=Object.keys(n),s=Object.keys(e);return a.length===s.length&&a.every((function(t){return q(n[t],e[t])}))}catch(n){return!1}}function L(n,e){for(var t=0;t<n.length;t++)if(q(n[t],e))return t;return-1}function V(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}function F(n,e){return n===e?0===n&&1/n!=1/e:n==n||e==e}var M=["component","directive","filter"],G=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],R={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:O,isReservedAttr:O,isUnknownElement:O,getTagNamespace:B,parsePlatformTagName:D,mustUseProp:O,async:!0,_lifecycleHooks:G},N=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function H(n){var e=(n+"").charCodeAt(0);return 36===e||95===e}function U(n,e,t,r){Object.defineProperty(n,e,{value:t,enumerable:!!r,writable:!0,configurable:!0})}var W=new RegExp("[^".concat(N.source,".$_\\d]"));var J="__proto__"in{},Z="undefined"!=typeof window,Q=Z&&window.navigator.userAgent.toLowerCase(),K=Q&&/msie|trident/.test(Q),X=Q&&Q.indexOf("msie 9.0")>0,Y=Q&&Q.indexOf("edge/")>0;Q&&Q.indexOf("android");var nn=Q&&/iphone|ipad|ipod|ios/.test(Q);Q&&/chrome\/\d+/.test(Q),Q&&/phantomjs/.test(Q);var en,tn=Q&&Q.match(/firefox\/(\d+)/),rn={}.watch,on=!1;if(Z)try{var an={};Object.defineProperty(an,"passive",{get:function(){on=!0}}),window.addEventListener("test-passive",null,an)}catch(n){}var sn=function(){return void 0===en&&(en=!Z&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),en},ln=Z&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function cn(n){return"function"==typeof n&&/native code/.test(n.toString())}var dn,un="undefined"!=typeof Symbol&&cn(Symbol)&&"undefined"!=typeof Reflect&&cn(Reflect.ownKeys);dn="undefined"!=typeof Set&&cn(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var pn=null;function mn(n){void 0===n&&(n=null),n||pn&&pn._scope.off(),pn=n,n&&n._scope.on()}var hn=function(){function n(n,e,t,r,o,i,a,s){this.tag=n,this.data=e,this.children=t,this.text=r,this.elm=o,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(n.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),n}(),gn=function(n){void 0===n&&(n="");var e=new hn;return e.text=n,e.isComment=!0,e};function fn(n){return new hn(void 0,void 0,void 0,String(n))}function vn(n){var e=new hn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}"function"==typeof SuppressedError&&SuppressedError;var bn=0,wn=[],yn=function(){function n(){this._pending=!1,this.id=bn++,this.subs=[]}return n.prototype.addSub=function(n){this.subs.push(n)},n.prototype.removeSub=function(n){this.subs[this.subs.indexOf(n)]=null,this._pending||(this._pending=!0,wn.push(this))},n.prototype.depend=function(e){n.target&&n.target.addDep(this)},n.prototype.notify=function(n){var e=this.subs.filter((function(n){return n}));for(var t=0,r=e.length;t<r;t++){0,e[t].update()}},n}();yn.target=null;var kn=[];function xn(n){kn.push(n),yn.target=n}function _n(){kn.pop(),yn.target=kn[kn.length-1]}var Sn=Array.prototype,jn=Object.create(Sn);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=Sn[n];U(jn,n,(function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var o,i=e.apply(this,t),a=this.__ob__;switch(n){case"push":case"unshift":o=t;break;case"splice":o=t.slice(2)}return o&&a.observeArray(o),a.dep.notify(),i}))}));var Tn=Object.getOwnPropertyNames(jn),Cn={},En=!0;function An(n){En=n}var zn={notify:B,depend:B,addSub:B,removeSub:B},In=function(){function n(n,e,t){if(void 0===e&&(e=!1),void 0===t&&(t=!1),this.value=n,this.shallow=e,this.mock=t,this.dep=t?zn:new yn,this.vmCount=0,U(n,"__ob__",this),o(n)){if(!t)if(J)n.__proto__=jn;else for(var r=0,i=Tn.length;r<i;r++){U(n,s=Tn[r],jn[s])}e||this.observeArray(n)}else{var a=Object.keys(n);for(r=0;r<a.length;r++){var s;$n(n,s=a[r],Cn,void 0,e,t)}}}return n.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)Pn(n[e],!1,this.mock)},n}();function Pn(n,e,t){return n&&_(n,"__ob__")&&n.__ob__ instanceof In?n.__ob__:!En||!t&&sn()||!o(n)&&!p(n)||!Object.isExtensible(n)||n.__v_skip||Fn(n)||n instanceof hn?void 0:new In(n,e,t)}function $n(n,e,t,r,i,a,s){void 0===s&&(s=!1);var l=new yn,c=Object.getOwnPropertyDescriptor(n,e);if(!c||!1!==c.configurable){var d=c&&c.get,u=c&&c.set;d&&!u||t!==Cn&&2!==arguments.length||(t=n[e]);var p=i?t&&t.__ob__:Pn(t,!1,a);return Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=d?d.call(n):t;return yn.target&&(l.depend(),p&&(p.dep.depend(),o(e)&&Dn(e))),Fn(e)&&!i?e.value:e},set:function(e){var r=d?d.call(n):t;if(F(r,e)){if(u)u.call(n,e);else{if(d)return;if(!i&&Fn(r)&&!Fn(e))return void(r.value=e);t=e}p=i?e&&e.__ob__:Pn(e,!1,a),l.notify()}}}),l}}function Bn(n,e,t){if(!Vn(n)){var r=n.__ob__;return o(n)&&h(e)?(n.length=Math.max(n.length,e),n.splice(e,1,t),r&&!r.shallow&&r.mock&&Pn(t,!1,!0),t):e in n&&!(e in Object.prototype)?(n[e]=t,t):n._isVue||r&&r.vmCount?t:r?($n(r.value,e,t,void 0,r.shallow,r.mock),r.dep.notify(),t):(n[e]=t,t)}}function On(n,e){if(o(n)&&h(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||Vn(n)||_(n,e)&&(delete n[e],t&&t.dep.notify())}}function Dn(n){for(var e=void 0,t=0,r=n.length;t<r;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),o(e)&&Dn(e)}function qn(n){return Ln(n,!0),U(n,"__v_isShallow",!0),n}function Ln(n,e){if(!Vn(n)){Pn(n,e,sn());0}}function Vn(n){return!(!n||!n.__v_isReadonly)}function Fn(n){return!(!n||!0!==n.__v_isRef)}function Mn(n){return Gn(n,!1)}function Gn(n,e){if(Fn(n))return n;var t={};return U(t,"__v_isRef",!0),U(t,"__v_isShallow",e),U(t,"dep",$n(t,"value",n,null,e,sn())),t}function Rn(n,e,t){Object.defineProperty(n,t,{enumerable:!0,configurable:!0,get:function(){var n=e[t];if(Fn(n))return n.value;var r=n&&n.__ob__;return r&&r.dep.depend(),n},set:function(n){var r=e[t];Fn(r)&&!Fn(n)?r.value=n:e[t]=n}})}function Nn(n,e){var t,r,o=c(n);o?(t=n,r=B):(t=n.get,r=n.set);var i=sn()?null:new Ke(pn,t,B,{lazy:!0});var a={effect:i,get value(){return i?(i.dirty&&i.evaluate(),yn.target&&i.depend(),i.value):t()},set value(n){r(n)}};return U(a,"__v_isRef",!0),U(a,"__v_isReadonly",o),a}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var Hn;var Un=function(){function n(n){void 0===n&&(n=!1),this.detached=n,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Hn,!n&&Hn&&(this.index=(Hn.scopes||(Hn.scopes=[])).push(this)-1)}return n.prototype.run=function(n){if(this.active){var e=Hn;try{return Hn=this,n()}finally{Hn=e}}else 0},n.prototype.on=function(){Hn=this},n.prototype.off=function(){Hn=this.parent},n.prototype.stop=function(n){if(this.active){var e=void 0,t=void 0;for(e=0,t=this.effects.length;e<t;e++)this.effects[e].teardown();for(e=0,t=this.cleanups.length;e<t;e++)this.cleanups[e]();if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].stop(!0);if(!this.detached&&this.parent&&!n){var r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this.active=!1}},n}();function Wn(n){var e=n._provided,t=n.$parent&&n.$parent._provided;return t===e?n._provided=Object.create(t):e}var Jn=S((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),r="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=r?n.slice(1):n,once:t,capture:r,passive:e}}));function Zn(n,e){function t(){var n=t.fns;if(!o(n))return Ie(n,null,arguments,e,"v-on handler");for(var r=n.slice(),i=0;i<r.length;i++)Ie(r[i],null,arguments,e,"v-on handler")}return t.fns=n,t}function Qn(n,e,t,r,o,a){var l,c,d,u;for(l in n)c=n[l],d=e[l],u=Jn(l),i(c)||(i(d)?(i(c.fns)&&(c=n[l]=Zn(c,a)),s(u.once)&&(c=n[l]=o(u.name,c,u.capture)),t(u.name,c,u.capture,u.passive,u.params)):c!==d&&(d.fns=c,n[l]=d));for(l in e)i(n[l])&&r((u=Jn(l)).name,e[l],u.capture)}function Kn(n,e,t){var r;n instanceof hn&&(n=n.data.hook||(n.data.hook={}));var o=n[e];function l(){t.apply(this,arguments),k(r.fns,l)}i(o)?r=Zn([l]):a(o.fns)&&s(o.merged)?(r=o).fns.push(l):r=Zn([o,l]),r.merged=!0,n[e]=r}function Xn(n,e,t,r,o){if(a(e)){if(_(e,t))return n[t]=e[t],o||delete e[t],!0;if(_(e,r))return n[t]=e[r],o||delete e[r],!0}return!1}function Yn(n){return l(n)?[fn(n)]:o(n)?function n(e,t){var r,c,d,u,p=[];for(r=0;r<e.length;r++)i(c=e[r])||"boolean"==typeof c||(d=p.length-1,u=p[d],o(c)?c.length>0&&(ne((c=n(c,"".concat(t||"","_").concat(r)))[0])&&ne(u)&&(p[d]=fn(u.text+c[0].text),c.shift()),p.push.apply(p,c)):l(c)?ne(u)?p[d]=fn(u.text+c):""!==c&&p.push(fn(c)):ne(c)&&ne(u)?p[d]=fn(u.text+c.text):(s(e._isVList)&&a(c.tag)&&i(c.key)&&a(t)&&(c.key="__vlist".concat(t,"_").concat(r,"__")),p.push(c)));return p}(n):void 0}function ne(n){return a(n)&&a(n.text)&&!1===n.isComment}function ee(n,e){var t,r,i,s,l=null;if(o(n)||"string"==typeof n)for(l=new Array(n.length),t=0,r=n.length;t<r;t++)l[t]=e(n[t],t);else if("number"==typeof n)for(l=new Array(n),t=0;t<n;t++)l[t]=e(t+1,t);else if(d(n))if(un&&n[Symbol.iterator]){l=[];for(var c=n[Symbol.iterator](),u=c.next();!u.done;)l.push(e(u.value,l.length)),u=c.next()}else for(i=Object.keys(n),l=new Array(i.length),t=0,r=i.length;t<r;t++)s=i[t],l[t]=e(n[s],s,t);return a(l)||(l=[]),l._isVList=!0,l}function te(n,e,t,r){var o,i=this.$scopedSlots[n];i?(t=t||{},r&&(t=P(P({},r),t)),o=i(t)||(c(e)?e():e)):o=this.$slots[n]||(c(e)?e():e);var a=t&&t.slot;return a?this.$createElement("template",{slot:a},o):o}function re(n){return Dt(this.$options,"filters",n,!0)||D}function oe(n,e){return o(n)?-1===n.indexOf(e):n!==e}function ie(n,e,t,r,o){var i=R.keyCodes[e]||t;return o&&r&&!R.keyCodes[e]?oe(o,r):i?oe(i,n):r?A(r)!==e:void 0===n}function ae(n,e,t,r,i){if(t)if(d(t)){o(t)&&(t=$(t));var a=void 0,s=function(o){if("class"===o||"style"===o||y(o))a=n;else{var s=n.attrs&&n.attrs.type;a=r||R.mustUseProp(e,s,o)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var l=T(o),c=A(o);l in a||c in a||(a[o]=t[o],i&&((n.on||(n.on={}))["update:".concat(o)]=function(n){t[o]=n}))};for(var l in t)s(l)}else;return n}function se(n,e){var t=this._staticTrees||(this._staticTrees=[]),r=t[n];return r&&!e||ce(r=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,this._c,this),"__static__".concat(n),!1),r}function le(n,e,t){return ce(n,"__once__".concat(e).concat(t?"_".concat(t):""),!0),n}function ce(n,e,t){if(o(n))for(var r=0;r<n.length;r++)n[r]&&"string"!=typeof n[r]&&de(n[r],"".concat(e,"_").concat(r),t);else de(n,e,t)}function de(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function ue(n,e){if(e)if(p(e)){var t=n.on=n.on?P({},n.on):{};for(var r in e){var o=t[r],i=e[r];t[r]=o?[].concat(o,i):i}}else;return n}function pe(n,e,t,r){e=e||{$stable:!t};for(var i=0;i<n.length;i++){var a=n[i];o(a)?pe(a,e,t):a&&(a.proxy&&(a.fn.proxy=!0),e[a.key]=a.fn)}return r&&(e.$key=r),e}function me(n,e){for(var t=0;t<e.length;t+=2){var r=e[t];"string"==typeof r&&r&&(n[e[t]]=e[t+1])}return n}function he(n,e){return"string"==typeof n?e+n:n}function ge(n){n._o=le,n._n=b,n._s=f,n._l=ee,n._t=te,n._q=q,n._i=L,n._m=se,n._f=re,n._k=ie,n._b=ae,n._v=fn,n._e=gn,n._u=pe,n._g=ue,n._d=me,n._p=he}function fe(n,e){if(!n||!n.length)return{};for(var t={},r=0,o=n.length;r<o;r++){var i=n[r],a=i.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,i.context!==e&&i.fnContext!==e||!a||null==a.slot)(t.default||(t.default=[])).push(i);else{var s=a.slot,l=t[s]||(t[s]=[]);"template"===i.tag?l.push.apply(l,i.children||[]):l.push(i)}}for(var c in t)t[c].every(ve)&&delete t[c];return t}function ve(n){return n.isComment&&!n.asyncFactory||" "===n.text}function be(n){return n.isComment&&n.asyncFactory}function we(n,e,t,o){var i,a=Object.keys(t).length>0,s=e?!!e.$stable:!a,l=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(s&&o&&o!==r&&l===o.$key&&!a&&!o.$hasNormal)return o;for(var c in i={},e)e[c]&&"$"!==c[0]&&(i[c]=ye(n,t,c,e[c]))}else i={};for(var d in t)d in i||(i[d]=ke(t,d));return e&&Object.isExtensible(e)&&(e._normalized=i),U(i,"$stable",s),U(i,"$key",l),U(i,"$hasNormal",a),i}function ye(n,e,t,r){var i=function(){var e=pn;mn(n);var t=arguments.length?r.apply(null,arguments):r({}),i=(t=t&&"object"==typeof t&&!o(t)?[t]:Yn(t))&&t[0];return mn(e),t&&(!i||1===t.length&&i.isComment&&!be(i))?void 0:t};return r.proxy&&Object.defineProperty(e,t,{get:i,enumerable:!0,configurable:!0}),i}function ke(n,e){return function(){return n[e]}}function xe(n){return{get attrs(){if(!n._attrsProxy){var e=n._attrsProxy={};U(e,"_v_attr_proxy",!0),_e(e,n.$attrs,r,n,"$attrs")}return n._attrsProxy},get listeners(){n._listenersProxy||_e(n._listenersProxy={},n.$listeners,r,n,"$listeners");return n._listenersProxy},get slots(){return function(n){n._slotsProxy||je(n._slotsProxy={},n.$scopedSlots);return n._slotsProxy}(n)},emit:z(n.$emit,n),expose:function(e){e&&Object.keys(e).forEach((function(t){return Rn(n,e,t)}))}}}function _e(n,e,t,r,o){var i=!1;for(var a in e)a in n?e[a]!==t[a]&&(i=!0):(i=!0,Se(n,a,r,o));for(var a in n)a in e||(i=!0,delete n[a]);return i}function Se(n,e,t,r){Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){return t[r][e]}})}function je(n,e){for(var t in e)n[t]=e[t];for(var t in n)t in e||delete n[t]}var Te=null;function Ce(n,e){return(n.__esModule||un&&"Module"===n[Symbol.toStringTag])&&(n=n.default),d(n)?e.extend(n):n}function Ee(n){if(o(n))for(var e=0;e<n.length;e++){var t=n[e];if(a(t)&&(a(t.componentOptions)||be(t)))return t}}function Ae(n,e,t,r,u,p){return(o(t)||l(t))&&(u=r,r=t,t=void 0),s(p)&&(u=2),function(n,e,t,r,l){if(a(t)&&a(t.__ob__))return gn();a(t)&&a(t.is)&&(e=t.is);if(!e)return gn();0;o(r)&&c(r[0])&&((t=t||{}).scopedSlots={default:r[0]},r.length=0);2===l?r=Yn(r):1===l&&(r=function(n){for(var e=0;e<n.length;e++)if(o(n[e]))return Array.prototype.concat.apply([],n);return n}(r));var u,p;if("string"==typeof e){var m=void 0;p=n.$vnode&&n.$vnode.ns||R.getTagNamespace(e),u=R.isReservedTag(e)?new hn(R.parsePlatformTagName(e),t,r,void 0,void 0,n):t&&t.pre||!a(m=Dt(n.$options,"components",e))?new hn(e,t,r,void 0,void 0,n):Tt(m,t,n,r,e)}else u=Tt(e,t,n,r);return o(u)?u:a(u)?(a(p)&&function n(e,t,r){e.ns=t,"foreignObject"===e.tag&&(t=void 0,r=!0);if(a(e.children))for(var o=0,l=e.children.length;o<l;o++){var c=e.children[o];a(c.tag)&&(i(c.ns)||s(r)&&"svg"!==c.tag)&&n(c,t,r)}}(u,p),a(t)&&function(n){d(n.style)&&Je(n.style);d(n.class)&&Je(n.class)}(t),u):gn()}(n,e,t,r,u)}function ze(n,e,t){xn();try{if(e)for(var r=e;r=r.$parent;){var o=r.$options.errorCaptured;if(o)for(var i=0;i<o.length;i++)try{if(!1===o[i].call(r,n,e,t))return}catch(n){Pe(n,r,"errorCaptured hook")}}Pe(n,e,t)}finally{_n()}}function Ie(n,e,t,r,o){var i;try{(i=t?n.apply(e,t):n.call(e))&&!i._isVue&&g(i)&&!i._handled&&(i.catch((function(n){return ze(n,r,o+" (Promise/async)")})),i._handled=!0)}catch(n){ze(n,r,o)}return i}function Pe(n,e,t){if(R.errorHandler)try{return R.errorHandler.call(null,n,e,t)}catch(e){e!==n&&$e(e,null,"config.errorHandler")}$e(n,e,t)}function $e(n,e,t){if(!Z||"undefined"==typeof console)throw n;console.error(n)}var Be,Oe=!1,De=[],qe=!1;function Le(){qe=!1;var n=De.slice(0);De.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&cn(Promise)){var Ve=Promise.resolve();Be=function(){Ve.then(Le),nn&&setTimeout(B)},Oe=!0}else if(K||"undefined"==typeof MutationObserver||!cn(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Be="undefined"!=typeof setImmediate&&cn(setImmediate)?function(){setImmediate(Le)}:function(){setTimeout(Le,0)};else{var Fe=1,Me=new MutationObserver(Le),Ge=document.createTextNode(String(Fe));Me.observe(Ge,{characterData:!0}),Be=function(){Fe=(Fe+1)%2,Ge.data=String(Fe)},Oe=!0}function Re(n,e){var t;if(De.push((function(){if(n)try{n.call(e)}catch(n){ze(n,e,"nextTick")}else t&&t(e)})),qe||(qe=!0,Be()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}function Ne(n){return function(e,t){if(void 0===t&&(t=pn),t)return function(n,e,t){var r=n.$options;r[e]=Pt(r[e],t)}(t,n,e)}}Ne("beforeMount");var He=Ne("mounted"),Ue=(Ne("beforeUpdate"),Ne("updated"),Ne("beforeDestroy"),Ne("destroyed"));Ne("activated"),Ne("deactivated"),Ne("serverPrefetch"),Ne("renderTracked"),Ne("renderTriggered"),Ne("errorCaptured");var We=new dn;function Je(n){return function n(e,t){var r,i,a=o(e);if(!a&&!d(e)||e.__v_skip||Object.isFrozen(e)||e instanceof hn)return;if(e.__ob__){var s=e.__ob__.dep.id;if(t.has(s))return;t.add(s)}if(a)for(r=e.length;r--;)n(e[r],t);else if(Fn(e))n(e.value,t);else for(i=Object.keys(e),r=i.length;r--;)n(e[i[r]],t)}(n,We),We.clear(),n}var Ze,Qe=0,Ke=function(){function n(n,e,t,r,o){var i,a;i=this,void 0===(a=Hn&&!Hn._vm?Hn:n?n._scope:void 0)&&(a=Hn),a&&a.active&&a.effects.push(i),(this.vm=n)&&o&&(n._watcher=this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++Qe,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new dn,this.newDepIds=new dn,this.expression="",c(e)?this.getter=e:(this.getter=function(n){if(!W.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=B)),this.value=this.lazy?void 0:this.get()}return n.prototype.get=function(){var n;xn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;ze(n,e,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Je(n),_n(),this.cleanupDeps()}return n},n.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},n.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},n.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():bt(this)},n.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||d(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'.concat(this.expression,'"');Ie(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},n.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},n.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},n.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&k(this.vm._scope.effects,this),this.active){for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},n}();function Xe(n,e){Ze.$on(n,e)}function Ye(n,e){Ze.$off(n,e)}function nt(n,e){var t=Ze;return function r(){var o=e.apply(null,arguments);null!==o&&t.$off(n,r)}}function et(n,e,t){Ze=n,Qn(e,t||{},Xe,Ye,nt,n),Ze=void 0}var tt=null;function rt(n){var e=tt;return tt=n,function(){tt=e}}function ot(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function it(n,e){if(e){if(n._directInactive=!1,ot(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)it(n.$children[t]);at(n,"activated")}}function at(n,e,t,r){void 0===r&&(r=!0),xn();var o=pn,i=Hn;r&&mn(n);var a=n.$options[e],s="".concat(e," hook");if(a)for(var l=0,c=a.length;l<c;l++)Ie(a[l],n,t||null,n,s);n._hasHookEvent&&n.$emit("hook:"+e),r&&(mn(o),i&&i.on()),_n()}var st=[],lt=[],ct={},dt=!1,ut=!1,pt=0;var mt=0,ht=Date.now;if(Z&&!K){var gt=window.performance;gt&&"function"==typeof gt.now&&ht()>document.createEvent("Event").timeStamp&&(ht=function(){return gt.now()})}var ft=function(n,e){if(n.post){if(!e.post)return 1}else if(e.post)return-1;return n.id-e.id};function vt(){var n,e;for(mt=ht(),ut=!0,st.sort(ft),pt=0;pt<st.length;pt++)(n=st[pt]).before&&n.before(),e=n.id,ct[e]=null,n.run();var t=lt.slice(),r=st.slice();pt=st.length=lt.length=0,ct={},dt=ut=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,it(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],r=t.vm;r&&r._watcher===t&&r._isMounted&&!r._isDestroyed&&at(r,"updated")}}(r),function(){for(var n=0;n<wn.length;n++){var e=wn[n];e.subs=e.subs.filter((function(n){return n})),e._pending=!1}wn.length=0}(),ln&&R.devtools&&ln.emit("flush")}function bt(n){var e=n.id;if(null==ct[e]&&(n!==yn.target||!n.noRecurse)){if(ct[e]=!0,ut){for(var t=st.length-1;t>pt&&st[t].id>n.id;)t--;st.splice(t+1,0,n)}else st.push(n);dt||(dt=!0,Re(vt))}}function wt(n,e){if(n){for(var t=Object.create(null),r=un?Reflect.ownKeys(n):Object.keys(n),o=0;o<r.length;o++){var i=r[o];if("__ob__"!==i){var a=n[i].from;if(a in e._provided)t[i]=e._provided[a];else if("default"in n[i]){var s=n[i].default;t[i]=c(s)?s.call(e):s}else 0}}return t}}function yt(n,e,t,i,a){var l,c=this,d=a.options;_(i,"_uid")?(l=Object.create(i))._original=i:(l=i,i=i._original);var u=s(d._compiled),p=!u;this.data=n,this.props=e,this.children=t,this.parent=i,this.listeners=n.on||r,this.injections=wt(d.inject,i),this.slots=function(){return c.$slots||we(i,n.scopedSlots,c.$slots=fe(t,i)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return we(i,n.scopedSlots,this.slots())}}),u&&(this.$options=d,this.$slots=this.slots(),this.$scopedSlots=we(i,n.scopedSlots,this.$slots)),d._scopeId?this._c=function(n,e,t,r){var a=Ae(l,n,e,t,r,p);return a&&!o(a)&&(a.fnScopeId=d._scopeId,a.fnContext=i),a}:this._c=function(n,e,t,r){return Ae(l,n,e,t,r,p)}}function kt(n,e,t,r,o){var i=vn(n);return i.fnContext=t,i.fnOptions=r,e.slot&&((i.data||(i.data={})).slot=e.slot),i}function xt(n,e){for(var t in e)n[T(t)]=e[t]}function _t(n){return n.name||n.__name||n._componentTag}ge(yt.prototype);var St={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;St.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},r=n.data.inlineTemplate;a(r)&&(t.render=r.render,t.staticRenderFns=r.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,tt)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,o,i){var a=o.data.scopedSlots,s=n.$scopedSlots,l=!!(a&&!a.$stable||s!==r&&!s.$stable||a&&n.$scopedSlots.$key!==a.$key||!a&&n.$scopedSlots.$key),c=!!(i||n.$options._renderChildren||l),d=n.$vnode;n.$options._parentVnode=o,n.$vnode=o,n._vnode&&(n._vnode.parent=o),n.$options._renderChildren=i;var u=o.data.attrs||r;n._attrsProxy&&_e(n._attrsProxy,u,d.data&&d.data.attrs||r,n,"$attrs")&&(c=!0),n.$attrs=u,t=t||r;var p=n.$options._parentListeners;if(n._listenersProxy&&_e(n._listenersProxy,t,p||r,n,"$listeners"),n.$listeners=n.$options._parentListeners=t,et(n,t,p),e&&n.$options.props){An(!1);for(var m=n._props,h=n.$options._propKeys||[],g=0;g<h.length;g++){var f=h[g],v=n.$options.props;m[f]=qt(f,v,e,n)}An(!0),n.$options.propsData=e}c&&(n.$slots=fe(i,o.context),n.$forceUpdate())}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,r=n.componentInstance;r._isMounted||(r._isMounted=!0,at(r,"mounted")),n.data.keepAlive&&(t._isMounted?((e=r)._inactive=!1,lt.push(e)):it(r,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(!(t&&(e._directInactive=!0,ot(e))||e._inactive)){e._inactive=!0;for(var r=0;r<e.$children.length;r++)n(e.$children[r]);at(e,"deactivated")}}(e,!0):e.$destroy())}},jt=Object.keys(St);function Tt(n,e,t,l,c){if(!i(n)){var u=t.$options._base;if(d(n)&&(n=u.extend(n)),"function"==typeof n){var p;if(i(n.cid)&&void 0===(n=function(n,e){if(s(n.error)&&a(n.errorComp))return n.errorComp;if(a(n.resolved))return n.resolved;var t=Te;if(t&&a(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t),s(n.loading)&&a(n.loadingComp))return n.loadingComp;if(t&&!a(n.owners)){var r=n.owners=[t],o=!0,l=null,c=null;t.$on("hook:destroyed",(function(){return k(r,t)}));var u=function(n){for(var e=0,t=r.length;e<t;e++)r[e].$forceUpdate();n&&(r.length=0,null!==l&&(clearTimeout(l),l=null),null!==c&&(clearTimeout(c),c=null))},p=V((function(t){n.resolved=Ce(t,e),o?r.length=0:u(!0)})),m=V((function(e){a(n.errorComp)&&(n.error=!0,u(!0))})),h=n(p,m);return d(h)&&(g(h)?i(n.resolved)&&h.then(p,m):g(h.component)&&(h.component.then(p,m),a(h.error)&&(n.errorComp=Ce(h.error,e)),a(h.loading)&&(n.loadingComp=Ce(h.loading,e),0===h.delay?n.loading=!0:l=setTimeout((function(){l=null,i(n.resolved)&&i(n.error)&&(n.loading=!0,u(!1))}),h.delay||200)),a(h.timeout)&&(c=setTimeout((function(){c=null,i(n.resolved)&&m(null)}),h.timeout)))),o=!1,n.loading?n.loadingComp:n.resolved}}(p=n,u)))return function(n,e,t,r,o){var i=gn();return i.asyncFactory=n,i.asyncMeta={data:e,context:t,children:r,tag:o},i}(p,e,t,l,c);e=e||{},Kt(n),a(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",r=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var i=e.on||(e.on={}),s=i[r],l=e.model.callback;a(s)?(o(s)?-1===s.indexOf(l):s!==l)&&(i[r]=[l].concat(s)):i[r]=l}(n.options,e);var m=function(n,e,t){var r=e.options.props;if(!i(r)){var o={},s=n.attrs,l=n.props;if(a(s)||a(l))for(var c in r){var d=A(c);Xn(o,l,c,d,!0)||Xn(o,s,c,d,!1)}return o}}(e,n);if(s(n.options.functional))return function(n,e,t,i,s){var l=n.options,c={},d=l.props;if(a(d))for(var u in d)c[u]=qt(u,d,e||r);else a(t.attrs)&&xt(c,t.attrs),a(t.props)&&xt(c,t.props);var p=new yt(t,c,s,i,n),m=l.render.call(null,p._c,p);if(m instanceof hn)return kt(m,t,p.parent,l,p);if(o(m)){for(var h=Yn(m)||[],g=new Array(h.length),f=0;f<h.length;f++)g[f]=kt(h[f],t,p.parent,l,p);return g}}(n,m,e,t,l);var h=e.on;if(e.on=e.nativeOn,s(n.options.abstract)){var f=e.slot;e={},f&&(e.slot=f)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<jt.length;t++){var r=jt[t],o=e[r],i=St[r];o===i||o&&o._merged||(e[r]=o?Ct(i,o):i)}}(e);var v=_t(n.options)||c;return new hn("vue-component-".concat(n.cid).concat(v?"-".concat(v):""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:m,listeners:h,tag:c,children:l},p)}}}function Ct(n,e){var t=function(t,r){n(t,r),e(t,r)};return t._merged=!0,t}var Et=B,At=R.optionMergeStrategies;function zt(n,e,t){if(void 0===t&&(t=!0),!e)return n;for(var r,o,i,a=un?Reflect.ownKeys(e):Object.keys(e),s=0;s<a.length;s++)"__ob__"!==(r=a[s])&&(o=n[r],i=e[r],t&&_(n,r)?o!==i&&p(o)&&p(i)&&zt(o,i):Bn(n,r,i));return n}function It(n,e,t){return t?function(){var r=c(e)?e.call(t,t):e,o=c(n)?n.call(t,t):n;return r?zt(r,o):o}:e?n?function(){return zt(c(e)?e.call(this,this):e,c(n)?n.call(this,this):n)}:e:n}function Pt(n,e){var t=e?n?n.concat(e):o(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function $t(n,e,t,r){var o=Object.create(n||null);return e?P(o,e):o}At.data=function(n,e,t){return t?It(n,e,t):e&&"function"!=typeof e?n:It(n,e)},G.forEach((function(n){At[n]=Pt})),M.forEach((function(n){At[n+"s"]=$t})),At.watch=function(n,e,t,r){if(n===rn&&(n=void 0),e===rn&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var i={};for(var a in P(i,n),e){var s=i[a],l=e[a];s&&!o(s)&&(s=[s]),i[a]=s?s.concat(l):o(l)?l:[l]}return i},At.props=At.methods=At.inject=At.computed=function(n,e,t,r){if(!n)return e;var o=Object.create(null);return P(o,n),e&&P(o,e),o},At.provide=function(n,e){return n?function(){var t=Object.create(null);return zt(t,c(n)?n.call(this):n),e&&zt(t,c(e)?e.call(this):e,!1),t}:e};var Bt=function(n,e){return void 0===e?n:e};function Ot(n,e,t){if(c(e)&&(e=e.options),function(n,e){var t=n.props;if(t){var r,i,a={};if(o(t))for(r=t.length;r--;)"string"==typeof(i=t[r])&&(a[T(i)]={type:null});else if(p(t))for(var s in t)i=t[s],a[T(s)]=p(i)?i:{type:i};else 0;n.props=a}}(e),function(n,e){var t=n.inject;if(t){var r=n.inject={};if(o(t))for(var i=0;i<t.length;i++)r[t[i]]={from:t[i]};else if(p(t))for(var a in t){var s=t[a];r[a]=p(s)?P({from:a},s):{from:s}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var r=e[t];c(r)&&(e[t]={bind:r,update:r})}}(e),!e._base&&(e.extends&&(n=Ot(n,e.extends,t)),e.mixins))for(var r=0,i=e.mixins.length;r<i;r++)n=Ot(n,e.mixins[r],t);var a,s={};for(a in n)l(a);for(a in e)_(n,a)||l(a);function l(r){var o=At[r]||Bt;s[r]=o(n[r],e[r],t,r)}return s}function Dt(n,e,t,r){if("string"==typeof t){var o=n[e];if(_(o,t))return o[t];var i=T(t);if(_(o,i))return o[i];var a=C(i);return _(o,a)?o[a]:o[t]||o[i]||o[a]}}function qt(n,e,t,r){var o=e[n],i=!_(t,n),a=t[n],s=Mt(Boolean,o.type);if(s>-1)if(i&&!_(o,"default"))a=!1;else if(""===a||a===A(n)){var l=Mt(String,o.type);(l<0||s<l)&&(a=!0)}if(void 0===a){a=function(n,e,t){if(!_(e,"default"))return;var r=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return c(r)&&"Function"!==Vt(e.type)?r.call(n):r}(r,o,n);var d=En;An(!0),Pn(a),An(d)}return a}var Lt=/^\s*function (\w+)/;function Vt(n){var e=n&&n.toString().match(Lt);return e?e[1]:""}function Ft(n,e){return Vt(n)===Vt(e)}function Mt(n,e){if(!o(e))return Ft(e,n)?0:-1;for(var t=0,r=e.length;t<r;t++)if(Ft(e[t],n))return t;return-1}var Gt={enumerable:!0,configurable:!0,get:B,set:B};function Rt(n,e,t){Gt.get=function(){return this[e][t]},Gt.set=function(n){this[e][t]=n},Object.defineProperty(n,t,Gt)}function Nt(n){var e=n.$options;if(e.props&&function(n,e){var t=n.$options.propsData||{},r=n._props=qn({}),o=n.$options._propKeys=[];n.$parent&&An(!1);var i=function(i){o.push(i);var a=qt(i,e,t,n);$n(r,i,a,void 0,!0),i in n||Rt(n,"_props",i)};for(var a in e)i(a);An(!0)}(n,e.props),function(n){var e=n.$options,t=e.setup;if(t){var r=n._setupContext=xe(n);mn(n),xn();var o=Ie(t,null,[n._props||qn({}),r],n,"setup");if(_n(),mn(),c(o))e.render=o;else if(d(o))if(n._setupState=o,o.__sfc){var i=n._setupProxy={};for(var a in o)"__sfc"!==a&&Rn(i,o,a)}else for(var a in o)H(a)||Rn(n,o,a);else 0}}(n),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?B:z(e[t],n)}(n,e.methods),e.data)!function(n){var e=n.$options.data;p(e=n._data=c(e)?function(n,e){xn();try{return n.call(e,e)}catch(n){return ze(n,e,"data()"),{}}finally{_n()}}(e,n):e||{})||(e={});var t=Object.keys(e),r=n.$options.props,o=(n.$options.methods,t.length);for(;o--;){var i=t[o];0,r&&_(r,i)||H(i)||Rt(n,"_data",i)}var a=Pn(e);a&&a.vmCount++}(n);else{var t=Pn(n._data={});t&&t.vmCount++}e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),r=sn();for(var o in e){var i=e[o],a=c(i)?i:i.get;0,r||(t[o]=new Ke(n,a||B,B,Ht)),o in n||Ut(n,o,i)}}(n,e.computed),e.watch&&e.watch!==rn&&function(n,e){for(var t in e){var r=e[t];if(o(r))for(var i=0;i<r.length;i++)Zt(n,t,r[i]);else Zt(n,t,r)}}(n,e.watch)}var Ht={lazy:!0};function Ut(n,e,t){var r=!sn();c(t)?(Gt.get=r?Wt(e):Jt(t),Gt.set=B):(Gt.get=t.get?r&&!1!==t.cache?Wt(e):Jt(t.get):B,Gt.set=t.set||B),Object.defineProperty(n,e,Gt)}function Wt(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),yn.target&&e.depend(),e.value}}function Jt(n){return function(){return n.call(this,this)}}function Zt(n,e,t,r){return p(t)&&(r=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,r)}var Qt=0;function Kt(n){var e=n.options;if(n.super){var t=Kt(n.super);if(t!==n.superOptions){n.superOptions=t;var r=function(n){var e,t=n.options,r=n.sealedOptions;for(var o in t)t[o]!==r[o]&&(e||(e={}),e[o]=t[o]);return e}(n);r&&P(n.extendOptions,r),(e=n.options=Ot(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function Xt(n){this._init(n)}function Yt(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,r=t.cid,o=n._Ctor||(n._Ctor={});if(o[r])return o[r];var i=_t(n)||_t(t.options);var a=function(n){this._init(n)};return(a.prototype=Object.create(t.prototype)).constructor=a,a.cid=e++,a.options=Ot(t.options,n),a.super=t,a.options.props&&function(n){var e=n.options.props;for(var t in e)Rt(n.prototype,"_props",t)}(a),a.options.computed&&function(n){var e=n.options.computed;for(var t in e)Ut(n.prototype,t,e[t])}(a),a.extend=t.extend,a.mixin=t.mixin,a.use=t.use,M.forEach((function(n){a[n]=t[n]})),i&&(a.options.components[i]=a),a.superOptions=t.options,a.extendOptions=n,a.sealedOptions=P({},a.options),o[r]=a,a}}function nr(n){return n&&(_t(n.Ctor.options)||n.tag)}function er(n,e){return o(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!m(n)&&n.test(e)}function tr(n,e){var t=n.cache,r=n.keys,o=n._vnode,i=n.$vnode;for(var a in t){var s=t[a];if(s){var l=s.name;l&&!e(l)&&rr(t,a,r,o)}}i.componentOptions.children=void 0}function rr(n,e,t,r){var o=n[e];!o||r&&o.tag===r.tag||o.componentInstance.$destroy(),n[e]=null,k(t,e)}!function(n){n.prototype._init=function(n){var e=this;e._uid=Qt++,e._isVue=!0,e.__v_skip=!0,e._scope=new Un(!0),e._scope.parent=void 0,e._scope._vm=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),r=e._parentVnode;t.parent=e.parent,t._parentVnode=r;var o=r.componentOptions;t.propsData=o.propsData,t._parentListeners=o.listeners,t._renderChildren=o.children,t._componentTag=o.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=Ot(Kt(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._provided=t?t._provided:Object.create(null),n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&et(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,o=t&&t.context;n.$slots=fe(e._renderChildren,o),n.$scopedSlots=t?we(n.$parent,t.data.scopedSlots,n.$slots):r,n._c=function(e,t,r,o){return Ae(n,e,t,r,o,!1)},n.$createElement=function(e,t,r,o){return Ae(n,e,t,r,o,!0)};var i=t&&t.data;$n(n,"$attrs",i&&i.attrs||r,null,!0),$n(n,"$listeners",e._parentListeners||r,null,!0)}(e),at(e,"beforeCreate",void 0,!1),function(n){var e=wt(n.$options.inject,n);e&&(An(!1),Object.keys(e).forEach((function(t){$n(n,t,e[t])})),An(!0))}(e),Nt(e),function(n){var e=n.$options.provide;if(e){var t=c(e)?e.call(n):e;if(!d(t))return;for(var r=Wn(n),o=un?Reflect.ownKeys(t):Object.keys(t),i=0;i<o.length;i++){var a=o[i];Object.defineProperty(r,a,Object.getOwnPropertyDescriptor(t,a))}}}(e),at(e,"created"),e.$options.el&&e.$mount(e.$options.el)}}(Xt),function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=Bn,n.prototype.$delete=On,n.prototype.$watch=function(n,e,t){if(p(e))return Zt(this,n,e,t);(t=t||{}).user=!0;var r=new Ke(this,n,e,t);if(t.immediate){var o='callback for immediate watcher "'.concat(r.expression,'"');xn(),Ie(e,this,[r.value],this,o),_n()}return function(){r.teardown()}}}(Xt),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var r=this;if(o(n))for(var i=0,a=n.length;i<a;i++)r.$on(n[i],t);else(r._events[n]||(r._events[n]=[])).push(t),e.test(n)&&(r._hasHookEvent=!0);return r},n.prototype.$once=function(n,e){var t=this;function r(){t.$off(n,r),e.apply(t,arguments)}return r.fn=e,t.$on(n,r),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(o(n)){for(var r=0,i=n.length;r<i;r++)t.$off(n[r],e);return t}var a,s=t._events[n];if(!s)return t;if(!e)return t._events[n]=null,t;for(var l=s.length;l--;)if((a=s[l])===e||a.fn===e){s.splice(l,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?I(t):t;for(var r=I(arguments,1),o='event handler for "'.concat(n,'"'),i=0,a=t.length;i<a;i++)Ie(t[i],e,r,e,o)}return e}}(Xt),function(n){n.prototype._update=function(n,e){var t=this,r=t.$el,o=t._vnode,i=rt(t);t._vnode=n,t.$el=o?t.__patch__(o,n):t.__patch__(t.$el,n,e,!1),i(),r&&(r.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var a=t;a&&a.$vnode&&a.$parent&&a.$vnode===a.$parent._vnode;)a.$parent.$el=a.$el,a=a.$parent},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){at(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||k(e.$children,n),n._scope.stop(),n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),at(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(Xt),function(n){ge(n.prototype),n.prototype.$nextTick=function(n){return Re(n,this)},n.prototype._render=function(){var n=this,e=n.$options,t=e.render,r=e._parentVnode;r&&n._isMounted&&(n.$scopedSlots=we(n.$parent,r.data.scopedSlots,n.$slots,n.$scopedSlots),n._slotsProxy&&je(n._slotsProxy,n.$scopedSlots)),n.$vnode=r;var i,a=pn,s=Te;try{mn(n),Te=n,i=t.call(n._renderProxy,n.$createElement)}catch(e){ze(e,n,"render"),i=n._vnode}finally{Te=s,mn(a)}return o(i)&&1===i.length&&(i=i[0]),i instanceof hn||(i=gn()),i.parent=r,i}}(Xt);var or=[String,RegExp,Array],ir={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:or,exclude:or,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,r=this.keyToCache;if(t){var o=t.tag,i=t.componentInstance,a=t.componentOptions;n[r]={name:nr(a),tag:o,componentInstance:i},e.push(r),this.max&&e.length>parseInt(this.max)&&rr(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)rr(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){tr(n,(function(n){return er(e,n)}))})),this.$watch("exclude",(function(e){tr(n,(function(n){return!er(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=Ee(n),t=e&&e.componentOptions;if(t){var r=nr(t),o=this.include,i=this.exclude;if(o&&(!r||!er(o,r))||i&&r&&er(i,r))return e;var a=this.cache,s=this.keys,l=null==e.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):e.key;a[l]?(e.componentInstance=a[l].componentInstance,k(s,l),s.push(l)):(this.vnodeToCache=e,this.keyToCache=l),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return R}};Object.defineProperty(n,"config",e),n.util={warn:Et,extend:P,mergeOptions:Ot,defineReactive:$n},n.set=Bn,n.delete=On,n.nextTick=Re,n.observable=function(n){return Pn(n),n},n.options=Object.create(null),M.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,P(n.options.components,ir),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=I(arguments,1);return t.unshift(this),c(n.install)?n.install.apply(n,t):c(n)&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=Ot(this.options,n),this}}(n),Yt(n),function(n){M.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&p(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&c(t)&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(Xt),Object.defineProperty(Xt.prototype,"$isServer",{get:sn}),Object.defineProperty(Xt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Xt,"FunctionalRenderContext",{value:yt}),Xt.version="2.7.16";var ar=w("style,class"),sr=w("input,textarea,option,select,progress"),lr=w("contenteditable,draggable,spellcheck"),cr=w("events,caret,typing,plaintext-only"),dr=w("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),ur="http://www.w3.org/1999/xlink",pr=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},mr=function(n){return pr(n)?n.slice(6,n.length):""},hr=function(n){return null==n||!1===n};function gr(n){for(var e=n.data,t=n,r=n;a(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(e=fr(r.data,e));for(;a(t=t.parent);)t&&t.data&&(e=fr(e,t.data));return function(n,e){if(a(n)||a(e))return vr(n,br(e));return""}(e.staticClass,e.class)}function fr(n,e){return{staticClass:vr(n.staticClass,e.staticClass),class:a(n.class)?[n.class,e.class]:e.class}}function vr(n,e){return n?e?n+" "+e:n:e||""}function br(n){return Array.isArray(n)?function(n){for(var e,t="",r=0,o=n.length;r<o;r++)a(e=br(n[r]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):d(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var wr={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},yr=w("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),kr=w("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),xr=function(n){return yr(n)||kr(n)};var _r=Object.create(null);var Sr=w("text,number,password,search,email,tel,url");var jr=Object.freeze({__proto__:null,createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(wr[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),Tr={create:function(n,e){Cr(e)},update:function(n,e){n.data.ref!==e.data.ref&&(Cr(n,!0),Cr(e))},destroy:function(n){Cr(n,!0)}};function Cr(n,e){var t=n.data.ref;if(a(t)){var r=n.context,i=n.componentInstance||n.elm,s=e?null:i,l=e?void 0:i;if(c(t))Ie(t,r,[s],r,"template ref function");else{var d=n.data.refInFor,u="string"==typeof t||"number"==typeof t,p=Fn(t),m=r.$refs;if(u||p)if(d){var h=u?m[t]:t.value;e?o(h)&&k(h,i):o(h)?h.includes(i)||h.push(i):u?(m[t]=[i],Er(r,t,m[t])):t.value=[i]}else if(u){if(e&&m[t]!==i)return;m[t]=l,Er(r,t,s)}else if(p){if(e&&t.value!==i)return;t.value=s}else 0}}}function Er(n,e,t){var r=n._setupState;r&&_(r,e)&&(Fn(r[e])?r[e].value=t:r[e]=t)}var Ar=new hn("",{},[]),zr=["create","activate","update","remove","destroy"];function Ir(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&a(n.data)===a(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,r=a(t=n.data)&&a(t=t.attrs)&&t.type,o=a(t=e.data)&&a(t=t.attrs)&&t.type;return r===o||Sr(r)&&Sr(o)}(n,e)||s(n.isAsyncPlaceholder)&&i(e.asyncFactory.error))}function Pr(n,e,t){var r,o,i={};for(r=e;r<=t;++r)a(o=n[r].key)&&(i[o]=r);return i}var $r={create:Br,update:Br,destroy:function(n){Br(n,Ar)}};function Br(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,r,o,i=n===Ar,a=e===Ar,s=Dr(n.data.directives,n.context),l=Dr(e.data.directives,e.context),c=[],d=[];for(t in l)r=s[t],o=l[t],r?(o.oldValue=r.value,o.oldArg=r.arg,Lr(o,"update",e,n),o.def&&o.def.componentUpdated&&d.push(o)):(Lr(o,"bind",e,n),o.def&&o.def.inserted&&c.push(o));if(c.length){var u=function(){for(var t=0;t<c.length;t++)Lr(c[t],"inserted",e,n)};i?Kn(e,"insert",u):u()}d.length&&Kn(e,"postpatch",(function(){for(var t=0;t<d.length;t++)Lr(d[t],"componentUpdated",e,n)}));if(!i)for(t in s)l[t]||Lr(s[t],"unbind",n,n,a)}(n,e)}var Or=Object.create(null);function Dr(n,e){var t,r,o=Object.create(null);if(!n)return o;for(t=0;t<n.length;t++){if((r=n[t]).modifiers||(r.modifiers=Or),o[qr(r)]=r,e._setupState&&e._setupState.__sfc){var i=r.def||Dt(e,"_setupState","v-"+r.name);r.def="function"==typeof i?{bind:i,update:i}:i}r.def=r.def||Dt(e.$options,"directives",r.name)}return o}function qr(n){return n.rawName||"".concat(n.name,".").concat(Object.keys(n.modifiers||{}).join("."))}function Lr(n,e,t,r,o){var i=n.def&&n.def[e];if(i)try{i(t.elm,n,t,r,o)}catch(r){ze(r,t.context,"directive ".concat(n.name," ").concat(e," hook"))}}var Vr=[Tr,$r];function Fr(n,e){var t=e.componentOptions;if(!(a(t)&&!1===t.Ctor.options.inheritAttrs||i(n.data.attrs)&&i(e.data.attrs))){var r,o,l=e.elm,c=n.data.attrs||{},d=e.data.attrs||{};for(r in(a(d.__ob__)||s(d._v_attr_proxy))&&(d=e.data.attrs=P({},d)),d)o=d[r],c[r]!==o&&Mr(l,r,o,e.data.pre);for(r in(K||Y)&&d.value!==c.value&&Mr(l,"value",d.value),c)i(d[r])&&(pr(r)?l.removeAttributeNS(ur,mr(r)):lr(r)||l.removeAttribute(r))}}function Mr(n,e,t,r){r||n.tagName.indexOf("-")>-1?Gr(n,e,t):dr(e)?hr(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):lr(e)?n.setAttribute(e,function(n,e){return hr(e)||"false"===e?"false":"contenteditable"===n&&cr(e)?e:"true"}(e,t)):pr(e)?hr(t)?n.removeAttributeNS(ur,mr(e)):n.setAttributeNS(ur,e,t):Gr(n,e,t)}function Gr(n,e,t){if(hr(t))n.removeAttribute(e);else{if(K&&!X&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var r=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",r)};n.addEventListener("input",r),n.__ieph=!0}n.setAttribute(e,t)}}var Rr={create:Fr,update:Fr};function Nr(n,e){var t=e.elm,r=e.data,o=n.data;if(!(i(r.staticClass)&&i(r.class)&&(i(o)||i(o.staticClass)&&i(o.class)))){var s=gr(e),l=t._transitionClasses;a(l)&&(s=vr(s,br(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var Hr,Ur={create:Nr,update:Nr};function Wr(n,e,t){var r=Hr;return function o(){var i=e.apply(null,arguments);null!==i&&Qr(n,o,t,r)}}var Jr=Oe&&!(tn&&Number(tn[1])<=53);function Zr(n,e,t,r){if(Jr){var o=mt,i=e;e=i._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=o||n.timeStamp<=0||n.target.ownerDocument!==document)return i.apply(this,arguments)}}Hr.addEventListener(n,e,on?{capture:t,passive:r}:t)}function Qr(n,e,t,r){(r||Hr).removeEventListener(n,e._wrapper||e,t)}function Kr(n,e){if(!i(n.data.on)||!i(e.data.on)){var t=e.data.on||{},r=n.data.on||{};Hr=e.elm||n.elm,function(n){if(a(n.__r)){var e=K?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}a(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),Qn(t,r,Zr,Qr,Wr,e.context),Hr=void 0}}var Xr,Yr={create:Kr,update:Kr,destroy:function(n){return Kr(n,Ar)}};function no(n,e){if(!i(n.data.domProps)||!i(e.data.domProps)){var t,r,o=e.elm,l=n.data.domProps||{},c=e.data.domProps||{};for(t in(a(c.__ob__)||s(c._v_attr_proxy))&&(c=e.data.domProps=P({},c)),l)t in c||(o[t]="");for(t in c){if(r=c[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),r===l[t])continue;1===o.childNodes.length&&o.removeChild(o.childNodes[0])}if("value"===t&&"PROGRESS"!==o.tagName){o._value=r;var d=i(r)?"":String(r);eo(o,d)&&(o.value=d)}else if("innerHTML"===t&&kr(o.tagName)&&i(o.innerHTML)){(Xr=Xr||document.createElement("div")).innerHTML="<svg>".concat(r,"</svg>");for(var u=Xr.firstChild;o.firstChild;)o.removeChild(o.firstChild);for(;u.firstChild;)o.appendChild(u.firstChild)}else if(r!==l[t])try{o[t]=r}catch(n){}}}}function eo(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,r=n._vModifiers;if(a(r)){if(r.number)return b(t)!==b(e);if(r.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var to={create:no,update:no},ro=S((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var r=n.split(t);r.length>1&&(e[r[0].trim()]=r[1].trim())}})),e}));function oo(n){var e=io(n.style);return n.staticStyle?P(n.staticStyle,e):e}function io(n){return Array.isArray(n)?$(n):"string"==typeof n?ro(n):n}var ao,so=/^--/,lo=/\s*!important$/,co=function(n,e,t){if(so.test(e))n.style.setProperty(e,t);else if(lo.test(t))n.style.setProperty(A(e),t.replace(lo,""),"important");else{var r=po(e);if(Array.isArray(t))for(var o=0,i=t.length;o<i;o++)n.style[r]=t[o];else n.style[r]=t}},uo=["Webkit","Moz","ms"],po=S((function(n){if(ao=ao||document.createElement("div").style,"filter"!==(n=T(n))&&n in ao)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<uo.length;t++){var r=uo[t]+e;if(r in ao)return r}}));function mo(n,e){var t=e.data,r=n.data;if(!(i(t.staticStyle)&&i(t.style)&&i(r.staticStyle)&&i(r.style))){var o,s,l=e.elm,c=r.staticStyle,d=r.normalizedStyle||r.style||{},u=c||d,p=io(e.data.style)||{};e.data.normalizedStyle=a(p.__ob__)?P({},p):p;var m=function(n,e){var t,r={};if(e)for(var o=n;o.componentInstance;)(o=o.componentInstance._vnode)&&o.data&&(t=oo(o.data))&&P(r,t);(t=oo(n.data))&&P(r,t);for(var i=n;i=i.parent;)i.data&&(t=oo(i.data))&&P(r,t);return r}(e,!0);for(s in u)i(m[s])&&co(l,s,"");for(s in m)o=m[s],co(l,s,null==o?"":o)}}var ho={create:mo,update:mo},go=/\s+/;function fo(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(go).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" ".concat(n.getAttribute("class")||""," ");t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function vo(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(go).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" ".concat(n.getAttribute("class")||""," "),r=" "+e+" ";t.indexOf(r)>=0;)t=t.replace(r," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function bo(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&P(e,wo(n.name||"v")),P(e,n),e}return"string"==typeof n?wo(n):void 0}}var wo=S((function(n){return{enterClass:"".concat(n,"-enter"),enterToClass:"".concat(n,"-enter-to"),enterActiveClass:"".concat(n,"-enter-active"),leaveClass:"".concat(n,"-leave"),leaveToClass:"".concat(n,"-leave-to"),leaveActiveClass:"".concat(n,"-leave-active")}})),yo=Z&&!X,ko="transition",xo="transitionend",_o="animation",So="animationend";yo&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(ko="WebkitTransition",xo="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(_o="WebkitAnimation",So="webkitAnimationEnd"));var jo=Z?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function To(n){jo((function(){jo(n)}))}function Co(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),fo(n,e))}function Eo(n,e){n._transitionClasses&&k(n._transitionClasses,e),vo(n,e)}function Ao(n,e,t){var r=Io(n,e),o=r.type,i=r.timeout,a=r.propCount;if(!o)return t();var s="transition"===o?xo:So,l=0,c=function(){n.removeEventListener(s,d),t()},d=function(e){e.target===n&&++l>=a&&c()};setTimeout((function(){l<a&&c()}),i+1),n.addEventListener(s,d)}var zo=/\b(transform|all)(,|$)/;function Io(n,e){var t,r=window.getComputedStyle(n),o=(r[ko+"Delay"]||"").split(", "),i=(r[ko+"Duration"]||"").split(", "),a=Po(o,i),s=(r[_o+"Delay"]||"").split(", "),l=(r[_o+"Duration"]||"").split(", "),c=Po(s,l),d=0,u=0;return"transition"===e?a>0&&(t="transition",d=a,u=i.length):"animation"===e?c>0&&(t="animation",d=c,u=l.length):u=(t=(d=Math.max(a,c))>0?a>c?"transition":"animation":null)?"transition"===t?i.length:l.length:0,{type:t,timeout:d,propCount:u,hasTransform:"transition"===t&&zo.test(r[ko+"Property"])}}function Po(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return $o(e)+$o(n[t])})))}function $o(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function Bo(n,e){var t=n.elm;a(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var r=bo(n.data.transition);if(!i(r)&&!a(t._enterCb)&&1===t.nodeType){for(var o=r.css,s=r.type,l=r.enterClass,u=r.enterToClass,p=r.enterActiveClass,m=r.appearClass,h=r.appearToClass,g=r.appearActiveClass,f=r.beforeEnter,v=r.enter,w=r.afterEnter,y=r.enterCancelled,k=r.beforeAppear,x=r.appear,_=r.afterAppear,S=r.appearCancelled,j=r.duration,T=tt,C=tt.$vnode;C&&C.parent;)T=C.context,C=C.parent;var E=!T._isMounted||!n.isRootInsert;if(!E||x||""===x){var A=E&&m?m:l,z=E&&g?g:p,I=E&&h?h:u,P=E&&k||f,$=E&&c(x)?x:v,B=E&&_||w,O=E&&S||y,D=b(d(j)?j.enter:j);0;var q=!1!==o&&!X,L=qo($),F=t._enterCb=V((function(){q&&(Eo(t,I),Eo(t,z)),F.cancelled?(q&&Eo(t,A),O&&O(t)):B&&B(t),t._enterCb=null}));n.data.show||Kn(n,"insert",(function(){var e=t.parentNode,r=e&&e._pending&&e._pending[n.key];r&&r.tag===n.tag&&r.elm._leaveCb&&r.elm._leaveCb(),$&&$(t,F)})),P&&P(t),q&&(Co(t,A),Co(t,z),To((function(){Eo(t,A),F.cancelled||(Co(t,I),L||(Do(D)?setTimeout(F,D):Ao(t,s,F)))}))),n.data.show&&(e&&e(),$&&$(t,F)),q||L||F()}}}function Oo(n,e){var t=n.elm;a(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var r=bo(n.data.transition);if(i(r)||1!==t.nodeType)return e();if(!a(t._leaveCb)){var o=r.css,s=r.type,l=r.leaveClass,c=r.leaveToClass,u=r.leaveActiveClass,p=r.beforeLeave,m=r.leave,h=r.afterLeave,g=r.leaveCancelled,f=r.delayLeave,v=r.duration,w=!1!==o&&!X,y=qo(m),k=b(d(v)?v.leave:v);0;var x=t._leaveCb=V((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),w&&(Eo(t,c),Eo(t,u)),x.cancelled?(w&&Eo(t,l),g&&g(t)):(e(),h&&h(t)),t._leaveCb=null}));f?f(_):_()}function _(){x.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),p&&p(t),w&&(Co(t,l),Co(t,u),To((function(){Eo(t,l),x.cancelled||(Co(t,c),y||(Do(k)?setTimeout(x,k):Ao(t,s,x)))}))),m&&m(t,x),w||y||x())}}function Do(n){return"number"==typeof n&&!isNaN(n)}function qo(n){if(i(n))return!1;var e=n.fns;return a(e)?qo(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function Lo(n,e){!0!==e.data.show&&Bo(e)}var Vo=function(n){var e,t,r={},c=n.modules,d=n.nodeOps;for(e=0;e<zr.length;++e)for(r[zr[e]]=[],t=0;t<c.length;++t)a(c[t][zr[e]])&&r[zr[e]].push(c[t][zr[e]]);function u(n){var e=d.parentNode(n);a(e)&&d.removeChild(e,n)}function p(n,e,t,o,i,l,c){if(a(n.elm)&&a(l)&&(n=l[c]=vn(n)),n.isRootInsert=!i,!function(n,e,t,o){var i=n.data;if(a(i)){var l=a(n.componentInstance)&&i.keepAlive;if(a(i=i.hook)&&a(i=i.init)&&i(n,!1),a(n.componentInstance))return m(n,e),h(t,n.elm,o),s(l)&&function(n,e,t,o){var i,s=n;for(;s.componentInstance;)if(s=s.componentInstance._vnode,a(i=s.data)&&a(i=i.transition)){for(i=0;i<r.activate.length;++i)r.activate[i](Ar,s);e.push(s);break}h(t,n.elm,o)}(n,e,t,o),!0}}(n,e,t,o)){var u=n.data,p=n.children,f=n.tag;a(f)?(n.elm=n.ns?d.createElementNS(n.ns,f):d.createElement(f,n),b(n),g(n,p,e),a(u)&&v(n,e),h(t,n.elm,o)):s(n.isComment)?(n.elm=d.createComment(n.text),h(t,n.elm,o)):(n.elm=d.createTextNode(n.text),h(t,n.elm,o))}}function m(n,e){a(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,f(n)?(v(n,e),b(n)):(Cr(n),e.push(n))}function h(n,e,t){a(n)&&(a(t)?d.parentNode(t)===n&&d.insertBefore(n,e,t):d.appendChild(n,e))}function g(n,e,t){if(o(e)){0;for(var r=0;r<e.length;++r)p(e[r],t,n.elm,null,!0,e,r)}else l(n.text)&&d.appendChild(n.elm,d.createTextNode(String(n.text)))}function f(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return a(n.tag)}function v(n,t){for(var o=0;o<r.create.length;++o)r.create[o](Ar,n);a(e=n.data.hook)&&(a(e.create)&&e.create(Ar,n),a(e.insert)&&t.push(n))}function b(n){var e;if(a(e=n.fnScopeId))d.setStyleScope(n.elm,e);else for(var t=n;t;)a(e=t.context)&&a(e=e.$options._scopeId)&&d.setStyleScope(n.elm,e),t=t.parent;a(e=tt)&&e!==n.context&&e!==n.fnContext&&a(e=e.$options._scopeId)&&d.setStyleScope(n.elm,e)}function y(n,e,t,r,o,i){for(;r<=o;++r)p(t[r],i,n,e,!1,t,r)}function k(n){var e,t,o=n.data;if(a(o))for(a(e=o.hook)&&a(e=e.destroy)&&e(n),e=0;e<r.destroy.length;++e)r.destroy[e](n);if(a(e=n.children))for(t=0;t<n.children.length;++t)k(n.children[t])}function x(n,e,t){for(;e<=t;++e){var r=n[e];a(r)&&(a(r.tag)?(_(r),k(r)):u(r.elm))}}function _(n,e){if(a(e)||a(n.data)){var t,o=r.remove.length+1;for(a(e)?e.listeners+=o:e=function(n,e){function t(){0==--t.listeners&&u(n)}return t.listeners=e,t}(n.elm,o),a(t=n.componentInstance)&&a(t=t._vnode)&&a(t.data)&&_(t,e),t=0;t<r.remove.length;++t)r.remove[t](n,e);a(t=n.data.hook)&&a(t=t.remove)?t(n,e):e()}else u(n.elm)}function S(n,e,t,r){for(var o=t;o<r;o++){var i=e[o];if(a(i)&&Ir(n,i))return o}}function j(n,e,t,o,l,c){if(n!==e){a(e.elm)&&a(o)&&(e=o[l]=vn(e));var u=e.elm=n.elm;if(s(n.isAsyncPlaceholder))a(e.asyncFactory.resolved)?E(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(s(e.isStatic)&&s(n.isStatic)&&e.key===n.key&&(s(e.isCloned)||s(e.isOnce)))e.componentInstance=n.componentInstance;else{var m,h=e.data;a(h)&&a(m=h.hook)&&a(m=m.prepatch)&&m(n,e);var g=n.children,v=e.children;if(a(h)&&f(e)){for(m=0;m<r.update.length;++m)r.update[m](n,e);a(m=h.hook)&&a(m=m.update)&&m(n,e)}i(e.text)?a(g)&&a(v)?g!==v&&function(n,e,t,r,o){var s,l,c,u=0,m=0,h=e.length-1,g=e[0],f=e[h],v=t.length-1,b=t[0],w=t[v],k=!o;for(0;u<=h&&m<=v;)i(g)?g=e[++u]:i(f)?f=e[--h]:Ir(g,b)?(j(g,b,r,t,m),g=e[++u],b=t[++m]):Ir(f,w)?(j(f,w,r,t,v),f=e[--h],w=t[--v]):Ir(g,w)?(j(g,w,r,t,v),k&&d.insertBefore(n,g.elm,d.nextSibling(f.elm)),g=e[++u],w=t[--v]):Ir(f,b)?(j(f,b,r,t,m),k&&d.insertBefore(n,f.elm,g.elm),f=e[--h],b=t[++m]):(i(s)&&(s=Pr(e,u,h)),i(l=a(b.key)?s[b.key]:S(b,e,u,h))?p(b,r,n,g.elm,!1,t,m):Ir(c=e[l],b)?(j(c,b,r,t,m),e[l]=void 0,k&&d.insertBefore(n,c.elm,g.elm)):p(b,r,n,g.elm,!1,t,m),b=t[++m]);u>h?y(n,i(t[v+1])?null:t[v+1].elm,t,m,v,r):m>v&&x(e,u,h)}(u,g,v,t,c):a(v)?(a(n.text)&&d.setTextContent(u,""),y(u,null,v,0,v.length-1,t)):a(g)?x(g,0,g.length-1):a(n.text)&&d.setTextContent(u,""):n.text!==e.text&&d.setTextContent(u,e.text),a(h)&&a(m=h.hook)&&a(m=m.postpatch)&&m(n,e)}}}function T(n,e,t){if(s(t)&&a(n.parent))n.parent.data.pendingInsert=e;else for(var r=0;r<e.length;++r)e[r].data.hook.insert(e[r])}var C=w("attrs,class,staticClass,staticStyle,key");function E(n,e,t,r){var o,i=e.tag,l=e.data,c=e.children;if(r=r||l&&l.pre,e.elm=n,s(e.isComment)&&a(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(a(l)&&(a(o=l.hook)&&a(o=o.init)&&o(e,!0),a(o=e.componentInstance)))return m(e,t),!0;if(a(i)){if(a(c))if(n.hasChildNodes())if(a(o=l)&&a(o=o.domProps)&&a(o=o.innerHTML)){if(o!==n.innerHTML)return!1}else{for(var d=!0,u=n.firstChild,p=0;p<c.length;p++){if(!u||!E(u,c[p],t,r)){d=!1;break}u=u.nextSibling}if(!d||u)return!1}else g(e,c,t);if(a(l)){var h=!1;for(var f in l)if(!C(f)){h=!0,v(e,t);break}!h&&l.class&&Je(l.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,o){if(!i(e)){var l,c=!1,u=[];if(i(n))c=!0,p(e,u);else{var m=a(n.nodeType);if(!m&&Ir(n,e))j(n,e,u,null,null,o);else{if(m){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),s(t)&&E(n,e,u))return T(e,u,!0),n;l=n,n=new hn(d.tagName(l).toLowerCase(),{},[],void 0,l)}var h=n.elm,g=d.parentNode(h);if(p(e,u,h._leaveCb?null:g,d.nextSibling(h)),a(e.parent))for(var v=e.parent,b=f(e);v;){for(var w=0;w<r.destroy.length;++w)r.destroy[w](v);if(v.elm=e.elm,b){for(var y=0;y<r.create.length;++y)r.create[y](Ar,v);var _=v.data.hook.insert;if(_.merged)for(var S=_.fns.slice(1),C=0;C<S.length;C++)S[C]()}else Cr(v);v=v.parent}a(g)?x([n],0,0):a(n.tag)&&k(n)}}return T(e,u,c),e.elm}a(n)&&k(n)}}({nodeOps:jr,modules:[Rr,Ur,Yr,to,ho,Z?{create:Lo,activate:Lo,remove:function(n,e){!0!==n.data.show?Oo(n,e):e()}}:{}].concat(Vr)});X&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&Wo(n,"input")}));var Fo={inserted:function(n,e,t,r){"select"===t.tag?(r.elm&&!r.elm._vOptions?Kn(t,"postpatch",(function(){Fo.componentUpdated(n,e,t)})):Mo(n,e,t.context),n._vOptions=[].map.call(n.options,No)):("textarea"===t.tag||Sr(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",Ho),n.addEventListener("compositionend",Uo),n.addEventListener("change",Uo),X&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){Mo(n,e,t.context);var r=n._vOptions,o=n._vOptions=[].map.call(n.options,No);if(o.some((function(n,e){return!q(n,r[e])})))(n.multiple?e.value.some((function(n){return Ro(n,o)})):e.value!==e.oldValue&&Ro(e.value,o))&&Wo(n,"change")}}};function Mo(n,e,t){Go(n,e,t),(K||Y)&&setTimeout((function(){Go(n,e,t)}),0)}function Go(n,e,t){var r=e.value,o=n.multiple;if(!o||Array.isArray(r)){for(var i,a,s=0,l=n.options.length;s<l;s++)if(a=n.options[s],o)i=L(r,No(a))>-1,a.selected!==i&&(a.selected=i);else if(q(No(a),r))return void(n.selectedIndex!==s&&(n.selectedIndex=s));o||(n.selectedIndex=-1)}}function Ro(n,e){return e.every((function(e){return!q(e,n)}))}function No(n){return"_value"in n?n._value:n.value}function Ho(n){n.target.composing=!0}function Uo(n){n.target.composing&&(n.target.composing=!1,Wo(n.target,"input"))}function Wo(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function Jo(n){return!n.componentInstance||n.data&&n.data.transition?n:Jo(n.componentInstance._vnode)}var Zo={model:Fo,show:{bind:function(n,e,t){var r=e.value,o=(t=Jo(t)).data&&t.data.transition,i=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;r&&o?(t.data.show=!0,Bo(t,(function(){n.style.display=i}))):n.style.display=r?i:"none"},update:function(n,e,t){var r=e.value;!r!=!e.oldValue&&((t=Jo(t)).data&&t.data.transition?(t.data.show=!0,r?Bo(t,(function(){n.style.display=n.__vOriginalDisplay})):Oo(t,(function(){n.style.display="none"}))):n.style.display=r?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,r,o){o||(n.style.display=n.__vOriginalDisplay)}}},Qo={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Ko(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?Ko(Ee(e.children)):n}function Xo(n){var e={},t=n.$options;for(var r in t.propsData)e[r]=n[r];var o=t._parentListeners;for(var r in o)e[T(r)]=o[r];return e}function Yo(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var ni=function(n){return n.tag||be(n)},ei=function(n){return"show"===n.name},ti={name:"transition",props:Qo,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(ni)).length){0;var r=this.mode;0;var o=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return o;var i=Ko(o);if(!i)return o;if(this._leaving)return Yo(n,o);var a="__transition-".concat(this._uid,"-");i.key=null==i.key?i.isComment?a+"comment":a+i.tag:l(i.key)?0===String(i.key).indexOf(a)?i.key:a+i.key:i.key;var s=(i.data||(i.data={})).transition=Xo(this),c=this._vnode,d=Ko(c);if(i.data.directives&&i.data.directives.some(ei)&&(i.data.show=!0),d&&d.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(i,d)&&!be(d)&&(!d.componentInstance||!d.componentInstance._vnode.isComment)){var u=d.data.transition=P({},s);if("out-in"===r)return this._leaving=!0,Kn(u,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),Yo(n,o);if("in-out"===r){if(be(i))return c;var p,m=function(){p()};Kn(s,"afterEnter",m),Kn(s,"enterCancelled",m),Kn(u,"delayLeave",(function(n){p=n}))}}return o}}},ri=P({tag:String,moveClass:String},Qo);function oi(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function ii(n){n.data.newPos=n.elm.getBoundingClientRect()}function ai(n){var e=n.data.pos,t=n.data.newPos,r=e.left-t.left,o=e.top-t.top;if(r||o){n.data.moved=!0;var i=n.elm.style;i.transform=i.WebkitTransform="translate(".concat(r,"px,").concat(o,"px)"),i.transitionDuration="0s"}}delete ri.mode;var si={Transition:ti,TransitionGroup:{props:ri,beforeMount:function(){var n=this,e=this._update;this._update=function(t,r){var o=rt(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,o(),e.call(n,t,r)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),r=this.prevChildren=this.children,o=this.$slots.default||[],i=this.children=[],a=Xo(this),s=0;s<o.length;s++){if((d=o[s]).tag)if(null!=d.key&&0!==String(d.key).indexOf("__vlist"))i.push(d),t[d.key]=d,(d.data||(d.data={})).transition=a;else;}if(r){var l=[],c=[];for(s=0;s<r.length;s++){var d;(d=r[s]).data.transition=a,d.data.pos=d.elm.getBoundingClientRect(),t[d.key]?l.push(d):c.push(d)}this.kept=n(e,null,l),this.removed=c}return n(e,null,i)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(oi),n.forEach(ii),n.forEach(ai),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,r=t.style;Co(t,e),r.transform=r.WebkitTransform=r.transitionDuration="",t.addEventListener(xo,t._moveCb=function n(r){r&&r.target!==t||r&&!/transform$/.test(r.propertyName)||(t.removeEventListener(xo,n),t._moveCb=null,Eo(t,e))})}})))},methods:{hasMove:function(n,e){if(!yo)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){vo(t,n)})),fo(t,e),t.style.display="none",this.$el.appendChild(t);var r=Io(t);return this.$el.removeChild(t),this._hasMove=r.hasTransform}}}};Xt.config.mustUseProp=function(n,e,t){return"value"===t&&sr(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},Xt.config.isReservedTag=xr,Xt.config.isReservedAttr=ar,Xt.config.getTagNamespace=function(n){return kr(n)?"svg":"math"===n?"math":void 0},Xt.config.isUnknownElement=function(n){if(!Z)return!0;if(xr(n))return!1;if(n=n.toLowerCase(),null!=_r[n])return _r[n];var e=document.createElement(n);return n.indexOf("-")>-1?_r[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:_r[n]=/HTMLUnknownElement/.test(e.toString())},P(Xt.options.directives,Zo),P(Xt.options.components,si),Xt.prototype.__patch__=Z?Vo:B,Xt.prototype.$mount=function(n,e){return function(n,e,t){var r;n.$el=e,n.$options.render||(n.$options.render=gn),at(n,"beforeMount"),r=function(){n._update(n._render(),t)},new Ke(n,r,B,{before:function(){n._isMounted&&!n._isDestroyed&&at(n,"beforeUpdate")}},!0),t=!1;var o=n._preWatchers;if(o)for(var i=0;i<o.length;i++)o[i].run();return null==n.$vnode&&(n._isMounted=!0,at(n,"mounted")),n}(this,n=n&&Z?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},Z&&setTimeout((function(){R.devtools&&ln&&ln.emit("init",Xt)}),0)},function(n,e,t){"use strict";var r="object"==typeof document&&document.all;n.exports=void 0===r&&void 0!==r?function(n){return"function"==typeof n||n===r}:function(n){return"function"==typeof n}},function(n,e,t){"use strict";var r=t(10),o=String,i=TypeError;n.exports=function(n){if(r(n))return n;throw new i(o(n)+" is not an object")}},function(n,e,t){"use strict";var r=function(n){return n&&n.Math===Math&&n};n.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof global&&global)||r("object"==typeof this&&this)||function(){return this}()||Function("return this")()},function(n,e,t){"use strict";n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){"use strict";var r=t(12),o=t(3),i=t(147),a=t(2),s=t(1),l=t(88),c=t(130),d=t(149),u=t(4),p=t(11),m=t(17),h=t(89).IteratorPrototype,g=t(8),f=t(24),v=m("toStringTag"),b=TypeError,w=o.Iterator,y=f||!s(w)||w.prototype!==h||!u((function(){w({})})),k=function(){if(i(this,h),l(this)===h)throw new b("Abstract class Iterator not directly constructable")},x=function(n,e){g?c(h,n,{configurable:!0,get:function(){return e},set:function(e){if(a(this),this===h)throw new b("You can't redefine this property");p(this,n)?this[n]=e:d(this,n,e)}}):h[n]=e};p(h,v)||x(v,"Iterator"),!y&&p(h,"constructor")&&h.constructor!==Object||x("constructor",k),k.prototype=h,r({global:!0,constructor:!0,forced:y},{Iterator:k})},function(n,e,t){"use strict";function r(n,e,t,r,o,i,a,s){var l,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=t,c._compiled=!0),r&&(c.functional=!0),i&&(c._scopeId="data-v-"+i),a?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),o&&o.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(a)},c._ssrRegister=l):o&&(l=s?function(){o.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:o),l)if(c.functional){c._injectStyles=l;var d=c.render;c.render=function(n,e){return l.call(e),d(n,e)}}else{var u=c.beforeCreate;c.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:c}}t.d(e,"a",(function(){return r}))},function(n,e,t){"use strict";var r=t(33),o=Function.prototype,i=o.call,a=r&&o.bind.bind(i,i);n.exports=r?a:function(n){return function(){return i.apply(n,arguments)}}},function(n,e,t){"use strict";var r=t(4);n.exports=!r((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e,t){"use strict";var r=t(1),o=t(49),i=TypeError;n.exports=function(n){if(r(n))return n;throw new i(o(n)+" is not a function")}},function(n,e,t){"use strict";var r=t(1);n.exports=function(n){return"object"==typeof n?null!==n:r(n)}},function(n,e,t){"use strict";var r=t(7),o=t(31),i=r({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return i(o(n),e)}},function(n,e,t){"use strict";var r=t(3),o=t(71).f,i=t(25),a=t(46),s=t(51),l=t(85),c=t(146);n.exports=function(n,e){var t,d,u,p,m,h=n.target,g=n.global,f=n.stat;if(t=g?r:f?r[h]||s(h,{}):r[h]&&r[h].prototype)for(d in e){if(p=e[d],u=n.dontCallGetSet?(m=o(t,d))&&m.value:t[d],!c(g?d:h+(f?".":"#")+d,n.forced)&&void 0!==u){if(typeof p==typeof u)continue;l(p,u)}(n.sham||u&&u.sham)&&i(p,"sham",!0),a(t,d,p,n)}}},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){"use strict";var r=t(33),o=Function.prototype.call;n.exports=r?o.bind(o):function(){return o.apply(o,arguments)}},function(n,e,t){var r=t(98),o="object"==typeof self&&self&&self.Object===Object&&self,i=r||o||Function("return this")();n.exports=i},function(n,e,t){"use strict";var r=t(12),o=t(14),i=t(9),a=t(2),s=t(26),l=t(90),c=t(91),d=t(24),u=l((function(){for(var n,e,t=this.iterator,r=this.predicate,i=this.next;;){if(n=a(o(i,t)),this.done=!!n.done)return;if(e=n.value,c(t,r,[e,this.counter++],!0))return e}}));r({target:"Iterator",proto:!0,real:!0,forced:d},{filter:function(n){return a(this),i(n),new u(s(this),{predicate:n})}})},function(n,e,t){"use strict";var r=t(3),o=t(78),i=t(11),a=t(79),s=t(75),l=t(74),c=r.Symbol,d=o("wks"),u=l?c.for||c:c&&c.withoutSetter||a;n.exports=function(n){return i(d,n)||(d[n]=s&&i(c,n)?c[n]:u("Symbol."+n)),d[n]}},function(n,e,t){"use strict";var r=t(12),o=t(45),i=t(9),a=t(2),s=t(26);r({target:"Iterator",proto:!0,real:!0},{forEach:function(n){a(this),i(n);var e=s(this),t=0;o(e,(function(e){n(e,t++)}),{IS_RECORD:!0})}})},function(n,e,t){"use strict";var r=t(8),o=t(80),i=t(82),a=t(2),s=t(72),l=TypeError,c=Object.defineProperty,d=Object.getOwnPropertyDescriptor;e.f=r?i?function(n,e,t){if(a(n),e=s(e),a(t),"function"==typeof n&&"prototype"===e&&"value"in t&&"writable"in t&&!t.writable){var r=d(n,e);r&&r.writable&&(n[e]=t.value,t={configurable:"configurable"in t?t.configurable:r.configurable,enumerable:"enumerable"in t?t.enumerable:r.enumerable,writable:!1})}return c(n,e,t)}:c:function(n,e,t){if(a(n),e=s(e),a(t),o)try{return c(n,e,t)}catch(n){}if("get"in t||"set"in t)throw new l("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var r=t(199),o=t(202);n.exports=function(n,e){var t=o(n,e);return r(t)?t:void 0}},function(n,e,t){"use strict";t.d(e,"e",(function(){return r})),t.d(e,"b",(function(){return i})),t.d(e,"j",(function(){return a})),t.d(e,"g",(function(){return l})),t.d(e,"h",(function(){return c})),t.d(e,"i",(function(){return d})),t.d(e,"c",(function(){return u})),t.d(e,"f",(function(){return p})),t.d(e,"l",(function(){return m})),t.d(e,"m",(function(){return h})),t.d(e,"d",(function(){return f})),t.d(e,"k",(function(){return v})),t.d(e,"n",(function(){return b})),t.d(e,"a",(function(){return y}));t(30),t(5),t(16),t(18),t(22);const r=/#.*$/,o=/\.(md|html)$/,i=/\/$/,a=/^[a-z]+:/i;function s(n){return decodeURI(n).replace(r,"").replace(o,"")}function l(n){return a.test(n)}function c(n){return/^mailto:/.test(n)}function d(n){return/^tel:/.test(n)}function u(n){if(l(n))return n;if(!n)return"404";const e=n.match(r),t=e?e[0]:"",o=s(n);return i.test(o)?n:o+".html"+t}function p(n,e){const t=n.hash,o=function(n){const e=n&&n.match(r);if(e)return e[0]}(e);if(o&&t!==o)return!1;return s(n.path)===s(e)}function m(n,e,t){if(l(e))return{type:"external",path:e};t&&(e=function(n,e,t){const r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;const o=e.split("/");t&&o[o.length-1]||o.pop();const i=n.replace(/^\//,"").split("/");for(let n=0;n<i.length;n++){const e=i[n];".."===e?o.pop():"."!==e&&o.push(e)}""!==o[0]&&o.unshift("");return o.join("/")}(e,t));const r=s(e);for(let e=0;e<n.length;e++)if(s(n[e].regularPath)===r)return Object.assign({},n[e],{type:"page",path:u(n[e].path)});return console.error(`[vuepress] No matching page found for sidebar item "${e}"`),{}}function h(n,e,t,r){const{pages:o,themeConfig:i}=t,a=r&&i.locales&&i.locales[r]||i;if("auto"===(n.frontmatter.sidebar||a.sidebar||i.sidebar))return g(n);const s=a.sidebar||i.sidebar;if(s){const{base:t,config:r}=function(n,e){if(Array.isArray(e))return{base:"/",config:e};for(const r in e)if(0===(t=n,/(\.html|\/)$/.test(t)?t:t+"/").indexOf(encodeURI(r)))return{base:r,config:e[r]};var t;return{}}(e,s);return"auto"===r?g(n):r?r.map(n=>function n(e,t,r,o=1){if("string"==typeof e)return m(t,e,r);if(Array.isArray(e))return Object.assign(m(t,e[0],r),{title:e[1]});{o>3&&console.error("[vuepress] detected a too deep nested sidebar group.");const i=e.children||[];return 0===i.length&&e.path?Object.assign(m(t,e.path,r),{title:e.title}):{type:"group",path:e.path,title:e.title,sidebarDepth:e.sidebarDepth,initialOpenGroupIndex:e.initialOpenGroupIndex,children:i.map(e=>n(e,t,r,o+1)),collapsable:!1!==e.collapsable}}}(n,o,t)):[]}return[]}function g(n){const e=f(n.headers||[]);return[{type:"group",collapsable:!1,title:n.title,path:null,children:e.map(e=>({type:"auto",title:e.title,basePath:n.path,path:n.path+"#"+e.slug,children:e.children||[]}))}]}function f(n){let e;return(n=n.map(n=>Object.assign({},n))).forEach(n=>{2===n.level?e=n:e&&(e.children||(e.children=[])).push(n)}),n.filter(n=>2===n.level)}function v(n){return Object.assign(n,{type:n.items&&n.items.length?"links":"link"})}function b(n){return Object.prototype.toString.call(n).match(/\[object (.*?)\]/)[1].toLowerCase()}function w(n){let e=n.frontmatter.date||n.lastUpdated||new Date,t=new Date(e);return"Invalid Date"==t&&e&&(t=new Date(e.replace(/-/g,"/"))),t.getTime()}function y(n,e){return w(e)-w(n)}},function(n,e,t){"use strict";var r=t(12),o=t(155);r({target:"Iterator",proto:!0,real:!0,forced:t(24)},{map:o})},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){"use strict";n.exports=!1},function(n,e,t){"use strict";var r=t(8),o=t(19),i=t(34);n.exports=r?function(n,e,t){return o.f(n,e,i(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){"use strict";n.exports=function(n){return{iterator:n,next:n.next,done:!1}}},function(n,e,t){var r=t(29),o=t(184),i=t(185),a=r?r.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":a&&a in Object(n)?o(n):i(n)}},function(n,e,t){"use strict";var r=t(7),o=r({}.toString),i=r("".slice);n.exports=function(n){return i(o(n),8,-1)}},function(n,e,t){var r=t(15).Symbol;n.exports=r},function(n,e,t){"use strict";var r=t(12),o=t(31),i=t(32),a=t(178),s=t(180);r({target:"Array",proto:!0,arity:1,forced:t(4)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(n){return n instanceof TypeError}}()},{push:function(n){var e=o(this),t=i(e),r=arguments.length;s(t+r);for(var l=0;l<r;l++)e[t]=arguments[l],t++;return a(e,t),t}})},function(n,e,t){"use strict";var r=t(47),o=Object;n.exports=function(n){return o(r(n))}},function(n,e,t){"use strict";var r=t(144);n.exports=function(n){return r(n.length)}},function(n,e,t){"use strict";var r=t(4);n.exports=!r((function(){var n=function(){}.bind();return"function"!=typeof n||n.hasOwnProperty("prototype")}))},function(n,e,t){"use strict";n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){"use strict";var r=t(68),o=t(47);n.exports=function(n){return r(o(n))}},function(n,e,t){"use strict";var r=t(3),o=t(1),i=function(n){return o(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?i(r[n]):r[n]&&r[n][e]}},function(n,e,t){"use strict";var r=t(7);n.exports=r({}.isPrototypeOf)},function(n,e,t){"use strict";var r=t(9),o=t(48);n.exports=function(n,e){var t=n[e];return o(t)?void 0:r(t)}},function(n,e,t){var r=t(189),o=t(190),i=t(191),a=t(192),s=t(193);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=o,l.prototype.get=i,l.prototype.has=a,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(100);n.exports=function(n,e){for(var t=n.length;t--;)if(r(n[t][0],e))return t;return-1}},function(n,e,t){var r=t(20)(Object,"create");n.exports=r},function(n,e,t){var r=t(211);n.exports=function(n,e){var t=n.__data__;return r(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var r=t(63);n.exports=function(n){if("string"==typeof n||r(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){var r,o;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(o="function"==typeof(r=function(){var n,e,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function o(n,e,t){return n<e?e:n>t?t:n}function i(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(r[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=o(n,r.minimum,1),t.status=1===n?null:n;var l=t.render(!e),c=l.querySelector(r.barSelector),d=r.speed,u=r.easing;return l.offsetWidth,a((function(e){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),s(c,function(n,e,t){var o;return(o="translate3d"===r.positionUsing?{transform:"translate3d("+i(n)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+i(n)+"%,0)"}:{"margin-left":i(n)+"%"}).transition="all "+e+"ms "+t,o}(n,d,u)),1===n?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+d+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),d)}),d)):setTimeout(e,d)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),r.trickleSpeed)};return r.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*o(Math.random()*e,.1,.95)),e=o(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},n=0,e=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===e&&t.start(),n++,e++,r.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=r.template;var o,a=e.querySelector(r.barSelector),l=n?"-100":i(t.status||0),d=document.querySelector(r.parent);return s(a,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),r.showSpinner||(o=e.querySelector(r.spinnerSelector))&&p(o),d!=document.body&&c(d,"nprogress-custom-parent"),d.appendChild(e),e},t.remove=function(){d(document.documentElement,"nprogress-busy"),d(document.querySelector(r.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&p(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var a=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var r,o=n.length,i=e.charAt(0).toUpperCase()+e.slice(1);o--;)if((r=n[o]+i)in t)return r;return e}(t))}function r(n,e,r){e=t(e),n.style[e]=r}return function(n,e){var t,o,i=arguments;if(2==i.length)for(t in e)void 0!==(o=e[t])&&e.hasOwnProperty(t)&&r(n,t,o);else r(n,i[1],i[2])}}();function l(n,e){return("string"==typeof n?n:u(n)).indexOf(" "+e+" ")>=0}function c(n,e){var t=u(n),r=t+e;l(t,e)||(n.className=r.substring(1))}function d(n,e){var t,r=u(n);l(n,e)&&(t=r.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function u(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function p(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?r.call(e,t,e,n):r)||(n.exports=o)},function(n,e,t){"use strict";var r=t(131),o=t(14),i=t(2),a=t(49),s=t(162),l=t(32),c=t(37),d=t(163),u=t(93),p=t(55),m=TypeError,h=function(n,e){this.stopped=n,this.result=e},g=h.prototype;n.exports=function(n,e,t){var f,v,b,w,y,k,x,_=t&&t.that,S=!(!t||!t.AS_ENTRIES),j=!(!t||!t.IS_RECORD),T=!(!t||!t.IS_ITERATOR),C=!(!t||!t.INTERRUPTED),E=r(e,_),A=function(n){return f&&p(f,"normal",n),new h(!0,n)},z=function(n){return S?(i(n),C?E(n[0],n[1],A):E(n[0],n[1])):C?E(n,A):E(n)};if(j)f=n.iterator;else if(T)f=n;else{if(!(v=u(n)))throw new m(a(n)+" is not iterable");if(s(v)){for(b=0,w=l(n);w>b;b++)if((y=z(n[b]))&&c(g,y))return y;return new h(!1)}f=d(n,v)}for(k=j?n.next:f.next;!(x=o(k,f)).done;){try{y=z(x.value)}catch(n){p(f,"throw",n)}if("object"==typeof y&&y&&c(g,y))return y}return new h(!1)}},function(n,e,t){"use strict";var r=t(1),o=t(19),i=t(83),a=t(51);n.exports=function(n,e,t,s){s||(s={});var l=s.enumerable,c=void 0!==s.name?s.name:e;if(r(t)&&i(t,c,s),s.global)l?n[e]=t:a(e,t);else{try{s.unsafe?n[e]&&(l=!0):delete n[e]}catch(n){}l?n[e]=t:o.f(n,e,{value:t,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return n}},function(n,e,t){"use strict";var r=t(48),o=TypeError;n.exports=function(n){if(r(n))throw new o("Can't call method on "+n);return n}},function(n,e,t){"use strict";n.exports=function(n){return null==n}},function(n,e,t){"use strict";var r=String;n.exports=function(n){try{return r(n)}catch(n){return"Object"}}},function(n,e,t){"use strict";var r=t(24),o=t(3),i=t(51),a=n.exports=o["__core-js_shared__"]||i("__core-js_shared__",{});(a.versions||(a.versions=[])).push({version:"3.40.0",mode:r?"pure":"global",copyright:"© 2014-2025 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.40.0/LICENSE",source:"https://github.com/zloirock/core-js"})},function(n,e,t){"use strict";var r=t(3),o=Object.defineProperty;n.exports=function(n,e){try{o(r,n,{value:e,configurable:!0,writable:!0})}catch(t){r[n]=e}return e}},function(n,e,t){"use strict";var r=t(78),o=t(79),i=r("keys");n.exports=function(n){return i[n]||(i[n]=o(n))}},function(n,e,t){"use strict";n.exports={}},function(n,e,t){"use strict";n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){"use strict";var r=t(14),o=t(2),i=t(38);n.exports=function(n,e,t){var a,s;o(n);try{if(!(a=i(n,"return"))){if("throw"===e)throw t;return t}a=r(a,n)}catch(n){s=!0,a=n}if("throw"===e)throw t;if(s)throw a;return o(a),t}},function(n,e,t){var r=t(183),o=t(23),i=Object.prototype,a=i.hasOwnProperty,s=i.propertyIsEnumerable,l=r(function(){return arguments}())?r:function(n){return o(n)&&a.call(n,"callee")&&!s.call(n,"callee")};n.exports=l},function(n,e,t){var r=t(20)(t(15),"Map");n.exports=r},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var r=t(203),o=t(210),i=t(212),a=t(213),s=t(214);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=o,l.prototype.get=i,l.prototype.has=a,l.prototype.set=s,n.exports=l},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var r=t(13),o=t(63),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,a=/^\w*$/;n.exports=function(n,e){if(r(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!o(n))||(a.test(n)||!i.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var r=t(27),o=t(23);n.exports=function(n){return"symbol"==typeof n||o(n)&&"[object Symbol]"==r(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){"use strict";t.r(e);var r={name:"LastReadingPopup",data:()=>({lastReading:null,show:!1}),computed:{popupConfig(){const n={"/":{message:"检测到您上一次阅读的位置，是否移至该位置？",sureButtonText:"确定",cancelButtonText:"取消"},"/zh/":{message:"检测到您上一次阅读的位置，是否移至该位置？",sureButtonText:"前往",cancelButtonText:"取消"}};return n[`/${this.$lang.split("-")[0]}/`]||n[this.$localePath]||n},message(){const n=this.popupConfig;return n&&n.message||n["/"].message},sureButtonText(){const n=this.popupConfig;return n&&n.sureButtonText||n["/"].sureButtonText},cancelButtonText(){const n=this.popupConfig;return n&&n.cancelButtonText||n["/"].cancelButtonText}},mounted(){window.ActiveXObject||"ActiveXObject"in window?setTimeout(()=>{window.addEventListener("load",this.init())},1e3):setTimeout(()=>{window.addEventListener("load",this.init)},1e3)},methods:{init(){this.lastReading=JSON.parse(localStorage.getItem("lastReading")),this.lastReading&&(this.$route.path===this.lastReading.path?this.goto():(this.show=!0,setTimeout(this.clean,1e4)))},goto(){this.$route.path!==this.lastReading.path?this.$router.replace(this.lastReading.path).then(()=>{document.documentElement.scrollTop=this.lastReading.scrollTop,this.clean()}):this.$nextTick(()=>{document.documentElement.scrollTop=this.lastReading.scrollTop})},dontgoto(){this.clean()},clean(){this.show=!1,localStorage.removeItem("lastReading")}}},o=(t(277),t(6)),i=Object(o.a)(r,(function(){var n=this,e=n._self._c;return e("transition",{attrs:{name:"sw-update-popup"}},[n.show?e("div",{staticClass:"sw-update-popup"},[n._v("\n    "+n._s(n.message)+"\n\n    "),e("br"),n._v(" "),e("button",{on:{click:n.goto}},[n._v("\n      "+n._s(n.sureButtonText)+"\n    ")]),n._v(" "),e("button",{on:{click:n.dontgoto}},[n._v("\n      "+n._s(n.cancelButtonText)+"\n    ")])]):n._e()])}),[],!1,null,"181714f2",null);e.default=i.exports},function(n,e,t){"use strict";var r=t(12),o=t(45),i=t(9),a=t(2),s=t(26);r({target:"Iterator",proto:!0,real:!0},{some:function(n){a(this),i(n);var e=s(this),t=0;return o(e,(function(e,r){if(n(e,t++))return r()}),{IS_RECORD:!0,INTERRUPTED:!0}).stopped}})},function(n,e){var t=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,i=/^0o[0-7]+$/i,a=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),d=Object.prototype.toString,u=Math.max,p=Math.min,m=function(){return c.Date.now()};function h(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function g(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==d.call(n)}(n))return NaN;if(h(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=h(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=o.test(n);return s||i.test(n)?a(n.slice(2),s?2:8):r.test(n)?NaN:+n}n.exports=function(n,e,t){var r,o,i,a,s,l,c=0,d=!1,f=!1,v=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(e){var t=r,i=o;return r=o=void 0,c=e,a=n.apply(i,t)}function w(n){return c=n,s=setTimeout(k,e),d?b(n):a}function y(n){var t=n-l;return void 0===l||t>=e||t<0||f&&n-c>=i}function k(){var n=m();if(y(n))return x(n);s=setTimeout(k,function(n){var t=e-(n-l);return f?p(t,i-(n-c)):t}(n))}function x(n){return s=void 0,v&&r?b(n):(r=o=void 0,a)}function _(){var n=m(),t=y(n);if(r=arguments,o=this,l=n,t){if(void 0===s)return w(l);if(f)return s=setTimeout(k,e),b(l)}return void 0===s&&(s=setTimeout(k,e)),a}return e=g(e)||0,h(t)&&(d=!!t.leading,i=(f="maxWait"in t)?u(g(t.maxWait)||0,e):i,v="trailing"in t?!!t.trailing:v),_.cancel=function(){void 0!==s&&clearTimeout(s),c=0,r=l=o=s=void 0},_.flush=function(){return void 0===s?a:x(m())},_}},function(n,e,t){"use strict";var r=t(7),o=t(4),i=t(28),a=Object,s=r("".split);n.exports=o((function(){return!a("z").propertyIsEnumerable(0)}))?function(n){return"String"===i(n)?s(n,""):a(n)}:a},function(n,e,t){"use strict";var r,o=t(2),i=t(150),a=t(54),s=t(53),l=t(152),c=t(81),d=t(52),u=d("IE_PROTO"),p=function(){},m=function(n){return"<script>"+n+"<\/script>"},h=function(n){n.write(m("")),n.close();var e=n.parentWindow.Object;return n=null,e},g=function(){try{r=new ActiveXObject("htmlfile")}catch(n){}var n,e;g="undefined"!=typeof document?document.domain&&r?h(r):((e=c("iframe")).style.display="none",l.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(m("document.F=Object")),n.close(),n.F):h(r);for(var t=a.length;t--;)delete g.prototype[a[t]];return g()};s[u]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(p.prototype=o(n),t=new p,p.prototype=null,t[u]=n):t=g(),void 0===e?t:i.f(t,e)}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e,t){"use strict";var r=t(8),o=t(14),i=t(133),a=t(34),s=t(35),l=t(72),c=t(11),d=t(80),u=Object.getOwnPropertyDescriptor;e.f=r?u:function(n,e){if(n=s(n),e=l(e),d)try{return u(n,e)}catch(n){}if(c(n,e))return a(!o(i.f,n,e),n[e])}},function(n,e,t){"use strict";var r=t(134),o=t(73);n.exports=function(n){var e=r(n,"string");return o(e)?e:e+""}},function(n,e,t){"use strict";var r=t(36),o=t(1),i=t(37),a=t(74),s=Object;n.exports=a?function(n){return"symbol"==typeof n}:function(n){var e=r("Symbol");return o(e)&&i(e.prototype,s(n))}},function(n,e,t){"use strict";var r=t(75);n.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){"use strict";var r=t(76),o=t(4),i=t(3).String;n.exports=!!Object.getOwnPropertySymbols&&!o((function(){var n=Symbol("symbol detection");return!i(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},function(n,e,t){"use strict";var r,o,i=t(3),a=t(77),s=i.process,l=i.Deno,c=s&&s.versions||l&&l.version,d=c&&c.v8;d&&(o=(r=d.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!o&&a&&(!(r=a.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/))&&(o=+r[1]),n.exports=o},function(n,e,t){"use strict";var r=t(3).navigator,o=r&&r.userAgent;n.exports=o?String(o):""},function(n,e,t){"use strict";var r=t(50);n.exports=function(n,e){return r[n]||(r[n]=e||{})}},function(n,e,t){"use strict";var r=t(7),o=0,i=Math.random(),a=r(1..toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+a(++o+i,36)}},function(n,e,t){"use strict";var r=t(8),o=t(4),i=t(81);n.exports=!r&&!o((function(){return 7!==Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){"use strict";var r=t(3),o=t(10),i=r.document,a=o(i)&&o(i.createElement);n.exports=function(n){return a?i.createElement(n):{}}},function(n,e,t){"use strict";var r=t(8),o=t(4);n.exports=r&&o((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,e,t){"use strict";var r=t(7),o=t(4),i=t(1),a=t(11),s=t(8),l=t(136).CONFIGURABLE,c=t(137),d=t(84),u=d.enforce,p=d.get,m=String,h=Object.defineProperty,g=r("".slice),f=r("".replace),v=r([].join),b=s&&!o((function(){return 8!==h((function(){}),"length",{value:8}).length})),w=String(String).split("String"),y=n.exports=function(n,e,t){"Symbol("===g(m(e),0,7)&&(e="["+f(m(e),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),t&&t.getter&&(e="get "+e),t&&t.setter&&(e="set "+e),(!a(n,"name")||l&&n.name!==e)&&(s?h(n,"name",{value:e,configurable:!0}):n.name=e),b&&t&&a(t,"arity")&&n.length!==t.arity&&h(n,"length",{value:t.arity});try{t&&a(t,"constructor")&&t.constructor?s&&h(n,"prototype",{writable:!1}):n.prototype&&(n.prototype=void 0)}catch(n){}var r=u(n);return a(r,"source")||(r.source=v(w,"string"==typeof e?e:"")),n};Function.prototype.toString=y((function(){return i(this)&&p(this).source||c(this)}),"toString")},function(n,e,t){"use strict";var r,o,i,a=t(138),s=t(3),l=t(10),c=t(25),d=t(11),u=t(50),p=t(52),m=t(53),h=s.TypeError,g=s.WeakMap;if(a||u.state){var f=u.state||(u.state=new g);f.get=f.get,f.has=f.has,f.set=f.set,r=function(n,e){if(f.has(n))throw new h("Object already initialized");return e.facade=n,f.set(n,e),e},o=function(n){return f.get(n)||{}},i=function(n){return f.has(n)}}else{var v=p("state");m[v]=!0,r=function(n,e){if(d(n,v))throw new h("Object already initialized");return e.facade=n,c(n,v,e),e},o=function(n){return d(n,v)?n[v]:{}},i=function(n){return d(n,v)}}n.exports={set:r,get:o,has:i,enforce:function(n){return i(n)?o(n):r(n,{})},getterFor:function(n){return function(e){var t;if(!l(e)||(t=o(e)).type!==n)throw new h("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){"use strict";var r=t(11),o=t(139),i=t(71),a=t(19);n.exports=function(n,e,t){for(var s=o(e),l=a.f,c=i.f,d=0;d<s.length;d++){var u=s[d];r(n,u)||t&&r(t,u)||l(n,u,c(e,u))}}},function(n,e,t){"use strict";var r=t(7),o=t(11),i=t(35),a=t(141).indexOf,s=t(53),l=r([].push);n.exports=function(n,e){var t,r=i(n),c=0,d=[];for(t in r)!o(s,t)&&o(r,t)&&l(d,t);for(;e.length>c;)o(r,t=e[c++])&&(~a(d,t)||l(d,t));return d}},function(n,e,t){"use strict";var r=t(143);n.exports=function(n){var e=+n;return e!=e||0===e?0:r(e)}},function(n,e,t){"use strict";var r=t(11),o=t(1),i=t(31),a=t(52),s=t(148),l=a("IE_PROTO"),c=Object,d=c.prototype;n.exports=s?c.getPrototypeOf:function(n){var e=i(n);if(r(e,l))return e[l];var t=e.constructor;return o(t)&&e instanceof t?t.prototype:e instanceof c?d:null}},function(n,e,t){"use strict";var r,o,i,a=t(4),s=t(1),l=t(10),c=t(69),d=t(88),u=t(46),p=t(17),m=t(24),h=p("iterator"),g=!1;[].keys&&("next"in(i=[].keys())?(o=d(d(i)))!==Object.prototype&&(r=o):g=!0),!l(r)||a((function(){var n={};return r[h].call(n)!==n}))?r={}:m&&(r=c(r)),s(r[h])||u(r,h,(function(){return this})),n.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:g}},function(n,e,t){"use strict";var r=t(14),o=t(69),i=t(25),a=t(153),s=t(17),l=t(84),c=t(38),d=t(89).IteratorPrototype,u=t(154),p=t(55),m=s("toStringTag"),h=l.set,g=function(n){var e=l.getterFor(n?"WrapForValidIterator":"IteratorHelper");return a(o(d),{next:function(){var t=e(this);if(n)return t.nextHandler();if(t.done)return u(void 0,!0);try{var r=t.nextHandler();return t.returnHandlerResult?r:u(r,t.done)}catch(n){throw t.done=!0,n}},return:function(){var t=e(this),o=t.iterator;if(t.done=!0,n){var i=c(o,"return");return i?r(i,o):u(void 0,!0)}if(t.inner)try{p(t.inner.iterator,"normal")}catch(n){return p(o,"throw",n)}return o&&p(o,"normal"),u(void 0,!0)}})},f=g(!0),v=g(!1);i(v,m,"Iterator Helper"),n.exports=function(n,e,t){var r=function(r,o){o?(o.iterator=r.iterator,o.next=r.next):o=r,o.type=e?"WrapForValidIterator":"IteratorHelper",o.returnHandlerResult=!!t,o.nextHandler=n,o.counter=0,o.done=!1,h(this,o)};return r.prototype=e?f:v,r}},function(n,e,t){"use strict";var r=t(2),o=t(55);n.exports=function(n,e,t,i){try{return i?e(r(t)[0],t[1]):e(t)}catch(e){o(n,"throw",e)}}},function(n,e,t){"use strict";n.exports={}},function(n,e,t){"use strict";var r=t(94),o=t(38),i=t(48),a=t(92),s=t(17)("iterator");n.exports=function(n){if(!i(n))return o(n,s)||o(n,"@@iterator")||a[r(n)]}},function(n,e,t){"use strict";var r=t(164),o=t(1),i=t(28),a=t(17)("toStringTag"),s=Object,l="Arguments"===i(function(){return arguments}());n.exports=r?i:function(n){var e,t,r;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=s(n),a))?t:l?i(e):"Object"===(r=i(e))&&o(e.callee)?"Arguments":r}},function(n,e,t){"use strict";var r=t(12),o=t(3),i=t(166),a=t(167),s=o.WebAssembly,l=7!==new Error("e",{cause:7}).cause,c=function(n,e){var t={};t[n]=a(n,e,l),r({global:!0,constructor:!0,arity:1,forced:l},t)},d=function(n,e){if(s&&s[n]){var t={};t[n]=a("WebAssembly."+n,e,l),r({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:l},t)}};c("Error",(function(n){return function(e){return i(n,this,arguments)}})),c("EvalError",(function(n){return function(e){return i(n,this,arguments)}})),c("RangeError",(function(n){return function(e){return i(n,this,arguments)}})),c("ReferenceError",(function(n){return function(e){return i(n,this,arguments)}})),c("SyntaxError",(function(n){return function(e){return i(n,this,arguments)}})),c("TypeError",(function(n){return function(e){return i(n,this,arguments)}})),c("URIError",(function(n){return function(e){return i(n,this,arguments)}})),d("CompileError",(function(n){return function(e){return i(n,this,arguments)}})),d("LinkError",(function(n){return function(e){return i(n,this,arguments)}})),d("RuntimeError",(function(n){return function(e){return i(n,this,arguments)}}))},function(n,e,t){"use strict";var r=t(168),o=t(10),i=t(47),a=t(169);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=r(Object.prototype,"__proto__","set"))(t,[]),e=t instanceof Array}catch(n){}return function(t,r){return i(t),a(r),o(t)?(e?n(t,r):t.__proto__=r,t):t}}():void 0)},function(n,e){n.exports=function(n,e){for(var t=-1,r=e.length,o=n.length;++t<r;)n[o+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var r=t(39),o=t(194),i=t(195),a=t(196),s=t(197),l=t(198);function c(n){var e=this.__data__=new r(n);this.size=e.size}c.prototype.clear=o,c.prototype.delete=i,c.prototype.get=a,c.prototype.has=s,c.prototype.set=l,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var r=t(27),o=t(58);n.exports=function(n){if(!o(n))return!1;var e=r(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var r=t(215),o=t(23);n.exports=function n(e,t,i,a,s){return e===t||(null==e||null==t||!o(e)&&!o(t)?e!=e&&t!=t:r(e,t,i,a,n,s))}},function(n,e,t){var r=t(105),o=t(218),i=t(106);n.exports=function(n,e,t,a,s,l){var c=1&t,d=n.length,u=e.length;if(d!=u&&!(c&&u>d))return!1;var p=l.get(n),m=l.get(e);if(p&&m)return p==e&&m==n;var h=-1,g=!0,f=2&t?new r:void 0;for(l.set(n,e),l.set(e,n);++h<d;){var v=n[h],b=e[h];if(a)var w=c?a(b,v,h,e,n,l):a(v,b,h,n,e,l);if(void 0!==w){if(w)continue;g=!1;break}if(f){if(!o(e,(function(n,e){if(!i(f,e)&&(v===n||s(v,n,t,a,l)))return f.push(e)}))){g=!1;break}}else if(v!==b&&!s(v,b,t,a,l)){g=!1;break}}return l.delete(n),l.delete(e),g}},function(n,e,t){var r=t(59),o=t(216),i=t(217);function a(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new r;++e<t;)this.add(n[e])}a.prototype.add=a.prototype.push=o,a.prototype.has=i,n.exports=a},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var r=t(228),o=t(234),i=t(111);n.exports=function(n){return i(n)?r(n):o(n)}},function(n,e,t){(function(n){var r=t(15),o=t(230),i=e&&!e.nodeType&&e,a=i&&"object"==typeof n&&n&&!n.nodeType&&n,s=a&&a.exports===i?r.Buffer:void 0,l=(s?s.isBuffer:void 0)||o;n.exports=l}).call(this,t(70)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var r=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==r||"symbol"!=r&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var r=t(231),o=t(232),i=t(233),a=i&&i.isTypedArray,s=a?o(a):r;n.exports=s},function(n,e,t){var r=t(101),o=t(61);n.exports=function(n){return null!=n&&o(n.length)&&!r(n)}},function(n,e,t){var r=t(20)(t(15),"Set");n.exports=r},function(n,e,t){var r=t(58);n.exports=function(n){return n==n&&!r(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var r=t(116),o=t(43);n.exports=function(n,e){for(var t=0,i=(e=r(e,n)).length;null!=n&&t<i;)n=n[o(e[t++])];return t&&t==i?n:void 0}},function(n,e,t){var r=t(13),o=t(62),i=t(245),a=t(248);n.exports=function(n,e){return r(n)?n:o(n,e)?[n]:i(a(n))}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){var r=t(181),o=t(186),i=t(257),a=t(265),s=t(274),l=t(128),c=i((function(n){var e=l(n);return s(e)&&(e=void 0),a(r(n,1,s,!0),o(e,2))}));n.exports=c},function(n,e,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var r=/["'&<>]/;n.exports=function(n){var e,t=""+n,o=r.exec(t);if(!o)return t;var i="",a=0,s=0;for(a=o.index;a<t.length;a++){switch(t.charCodeAt(a)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}s!==a&&(i+=t.substring(s,a)),s=a+1,i+=e}return s!==a?i+t.substring(s,a):i}},function(n,e,t){
/*!
 * 
 *   typed.js - A JavaScript Typing Animation Library
 *   Author: Matt Boldt <me@mattboldt.com>
 *   Version: v2.0.12
 *   Url: https://github.com/mattboldt/typed.js
 *   License(s): MIT
 * 
 */
var r;r=function(){return function(n){var e={};function t(r){if(e[r])return e[r].exports;var o=e[r]={exports:{},id:r,loaded:!1};return n[r].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}return t.m=n,t.c=e,t.p="",t(0)}([function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),o=t(1),i=t(3),a=function(){function n(e,t){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),o.initializer.load(this,t,e),this.begin()}return r(n,[{key:"toggle",value:function(){this.pause.status?this.start():this.stop()}},{key:"stop",value:function(){this.typingComplete||this.pause.status||(this.toggleBlinking(!0),this.pause.status=!0,this.options.onStop(this.arrayPos,this))}},{key:"start",value:function(){this.typingComplete||this.pause.status&&(this.pause.status=!1,this.pause.typewrite?this.typewrite(this.pause.curString,this.pause.curStrPos):this.backspace(this.pause.curString,this.pause.curStrPos),this.options.onStart(this.arrayPos,this))}},{key:"destroy",value:function(){this.reset(!1),this.options.onDestroy(this)}},{key:"reset",value:function(){var n=arguments.length<=0||void 0===arguments[0]||arguments[0];clearInterval(this.timeout),this.replaceText(""),this.cursor&&this.cursor.parentNode&&(this.cursor.parentNode.removeChild(this.cursor),this.cursor=null),this.strPos=0,this.arrayPos=0,this.curLoop=0,n&&(this.insertCursor(),this.options.onReset(this),this.begin())}},{key:"begin",value:function(){var n=this;this.options.onBegin(this),this.typingComplete=!1,this.shuffleStringsIfNeeded(this),this.insertCursor(),this.bindInputFocusEvents&&this.bindFocusEvents(),this.timeout=setTimeout((function(){n.currentElContent&&0!==n.currentElContent.length?n.backspace(n.currentElContent,n.currentElContent.length):n.typewrite(n.strings[n.sequence[n.arrayPos]],n.strPos)}),this.startDelay)}},{key:"typewrite",value:function(n,e){var t=this;this.fadeOut&&this.el.classList.contains(this.fadeOutClass)&&(this.el.classList.remove(this.fadeOutClass),this.cursor&&this.cursor.classList.remove(this.fadeOutClass));var r=this.humanizer(this.typeSpeed),o=1;!0!==this.pause.status?this.timeout=setTimeout((function(){e=i.htmlParser.typeHtmlChars(n,e,t);var r=0,a=n.substr(e);if("^"===a.charAt(0)&&/^\^\d+/.test(a)){var s=1;s+=(a=/\d+/.exec(a)[0]).length,r=parseInt(a),t.temporaryPause=!0,t.options.onTypingPaused(t.arrayPos,t),n=n.substring(0,e)+n.substring(e+s),t.toggleBlinking(!0)}if("`"===a.charAt(0)){for(;"`"!==n.substr(e+o).charAt(0)&&(o++,!(e+o>n.length)););var l=n.substring(0,e),c=n.substring(l.length+1,e+o),d=n.substring(e+o+1);n=l+c+d,o--}t.timeout=setTimeout((function(){t.toggleBlinking(!1),e>=n.length?t.doneTyping(n,e):t.keepTyping(n,e,o),t.temporaryPause&&(t.temporaryPause=!1,t.options.onTypingResumed(t.arrayPos,t))}),r)}),r):this.setPauseStatus(n,e,!0)}},{key:"keepTyping",value:function(n,e,t){0===e&&(this.toggleBlinking(!1),this.options.preStringTyped(this.arrayPos,this)),e+=t;var r=n.substr(0,e);this.replaceText(r),this.typewrite(n,e)}},{key:"doneTyping",value:function(n,e){var t=this;this.options.onStringTyped(this.arrayPos,this),this.toggleBlinking(!0),this.arrayPos===this.strings.length-1&&(this.complete(),!1===this.loop||this.curLoop===this.loopCount)||(this.timeout=setTimeout((function(){t.backspace(n,e)}),this.backDelay))}},{key:"backspace",value:function(n,e){var t=this;if(!0!==this.pause.status){if(this.fadeOut)return this.initFadeOut();this.toggleBlinking(!1);var r=this.humanizer(this.backSpeed);this.timeout=setTimeout((function(){e=i.htmlParser.backSpaceHtmlChars(n,e,t);var r=n.substr(0,e);if(t.replaceText(r),t.smartBackspace){var o=t.strings[t.arrayPos+1];o&&r===o.substr(0,e)?t.stopNum=e:t.stopNum=0}e>t.stopNum?(e--,t.backspace(n,e)):e<=t.stopNum&&(t.arrayPos++,t.arrayPos===t.strings.length?(t.arrayPos=0,t.options.onLastStringBackspaced(),t.shuffleStringsIfNeeded(),t.begin()):t.typewrite(t.strings[t.sequence[t.arrayPos]],e))}),r)}else this.setPauseStatus(n,e,!1)}},{key:"complete",value:function(){this.options.onComplete(this),this.loop?this.curLoop++:this.typingComplete=!0}},{key:"setPauseStatus",value:function(n,e,t){this.pause.typewrite=t,this.pause.curString=n,this.pause.curStrPos=e}},{key:"toggleBlinking",value:function(n){this.cursor&&(this.pause.status||this.cursorBlinking!==n&&(this.cursorBlinking=n,n?this.cursor.classList.add("typed-cursor--blink"):this.cursor.classList.remove("typed-cursor--blink")))}},{key:"humanizer",value:function(n){return Math.round(Math.random()*n/2)+n}},{key:"shuffleStringsIfNeeded",value:function(){this.shuffle&&(this.sequence=this.sequence.sort((function(){return Math.random()-.5})))}},{key:"initFadeOut",value:function(){var n=this;return this.el.className+=" "+this.fadeOutClass,this.cursor&&(this.cursor.className+=" "+this.fadeOutClass),setTimeout((function(){n.arrayPos++,n.replaceText(""),n.strings.length>n.arrayPos?n.typewrite(n.strings[n.sequence[n.arrayPos]],0):(n.typewrite(n.strings[0],0),n.arrayPos=0)}),this.fadeOutDelay)}},{key:"replaceText",value:function(n){this.attr?this.el.setAttribute(this.attr,n):this.isInput?this.el.value=n:"html"===this.contentType?this.el.innerHTML=n:this.el.textContent=n}},{key:"bindFocusEvents",value:function(){var n=this;this.isInput&&(this.el.addEventListener("focus",(function(e){n.stop()})),this.el.addEventListener("blur",(function(e){n.el.value&&0!==n.el.value.length||n.start()})))}},{key:"insertCursor",value:function(){this.showCursor&&(this.cursor||(this.cursor=document.createElement("span"),this.cursor.className="typed-cursor",this.cursor.setAttribute("aria-hidden",!0),this.cursor.innerHTML=this.cursorChar,this.el.parentNode&&this.el.parentNode.insertBefore(this.cursor,this.el.nextSibling)))}}]),n}();e.default=a,n.exports=e.default},function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r,o=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},i=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),a=t(2),s=(r=a)&&r.__esModule?r:{default:r},l=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n)}return i(n,[{key:"load",value:function(n,e,t){if(n.el="string"==typeof t?document.querySelector(t):t,n.options=o({},s.default,e),n.isInput="input"===n.el.tagName.toLowerCase(),n.attr=n.options.attr,n.bindInputFocusEvents=n.options.bindInputFocusEvents,n.showCursor=!n.isInput&&n.options.showCursor,n.cursorChar=n.options.cursorChar,n.cursorBlinking=!0,n.elContent=n.attr?n.el.getAttribute(n.attr):n.el.textContent,n.contentType=n.options.contentType,n.typeSpeed=n.options.typeSpeed,n.startDelay=n.options.startDelay,n.backSpeed=n.options.backSpeed,n.smartBackspace=n.options.smartBackspace,n.backDelay=n.options.backDelay,n.fadeOut=n.options.fadeOut,n.fadeOutClass=n.options.fadeOutClass,n.fadeOutDelay=n.options.fadeOutDelay,n.isPaused=!1,n.strings=n.options.strings.map((function(n){return n.trim()})),"string"==typeof n.options.stringsElement?n.stringsElement=document.querySelector(n.options.stringsElement):n.stringsElement=n.options.stringsElement,n.stringsElement){n.strings=[],n.stringsElement.style.display="none";var r=Array.prototype.slice.apply(n.stringsElement.children),i=r.length;if(i)for(var a=0;a<i;a+=1){var l=r[a];n.strings.push(l.innerHTML.trim())}}for(var a in n.strPos=0,n.arrayPos=0,n.stopNum=0,n.loop=n.options.loop,n.loopCount=n.options.loopCount,n.curLoop=0,n.shuffle=n.options.shuffle,n.sequence=[],n.pause={status:!1,typewrite:!0,curString:"",curStrPos:0},n.typingComplete=!1,n.strings)n.sequence[a]=a;n.currentElContent=this.getCurrentElContent(n),n.autoInsertCss=n.options.autoInsertCss,this.appendAnimationCss(n)}},{key:"getCurrentElContent",value:function(n){return n.attr?n.el.getAttribute(n.attr):n.isInput?n.el.value:"html"===n.contentType?n.el.innerHTML:n.el.textContent}},{key:"appendAnimationCss",value:function(n){if(n.autoInsertCss&&(n.showCursor||n.fadeOut)&&!document.querySelector("[data-typed-js-css]")){var e=document.createElement("style");e.type="text/css",e.setAttribute("data-typed-js-css",!0);var t="";n.showCursor&&(t+="\n        .typed-cursor{\n          opacity: 1;\n        }\n        .typed-cursor.typed-cursor--blink{\n          animation: typedjsBlink 0.7s infinite;\n          -webkit-animation: typedjsBlink 0.7s infinite;\n                  animation: typedjsBlink 0.7s infinite;\n        }\n        @keyframes typedjsBlink{\n          50% { opacity: 0.0; }\n        }\n        @-webkit-keyframes typedjsBlink{\n          0% { opacity: 1; }\n          50% { opacity: 0.0; }\n          100% { opacity: 1; }\n        }\n      "),n.fadeOut&&(t+="\n        .typed-fade-out{\n          opacity: 0;\n          transition: opacity .25s;\n        }\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\n          -webkit-animation: 0;\n          animation: 0;\n        }\n      "),0!==e.length&&(e.innerHTML=t,document.body.appendChild(e))}}}]),n}();e.default=l;var c=new l;e.initializer=c},function(n,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var t={strings:["These are the default values...","You know what you should do?","Use your own!","Have a great day!"],stringsElement:null,typeSpeed:0,startDelay:0,backSpeed:0,smartBackspace:!0,shuffle:!1,backDelay:700,fadeOut:!1,fadeOutClass:"typed-fade-out",fadeOutDelay:500,loop:!1,loopCount:1/0,showCursor:!0,cursorChar:"|",autoInsertCss:!0,attr:null,bindInputFocusEvents:!1,contentType:"html",onBegin:function(n){},onComplete:function(n){},preStringTyped:function(n,e){},onStringTyped:function(n,e){},onLastStringBackspaced:function(n){},onTypingPaused:function(n,e){},onTypingResumed:function(n,e){},onReset:function(n){},onStop:function(n,e){},onStart:function(n,e){},onDestroy:function(n){}};e.default=t,n.exports=e.default},function(n,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var t=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),r=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n)}return t(n,[{key:"typeHtmlChars",value:function(n,e,t){if("html"!==t.contentType)return e;var r=n.substr(e).charAt(0);if("<"===r||"&"===r){var o="";for(o="<"===r?">":";";n.substr(e+1).charAt(0)!==o&&!(1+ ++e>n.length););e++}return e}},{key:"backSpaceHtmlChars",value:function(n,e,t){if("html"!==t.contentType)return e;var r=n.substr(e).charAt(0);if(">"===r||";"===r){var o="";for(o=">"===r?"<":"&";n.substr(e-1).charAt(0)!==o&&!(--e<0););e--}return e}}]),n}();e.default=r;var o=new r;e.htmlParser=o}])},n.exports=r()},function(n,e,t){"use strict";t.r(e);var r={name:"CodeBlock",props:{title:{type:String,required:!0},active:{type:Boolean,default:!1}}},o=(t(278),t(6)),i=Object(o.a)(r,(function(){return(0,this._self._c)("div",{staticClass:"theme-code-block",class:{"theme-code-block__active":this.active}},[this._t("default")],2)}),[],!1,null,"2ce25d0d",null);e.default=i.exports},function(n,e,t){"use strict";t.r(e);t(5),t(16),t(18),t(22);var r={name:"CodeGroup",data:()=>({codeTabs:[],activeCodeTabIndex:-1}),watch:{activeCodeTabIndex(n){this.codeTabs.forEach(n=>{n.elm.classList.remove("theme-code-block__active")}),this.codeTabs[n].elm.classList.add("theme-code-block__active")}},mounted(){this.codeTabs=(this.$slots.default||[]).filter(n=>Boolean(n.componentOptions)).map((n,e)=>(""===n.componentOptions.propsData.active&&(this.activeCodeTabIndex=e),{title:n.componentOptions.propsData.title,elm:n.elm})),-1===this.activeCodeTabIndex&&this.codeTabs.length>0&&(this.activeCodeTabIndex=0)},methods:{changeCodeTab(n){this.activeCodeTabIndex=n}}},o=(t(279),t(6)),i=Object(o.a)(r,(function(){var n=this,e=n._self._c;return e("div",{staticClass:"theme-code-group"},[e("div",{staticClass:"theme-code-group__nav"},[e("ul",{staticClass:"theme-code-group__ul"},n._l(n.codeTabs,(function(t,r){return e("li",{key:t.title,staticClass:"theme-code-group__li"},[e("button",{staticClass:"theme-code-group__nav-tab",class:{"theme-code-group__nav-tab-active":r===n.activeCodeTabIndex},on:{click:function(e){return n.changeCodeTab(r)}}},[n._v("\n            "+n._s(t.title)+"\n          ")])])})),0)]),n._v(" "),n._t("default"),n._v(" "),n.codeTabs.length<1?e("pre",{staticClass:"pre-blank"},[n._v("// Make sure to add code blocks to your code group")]):n._e()],2)}),[],!1,null,"f3d70150",null);e.default=i.exports},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){"use strict";var r=t(94),o=String;n.exports=function(n){if("Symbol"===r(n))throw new TypeError("Cannot convert a Symbol value to a string");return o(n)}},function(n,e,t){"use strict";var r=t(83),o=t(19);n.exports=function(n,e,t){return t.get&&r(t.get,e,{getter:!0}),t.set&&r(t.set,e,{setter:!0}),o.f(n,e,t)}},function(n,e,t){"use strict";var r=t(161),o=t(9),i=t(33),a=r(r.bind);n.exports=function(n,e){return o(n),void 0===e?n:i?a(n,e):function(){return n.apply(e,arguments)}}},function(n,e,t){n.exports=t(285)},function(n,e,t){"use strict";var r={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,i=o&&!r.call({1:2},1);e.f=i?function(n){var e=o(this,n);return!!e&&e.enumerable}:r},function(n,e,t){"use strict";var r=t(14),o=t(10),i=t(73),a=t(38),s=t(135),l=t(17),c=TypeError,d=l("toPrimitive");n.exports=function(n,e){if(!o(n)||i(n))return n;var t,l=a(n,d);if(l){if(void 0===e&&(e="default"),t=r(l,n,e),!o(t)||i(t))return t;throw new c("Can't convert object to primitive value")}return void 0===e&&(e="number"),s(n,e)}},function(n,e,t){"use strict";var r=t(14),o=t(1),i=t(10),a=TypeError;n.exports=function(n,e){var t,s;if("string"===e&&o(t=n.toString)&&!i(s=r(t,n)))return s;if(o(t=n.valueOf)&&!i(s=r(t,n)))return s;if("string"!==e&&o(t=n.toString)&&!i(s=r(t,n)))return s;throw new a("Can't convert object to primitive value")}},function(n,e,t){"use strict";var r=t(8),o=t(11),i=Function.prototype,a=r&&Object.getOwnPropertyDescriptor,s=o(i,"name"),l=s&&"something"===function(){}.name,c=s&&(!r||r&&a(i,"name").configurable);n.exports={EXISTS:s,PROPER:l,CONFIGURABLE:c}},function(n,e,t){"use strict";var r=t(7),o=t(1),i=t(50),a=r(Function.toString);o(i.inspectSource)||(i.inspectSource=function(n){return a(n)}),n.exports=i.inspectSource},function(n,e,t){"use strict";var r=t(3),o=t(1),i=r.WeakMap;n.exports=o(i)&&/native code/.test(String(i))},function(n,e,t){"use strict";var r=t(36),o=t(7),i=t(140),a=t(145),s=t(2),l=o([].concat);n.exports=r("Reflect","ownKeys")||function(n){var e=i.f(s(n)),t=a.f;return t?l(e,t(n)):e}},function(n,e,t){"use strict";var r=t(86),o=t(54).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return r(n,o)}},function(n,e,t){"use strict";var r=t(35),o=t(142),i=t(32),a=function(n){return function(e,t,a){var s=r(e),l=i(s);if(0===l)return!n&&-1;var c,d=o(a,l);if(n&&t!=t){for(;l>d;)if((c=s[d++])!=c)return!0}else for(;l>d;d++)if((n||d in s)&&s[d]===t)return n||d||0;return!n&&-1}};n.exports={includes:a(!0),indexOf:a(!1)}},function(n,e,t){"use strict";var r=t(87),o=Math.max,i=Math.min;n.exports=function(n,e){var t=r(n);return t<0?o(t+e,0):i(t,e)}},function(n,e,t){"use strict";var r=Math.ceil,o=Math.floor;n.exports=Math.trunc||function(n){var e=+n;return(e>0?o:r)(e)}},function(n,e,t){"use strict";var r=t(87),o=Math.min;n.exports=function(n){var e=r(n);return e>0?o(e,9007199254740991):0}},function(n,e,t){"use strict";e.f=Object.getOwnPropertySymbols},function(n,e,t){"use strict";var r=t(4),o=t(1),i=/#|\.prototype\./,a=function(n,e){var t=l[s(n)];return t===d||t!==c&&(o(e)?r(e):!!e)},s=a.normalize=function(n){return String(n).replace(i,".").toLowerCase()},l=a.data={},c=a.NATIVE="N",d=a.POLYFILL="P";n.exports=a},function(n,e,t){"use strict";var r=t(37),o=TypeError;n.exports=function(n,e){if(r(e,n))return n;throw new o("Incorrect invocation")}},function(n,e,t){"use strict";var r=t(4);n.exports=!r((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,e,t){"use strict";var r=t(8),o=t(19),i=t(34);n.exports=function(n,e,t){r?o.f(n,e,i(0,t)):n[e]=t}},function(n,e,t){"use strict";var r=t(8),o=t(82),i=t(19),a=t(2),s=t(35),l=t(151);e.f=r&&!o?Object.defineProperties:function(n,e){a(n);for(var t,r=s(e),o=l(e),c=o.length,d=0;c>d;)i.f(n,t=o[d++],r[t]);return n}},function(n,e,t){"use strict";var r=t(86),o=t(54);n.exports=Object.keys||function(n){return r(n,o)}},function(n,e,t){"use strict";var r=t(36);n.exports=r("document","documentElement")},function(n,e,t){"use strict";var r=t(46);n.exports=function(n,e,t){for(var o in e)r(n,o,e[o],t);return n}},function(n,e,t){"use strict";n.exports=function(n,e){return{value:n,done:e}}},function(n,e,t){"use strict";var r=t(14),o=t(9),i=t(2),a=t(26),s=t(90),l=t(91),c=s((function(){var n=this.iterator,e=i(r(this.next,n));if(!(this.done=!!e.done))return l(n,this.mapper,[e.value,this.counter++],!0)}));n.exports=function(n){return i(this),o(n),new c(a(this),{mapper:n})}},function(n,e,t){"use strict";var r=t(12),o=t(157).left,i=t(158),a=t(76);r({target:"Array",proto:!0,forced:!t(159)&&a>79&&a<83||!i("reduce")},{reduce:function(n){var e=arguments.length;return o(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r=t(9),o=t(31),i=t(68),a=t(32),s=TypeError,l="Reduce of empty array with no initial value",c=function(n){return function(e,t,c,d){var u=o(e),p=i(u),m=a(u);if(r(t),0===m&&c<2)throw new s(l);var h=n?m-1:0,g=n?-1:1;if(c<2)for(;;){if(h in p){d=p[h],h+=g;break}if(h+=g,n?h<0:m<=h)throw new s(l)}for(;n?h>=0:m>h;h+=g)h in p&&(d=t(d,p[h],h,u));return d}};n.exports={left:c(!1),right:c(!0)}},function(n,e,t){"use strict";var r=t(4);n.exports=function(n,e){var t=[][n];return!!t&&r((function(){t.call(null,e||function(){return 1},1)}))}},function(n,e,t){"use strict";var r=t(160);n.exports="NODE"===r},function(n,e,t){"use strict";var r=t(3),o=t(77),i=t(28),a=function(n){return o.slice(0,n.length)===n};n.exports=a("Bun/")?"BUN":a("Cloudflare-Workers")?"CLOUDFLARE":a("Deno/")?"DENO":a("Node.js/")?"NODE":r.Bun&&"string"==typeof Bun.version?"BUN":r.Deno&&"object"==typeof Deno.version?"DENO":"process"===i(r.process)?"NODE":r.window&&r.document?"BROWSER":"REST"},function(n,e,t){"use strict";var r=t(28),o=t(7);n.exports=function(n){if("Function"===r(n))return o(n)}},function(n,e,t){"use strict";var r=t(17),o=t(92),i=r("iterator"),a=Array.prototype;n.exports=function(n){return void 0!==n&&(o.Array===n||a[i]===n)}},function(n,e,t){"use strict";var r=t(14),o=t(9),i=t(2),a=t(49),s=t(93),l=TypeError;n.exports=function(n,e){var t=arguments.length<2?s(n):e;if(o(t))return i(r(t,n));throw new l(a(n)+" is not iterable")}},function(n,e,t){"use strict";var r={};r[t(17)("toStringTag")]="z",n.exports="[object z]"===String(r)},function(n,e,t){"use strict";var r=t(12),o=t(45),i=t(9),a=t(2),s=t(26),l=TypeError;r({target:"Iterator",proto:!0,real:!0},{reduce:function(n){a(this),i(n);var e=s(this),t=arguments.length<2,r=t?void 0:arguments[1],c=0;if(o(e,(function(e){t?(t=!1,r=e):r=n(r,e,c),c++}),{IS_RECORD:!0}),t)throw new l("Reduce of empty iterator with no initial value");return r}})},function(n,e,t){"use strict";var r=t(33),o=Function.prototype,i=o.apply,a=o.call;n.exports="object"==typeof Reflect&&Reflect.apply||(r?a.bind(i):function(){return a.apply(i,arguments)})},function(n,e,t){"use strict";var r=t(36),o=t(11),i=t(25),a=t(37),s=t(96),l=t(85),c=t(171),d=t(172),u=t(173),p=t(174),m=t(175),h=t(8),g=t(24);n.exports=function(n,e,t,f){var v=f?2:1,b=n.split("."),w=b[b.length-1],y=r.apply(null,b);if(y){var k=y.prototype;if(!g&&o(k,"cause")&&delete k.cause,!t)return y;var x=r("Error"),_=e((function(n,e){var t=u(f?e:n,void 0),r=f?new y(n):new y;return void 0!==t&&i(r,"message",t),m(r,_,r.stack,2),this&&a(k,this)&&d(r,this,_),arguments.length>v&&p(r,arguments[v]),r}));if(_.prototype=k,"Error"!==w?s?s(_,x):l(_,x,{name:!0}):h&&"stackTraceLimit"in y&&(c(_,y,"stackTraceLimit"),c(_,y,"prepareStackTrace")),l(_,y),!g)try{k.name!==w&&i(k,"name",w),k.constructor=_}catch(n){}return _}}},function(n,e,t){"use strict";var r=t(7),o=t(9);n.exports=function(n,e,t){try{return r(o(Object.getOwnPropertyDescriptor(n,e)[t]))}catch(n){}}},function(n,e,t){"use strict";var r=t(170),o=String,i=TypeError;n.exports=function(n){if(r(n))return n;throw new i("Can't set "+o(n)+" as a prototype")}},function(n,e,t){"use strict";var r=t(10);n.exports=function(n){return r(n)||null===n}},function(n,e,t){"use strict";var r=t(19).f;n.exports=function(n,e,t){t in n||r(n,t,{configurable:!0,get:function(){return e[t]},set:function(n){e[t]=n}})}},function(n,e,t){"use strict";var r=t(1),o=t(10),i=t(96);n.exports=function(n,e,t){var a,s;return i&&r(a=e.constructor)&&a!==t&&o(s=a.prototype)&&s!==t.prototype&&i(n,s),n}},function(n,e,t){"use strict";var r=t(129);n.exports=function(n,e){return void 0===n?arguments.length<2?"":e:r(n)}},function(n,e,t){"use strict";var r=t(10),o=t(25);n.exports=function(n,e){r(e)&&"cause"in e&&o(n,"cause",e.cause)}},function(n,e,t){"use strict";var r=t(25),o=t(176),i=t(177),a=Error.captureStackTrace;n.exports=function(n,e,t,s){i&&(a?a(n,e):r(n,"stack",o(t,s)))}},function(n,e,t){"use strict";var r=t(7),o=Error,i=r("".replace),a=String(new o("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,l=s.test(a);n.exports=function(n,e){if(l&&"string"==typeof n&&!o.prepareStackTrace)for(;e--;)n=i(n,s,"");return n}},function(n,e,t){"use strict";var r=t(4),o=t(34);n.exports=!r((function(){var n=new Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",o(1,7)),7!==n.stack)}))},function(n,e,t){"use strict";var r=t(8),o=t(179),i=TypeError,a=Object.getOwnPropertyDescriptor,s=r&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(n){return n instanceof TypeError}}();n.exports=s?function(n,e){if(o(n)&&!a(n,"length").writable)throw new i("Cannot set read only .length");return n.length=e}:function(n,e){return n.length=e}},function(n,e,t){"use strict";var r=t(28);n.exports=Array.isArray||function(n){return"Array"===r(n)}},function(n,e,t){"use strict";var r=TypeError;n.exports=function(n){if(n>9007199254740991)throw r("Maximum allowed index exceeded");return n}},function(n,e,t){var r=t(97),o=t(182);n.exports=function n(e,t,i,a,s){var l=-1,c=e.length;for(i||(i=o),s||(s=[]);++l<c;){var d=e[l];t>0&&i(d)?t>1?n(d,t-1,i,a,s):r(s,d):a||(s[s.length]=d)}return s}},function(n,e,t){var r=t(29),o=t(56),i=t(13),a=r?r.isConcatSpreadable:void 0;n.exports=function(n){return i(n)||o(n)||!!(a&&n&&n[a])}},function(n,e,t){var r=t(27),o=t(23);n.exports=function(n){return o(n)&&"[object Arguments]"==r(n)}},function(n,e,t){var r=t(29),o=Object.prototype,i=o.hasOwnProperty,a=o.toString,s=r?r.toStringTag:void 0;n.exports=function(n){var e=i.call(n,s),t=n[s];try{n[s]=void 0;var r=!0}catch(n){}var o=a.call(n);return r&&(e?n[s]=t:delete n[s]),o}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var r=t(187),o=t(243),i=t(64),a=t(13),s=t(254);n.exports=function(n){return"function"==typeof n?n:null==n?i:"object"==typeof n?a(n)?o(n[0],n[1]):r(n):s(n)}},function(n,e,t){var r=t(188),o=t(242),i=t(114);n.exports=function(n){var e=o(n);return 1==e.length&&e[0][2]?i(e[0][0],e[0][1]):function(t){return t===n||r(t,n,e)}}},function(n,e,t){var r=t(99),o=t(103);n.exports=function(n,e,t,i){var a=t.length,s=a,l=!i;if(null==n)return!s;for(n=Object(n);a--;){var c=t[a];if(l&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++a<s;){var d=(c=t[a])[0],u=n[d],p=c[1];if(l&&c[2]){if(void 0===u&&!(d in n))return!1}else{var m=new r;if(i)var h=i(u,p,d,n,e,m);if(!(void 0===h?o(p,u,3,i,m):h))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var r=t(40),o=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=r(e,n);return!(t<0)&&(t==e.length-1?e.pop():o.call(e,t,1),--this.size,!0)}},function(n,e,t){var r=t(40);n.exports=function(n){var e=this.__data__,t=r(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var r=t(40);n.exports=function(n){return r(this.__data__,n)>-1}},function(n,e,t){var r=t(40);n.exports=function(n,e){var t=this.__data__,o=r(t,n);return o<0?(++this.size,t.push([n,e])):t[o][1]=e,this}},function(n,e,t){var r=t(39);n.exports=function(){this.__data__=new r,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var r=t(39),o=t(57),i=t(59);n.exports=function(n,e){var t=this.__data__;if(t instanceof r){var a=t.__data__;if(!o||a.length<199)return a.push([n,e]),this.size=++t.size,this;t=this.__data__=new i(a)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var r=t(101),o=t(200),i=t(58),a=t(102),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,d=l.toString,u=c.hasOwnProperty,p=RegExp("^"+d.call(u).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!i(n)||o(n))&&(r(n)?p:s).test(a(n))}},function(n,e,t){var r,o=t(201),i=(r=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";n.exports=function(n){return!!i&&i in n}},function(n,e,t){var r=t(15)["__core-js_shared__"];n.exports=r},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var r=t(204),o=t(39),i=t(57);n.exports=function(){this.size=0,this.__data__={hash:new r,map:new(i||o),string:new r}}},function(n,e,t){var r=t(205),o=t(206),i=t(207),a=t(208),s=t(209);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=o,l.prototype.get=i,l.prototype.has=a,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(41);n.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var r=t(41),o=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(r){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return o.call(e,n)?e[n]:void 0}},function(n,e,t){var r=t(41),o=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return r?void 0!==e[n]:o.call(e,n)}},function(n,e,t){var r=t(41);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=r&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var r=t(42);n.exports=function(n){var e=r(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var r=t(42);n.exports=function(n){return r(this,n).get(n)}},function(n,e,t){var r=t(42);n.exports=function(n){return r(this,n).has(n)}},function(n,e,t){var r=t(42);n.exports=function(n,e){var t=r(this,n),o=t.size;return t.set(n,e),this.size+=t.size==o?0:1,this}},function(n,e,t){var r=t(99),o=t(104),i=t(219),a=t(222),s=t(238),l=t(13),c=t(108),d=t(110),u="[object Object]",p=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,m,h,g){var f=l(n),v=l(e),b=f?"[object Array]":s(n),w=v?"[object Array]":s(e),y=(b="[object Arguments]"==b?u:b)==u,k=(w="[object Arguments]"==w?u:w)==u,x=b==w;if(x&&c(n)){if(!c(e))return!1;f=!0,y=!1}if(x&&!y)return g||(g=new r),f||d(n)?o(n,e,t,m,h,g):i(n,e,b,t,m,h,g);if(!(1&t)){var _=y&&p.call(n,"__wrapped__"),S=k&&p.call(e,"__wrapped__");if(_||S){var j=_?n.value():n,T=S?e.value():e;return g||(g=new r),h(j,T,t,m,g)}}return!!x&&(g||(g=new r),a(n,e,t,m,h,g))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length;++t<r;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var r=t(29),o=t(220),i=t(100),a=t(104),s=t(221),l=t(60),c=r?r.prototype:void 0,d=c?c.valueOf:void 0;n.exports=function(n,e,t,r,c,u,p){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!u(new o(n),new o(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var m=s;case"[object Set]":var h=1&r;if(m||(m=l),n.size!=e.size&&!h)return!1;var g=p.get(n);if(g)return g==e;r|=2,p.set(n,e);var f=a(m(n),m(e),r,c,u,p);return p.delete(n),f;case"[object Symbol]":if(d)return d.call(n)==d.call(e)}return!1}},function(n,e,t){var r=t(15).Uint8Array;n.exports=r},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,r){t[++e]=[r,n]})),t}},function(n,e,t){var r=t(223),o=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,i,a,s){var l=1&t,c=r(n),d=c.length;if(d!=r(e).length&&!l)return!1;for(var u=d;u--;){var p=c[u];if(!(l?p in e:o.call(e,p)))return!1}var m=s.get(n),h=s.get(e);if(m&&h)return m==e&&h==n;var g=!0;s.set(n,e),s.set(e,n);for(var f=l;++u<d;){var v=n[p=c[u]],b=e[p];if(i)var w=l?i(b,v,p,e,n,s):i(v,b,p,n,e,s);if(!(void 0===w?v===b||a(v,b,t,i,s):w)){g=!1;break}f||(f="constructor"==p)}if(g&&!f){var y=n.constructor,k=e.constructor;y==k||!("constructor"in n)||!("constructor"in e)||"function"==typeof y&&y instanceof y&&"function"==typeof k&&k instanceof k||(g=!1)}return s.delete(n),s.delete(e),g}},function(n,e,t){var r=t(224),o=t(225),i=t(107);n.exports=function(n){return r(n,i,o)}},function(n,e,t){var r=t(97),o=t(13);n.exports=function(n,e,t){var i=e(n);return o(n)?i:r(i,t(n))}},function(n,e,t){var r=t(226),o=t(227),i=Object.prototype.propertyIsEnumerable,a=Object.getOwnPropertySymbols,s=a?function(n){return null==n?[]:(n=Object(n),r(a(n),(function(e){return i.call(n,e)})))}:o;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,o=0,i=[];++t<r;){var a=n[t];e(a,t,n)&&(i[o++]=a)}return i}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var r=t(229),o=t(56),i=t(13),a=t(108),s=t(109),l=t(110),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=i(n),d=!t&&o(n),u=!t&&!d&&a(n),p=!t&&!d&&!u&&l(n),m=t||d||u||p,h=m?r(n.length,String):[],g=h.length;for(var f in n)!e&&!c.call(n,f)||m&&("length"==f||u&&("offset"==f||"parent"==f)||p&&("buffer"==f||"byteLength"==f||"byteOffset"==f)||s(f,g))||h.push(f);return h}},function(n,e){n.exports=function(n,e){for(var t=-1,r=Array(n);++t<n;)r[t]=e(t);return r}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var r=t(27),o=t(61),i=t(23),a={};a["[object Float32Array]"]=a["[object Float64Array]"]=a["[object Int8Array]"]=a["[object Int16Array]"]=a["[object Int32Array]"]=a["[object Uint8Array]"]=a["[object Uint8ClampedArray]"]=a["[object Uint16Array]"]=a["[object Uint32Array]"]=!0,a["[object Arguments]"]=a["[object Array]"]=a["[object ArrayBuffer]"]=a["[object Boolean]"]=a["[object DataView]"]=a["[object Date]"]=a["[object Error]"]=a["[object Function]"]=a["[object Map]"]=a["[object Number]"]=a["[object Object]"]=a["[object RegExp]"]=a["[object Set]"]=a["[object String]"]=a["[object WeakMap]"]=!1,n.exports=function(n){return i(n)&&o(n.length)&&!!a[r(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var r=t(98),o=e&&!e.nodeType&&e,i=o&&"object"==typeof n&&n&&!n.nodeType&&n,a=i&&i.exports===o&&r.process,s=function(){try{var n=i&&i.require&&i.require("util").types;return n||a&&a.binding&&a.binding("util")}catch(n){}}();n.exports=s}).call(this,t(70)(n))},function(n,e,t){var r=t(235),o=t(236),i=Object.prototype.hasOwnProperty;n.exports=function(n){if(!r(n))return o(n);var e=[];for(var t in Object(n))i.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var r=t(237)(Object.keys,Object);n.exports=r},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var r=t(239),o=t(57),i=t(240),a=t(112),s=t(241),l=t(27),c=t(102),d=c(r),u=c(o),p=c(i),m=c(a),h=c(s),g=l;(r&&"[object DataView]"!=g(new r(new ArrayBuffer(1)))||o&&"[object Map]"!=g(new o)||i&&"[object Promise]"!=g(i.resolve())||a&&"[object Set]"!=g(new a)||s&&"[object WeakMap]"!=g(new s))&&(g=function(n){var e=l(n),t="[object Object]"==e?n.constructor:void 0,r=t?c(t):"";if(r)switch(r){case d:return"[object DataView]";case u:return"[object Map]";case p:return"[object Promise]";case m:return"[object Set]";case h:return"[object WeakMap]"}return e}),n.exports=g},function(n,e,t){var r=t(20)(t(15),"DataView");n.exports=r},function(n,e,t){var r=t(20)(t(15),"Promise");n.exports=r},function(n,e,t){var r=t(20)(t(15),"WeakMap");n.exports=r},function(n,e,t){var r=t(113),o=t(107);n.exports=function(n){for(var e=o(n),t=e.length;t--;){var i=e[t],a=n[i];e[t]=[i,a,r(a)]}return e}},function(n,e,t){var r=t(103),o=t(244),i=t(251),a=t(62),s=t(113),l=t(114),c=t(43);n.exports=function(n,e){return a(n)&&s(e)?l(c(n),e):function(t){var a=o(t,n);return void 0===a&&a===e?i(t,n):r(e,a,3)}}},function(n,e,t){var r=t(115);n.exports=function(n,e,t){var o=null==n?void 0:r(n,e);return void 0===o?t:o}},function(n,e,t){var r=t(246),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,a=r((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(o,(function(n,t,r,o){e.push(r?o.replace(i,"$1"):t||n)})),e}));n.exports=a},function(n,e,t){var r=t(247);n.exports=function(n){var e=r(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var r=t(59);function o(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var r=arguments,o=e?e.apply(this,r):r[0],i=t.cache;if(i.has(o))return i.get(o);var a=n.apply(this,r);return t.cache=i.set(o,a)||i,a};return t.cache=new(o.Cache||r),t}o.Cache=r,n.exports=o},function(n,e,t){var r=t(249);n.exports=function(n){return null==n?"":r(n)}},function(n,e,t){var r=t(29),o=t(250),i=t(13),a=t(63),s=r?r.prototype:void 0,l=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(i(e))return o(e,n)+"";if(a(e))return l?l.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,o=Array(r);++t<r;)o[t]=e(n[t],t,n);return o}},function(n,e,t){var r=t(252),o=t(253);n.exports=function(n,e){return null!=n&&o(n,e,r)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var r=t(116),o=t(56),i=t(13),a=t(109),s=t(61),l=t(43);n.exports=function(n,e,t){for(var c=-1,d=(e=r(e,n)).length,u=!1;++c<d;){var p=l(e[c]);if(!(u=null!=n&&t(n,p)))break;n=n[p]}return u||++c!=d?u:!!(d=null==n?0:n.length)&&s(d)&&a(p,d)&&(i(n)||o(n))}},function(n,e,t){var r=t(255),o=t(256),i=t(62),a=t(43);n.exports=function(n){return i(n)?r(a(n)):o(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var r=t(115);n.exports=function(n){return function(e){return r(e,n)}}},function(n,e,t){var r=t(64),o=t(258),i=t(260);n.exports=function(n,e){return i(o(n,e,r),n+"")}},function(n,e,t){var r=t(259),o=Math.max;n.exports=function(n,e,t){return e=o(void 0===e?n.length-1:e,0),function(){for(var i=arguments,a=-1,s=o(i.length-e,0),l=Array(s);++a<s;)l[a]=i[e+a];a=-1;for(var c=Array(e+1);++a<e;)c[a]=i[a];return c[e]=t(l),r(n,this,c)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var r=t(261),o=t(264)(r);n.exports=o},function(n,e,t){var r=t(262),o=t(263),i=t(64),a=o?function(n,e){return o(n,"toString",{configurable:!0,enumerable:!1,value:r(e),writable:!0})}:i;n.exports=a},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var r=t(20),o=function(){try{var n=r(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=o},function(n,e){var t=Date.now;n.exports=function(n){var e=0,r=0;return function(){var o=t(),i=16-(o-r);if(r=o,i>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var r=t(105),o=t(266),i=t(271),a=t(106),s=t(272),l=t(60);n.exports=function(n,e,t){var c=-1,d=o,u=n.length,p=!0,m=[],h=m;if(t)p=!1,d=i;else if(u>=200){var g=e?null:s(n);if(g)return l(g);p=!1,d=a,h=new r}else h=e?[]:m;n:for(;++c<u;){var f=n[c],v=e?e(f):f;if(f=t||0!==f?f:0,p&&v==v){for(var b=h.length;b--;)if(h[b]===v)continue n;e&&h.push(v),m.push(f)}else d(h,v,t)||(h!==m&&h.push(v),m.push(f))}return m}},function(n,e,t){var r=t(267);n.exports=function(n,e){return!!(null==n?0:n.length)&&r(n,e,0)>-1}},function(n,e,t){var r=t(268),o=t(269),i=t(270);n.exports=function(n,e,t){return e==e?i(n,e,t):r(n,o,t)}},function(n,e){n.exports=function(n,e,t,r){for(var o=n.length,i=t+(r?1:-1);r?i--:++i<o;)if(e(n[i],i,n))return i;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var r=t-1,o=n.length;++r<o;)if(n[r]===e)return r;return-1}},function(n,e){n.exports=function(n,e,t){for(var r=-1,o=null==n?0:n.length;++r<o;)if(t(e,n[r]))return!0;return!1}},function(n,e,t){var r=t(112),o=t(273),i=t(60),a=r&&1/i(new r([,-0]))[1]==1/0?function(n){return new r(n)}:o;n.exports=a},function(n,e){n.exports=function(){}},function(n,e,t){var r=t(111),o=t(23);n.exports=function(n){return o(n)&&r(n)}},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(117)},function(n,e,t){"use strict";t(118)},function(n,e,t){"use strict";t(119)},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(120)},function(n,e,t){"use strict";t(121)},function(n,e,t){"use strict";t(122)},function(n,e,t){"use strict";t.r(e);t(5),t(16),t(22);var r=t(0);function o(n,e){for(var t in e)n[t]=e[t];return n}var i=/[!'()*]/g,a=function(n){return"%"+n.charCodeAt(0).toString(16)},s=/%2C/g,l=function(n){return encodeURIComponent(n).replace(i,a).replace(s,",")};function c(n){try{return decodeURIComponent(n)}catch(n){0}return n}var d=function(n){return null==n||"object"==typeof n?n:String(n)};function u(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),r=c(t.shift()),o=t.length>0?c(t.join("=")):null;void 0===e[r]?e[r]=o:Array.isArray(e[r])?e[r].push(o):e[r]=[e[r],o]})),e):e}function p(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return l(e);if(Array.isArray(t)){var r=[];return t.forEach((function(n){void 0!==n&&(null===n?r.push(l(e)):r.push(l(e)+"="+l(n)))})),r.join("&")}return l(e)+"="+l(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var m=/\/?$/;function h(n,e,t,r){var o=r&&r.options.stringifyQuery,i=e.query||{};try{i=g(i)}catch(n){}var a={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:i,params:e.params||{},fullPath:b(e,o),matched:n?v(n):[]};return t&&(a.redirectedFrom=b(t,o)),Object.freeze(a)}function g(n){if(Array.isArray(n))return n.map(g);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=g(n[t]);return e}return n}var f=h(null,{path:"/"});function v(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function b(n,e){var t=n.path,r=n.query;void 0===r&&(r={});var o=n.hash;return void 0===o&&(o=""),(t||"/")+(e||p)(r)+o}function w(n,e,t){return e===f?n===e:!!e&&(n.path&&e.path?n.path.replace(m,"")===e.path.replace(m,"")&&(t||n.hash===e.hash&&y(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&y(n.query,e.query)&&y(n.params,e.params))))}function y(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),r=Object.keys(e).sort();return t.length===r.length&&t.every((function(t,o){var i=n[t];if(r[o]!==t)return!1;var a=e[t];return null==i||null==a?i===a:"object"==typeof i&&"object"==typeof a?y(i,a):String(i)===String(a)}))}function k(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var r in t.instances){var o=t.instances[r],i=t.enteredCbs[r];if(o&&i){delete t.enteredCbs[r];for(var a=0;a<i.length;a++)o._isBeingDestroyed||i[a](o)}}}}var x={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,r=e.children,i=e.parent,a=e.data;a.routerView=!0;for(var s=i.$createElement,l=t.name,c=i.$route,d=i._routerViewCache||(i._routerViewCache={}),u=0,p=!1;i&&i._routerRoot!==i;){var m=i.$vnode?i.$vnode.data:{};m.routerView&&u++,m.keepAlive&&i._directInactive&&i._inactive&&(p=!0),i=i.$parent}if(a.routerViewDepth=u,p){var h=d[l],g=h&&h.component;return g?(h.configProps&&_(g,a,h.route,h.configProps),s(g,a,r)):s()}var f=c.matched[u],v=f&&f.components[l];if(!f||!v)return d[l]=null,s();d[l]={component:v},a.registerRouteInstance=function(n,e){var t=f.instances[l];(e&&t!==n||!e&&t===n)&&(f.instances[l]=e)},(a.hook||(a.hook={})).prepatch=function(n,e){f.instances[l]=e.componentInstance},a.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==f.instances[l]&&(f.instances[l]=n.componentInstance),k(c)};var b=f.props&&f.props[l];return b&&(o(d[l],{route:c,configProps:b}),_(v,a,c,b)),s(v,a,r)}};function _(n,e,t,r){var i=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,r);if(i){i=e.props=o({},i);var a=e.attrs=e.attrs||{};for(var s in i)n.props&&s in n.props||(a[s]=i[s],delete i[s])}}function S(n,e,t){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;var o=e.split("/");t&&o[o.length-1]||o.pop();for(var i=n.replace(/^\//,"").split("/"),a=0;a<i.length;a++){var s=i[a];".."===s?o.pop():"."!==s&&o.push(s)}return""!==o[0]&&o.unshift(""),o.join("/")}function j(n){return n.replace(/\/(?:\s*\/)+/g,"/")}var T=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},C=M,E=$,A=function(n,e){return O($(n,e),e)},z=O,I=F,P=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function $(n,e){for(var t,r=[],o=0,i=0,a="",s=e&&e.delimiter||"/";null!=(t=P.exec(n));){var l=t[0],c=t[1],d=t.index;if(a+=n.slice(i,d),i=d+l.length,c)a+=c[1];else{var u=n[i],p=t[2],m=t[3],h=t[4],g=t[5],f=t[6],v=t[7];a&&(r.push(a),a="");var b=null!=p&&null!=u&&u!==p,w="+"===f||"*"===f,y="?"===f||"*"===f,k=t[2]||s,x=h||g;r.push({name:m||o++,prefix:p||"",delimiter:k,optional:y,repeat:w,partial:b,asterisk:!!v,pattern:x?q(x):v?".*":"[^"+D(k)+"]+?"})}}return i<n.length&&(a+=n.substr(i)),a&&r.push(a),r}function B(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function O(n,e){for(var t=new Array(n.length),r=0;r<n.length;r++)"object"==typeof n[r]&&(t[r]=new RegExp("^(?:"+n[r].pattern+")$",V(e)));return function(e,r){for(var o="",i=e||{},a=(r||{}).pretty?B:encodeURIComponent,s=0;s<n.length;s++){var l=n[s];if("string"!=typeof l){var c,d=i[l.name];if(null==d){if(l.optional){l.partial&&(o+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(T(d)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var u=0;u<d.length;u++){if(c=a(d[u]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");o+=(0===u?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(d).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):a(d),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');o+=l.prefix+c}}else o+=l}return o}}function D(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function q(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function L(n,e){return n.keys=e,n}function V(n){return n&&n.sensitive?"":"i"}function F(n,e,t){T(e)||(t=e||t,e=[]);for(var r=(t=t||{}).strict,o=!1!==t.end,i="",a=0;a<n.length;a++){var s=n[a];if("string"==typeof s)i+=D(s);else{var l=D(s.prefix),c="(?:"+s.pattern+")";e.push(s),s.repeat&&(c+="(?:"+l+c+")*"),i+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var d=D(t.delimiter||"/"),u=i.slice(-d.length)===d;return r||(i=(u?i.slice(0,-d.length):i)+"(?:"+d+"(?=$))?"),i+=o?"$":r&&u?"":"(?="+d+"|$)",L(new RegExp("^"+i,V(t)),e)}function M(n,e,t){return T(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return L(n,e)}(n,e):T(n)?function(n,e,t){for(var r=[],o=0;o<n.length;o++)r.push(M(n[o],e,t).source);return L(new RegExp("(?:"+r.join("|")+")",V(t)),e)}(n,e,t):function(n,e,t){return F($(n,t),e,t)}(n,e,t)}C.parse=E,C.compile=A,C.tokensToFunction=z,C.tokensToRegExp=I;var G=Object.create(null);function R(n,e,t){e=e||{};try{var r=G[n]||(G[n]=C.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),r(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function N(n,e,t,r){var i="string"==typeof n?{path:n}:n;if(i._normalized)return i;if(i.name){var a=(i=o({},n)).params;return a&&"object"==typeof a&&(i.params=o({},a)),i}if(!i.path&&i.params&&e){(i=o({},i))._normalized=!0;var s=o(o({},e.params),i.params);if(e.name)i.name=e.name,i.params=s;else if(e.matched.length){var l=e.matched[e.matched.length-1].path;i.path=R(l,s,e.path)}else 0;return i}var c=function(n){var e="",t="",r=n.indexOf("#");r>=0&&(e=n.slice(r),n=n.slice(0,r));var o=n.indexOf("?");return o>=0&&(t=n.slice(o+1),n=n.slice(0,o)),{path:n,query:t,hash:e}}(i.path||""),p=e&&e.path||"/",m=c.path?S(c.path,p,t||i.append):p,h=function(n,e,t){void 0===e&&(e={});var r,o=t||u;try{r=o(n||"")}catch(n){r={}}for(var i in e){var a=e[i];r[i]=Array.isArray(a)?a.map(d):d(a)}return r}(c.query,i.query,r&&r.options.parseQuery),g=i.hash||c.hash;return g&&"#"!==g.charAt(0)&&(g="#"+g),{_normalized:!0,path:m,query:h,hash:g}}var H,U=function(){},W={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,r=this.$route,i=t.resolve(this.to,r,this.append),a=i.location,s=i.route,l=i.href,c={},d=t.options.linkActiveClass,u=t.options.linkExactActiveClass,p=null==d?"router-link-active":d,g=null==u?"router-link-exact-active":u,f=null==this.activeClass?p:this.activeClass,v=null==this.exactActiveClass?g:this.exactActiveClass,b=s.redirectedFrom?h(null,N(s.redirectedFrom),null,t):s;c[v]=w(r,b,this.exactPath),c[f]=this.exact||this.exactPath?c[v]:function(n,e){return 0===n.path.replace(m,"/").indexOf(e.path.replace(m,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(r,b);var y=c[v]?this.ariaCurrentValue:null,k=function(n){J(n)&&(e.replace?t.replace(a,U):t.push(a,U))},x={click:J};Array.isArray(this.event)?this.event.forEach((function(n){x[n]=k})):x[this.event]=k;var _={class:c},S=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:l,route:s,navigate:k,isActive:c[f],isExactActive:c[v]});if(S){if(1===S.length)return S[0];if(S.length>1||!S.length)return 0===S.length?n():n("span",{},S)}if("a"===this.tag)_.on=x,_.attrs={href:l,"aria-current":y};else{var j=function n(e){var t;if(e)for(var r=0;r<e.length;r++){if("a"===(t=e[r]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(j){j.isStatic=!1;var T=j.data=o({},j.data);for(var C in T.on=T.on||{},T.on){var E=T.on[C];C in x&&(T.on[C]=Array.isArray(E)?E:[E])}for(var A in x)A in T.on?T.on[A].push(x[A]):T.on[A]=k;var z=j.data.attrs=o({},j.data.attrs);z.href=l,z["aria-current"]=y}else _.on=x}return n(this.tag,_,this.$slots.default)}};function J(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var Z="undefined"!=typeof window;function Q(n,e,t,r,o){var i=e||[],a=t||Object.create(null),s=r||Object.create(null);n.forEach((function(n){!function n(e,t,r,o,i,a){var s=o.path,l=o.name;0;var c=o.pathToRegexpOptions||{},d=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return j(e.path+"/"+n)}(s,i,c.strict);"boolean"==typeof o.caseSensitive&&(c.sensitive=o.caseSensitive);var u={path:d,regex:K(d,c),components:o.components||{default:o.component},alias:o.alias?"string"==typeof o.alias?[o.alias]:o.alias:[],instances:{},enteredCbs:{},name:l,parent:i,matchAs:a,redirect:o.redirect,beforeEnter:o.beforeEnter,meta:o.meta||{},props:null==o.props?{}:o.components?o.props:{default:o.props}};o.children&&o.children.forEach((function(o){var i=a?j(a+"/"+o.path):void 0;n(e,t,r,o,u,i)}));t[u.path]||(e.push(u.path),t[u.path]=u);if(void 0!==o.alias)for(var p=Array.isArray(o.alias)?o.alias:[o.alias],m=0;m<p.length;++m){0;var h={path:p[m],children:o.children};n(e,t,r,h,i,u.path||"/")}l&&(r[l]||(r[l]=u))}(i,a,s,n,o)}));for(var l=0,c=i.length;l<c;l++)"*"===i[l]&&(i.push(i.splice(l,1)[0]),c--,l--);return{pathList:i,pathMap:a,nameMap:s}}function K(n,e){return C(n,[],e)}function X(n,e){var t=Q(n),r=t.pathList,o=t.pathMap,i=t.nameMap;function a(n,t,a){var s=N(n,t,!1,e),c=s.name;if(c){var d=i[c];if(!d)return l(null,s);var u=d.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var p in t.params)!(p in s.params)&&u.indexOf(p)>-1&&(s.params[p]=t.params[p]);return s.path=R(d.path,s.params),l(d,s,a)}if(s.path){s.params={};for(var m=0;m<r.length;m++){var h=r[m],g=o[h];if(Y(g.regex,s.path,s.params))return l(g,s,a)}}return l(null,s)}function s(n,t){var r=n.redirect,o="function"==typeof r?r(h(n,t,null,e)):r;if("string"==typeof o&&(o={path:o}),!o||"object"!=typeof o)return l(null,t);var s=o,c=s.name,d=s.path,u=t.query,p=t.hash,m=t.params;if(u=s.hasOwnProperty("query")?s.query:u,p=s.hasOwnProperty("hash")?s.hash:p,m=s.hasOwnProperty("params")?s.params:m,c){i[c];return a({_normalized:!0,name:c,query:u,hash:p,params:m},void 0,t)}if(d){var g=function(n,e){return S(n,e.parent?e.parent.path:"/",!0)}(d,n);return a({_normalized:!0,path:R(g,m),query:u,hash:p},void 0,t)}return l(null,t)}function l(n,t,r){return n&&n.redirect?s(n,r||t):n&&n.matchAs?function(n,e,t){var r=a({_normalized:!0,path:R(t,e.params)});if(r){var o=r.matched,i=o[o.length-1];return e.params=r.params,l(i,e)}return l(null,e)}(0,t,n.matchAs):h(n,t,r,e)}return{match:a,addRoute:function(n,e){var t="object"!=typeof n?i[n]:void 0;Q([e||n],r,o,i,t),t&&t.alias.length&&Q(t.alias.map((function(n){return{path:n,children:[e]}})),r,o,i,t)},getRoutes:function(){return r.map((function(n){return o[n]}))},addRoutes:function(n){Q(n,r,o,i)}}}function Y(n,e,t){var r=e.match(n);if(!r)return!1;if(!t)return!0;for(var o=1,i=r.length;o<i;++o){var a=n.keys[o-1];a&&(t[a.name||"pathMatch"]="string"==typeof r[o]?c(r[o]):r[o])}return!0}var nn=Z&&window.performance&&window.performance.now?window.performance:Date;function en(){return nn.now().toFixed(3)}var tn=en();function rn(){return tn}function on(n){return tn=n}var an=Object.create(null);function sn(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=o({},window.history.state);return t.key=rn(),window.history.replaceState(t,"",e),window.addEventListener("popstate",dn),function(){window.removeEventListener("popstate",dn)}}function ln(n,e,t,r){if(n.app){var o=n.options.scrollBehavior;o&&n.app.$nextTick((function(){var i=function(){var n=rn();if(n)return an[n]}(),a=o.call(n,e,t,r?i:null);a&&("function"==typeof a.then?a.then((function(n){gn(n,i)})).catch((function(n){0})):gn(a,i))}))}}function cn(){var n=rn();n&&(an[n]={x:window.pageXOffset,y:window.pageYOffset})}function dn(n){cn(),n.state&&n.state.key&&on(n.state.key)}function un(n){return mn(n.x)||mn(n.y)}function pn(n){return{x:mn(n.x)?n.x:window.pageXOffset,y:mn(n.y)?n.y:window.pageYOffset}}function mn(n){return"number"==typeof n}var hn=/^#\d/;function gn(n,e){var t,r="object"==typeof n;if(r&&"string"==typeof n.selector){var o=hn.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(o){var i=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),r=n.getBoundingClientRect();return{x:r.left-t.left-e.x,y:r.top-t.top-e.y}}(o,i={x:mn((t=i).x)?t.x:0,y:mn(t.y)?t.y:0})}else un(n)&&(e=pn(n))}else r&&un(n)&&(e=pn(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var fn,vn=Z&&((-1===(fn=window.navigator.userAgent).indexOf("Android 2.")&&-1===fn.indexOf("Android 4.0")||-1===fn.indexOf("Mobile Safari")||-1!==fn.indexOf("Chrome")||-1!==fn.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function bn(n,e){cn();var t=window.history;try{if(e){var r=o({},t.state);r.key=rn(),t.replaceState(r,"",n)}else t.pushState({key:on(en())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function wn(n){bn(n,!0)}var yn={redirected:2,aborted:4,cancelled:8,duplicated:16};function kn(n,e){return _n(n,e,yn.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return Sn.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function xn(n,e){return _n(n,e,yn.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function _n(n,e,t,r){var o=new Error(r);return o._isRouter=!0,o.from=n,o.to=e,o.type=t,o}var Sn=["params","query","hash"];function jn(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function Tn(n,e){return jn(n)&&n._isRouter&&(null==e||n.type===e)}function Cn(n,e,t){var r=function(o){o>=n.length?t():n[o]?e(n[o],(function(){r(o+1)})):r(o+1)};r(0)}function En(n){return function(e,t,r){var o=!1,i=0,a=null;An(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){o=!0,i++;var l,c=Pn((function(e){var o;((o=e).__esModule||In&&"Module"===o[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:H.extend(e),t.components[s]=e,--i<=0&&r()})),d=Pn((function(n){var e="Failed to resolve async component "+s+": "+n;a||(a=jn(n)?n:new Error(e),r(a))}));try{l=n(c,d)}catch(n){d(n)}if(l)if("function"==typeof l.then)l.then(c,d);else{var u=l.component;u&&"function"==typeof u.then&&u.then(c,d)}}})),o||r()}}function An(n,e){return zn(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function zn(n){return Array.prototype.concat.apply([],n)}var In="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Pn(n){var e=!1;return function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];if(!e)return e=!0,n.apply(this,t)}}var $n=function(n,e){this.router=n,this.base=function(n){if(!n)if(Z){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=f,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Bn(n,e,t,r){var o=An(n,(function(n,r,o,i){var a=function(n,e){"function"!=typeof n&&(n=H.extend(n));return n.options[e]}(n,e);if(a)return Array.isArray(a)?a.map((function(n){return t(n,r,o,i)})):t(a,r,o,i)}));return zn(r?o.reverse():o)}function On(n,e){if(e)return function(){return n.apply(e,arguments)}}$n.prototype.listen=function(n){this.cb=n},$n.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},$n.prototype.onError=function(n){this.errorCbs.push(n)},$n.prototype.transitionTo=function(n,e,t){var r,o=this;try{r=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var i=this.current;this.confirmTransition(r,(function(){o.updateRoute(r),e&&e(r),o.ensureURL(),o.router.afterHooks.forEach((function(n){n&&n(r,i)})),o.ready||(o.ready=!0,o.readyCbs.forEach((function(n){n(r)})))}),(function(n){t&&t(n),n&&!o.ready&&(Tn(n,yn.redirected)&&i===f||(o.ready=!0,o.readyErrorCbs.forEach((function(e){e(n)}))))}))},$n.prototype.confirmTransition=function(n,e,t){var r=this,o=this.current;this.pending=n;var i,a,s=function(n){!Tn(n)&&jn(n)&&(r.errorCbs.length?r.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},l=n.matched.length-1,c=o.matched.length-1;if(w(n,o)&&l===c&&n.matched[l]===o.matched[c])return this.ensureURL(),n.hash&&ln(this.router,o,n,!1),s(((a=_n(i=o,n,yn.duplicated,'Avoided redundant navigation to current location: "'+i.fullPath+'".')).name="NavigationDuplicated",a));var d=function(n,e){var t,r=Math.max(n.length,e.length);for(t=0;t<r&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),u=d.updated,p=d.deactivated,m=d.activated,h=[].concat(function(n){return Bn(n,"beforeRouteLeave",On,!0)}(p),this.router.beforeHooks,function(n){return Bn(n,"beforeRouteUpdate",On)}(u),m.map((function(n){return n.beforeEnter})),En(m)),g=function(e,t){if(r.pending!==n)return s(xn(o,n));try{e(n,o,(function(e){!1===e?(r.ensureURL(!0),s(function(n,e){return _n(n,e,yn.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(o,n))):jn(e)?(r.ensureURL(!0),s(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(s(kn(o,n)),"object"==typeof e&&e.replace?r.replace(e):r.push(e)):t(e)}))}catch(n){s(n)}};Cn(h,g,(function(){Cn(function(n){return Bn(n,"beforeRouteEnter",(function(n,e,t,r){return function(n,e,t){return function(r,o,i){return n(r,o,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),i(n)}))}}(n,t,r)}))}(m).concat(r.router.resolveHooks),g,(function(){if(r.pending!==n)return s(xn(o,n));r.pending=null,e(n),r.router.app&&r.router.app.$nextTick((function(){k(n)}))}))}))},$n.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},$n.prototype.setupListeners=function(){},$n.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=f,this.pending=null};var Dn=function(n){function e(e,t){n.call(this,e,t),this._startLocation=qn(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,r=vn&&t;r&&this.listeners.push(sn());var o=function(){var t=n.current,o=qn(n.base);n.current===f&&o===n._startLocation||n.transitionTo(o,(function(n){r&&ln(e,n,t,!0)}))};window.addEventListener("popstate",o),this.listeners.push((function(){window.removeEventListener("popstate",o)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){bn(j(r.base+n.fullPath)),ln(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){wn(j(r.base+n.fullPath)),ln(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(qn(this.base)!==this.current.fullPath){var e=j(this.base+this.current.fullPath);n?bn(e):wn(e)}},e.prototype.getCurrentLocation=function(){return qn(this.base)},e}($n);function qn(n){var e=window.location.pathname,t=e.toLowerCase(),r=n.toLowerCase();return!n||t!==r&&0!==t.indexOf(j(r+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var Ln=function(n){function e(e,t,r){n.call(this,e,t),r&&function(n){var e=qn(n);if(!/^\/#/.test(e))return window.location.replace(j(n+"/#"+e)),!0}(this.base)||Vn()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=vn&&e;t&&this.listeners.push(sn());var r=function(){var e=n.current;Vn()&&n.transitionTo(Fn(),(function(r){t&&ln(n.router,r,e,!0),vn||Rn(r.fullPath)}))},o=vn?"popstate":"hashchange";window.addEventListener(o,r),this.listeners.push((function(){window.removeEventListener(o,r)}))}},e.prototype.push=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){Gn(n.fullPath),ln(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){Rn(n.fullPath),ln(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;Fn()!==e&&(n?Gn(e):Rn(e))},e.prototype.getCurrentLocation=function(){return Fn()},e}($n);function Vn(){var n=Fn();return"/"===n.charAt(0)||(Rn("/"+n),!1)}function Fn(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function Mn(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function Gn(n){vn?bn(Mn(n)):window.location.hash=n}function Rn(n){vn?wn(Mn(n)):window.location.replace(Mn(n))}var Nn=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index+1).concat(n),r.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var r=this.stack[t];this.confirmTransition(r,(function(){var n=e.current;e.index=t,e.updateRoute(r),e.router.afterHooks.forEach((function(e){e&&e(r,n)}))}),(function(n){Tn(n,yn.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}($n),Hn=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=X(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!vn&&!1!==n.fallback,this.fallback&&(e="hash"),Z||(e="abstract"),this.mode=e,e){case"history":this.history=new Dn(this,n.base);break;case"hash":this.history=new Ln(this,n.base,this.fallback);break;case"abstract":this.history=new Nn(this,n.base);break;default:0}},Un={currentRoute:{configurable:!0}};Hn.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},Un.currentRoute.get=function(){return this.history&&this.history.current},Hn.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof Dn||t instanceof Ln){var r=function(n){t.setupListeners(),function(n){var r=t.current,o=e.options.scrollBehavior;vn&&o&&"fullPath"in n&&ln(e,n,r,!1)}(n)};t.transitionTo(t.getCurrentLocation(),r,r)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},Hn.prototype.beforeEach=function(n){return Jn(this.beforeHooks,n)},Hn.prototype.beforeResolve=function(n){return Jn(this.resolveHooks,n)},Hn.prototype.afterEach=function(n){return Jn(this.afterHooks,n)},Hn.prototype.onReady=function(n,e){this.history.onReady(n,e)},Hn.prototype.onError=function(n){this.history.onError(n)},Hn.prototype.push=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.push(n,e,t)}));this.history.push(n,e,t)},Hn.prototype.replace=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.replace(n,e,t)}));this.history.replace(n,e,t)},Hn.prototype.go=function(n){this.history.go(n)},Hn.prototype.back=function(){this.go(-1)},Hn.prototype.forward=function(){this.go(1)},Hn.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},Hn.prototype.resolve=function(n,e,t){var r=N(n,e=e||this.history.current,t,this),o=this.match(r,e),i=o.redirectedFrom||o.fullPath;return{location:r,route:o,href:function(n,e,t){var r="hash"===t?"#"+e:e;return n?j(n+"/"+r):r}(this.history.base,i,this.mode),normalizedTo:r,resolved:o}},Hn.prototype.getRoutes=function(){return this.matcher.getRoutes()},Hn.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==f&&this.history.transitionTo(this.history.getCurrentLocation())},Hn.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==f&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Hn.prototype,Un);var Wn=Hn;function Jn(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}Hn.install=function n(e){if(!n.installed||H!==e){n.installed=!0,H=e;var t=function(n){return void 0!==n},r=function(n,e){var r=n.$options._parentVnode;t(r)&&t(r=r.data)&&t(r=r.registerRouteInstance)&&r(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",x),e.component("RouterLink",W);var o=e.config.optionMergeStrategies;o.beforeRouteEnter=o.beforeRouteLeave=o.beforeRouteUpdate=o.created}},Hn.version="3.6.5",Hn.isNavigationFailure=Tn,Hn.NavigationFailureType=yn,Hn.START_LOCATION=f,Z&&window.Vue&&window.Vue.use(Hn);t(156),t(18),t(165);t(95),t(30);var Zn={"components/AlgoliaSearchBox":()=>Promise.all([t.e(0),t.e(17)]).then(t.bind(null,421)),"components/ArchivesPage":()=>Promise.all([t.e(0),t.e(22)]).then(t.bind(null,390)),"components/ArticleInfo":()=>Promise.all([t.e(0),t.e(16)]).then(t.bind(null,355)),"components/BloggerBar":()=>Promise.all([t.e(0),t.e(30)]).then(t.bind(null,391)),"components/BodyBgImg":()=>Promise.all([t.e(0),t.e(31)]).then(t.bind(null,392)),"components/Bubbles":()=>t.e(44).then(t.bind(null,393)),"components/Buttons":()=>Promise.all([t.e(0),t.e(23)]).then(t.bind(null,394)),"components/Catalogue":()=>Promise.all([t.e(0),t.e(32)]).then(t.bind(null,356)),"components/CategoriesBar":()=>Promise.all([t.e(0),t.e(33)]).then(t.bind(null,350)),"components/CategoriesPage":()=>Promise.all([t.e(0),t.e(13)]).then(t.bind(null,395)),"components/DropdownLink":()=>Promise.all([t.e(0),t.e(18)]).then(t.bind(null,314)),"components/DropdownTransition":()=>Promise.all([t.e(0),t.e(34)]).then(t.bind(null,289)),"components/Footer":()=>Promise.all([t.e(0),t.e(35)]).then(t.bind(null,396)),"components/Home":()=>Promise.all([t.e(0),t.e(3),t.e(1)]).then(t.bind(null,418)),"components/MainLayout":()=>Promise.all([t.e(0),t.e(36)]).then(t.bind(null,315)),"components/NavLink":()=>t.e(45).then(t.bind(null,287)),"components/NavLinks":()=>Promise.all([t.e(0),t.e(15)]).then(t.bind(null,322)),"components/Navbar":()=>Promise.all([t.e(0),t.e(2),t.e(12)]).then(t.bind(null,389)),"components/Page":()=>Promise.all([t.e(0),t.e(10)]).then(t.bind(null,397)),"components/PageEdit":()=>Promise.all([t.e(0),t.e(24)]).then(t.bind(null,357)),"components/PageNav":()=>Promise.all([t.e(0),t.e(21)]).then(t.bind(null,358)),"components/PagesView":()=>Promise.all([t.e(0),t.e(19)]).then(t.bind(null,325)),"components/Pagination":()=>Promise.all([t.e(0),t.e(37)]).then(t.bind(null,313)),"components/PostList":()=>Promise.all([t.e(0),t.e(38)]).then(t.bind(null,312)),"components/RightMenu":()=>Promise.all([t.e(0),t.e(39)]).then(t.bind(null,359)),"components/Sidebar":()=>Promise.all([t.e(0),t.e(11)]).then(t.bind(null,398)),"components/SidebarButton":()=>Promise.all([t.e(0),t.e(40)]).then(t.bind(null,360)),"components/SidebarGroup":()=>Promise.all([t.e(0),t.e(5)]).then(t.bind(null,353)),"components/SidebarLink":()=>Promise.all([t.e(0),t.e(25)]).then(t.bind(null,326)),"components/SidebarLinks":()=>Promise.all([t.e(0),t.e(5)]).then(t.bind(null,323)),"components/TagsBar":()=>Promise.all([t.e(0),t.e(41)]).then(t.bind(null,352)),"components/TagsPage":()=>Promise.all([t.e(0),t.e(14)]).then(t.bind(null,399)),"components/UpdateArticle":()=>Promise.all([t.e(0),t.e(42)]).then(t.bind(null,351)),"components/WebInfo":()=>Promise.all([t.e(0),t.e(20)]).then(t.bind(null,388)),"global-components/Badge":()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,432)),"global-components/CodeBlock":()=>Promise.resolve().then(t.bind(null,126)),"global-components/CodeGroup":()=>Promise.resolve().then(t.bind(null,127)),"layouts/404":()=>Promise.all([t.e(0),t.e(7)]).then(t.bind(null,422)),"layouts/Layout":()=>Promise.all([t.e(0),t.e(2),t.e(3),t.e(1),t.e(4)]).then(t.bind(null,423)),NotFound:()=>Promise.all([t.e(0),t.e(7)]).then(t.bind(null,422)),Layout:()=>Promise.all([t.e(0),t.e(2),t.e(3),t.e(1),t.e(4)]).then(t.bind(null,423))},Qn={"v-204a4efc":()=>t.e(46).then(t.bind(null,433)),"v-4b554a7a":()=>t.e(47).then(t.bind(null,434)),"v-3905653a":()=>t.e(48).then(t.bind(null,435)),"v-312e8bc4":()=>t.e(49).then(t.bind(null,436)),"v-764532ee":()=>t.e(50).then(t.bind(null,437)),"v-6b7d2cc9":()=>t.e(51).then(t.bind(null,424)),"v-b0adcb88":()=>t.e(52).then(t.bind(null,425)),"v-bc4c4ece":()=>t.e(53).then(t.bind(null,426)),"v-c9b073d6":()=>t.e(54).then(t.bind(null,438)),"v-46c389cd":()=>t.e(55).then(t.bind(null,439)),"v-8021b6a0":()=>t.e(56).then(t.bind(null,440)),"v-f162a536":()=>t.e(57).then(t.bind(null,441)),"v-05feeb6b":()=>t.e(58).then(t.bind(null,442)),"v-240615fb":()=>t.e(59).then(t.bind(null,443)),"v-329c4901":()=>t.e(61).then(t.bind(null,444)),"v-5b94954a":()=>t.e(62).then(t.bind(null,445)),"v-0ba8f21b":()=>t.e(63).then(t.bind(null,446)),"v-aca4b80a":()=>t.e(64).then(t.bind(null,447)),"v-8a0a5766":()=>t.e(60).then(t.bind(null,448)),"v-6662b64c":()=>t.e(66).then(t.bind(null,449)),"v-2eb304a4":()=>t.e(67).then(t.bind(null,450)),"v-9bc5b2d2":()=>t.e(68).then(t.bind(null,451)),"v-9d96f146":()=>t.e(65).then(t.bind(null,452)),"v-5e733e73":()=>t.e(69).then(t.bind(null,453)),"v-6c5a0b5f":()=>t.e(70).then(t.bind(null,454)),"v-70f93156":()=>t.e(72).then(t.bind(null,455)),"v-7f4c930a":()=>t.e(73).then(t.bind(null,456)),"v-e6528c56":()=>t.e(74).then(t.bind(null,457)),"v-6e41c1cc":()=>t.e(71).then(t.bind(null,458)),"v-24ab3da6":()=>t.e(75).then(t.bind(null,459)),"v-f78f7d22":()=>t.e(76).then(t.bind(null,460)),"v-d2b3b206":()=>t.e(77).then(t.bind(null,461)),"v-13a9aae9":()=>t.e(78).then(t.bind(null,462)),"v-e01b4200":()=>t.e(79).then(t.bind(null,463)),"v-073c676c":()=>t.e(80).then(t.bind(null,464)),"v-6f9e2efd":()=>t.e(81).then(t.bind(null,465)),"v-948bf2dc":()=>t.e(82).then(t.bind(null,466)),"v-38c440dc":()=>t.e(84).then(t.bind(null,467)),"v-5cfdc0cd":()=>t.e(83).then(t.bind(null,468)),"v-65e01590":()=>t.e(85).then(t.bind(null,469)),"v-d73d2c4a":()=>t.e(86).then(t.bind(null,470)),"v-7b95e10a":()=>t.e(87).then(t.bind(null,471)),"v-0af603b9":()=>t.e(88).then(t.bind(null,472)),"v-f39ea65a":()=>t.e(89).then(t.bind(null,473)),"v-3b391dc4":()=>t.e(90).then(t.bind(null,474)),"v-302408e4":()=>t.e(91).then(t.bind(null,475)),"v-08693ea0":()=>t.e(92).then(t.bind(null,476)),"v-0a9a5969":()=>t.e(93).then(t.bind(null,477)),"v-1ea2bb96":()=>t.e(94).then(t.bind(null,478)),"v-33d1e0b9":()=>t.e(95).then(t.bind(null,479)),"v-7739008f":()=>t.e(96).then(t.bind(null,480)),"v-1a56a289":()=>t.e(98).then(t.bind(null,481)),"v-2951adf4":()=>t.e(99).then(t.bind(null,482)),"v-05af6767":()=>t.e(100).then(t.bind(null,483)),"v-08a512d1":()=>t.e(101).then(t.bind(null,484)),"v-189cf840":()=>t.e(102).then(t.bind(null,485)),"v-15f63c55":()=>t.e(103).then(t.bind(null,486)),"v-2e954df7":()=>t.e(104).then(t.bind(null,487)),"v-263c2b80":()=>t.e(105).then(t.bind(null,488)),"v-19bcd3ab":()=>t.e(106).then(t.bind(null,489)),"v-6e89be9f":()=>t.e(107).then(t.bind(null,490)),"v-50155f45":()=>t.e(97).then(t.bind(null,491)),"v-78a9b73a":()=>t.e(108).then(t.bind(null,492)),"v-e1d3dcf6":()=>t.e(109).then(t.bind(null,493)),"v-383c8ffe":()=>t.e(110).then(t.bind(null,494)),"v-4c048038":()=>t.e(111).then(t.bind(null,495)),"v-66bef6ac":()=>t.e(113).then(t.bind(null,496)),"v-307e096c":()=>t.e(112).then(t.bind(null,497)),"v-46fdb1f6":()=>t.e(115).then(t.bind(null,498)),"v-005f32f6":()=>t.e(116).then(t.bind(null,499)),"v-a7db34b8":()=>t.e(117).then(t.bind(null,500)),"v-186c337d":()=>t.e(118).then(t.bind(null,501)),"v-29c86f27":()=>t.e(119).then(t.bind(null,502)),"v-8fe1d638":()=>t.e(121).then(t.bind(null,503)),"v-65c8431a":()=>t.e(122).then(t.bind(null,504)),"v-a2ef8514":()=>t.e(114).then(t.bind(null,505)),"v-64aacaa9":()=>t.e(123).then(t.bind(null,506)),"v-d4fad862":()=>t.e(124).then(t.bind(null,427)),"v-187bc2f1":()=>t.e(125).then(t.bind(null,507)),"v-388052e8":()=>Promise.all([t.e(0),t.e(43)]).then(t.bind(null,508)),"v-53104ef6":()=>t.e(126).then(t.bind(null,509)),"v-1a9d53e5":()=>t.e(127).then(t.bind(null,510)),"v-9b21b728":()=>t.e(120).then(t.bind(null,511)),"v-150b83f6":()=>t.e(128).then(t.bind(null,512)),"v-a113e2c4":()=>t.e(129).then(t.bind(null,513))};function Kn(n){const e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}const Xn=/-(\w)/g,Yn=Kn(n=>n.replace(Xn,(n,e)=>e?e.toUpperCase():"")),ne=/\B([A-Z])/g,ee=Kn(n=>n.replace(ne,"-$1").toLowerCase()),te=Kn(n=>n.charAt(0).toUpperCase()+n.slice(1));function re(n,e){if(!e)return;if(n(e))return n(e);return e.includes("-")?n(te(Yn(e))):n(te(e))||n(ee(e))}const oe=Object.assign({},Zn,Qn),ie=n=>oe[n],ae=n=>Qn[n],se=n=>Zn[n],le=n=>r.b.component(n);function ce(n){return re(ae,n)}function de(n){return re(se,n)}function ue(n){return re(ie,n)}function pe(n){return re(le,n)}function me(...n){return Promise.all(n.filter(n=>n).map(async n=>{if(!pe(n)&&ue(n)){const e=await ue(n)();r.b.component(n,e.default)}}))}function he(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var ge=t(123),fe=t.n(ge),ve=t(124),be=t.n(ve),we={created(){if(this.siteMeta=this.$site.headTags.filter(([n])=>"meta"===n).map(([n,e])=>e),this.$ssrContext){const e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(n=e)?n.map(n=>{let e="<meta";return Object.keys(n).forEach(t=>{e+=` ${t}="${be()(n[t])}"`}),e+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=ke(this.$canonicalUrl)}var n},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const n=this.getMergedMetaTags();this.currentMetaTags=xe(n,this.currentMetaTags)},getMergedMetaTags(){const n=this.$page.frontmatter.meta||[];return fe()([{name:"description",content:this.$description}],n,this.siteMeta,_e)},updateCanonicalLink(){ye(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",ke(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){xe(null,this.currentMetaTags),ye()}};function ye(){const n=document.querySelector("link[rel='canonical']");n&&n.remove()}function ke(n=""){return n?`<link href="${n}" rel="canonical" />`:""}function xe(n,e){if(e&&[...e].filter(n=>n.parentNode===document.head).forEach(n=>document.head.removeChild(n)),n)return n.map(n=>{const e=document.createElement("meta");return Object.keys(n).forEach(t=>{e.setAttribute(t,n[t])}),document.head.appendChild(e),e})}function _e(n){for(const e of["name","property","itemprop"])if(n.hasOwnProperty(e))return n[e]+e;return JSON.stringify(n)}t(66);var Se=t(67),je={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(Se)()((function(){this.setActiveHash()}),300),setActiveHash(){const n=[].slice.call(document.querySelectorAll(".sidebar-link")),e=[].slice.call(document.querySelectorAll(".header-anchor")).filter(e=>n.some(n=>n.hash===e.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),r=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),o=window.innerHeight+t;for(let n=0;n<e.length;n++){const i=e[n],a=e[n+1],s=0===n&&0===t||t>=i.parentElement.offsetTop+10&&(!a||t<a.parentElement.offsetTop-10),l=decodeURIComponent(this.$route.hash);if(s&&l!==decodeURIComponent(i.hash)){const t=i;if(o===r)for(let t=n+1;t<e.length;t++)if(l===decodeURIComponent(e[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},Te=t(44),Ce=t.n(Te),Ee={mounted(){Ce.a.configure({showSpinner:!1}),this.$router.beforeEach((n,e,t)=>{n.path===e.path||r.b.component(n.name)||Ce.a.start(),t()}),this.$router.afterEach(()=>{Ce.a.done(),this.isSidebarOpen=!1})}};t(275),t(276);class Ae{constructor(){this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}show({text:n="",duration:e=3e3}){let t=document.createElement("div");t.className="message move-in",t.innerHTML=`\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">${n}</div>\n    `,this.containerEl.appendChild(t),e>0&&setTimeout(()=>{this.close(t)},e)}close(n){n.className=n.className.replace("move-in",""),n.className+="move-out",n.addEventListener("animationend",()=>{n.remove()})}}var ze={mounted(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy(){setTimeout(()=>{(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach(n=>{document.querySelectorAll(n).forEach(this.generateCopyButton)})},1e3)},generateCopyButton(n){if(n.classList.contains("codecopy-enabled"))return;const e=document.createElement("i");e.className="code-copy",e.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',e.title="Copy to clipboard",e.addEventListener("click",()=>{this.copyToClipboard(n.innerText)}),n.appendChild(e),n.classList.add("codecopy-enabled")},copyToClipboard(n){const e=document.createElement("textarea");e.value=n,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e);const t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);e.select(),document.execCommand("copy");(new Ae).show({text:"复制成功",duration:1e3}),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}},Ie="auto",Pe="zoom-in",$e="zoom-out",Be="grab",Oe="move";function De(n,e,t){var r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],o={passive:!1};r?n.addEventListener(e,t,o):n.removeEventListener(e,t,o)}function qe(n,e){if(n){var t=new Image;t.onload=function(){e&&e(t)},t.src=n}}function Le(n){return n.dataset.original?n.dataset.original:"A"===n.parentNode.tagName?n.parentNode.getAttribute("href"):null}function Ve(n,e,t){!function(n){var e=Fe,t=Me;if(n.transition){var r=n.transition;delete n.transition,n[e]=r}if(n.transform){var o=n.transform;delete n.transform,n[t]=o}}(e);var r=n.style,o={};for(var i in e)t&&(o[i]=r[i]||""),r[i]=e[i];return o}var Fe="transition",Me="transform",Ge="transform",Re="transitionend";var Ne=function(){},He={enableGrab:!0,preloadImage:!1,closeOnWindowResize:!0,transitionDuration:.4,transitionTimingFunction:"cubic-bezier(0.4, 0, 0, 1)",bgColor:"rgb(255, 255, 255)",bgOpacity:1,scaleBase:1,scaleExtra:.5,scrollThreshold:40,zIndex:998,customSize:null,onOpen:Ne,onClose:Ne,onGrab:Ne,onMove:Ne,onRelease:Ne,onBeforeOpen:Ne,onBeforeClose:Ne,onBeforeGrab:Ne,onBeforeRelease:Ne,onImageLoading:Ne,onImageLoaded:Ne},Ue={init:function(n){var e,t;e=this,t=n,Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((function(n){e[n]=e[n].bind(t)}))},click:function(n){if(n.preventDefault(),Je(n))return window.open(this.target.srcOriginal||n.currentTarget.src,"_blank");this.shown?this.released?this.close():this.release():this.open(n.currentTarget)},scroll:function(){var n=document.documentElement||document.body.parentNode||document.body,e=window.pageXOffset||n.scrollLeft,t=window.pageYOffset||n.scrollTop;null===this.lastScrollPosition&&(this.lastScrollPosition={x:e,y:t});var r=this.lastScrollPosition.x-e,o=this.lastScrollPosition.y-t,i=this.options.scrollThreshold;(Math.abs(o)>=i||Math.abs(r)>=i)&&(this.lastScrollPosition=null,this.close())},keydown:function(n){(function(n){return"Escape"===(n.key||n.code)||27===n.keyCode})(n)&&(this.released?this.close():this.release(this.close))},mousedown:function(n){if(We(n)&&!Je(n)){n.preventDefault();var e=n.clientX,t=n.clientY;this.pressTimer=setTimeout(function(){this.grab(e,t)}.bind(this),200)}},mousemove:function(n){this.released||this.move(n.clientX,n.clientY)},mouseup:function(n){We(n)&&!Je(n)&&(clearTimeout(this.pressTimer),this.released?this.close():this.release())},touchstart:function(n){n.preventDefault();var e=n.touches[0],t=e.clientX,r=e.clientY;this.pressTimer=setTimeout(function(){this.grab(t,r)}.bind(this),200)},touchmove:function(n){if(!this.released){var e=n.touches[0],t=e.clientX,r=e.clientY;this.move(t,r)}},touchend:function(n){(function(n){n.targetTouches.length})(n)||(clearTimeout(this.pressTimer),this.released?this.close():this.release())},clickOverlay:function(){this.close()},resizeWindow:function(){this.close()}};function We(n){return 0===n.button}function Je(n){return n.metaKey||n.ctrlKey}var Ze={init:function(n){this.el=document.createElement("div"),this.instance=n,this.parent=document.body,Ve(this.el,{position:"fixed",top:0,left:0,right:0,bottom:0,opacity:0}),this.updateStyle(n.options),De(this.el,"click",n.handler.clickOverlay.bind(n))},updateStyle:function(n){Ve(this.el,{zIndex:n.zIndex,backgroundColor:n.bgColor,transition:"opacity\n        "+n.transitionDuration+"s\n        "+n.transitionTimingFunction})},insert:function(){this.parent.appendChild(this.el)},remove:function(){this.parent.removeChild(this.el)},fadeIn:function(){this.el.offsetWidth,this.el.style.opacity=this.instance.options.bgOpacity},fadeOut:function(){this.el.style.opacity=0}},Qe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Ke=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),Xe=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},Ye={init:function(n,e){this.el=n,this.instance=e,this.srcThumbnail=this.el.getAttribute("src"),this.srcset=this.el.getAttribute("srcset"),this.srcOriginal=Le(this.el),this.rect=this.el.getBoundingClientRect(),this.translate=null,this.scale=null,this.styleOpen=null,this.styleClose=null},zoomIn:function(){var n=this.instance.options,e=n.zIndex,t=n.enableGrab,r=n.transitionDuration,o=n.transitionTimingFunction;this.translate=this.calculateTranslate(),this.scale=this.calculateScale(),this.styleOpen={position:"relative",zIndex:e+1,cursor:t?Be:$e,transition:Ge+"\n        "+r+"s\n        "+o,transform:"translate3d("+this.translate.x+"px, "+this.translate.y+"px, 0px)\n        scale("+this.scale.x+","+this.scale.y+")",height:this.rect.height+"px",width:this.rect.width+"px"},this.el.offsetWidth,this.styleClose=Ve(this.el,this.styleOpen,!0)},zoomOut:function(){this.el.offsetWidth,Ve(this.el,{transform:"none"})},grab:function(n,e,t){var r=nt(),o=r.x-n,i=r.y-e;Ve(this.el,{cursor:Oe,transform:"translate3d(\n        "+(this.translate.x+o)+"px, "+(this.translate.y+i)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},move:function(n,e,t){var r=nt(),o=r.x-n,i=r.y-e;Ve(this.el,{transition:Ge,transform:"translate3d(\n        "+(this.translate.x+o)+"px, "+(this.translate.y+i)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},restoreCloseStyle:function(){Ve(this.el,this.styleClose)},restoreOpenStyle:function(){Ve(this.el,this.styleOpen)},upgradeSource:function(){if(this.srcOriginal){var n=this.el.parentNode;this.srcset&&this.el.removeAttribute("srcset");var e=this.el.cloneNode(!1);e.setAttribute("src",this.srcOriginal),e.style.position="fixed",e.style.visibility="hidden",n.appendChild(e),setTimeout(function(){this.el.setAttribute("src",this.srcOriginal),n.removeChild(e)}.bind(this),50)}},downgradeSource:function(){this.srcOriginal&&(this.srcset&&this.el.setAttribute("srcset",this.srcset),this.el.setAttribute("src",this.srcThumbnail))},calculateTranslate:function(){var n=nt(),e=this.rect.left+this.rect.width/2,t=this.rect.top+this.rect.height/2;return{x:n.x-e,y:n.y-t}},calculateScale:function(){var n=this.el.dataset,e=n.zoomingHeight,t=n.zoomingWidth,r=this.instance.options,o=r.customSize,i=r.scaleBase;if(!o&&e&&t)return{x:t/this.rect.width,y:e/this.rect.height};if(o&&"object"===(void 0===o?"undefined":Qe(o)))return{x:o.width/this.rect.width,y:o.height/this.rect.height};var a=this.rect.width/2,s=this.rect.height/2,l=nt(),c={x:l.x-a,y:l.y-s},d=c.x/a,u=c.y/s,p=i+Math.min(d,u);if(o&&"string"==typeof o){var m=t||this.el.naturalWidth,h=e||this.el.naturalHeight,g=parseFloat(o)*m/(100*this.rect.width),f=parseFloat(o)*h/(100*this.rect.height);if(p>g||p>f)return{x:g,y:f}}return{x:p,y:p}}};function nt(){var n=document.documentElement;return{x:Math.min(n.clientWidth,window.innerWidth)/2,y:Math.min(n.clientHeight,window.innerHeight)/2}}function et(n,e,t){["mousedown","mousemove","mouseup","touchstart","touchmove","touchend"].forEach((function(r){De(n,r,e[r],t)}))}var tt=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.target=Object.create(Ye),this.overlay=Object.create(Ze),this.handler=Object.create(Ue),this.body=document.body,this.shown=!1,this.lock=!1,this.released=!0,this.lastScrollPosition=null,this.pressTimer=null,this.options=Xe({},He,e),this.overlay.init(this),this.handler.init(this)}return Ke(n,[{key:"listen",value:function(n){if("string"==typeof n)for(var e=document.querySelectorAll(n),t=e.length;t--;)this.listen(e[t]);else"IMG"===n.tagName&&(n.style.cursor=Pe,De(n,"click",this.handler.click),this.options.preloadImage&&qe(Le(n)));return this}},{key:"config",value:function(n){return n?(Xe(this.options,n),this.overlay.updateStyle(this.options),this):this.options}},{key:"open",value:function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.onOpen;if(!this.shown&&!this.lock){var r="string"==typeof n?document.querySelector(n):n;if("IMG"===r.tagName){if(this.options.onBeforeOpen(r),this.target.init(r,this),!this.options.preloadImage){var o=this.target.srcOriginal;null!=o&&(this.options.onImageLoading(r),qe(o,this.options.onImageLoaded))}this.shown=!0,this.lock=!0,this.target.zoomIn(),this.overlay.insert(),this.overlay.fadeIn(),De(document,"scroll",this.handler.scroll),De(document,"keydown",this.handler.keydown),this.options.closeOnWindowResize&&De(window,"resize",this.handler.resizeWindow);var i=function n(){De(r,Re,n,!1),e.lock=!1,e.target.upgradeSource(),e.options.enableGrab&&et(document,e.handler,!0),t(r)};return De(r,Re,i),this}}}},{key:"close",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onClose;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeClose(t),this.lock=!0,this.body.style.cursor=Ie,this.overlay.fadeOut(),this.target.zoomOut(),De(document,"scroll",this.handler.scroll,!1),De(document,"keydown",this.handler.keydown,!1),this.options.closeOnWindowResize&&De(window,"resize",this.handler.resizeWindow,!1);var r=function r(){De(t,Re,r,!1),n.shown=!1,n.lock=!1,n.target.downgradeSource(),n.options.enableGrab&&et(document,n.handler,!1),n.target.restoreCloseStyle(),n.overlay.remove(),e(t)};return De(t,Re,r),this}}},{key:"grab",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onGrab;if(this.shown&&!this.lock){var o=this.target.el;this.options.onBeforeGrab(o),this.released=!1,this.target.grab(n,e,t);var i=function n(){De(o,Re,n,!1),r(o)};return De(o,Re,i),this}}},{key:"move",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onMove;if(this.shown&&!this.lock){this.released=!1,this.body.style.cursor=Oe,this.target.move(n,e,t);var o=this.target.el,i=function n(){De(o,Re,n,!1),r(o)};return De(o,Re,i),this}}},{key:"release",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onRelease;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeRelease(t),this.lock=!0,this.body.style.cursor=Ie,this.target.restoreOpenStyle();var r=function r(){De(t,Re,r,!1),n.lock=!1,n.released=!0,e(t)};return De(t,Re,r),this}}}]),n}();const rt=JSON.parse('{"bgColor":"rgba(0,0,0,0.8)"}'),ot=Number("500");class it{constructor(){this.instance=new tt(rt)}update(n=".theme-vdoing-content img:not(.no-zoom)"){"undefined"!=typeof window&&this.instance.listen(n)}updateDelay(n=".theme-vdoing-content img:not(.no-zoom)",e=ot){setTimeout(()=>this.update(n),e)}}var at={watch:{"$page.path"(){void 0!==this.$vuepress.zooming&&this.$vuepress.zooming.updateDelay()}},mounted(){this.$vuepress.zooming=new it,this.$vuepress.zooming.updateDelay()}};!function(n,e){void 0===e&&(e={});var t=e.insertAt;if(n&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],o=document.createElement("style");o.type="text/css","top"===t&&r.firstChild?r.insertBefore(o,r.firstChild):r.appendChild(o),o.styleSheet?o.styleSheet.cssText=n:o.appendChild(document.createTextNode(n))}}("@media (max-width: 1000px) {\n  .vuepress-plugin-demo-block__h_code {\n    display: none;\n  }\n  .vuepress-plugin-demo-block__app {\n    margin-left: auto !important;\n    margin-right: auto !important;\n  }\n}\n.vuepress-plugin-demo-block__wrapper {\n  margin-top: 10px;\n  border: 1px solid #ebebeb;\n  border-radius: 4px;\n  transition: all 0.2s;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display {\n  height: 400px;\n  display: flex;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__app {\n  width: 300px;\n  border: 1px solid #ebebeb;\n  box-shadow: 1px 1px 3px #ebebeb;\n  margin-right: 5px;\n  overflow: auto;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__h_code {\n  flex: 1;\n  overflow: auto;\n  height: 100%;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__h_code > pre {\n  overflow: visible;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__display {\n  max-height: 400px;\n  overflow: auto;\n}\n.vuepress-plugin-demo-block__wrapper div {\n  box-sizing: border-box;\n}\n.vuepress-plugin-demo-block__wrapper:hover {\n  box-shadow: 0 0 11px rgba(33, 33, 33, 0.2);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__code {\n  overflow: hidden;\n  height: 0;\n  padding: 0 !important;\n  background-color: #282c34;\n  border-radius: 0 !important;\n  transition: height 0.5s;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__code pre {\n  margin: 0 !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__display {\n  padding: 20px;\n  border-bottom: 1px solid #ebebeb;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer {\n  position: relative;\n  text-align: center;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__codepen {\n  opacity: 1;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__expand::before {\n  border-top: none;\n  border-right: 6px solid transparent;\n  border-bottom: 6px solid #ccc;\n  border-left: 6px solid transparent;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__codepen,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand span,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand {\n  opacity: 1;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand::before {\n  border-top-color: #3eaf7c !important;\n  border-bottom-color: #3eaf7c !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover svg {\n  fill: #3eaf7c !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand-text {\n  transition: all 0.5s;\n  opacity: 0;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer form:nth-last-child(2) {\n  right: 50px;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer form:last-child {\n  right: 10px;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button {\n  border-color: transparent;\n  background-color: transparent;\n  font-size: 14px;\n  color: #3eaf7c;\n  cursor: pointer;\n  outline: none;\n  margin: 0;\n  width: 46px;\n  position: relative;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button:hover::before {\n  content: attr(data-tip);\n  white-space: nowrap;\n  position: absolute;\n  top: -30px;\n  left: 50%;\n  color: #eee;\n  line-height: 1;\n  z-index: 1000;\n  border-radius: 4px;\n  padding: 6px;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n  background-color: rgba(0, 0, 0, 0.8);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button:hover::after {\n  content: '' !important;\n  display: block;\n  position: absolute;\n  left: 50%;\n  top: -5px;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n  border: 5px solid transparent;\n  border-top-color: rgba(0, 0, 0, 0.8);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button svg {\n  width: 34px;\n  height: 20px;\n  fill: #ccc;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__codepen {\n  position: absolute;\n  top: 10px;\n  transition: all 0.5s;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand {\n  position: relative;\n  width: 100px;\n  height: 40px;\n  margin: 0;\n  color: #3eaf7c;\n  font-size: 14px;\n  background-color: transparent;\n  border-color: transparent;\n  outline: none;\n  transition: all 0.5s;\n  cursor: pointer;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand::before {\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 0;\n  height: 0;\n  border-top: 6px solid #ccc;\n  border-right: 6px solid transparent;\n  border-left: 6px solid transparent;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n}\n");var st={jsLib:[],cssLib:[],jsfiddle:!0,codepen:!0,codepenLayout:"left",codepenJsProcessor:"babel",codepenEditors:"101",horizontal:!1,vue:"https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js",react:"https://cdn.jsdelivr.net/npm/react/umd/react.production.min.js",reactDOM:"https://cdn.jsdelivr.net/npm/react-dom/umd/react-dom.production.min.js"},lt={},ct=function(n){return'<div id="app">\n'.concat(n,"\n</div>")},dt=function(n){return window.$VUEPRESS_DEMO_BLOCK&&void 0!==window.$VUEPRESS_DEMO_BLOCK[n]?window.$VUEPRESS_DEMO_BLOCK[n]:st[n]},ut=function n(e,t,r){var o=document.createElement(e);return t&&Object.keys(t).forEach((function(n){if(n.indexOf("data"))o[n]=t[n];else{var e=n.replace("data","");o.dataset[e]=t[n]}})),r&&r.forEach((function(e){var t=e.tag,r=e.attrs,i=e.children;o.appendChild(n(t,r,i))})),o},pt=function(n,e,t){var r,o=(r=n.querySelectorAll(".".concat(e)),Array.prototype.slice.call(r));return 1!==o.length||t?o:o[0]},mt=function(n,e){var t,r,o=n.match(/<style>([\s\S]+)<\/style>/),i=n.match(/<template>([\s\S]+)<\/template>/),a=n.match(/<script>([\s\S]+)<\/script>/),s={css:o&&o[1].replace(/^\n|\n$/g,""),html:i&&i[1].replace(/^\n|\n$/g,""),js:a&&a[1].replace(/^\n|\n$/g,""),jsLib:e.jsLib||[],cssLib:e.cssLib||[]};s.htmlTpl=ct(s.html),s.jsTpl=(t=s.js,r=t.replace(/export\s+default\s*?\{\n*/,"").replace(/\n*\}\s*$/,"").trim(),"new Vue({\n  el: '#app',\n  ".concat(r,"\n})")),s.script=function(n,e){var t=n.split(/export\s+default/),r="(function() {".concat(t[0]," ; return ").concat(t[1],"})()"),o=window.Babel?window.Babel.transform(r,{presets:["es2015"]}).code:r,i=[eval][0](o);return i.template=e,i}(s.js,s.html);var l=dt("vue");return s.jsLib.unshift(l),s},ht=function(n,e){var t,r=n.match(/<style>([\s\S]+)<\/style>/),o=n.match(/<html>([\s\S]+)<\/html>/),i=n.match(/<script>([\s\S]+)<\/script>/),a={css:r&&r[1].replace(/^\n|\n$/g,""),html:o&&o[1].replace(/^\n|\n$/g,""),js:i&&i[1].replace(/^\n|\n$/g,""),jsLib:e.jsLib||[],cssLib:e.cssLib||[]};return a.htmlTpl=a.html,a.jsTpl=a.js,a.script=(t=a.js,window.Babel?window.Babel.transform(t,{presets:["es2015"]}).code:t),a},gt=function(n){return n=n.replace("export default ","").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,""),n+='ReactDOM.render(React.createElement(App), document.getElementById("app"))'};function ft(){var n=pt(document,"vuepress-plugin-demo-block__wrapper",!0);n.length?n.forEach((function(n){if("true"!==n.dataset.created){n.style.display="block";var e=pt(n,"vuepress-plugin-demo-block__code"),t=pt(n,"vuepress-plugin-demo-block__display"),r=pt(n,"vuepress-plugin-demo-block__footer"),o=pt(t,"vuepress-plugin-demo-block__app"),i=decodeURIComponent(n.dataset.code),a=decodeURIComponent(n.dataset.config),s=decodeURIComponent(n.dataset.type);a=a?JSON.parse(a):{};var l=e.querySelector("div").clientHeight,c="react"===s?function(n,e){var t=(0,window.Babel.transform)(n,{presets:["es2015","react"]}).code,r="(function(exports){var module={};module.exports=exports;".concat(t,";return module.exports.__esModule?module.exports.default:module.exports;})({})"),o=new Function("return ".concat(r))(),i={js:o,css:o.__style__||"",jsLib:e.jsLib||[],cssLib:e.cssLib||[],jsTpl:gt(n),htmlTpl:ct("")},a=dt("react"),s=dt("reactDOM");return i.jsLib.unshift(a,s),i}(i,a):"vanilla"===s?ht(i,a):mt(i,a),d=ut("button",{className:"".concat("vuepress-plugin-demo-block__expand")});if(r.appendChild(d),d.addEventListener("click",vt.bind(null,d,l,e,r)),dt("jsfiddle")&&r.appendChild(function(n){var e=n.css,t=n.htmlTpl,r=n.jsTpl,o=n.jsLib,i=n.cssLib,a=o.concat(i).concat(dt("cssLib")).concat(dt("jsLib")).join(",");return ut("form",{className:"vuepress-plugin-demo-block__jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[{tag:"input",attrs:{type:"hidden",name:"css",value:e}},{tag:"input",attrs:{type:"hidden",name:"html",value:t}},{tag:"input",attrs:{type:"hidden",name:"js",value:r}},{tag:"input",attrs:{type:"hidden",name:"panel_js",value:3}},{tag:"input",attrs:{type:"hidden",name:"wrap",value:1}},{tag:"input",attrs:{type:"hidden",name:"resources",value:a}},{tag:"button",attrs:{type:"submit",className:"vuepress-plugin-demo-block__button",innerHTML:'<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1547088289967" class="icon" style="" viewBox="0 0 1170 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1952" xmlns:xlink="http://www.w3.org/1999/xlink" width="228.515625" height="200"><defs><style type="text/css"></style></defs><path d="M1028.571429 441.142857q63.428571 26.285714 102.571428 83.142857T1170.285714 650.857143q0 93.714286-67.428571 160.285714T940 877.714286q-2.285714 0-6.571429-0.285715t-6-0.285714H232q-97.142857-5.714286-164.571429-71.714286T0 645.142857q0-62.857143 31.428571-116t84-84q-6.857143-22.285714-6.857142-46.857143 0-65.714286 46.857142-112t113.714286-46.285714q54.285714 0 98.285714 33.142857 42.857143-88 127.142858-141.714286t186.571428-53.714285q94.857143 0 174.857143 46T982.571429 248.571429t46.571428 172q0 3.428571-0.285714 10.285714t-0.285714 10.285714zM267.428571 593.142857q0 69.714286 48 110.285714t118.857143 40.571429q78.285714 0 137.142857-56.571429-9.142857-11.428571-27.142857-32.285714T519.428571 626.285714q-38.285714 37.142857-82.285714 37.142857-31.428571 0-53.428571-19.142857T361.714286 594.285714q0-30.285714 22-49.714285t52.285714-19.428572q25.142857 0 48.285714 12t41.714286 31.428572 37.142857 42.857142 39.428572 46.857143 44 42.857143 55.428571 31.428572 69.428571 12q69.142857 0 116.857143-40.857143T936 594.857143q0-69.142857-48-109.714286t-118.285714-40.571428q-81.714286 0-137.714286 55.428571l53.142857 61.714286q37.714286-36.571429 81.142857-36.571429 29.714286 0 52.571429 18.857143t22.857143 48q0 32.571429-21.142857 52.285714t-53.714286 19.714286q-24.571429 0-47.142857-12t-41.142857-31.428571-37.428572-42.857143-39.714286-46.857143-44.285714-42.857143-55.142857-31.428571T434.285714 444.571429q-69.714286 0-118.285714 40.285714T267.428571 593.142857z" p-id="1953"></path></svg>',datatip:"JSFiddle"}}])}(c)),dt("codepen")&&r.appendChild(function(n){var e=n.css,t=n.htmlTpl,r=n.jsTpl,o=n.jsLib,i=n.cssLib,a=JSON.stringify({css:e,html:t,js:r,js_external:o.concat(dt("jsLib")).join(";"),css_external:i.concat(dt("cssLib")).join(";"),layout:dt("codepenLayout"),js_pre_processor:dt("codepenJsProcessor"),editors:dt("codepenEditors")});return ut("form",{className:"vuepress-plugin-demo-block__codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[{tag:"input",attrs:{type:"hidden",name:"data",value:a}},{tag:"button",attrs:{type:"submit",innerHTML:'<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1547088271207" class="icon" style="" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1737" xmlns:xlink="http://www.w3.org/1999/xlink" width="200" height="200"><defs><style type="text/css"></style></defs><path d="M123.428571 668l344.571429 229.714286v-205.142857L277.142857 565.142857z m-35.428571-82.285714l110.285714-73.714286-110.285714-73.714286v147.428572z m468 312l344.571429-229.714286-153.714286-102.857143-190.857143 127.428572v205.142857z m-44-281.714286l155.428571-104-155.428571-104-155.428571 104zM277.142857 458.857143l190.857143-127.428572V126.285714L123.428571 356z m548.571429 53.142857l110.285714 73.714286V438.285714z m-78.857143-53.142857l153.714286-102.857143-344.571429-229.714286v205.142857z m277.142857-102.857143v312q0 23.428571-19.428571 36.571429l-468 312q-12 7.428571-24.571429 7.428571t-24.571429-7.428571L19.428571 704.571429q-19.428571-13.142857-19.428571-36.571429V356q0-23.428571 19.428571-36.571429L487.428571 7.428571q12-7.428571 24.571429-7.428571t24.571429 7.428571l468 312q19.428571 13.142857 19.428571 36.571429z" p-id="1738"></path></svg>',className:"vuepress-plugin-demo-block__button",datatip:"Codepen"}}])}(c)),void 0!==a.horizontal?a.horizontal:dt("horizontal")){n.classList.add("vuepress-plugin-demo-block__horizontal");var u=e.firstChild.cloneNode(!0);u.classList.add("vuepress-plugin-demo-block__h_code"),t.appendChild(u)}if(c.css&&function(n){if(!lt[n]){var e=ut("style",{innerHTML:n});document.body.appendChild(e),lt[n]=!0}}(c.css),"react"===s)ReactDOM.render(React.createElement(c.js),o);else if("vue"===s){var p=(new(Vue.extend(c.script))).$mount();o.appendChild(p.$el)}else"vanilla"===s&&(o.innerHTML=c.html,new Function("return (function(){".concat(c.script,"})()"))());n.dataset.created="true"}})):setTimeout((function(n){ft()}),300)}function vt(n,e,t,r){var o="1"!==n.dataset.isExpand;t.style.height=o?"".concat(e,"px"):0,o?r.classList.add("vuepress-plugin-demo-block__show-link"):r.classList.remove("vuepress-plugin-demo-block__show-link"),n.dataset.isExpand=o?"1":"0"}var bt={mounted:function(){window.$VUEPRESS_DEMO_BLOCK={jsfiddle:!1,codepen:!0,horizontal:!1},ft()},updated:function(){ft()}},wt=t(125),yt=t.n(wt);var kt=[we,je,Ee,ze,at,bt,{data:()=>({timer:null,loop:10,options:{selector:".banner-content .hero",strings:["苦难磨炼一些人，也毁灭另一些人。——富勒","一个不注意小事情的人，永远不会成就大事业。——卡耐基","内外相应，言行相称。——韩非","阅读一切好书如同和过去最杰出的人谈话。——笛卡儿"],typeSpeed:100,backSpeed:130}}),mounted(){this.querySelector()},methods:{querySelector(){this.timer=setTimeout(()=>{try{(n=>{var e;const t=document.querySelector(n.selector);if(!t)throw Error("打字指定的Selector错误tag =>"+t);const r="typed-"+Math.random().toString(36).replace(/0./,""),o=t.innerText||t.innerHTML;t.innerHTML=`<span class='${r}' style="font-size: ${n.fontSize||"1.6rem"}">${o}</span>`,new yt.a("."+r,{...n,strings:[""].concat(n.strings),typeSpeed:n.typeSpeed||100,backSpeed:n.backSpeed||200,loop:null===(e=n.loop)||void 0===e||e});const i=document.querySelector(".typed-cursor");i&&(i.style.cssText="font-size: "+(n.fontSize||"1.6rem"))})(this.options)}catch(n){--this.loop>=0?this.querySelector():console.error(n)}},200)}},beforeDestroy(){clearTimeout(this.timer),this.timer=null}}],xt={name:"GlobalLayout",computed:{layout(){const n=this.getLayout();return he("layout",n),r.b.component(n)}},methods:{getLayout(){if(this.$page.path){const n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},_t=t(6),St=Object(_t.a)(xt,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),n[e].push(...t);break;default:throw new Error("Unknown option name.")}}(St,"mixins",kt);const jt=[{name:"v-204a4efc",path:"/web/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-204a4efc").then(t)}},{path:"/web/index.html",redirect:"/web/"},{path:"/00.目录页/02.开发.html",redirect:"/web/"},{name:"v-4b554a7a",path:"/algorithm/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-4b554a7a").then(t)}},{path:"/algorithm/index.html",redirect:"/algorithm/"},{path:"/00.目录页/03.算法.html",redirect:"/algorithm/"},{name:"v-3905653a",path:"/tools/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-3905653a").then(t)}},{path:"/tools/index.html",redirect:"/tools/"},{path:"/00.目录页/06.工具.html",redirect:"/tools/"},{name:"v-312e8bc4",path:"/message-area/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-312e8bc4").then(t)}},{path:"/message-area/index.html",redirect:"/message-area/"},{path:"/00.目录页/08.留言区.html",redirect:"/message-area/"},{name:"v-764532ee",path:"/entertainment/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-764532ee").then(t)}},{path:"/entertainment/index.html",redirect:"/entertainment/"},{path:"/00.目录页/09.娱乐.html",redirect:"/entertainment/"},{name:"v-6b7d2cc9",path:"/nav/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-6b7d2cc9").then(t)}},{path:"/nav/index.html",redirect:"/nav/"},{path:"/01.导航/01.导航-资源导航.html",redirect:"/nav/"},{name:"v-b0adcb88",path:"/nav/community/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-b0adcb88").then(t)}},{path:"/nav/community/index.html",redirect:"/nav/community/"},{path:"/01.导航/02.导航-技术社区.html",redirect:"/nav/community/"},{name:"v-bc4c4ece",path:"/nav/ui/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-bc4c4ece").then(t)}},{path:"/nav/ui/index.html",redirect:"/nav/ui/"},{path:"/01.导航/03.导航-组件库.html",redirect:"/nav/ui/"},{name:"v-c9b073d6",path:"/pages/a15787/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-c9b073d6").then(t)}},{path:"/pages/a15787/index.html",redirect:"/pages/a15787/"},{path:"/01.导航/99.导航-资料福利.html",redirect:"/pages/a15787/"},{name:"v-46c389cd",path:"/pages/a1a15e/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-46c389cd").then(t)}},{path:"/pages/a1a15e/index.html",redirect:"/pages/a1a15e/"},{path:"/02.开发/01.基础知识/01.JS中数组有多少种遍历的方法.html",redirect:"/pages/a1a15e/"},{name:"v-8021b6a0",path:"/pages/97fe24/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-8021b6a0").then(t)}},{path:"/pages/97fe24/index.html",redirect:"/pages/97fe24/"},{path:"/02.开发/02.工程化/02.正则速查表.html",redirect:"/pages/97fe24/"},{name:"v-f162a536",path:"/pages/b89816/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-f162a536").then(t)}},{path:"/pages/b89816/index.html",redirect:"/pages/b89816/"},{path:"/02.开发/02.工程化/03.npm&yarn操作命令都在这了.html",redirect:"/pages/b89816/"},{name:"v-05feeb6b",path:"/pages/eb8ac7/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-05feeb6b").then(t)}},{path:"/pages/eb8ac7/index.html",redirect:"/pages/eb8ac7/"},{path:"/02.开发/03.组件库/01.手写el-form表单组件.html",redirect:"/pages/eb8ac7/"},{name:"v-240615fb",path:"/pages/8b7457/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-240615fb").then(t)}},{path:"/pages/8b7457/index.html",redirect:"/pages/8b7457/"},{path:"/02.开发/03.组件库/02.Vue Toast组件开发.html",redirect:"/pages/8b7457/"},{name:"v-329c4901",path:"/pages/46ca1d/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-329c4901").then(t)}},{path:"/pages/46ca1d/index.html",redirect:"/pages/46ca1d/"},{path:"/02.开发/03.组件库/05.Vue icon组件开发.html",redirect:"/pages/46ca1d/"},{name:"v-5b94954a",path:"/pages/689ad5/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-5b94954a").then(t)}},{path:"/pages/689ad5/index.html",redirect:"/pages/689ad5/"},{path:"/02.开发/03.组件库/06.Vue input组件开发.html",redirect:"/pages/689ad5/"},{name:"v-0ba8f21b",path:"/pages/db6289/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-0ba8f21b").then(t)}},{path:"/pages/db6289/index.html",redirect:"/pages/db6289/"},{path:"/02.开发/03.组件库/07.Vue message组件开发.html",redirect:"/pages/db6289/"},{name:"v-aca4b80a",path:"/pages/915ee7/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-aca4b80a").then(t)}},{path:"/pages/915ee7/index.html",redirect:"/pages/915ee7/"},{path:"/02.开发/03.组件库/08.Vue Popover组件开发.html",redirect:"/pages/915ee7/"},{name:"v-8a0a5766",path:"/pages/8ea1aa/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-8a0a5766").then(t)}},{path:"/pages/8ea1aa/index.html",redirect:"/pages/8ea1aa/"},{path:"/02.开发/03.组件库/04.Vue button组件开发.html",redirect:"/pages/8ea1aa/"},{name:"v-6662b64c",path:"/pages/0c3675/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-6662b64c").then(t)}},{path:"/pages/0c3675/index.html",redirect:"/pages/0c3675/"},{path:"/02.开发/04.CSS/02.移动端1px问题.html",redirect:"/pages/0c3675/"},{name:"v-2eb304a4",path:"/pages/5aae97/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-2eb304a4").then(t)}},{path:"/pages/5aae97/index.html",redirect:"/pages/5aae97/"},{path:"/02.开发/04.CSS/03.CSS 实现多行文本“展开收起”.html",redirect:"/pages/5aae97/"},{name:"v-9bc5b2d2",path:"/pages/6eff02/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-9bc5b2d2").then(t)}},{path:"/pages/6eff02/index.html",redirect:"/pages/6eff02/"},{path:"/02.开发/05.ES6-ES12/01.代码被吐槽有什么好的优化方案.html",redirect:"/pages/6eff02/"},{name:"v-9d96f146",path:"/pages/d43f57/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-9d96f146").then(t)}},{path:"/pages/d43f57/index.html",redirect:"/pages/d43f57/"},{path:"/02.开发/04.CSS/01.必备的CSS小技巧.html",redirect:"/pages/d43f57/"},{name:"v-5e733e73",path:"/pages/a3ded1/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-5e733e73").then(t)}},{path:"/pages/a3ded1/index.html",redirect:"/pages/a3ded1/"},{path:"/02.开发/05.ES6-ES12/02.ES12令人期待的新特性.html",redirect:"/pages/a3ded1/"},{name:"v-6c5a0b5f",path:"/pages/6f1790/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-6c5a0b5f").then(t)}},{path:"/pages/6f1790/index.html",redirect:"/pages/6f1790/"},{path:"/02.开发/06.JavaScript/01.代码中大量的if-else你有什么优化方案.html",redirect:"/pages/6f1790/"},{name:"v-70f93156",path:"/pages/46fd38/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-70f93156").then(t)}},{path:"/pages/46fd38/index.html",redirect:"/pages/46fd38/"},{path:"/02.开发/06.JavaScript/03.nutils-js 前端开发的工具类库.html",redirect:"/pages/46fd38/"},{name:"v-7f4c930a",path:"/pages/18fdc2/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-7f4c930a").then(t)}},{path:"/pages/18fdc2/index.html",redirect:"/pages/18fdc2/"},{path:"/02.开发/06.JavaScript/05.13个JS一行代码，它们会让你看起来像个大佬.html",redirect:"/pages/18fdc2/"},{name:"v-e6528c56",path:"/pages/8466b6/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-e6528c56").then(t)}},{path:"/pages/8466b6/index.html",redirect:"/pages/8466b6/"},{path:"/02.开发/07.Vue2/01.令人眼前一亮的Vue实战技巧.html",redirect:"/pages/8466b6/"},{name:"v-6e41c1cc",path:"/pages/db36f6/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-6e41c1cc").then(t)}},{path:"/pages/db36f6/index.html",redirect:"/pages/db36f6/"},{path:"/02.开发/06.JavaScript/02.慎用NumbertoFixed.html",redirect:"/pages/db36f6/"},{name:"v-24ab3da6",path:"/pages/d765c6/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-24ab3da6").then(t)}},{path:"/pages/d765c6/index.html",redirect:"/pages/d765c6/"},{path:"/02.开发/07.Vue2/02.助你开发更高效的10个Vue指令.html",redirect:"/pages/d765c6/"},{name:"v-f78f7d22",path:"/pages/4c7316/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-f78f7d22").then(t)}},{path:"/pages/4c7316/index.html",redirect:"/pages/4c7316/"},{path:"/02.开发/07.Vue2/03.理解Vue响应式数据变化.html",redirect:"/pages/4c7316/"},{name:"v-d2b3b206",path:"/pages/40f989/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-d2b3b206").then(t)}},{path:"/pages/40f989/index.html",redirect:"/pages/40f989/"},{path:"/02.开发/07.Vue2/04.Vue父子组件的生命周期.html",redirect:"/pages/40f989/"},{name:"v-13a9aae9",path:"/pages/03d760/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-13a9aae9").then(t)}},{path:"/pages/03d760/index.html",redirect:"/pages/03d760/"},{path:"/02.开发/08.Vue3/01.Vue3开发知乎日报.html",redirect:"/pages/03d760/"},{name:"v-e01b4200",path:"/pages/1182d2/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-e01b4200").then(t)}},{path:"/pages/1182d2/index.html",redirect:"/pages/1182d2/"},{path:"/02.开发/08.Vue3/02.Vue3入门.html",redirect:"/pages/1182d2/"},{name:"v-073c676c",path:"/pages/e8445a/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-073c676c").then(t)}},{path:"/pages/e8445a/index.html",redirect:"/pages/e8445a/"},{path:"/02.开发/09.webpack/01.Webpack4入门.html",redirect:"/pages/e8445a/"},{name:"v-6f9e2efd",path:"/pages/647c21/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-6f9e2efd").then(t)}},{path:"/pages/647c21/index.html",redirect:"/pages/647c21/"},{path:"/02.开发/10.浏览器/01.浏览器存储那些事.html",redirect:"/pages/647c21/"},{name:"v-948bf2dc",path:"/pages/22d46a/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-948bf2dc").then(t)}},{path:"/pages/22d46a/index.html",redirect:"/pages/22d46a/"},{path:"/02.开发/10.浏览器/02.如何使console更具可读性.html",redirect:"/pages/22d46a/"},{name:"v-38c440dc",path:"/pages/6dc9e7/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-38c440dc").then(t)}},{path:"/pages/6dc9e7/index.html",redirect:"/pages/6dc9e7/"},{path:"/03.算法/02.数组/01.两数之和.html",redirect:"/pages/6dc9e7/"},{name:"v-5cfdc0cd",path:"/pages/27447f/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-5cfdc0cd").then(t)}},{path:"/pages/27447f/index.html",redirect:"/pages/27447f/"},{path:"/03.算法/01.二叉树/94. 二叉树的中序遍历.html",redirect:"/pages/27447f/"},{name:"v-65e01590",path:"/pages/b08cab/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-65e01590").then(t)}},{path:"/pages/b08cab/index.html",redirect:"/pages/b08cab/"},{path:"/06.工具/01.浏览器/01.Chrome插件推荐.html",redirect:"/pages/b08cab/"},{name:"v-d73d2c4a",path:"/pages/af5021/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-d73d2c4a").then(t)}},{path:"/pages/af5021/index.html",redirect:"/pages/af5021/"},{path:"/06.工具/02.Git/01.Git导读.html",redirect:"/pages/af5021/"},{name:"v-7b95e10a",path:"/pages/9d41b5/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-7b95e10a").then(t)}},{path:"/pages/9d41b5/index.html",redirect:"/pages/9d41b5/"},{path:"/06.工具/02.Git/02.Git常用操作命令.html",redirect:"/pages/9d41b5/"},{name:"v-0af603b9",path:"/pages/afbd7c/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-0af603b9").then(t)}},{path:"/pages/afbd7c/index.html",redirect:"/pages/afbd7c/"},{path:"/06.工具/02.Git/03.Git思维导图.html",redirect:"/pages/afbd7c/"},{name:"v-f39ea65a",path:"/pages/c5d2f8/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-f39ea65a").then(t)}},{path:"/pages/c5d2f8/index.html",redirect:"/pages/c5d2f8/"},{path:"/06.工具/02.Git/04.Git分支开发模型规范.html",redirect:"/pages/c5d2f8/"},{name:"v-3b391dc4",path:"/pages/20730e/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-3b391dc4").then(t)}},{path:"/pages/20730e/index.html",redirect:"/pages/20730e/"},{path:"/06.工具/02.Git/05.图解Git.html",redirect:"/pages/20730e/"},{name:"v-302408e4",path:"/pages/9f8029/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-302408e4").then(t)}},{path:"/pages/9f8029/index.html",redirect:"/pages/9f8029/"},{path:"/06.工具/02.Git/100.Git在macOS中忽略所有DS_Store文件.html",redirect:"/pages/9f8029/"},{name:"v-08693ea0",path:"/pages/1115dc/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-08693ea0").then(t)}},{path:"/pages/1115dc/index.html",redirect:"/pages/1115dc/"},{path:"/06.工具/02.Git/101.Git本地仓库关联多个远程仓库.html",redirect:"/pages/1115dc/"},{name:"v-0a9a5969",path:"/pages/0eff1a/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-0a9a5969").then(t)}},{path:"/pages/0eff1a/index.html",redirect:"/pages/0eff1a/"},{path:"/06.工具/02.Git/102.Git Commit表情大全.html",redirect:"/pages/0eff1a/"},{name:"v-1ea2bb96",path:"/pages/86465f/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-1ea2bb96").then(t)}},{path:"/pages/86465f/index.html",redirect:"/pages/86465f/"},{path:"/06.工具/02.Git/103.Git Permissions 0755问题解决.html",redirect:"/pages/86465f/"},{name:"v-33d1e0b9",path:"/pages/e223b5/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-33d1e0b9").then(t)}},{path:"/pages/e223b5/index.html",redirect:"/pages/e223b5/"},{path:"/06.工具/02.Git/50.Git变基合并.html",redirect:"/pages/e223b5/"},{name:"v-7739008f",path:"/pages/4eec3f/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-7739008f").then(t)}},{path:"/pages/4eec3f/index.html",redirect:"/pages/4eec3f/"},{path:"/06.工具/03.Mac/01.Mac常用软件推荐.html",redirect:"/pages/4eec3f/"},{name:"v-1a56a289",path:"/pages/46ba7f/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-1a56a289").then(t)}},{path:"/pages/46ba7f/index.html",redirect:"/pages/46ba7f/"},{path:"/06.工具/03.Mac/03.Mac终端替代工具iTerm2.html",redirect:"/pages/46ba7f/"},{name:"v-2951adf4",path:"/pages/224796/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-2951adf4").then(t)}},{path:"/pages/224796/index.html",redirect:"/pages/224796/"},{path:"/06.工具/03.Mac/04.macOS Catalina 已损坏无法打开.html",redirect:"/pages/224796/"},{name:"v-05af6767",path:"/pages/d5393d/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-05af6767").then(t)}},{path:"/pages/d5393d/index.html",redirect:"/pages/d5393d/"},{path:"/06.工具/03.Mac/50.hosts默认信息.html",redirect:"/pages/d5393d/"},{name:"v-08a512d1",path:"/pages/cda20f/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-08a512d1").then(t)}},{path:"/pages/cda20f/index.html",redirect:"/pages/cda20f/"},{path:"/06.工具/04.VSCode/01.使开发如鱼得水的VSCode插件.html",redirect:"/pages/cda20f/"},{name:"v-189cf840",path:"/pages/9c9984/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-189cf840").then(t)}},{path:"/pages/9c9984/index.html",redirect:"/pages/9c9984/"},{path:"/06.工具/04.VSCode/02.VSCode插件推荐.html",redirect:"/pages/9c9984/"},{name:"v-15f63c55",path:"/pages/ecd1c2/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-15f63c55").then(t)}},{path:"/pages/ecd1c2/index.html",redirect:"/pages/ecd1c2/"},{path:"/06.工具/04.VSCode/03.用好VSCode这几个快捷键，工作效率提升10倍.html",redirect:"/pages/ecd1c2/"},{name:"v-2e954df7",path:"/pages/c1cbea/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-2e954df7").then(t)}},{path:"/pages/c1cbea/index.html",redirect:"/pages/c1cbea/"},{path:"/06.工具/04.VSCode/04.VSCode所有的默认配置项介绍.html",redirect:"/pages/c1cbea/"},{name:"v-263c2b80",path:"/pages/a782fe/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-263c2b80").then(t)}},{path:"/pages/a782fe/index.html",redirect:"/pages/a782fe/"},{path:"/06.工具/05.GitHub/01.2022提高国内访问Github速度的5种方法.html",redirect:"/pages/a782fe/"},{name:"v-19bcd3ab",path:"/pages/4cf2e1/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-19bcd3ab").then(t)}},{path:"/pages/4cf2e1/index.html",redirect:"/pages/4cf2e1/"},{path:"/06.工具/05.GitHub/03.GitHub+jsDelivr+PicGo打造免费图床.html",redirect:"/pages/4cf2e1/"},{name:"v-6e89be9f",path:"/pages/95565e/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-6e89be9f").then(t)}},{path:"/pages/95565e/index.html",redirect:"/pages/95565e/"},{path:"/06.工具/05.GitHub/05.GitHub仓库下载慢几种解决办法.html",redirect:"/pages/95565e/"},{name:"v-50155f45",path:"/pages/70e61d/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-50155f45").then(t)}},{path:"/pages/70e61d/index.html",redirect:"/pages/70e61d/"},{path:"/06.工具/03.Mac/02.Mac开发必备工具—Homebrew国内源.html",redirect:"/pages/70e61d/"},{name:"v-78a9b73a",path:"/pages/d945b5/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-78a9b73a").then(t)}},{path:"/pages/d945b5/index.html",redirect:"/pages/d945b5/"},{path:"/06.工具/05.GitHub/06.Github文件转jsdelivr地址.html",redirect:"/pages/d945b5/"},{name:"v-e1d3dcf6",path:"/bookmarks/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-e1d3dcf6").then(t)}},{path:"/bookmarks/index.html",redirect:"/bookmarks/"},{path:"/07.收藏夹/01.收藏夹.html",redirect:"/bookmarks/"},{name:"v-383c8ffe",path:"/pages/9abd62/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-383c8ffe").then(t)}},{path:"/pages/9abd62/index.html",redirect:"/pages/9abd62/"},{path:"/07.收藏夹/02.收藏夹2.html",redirect:"/pages/9abd62/"},{name:"v-4c048038",path:"/pages/6a0e2e/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-4c048038").then(t)}},{path:"/pages/6a0e2e/index.html",redirect:"/pages/6a0e2e/"},{path:"/07.收藏夹/03.面试相关.html",redirect:"/pages/6a0e2e/"},{name:"v-66bef6ac",path:"/about/me/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-66bef6ac").then(t)}},{path:"/about/me/index.html",redirect:"/about/me/"},{path:"/08.关于/01.关于-我.html",redirect:"/about/me/"},{name:"v-307e096c",path:"/pages/797db9/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-307e096c").then(t)}},{path:"/pages/797db9/index.html",redirect:"/pages/797db9/"},{path:"/07.收藏夹/04.推荐前端常用库.html",redirect:"/pages/797db9/"},{name:"v-46fdb1f6",path:"/about/error/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-46fdb1f6").then(t)}},{path:"/about/error/index.html",redirect:"/about/error/"},{path:"/08.关于/03.关于-网站错误反馈.html",redirect:"/about/error/"},{name:"v-005f32f6",path:"/about/site/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-005f32f6").then(t)}},{path:"/about/site/index.html",redirect:"/about/site/"},{path:"/08.关于/10.关于-本站.html",redirect:"/about/site/"},{name:"v-a7db34b8",path:"/pages/36f5a2/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-a7db34b8").then(t)}},{path:"/pages/36f5a2/index.html",redirect:"/pages/36f5a2/"},{path:"/08.关于/99.Vuepress/01.Markdown语法.html",redirect:"/pages/36f5a2/"},{name:"v-186c337d",path:"/pages/05db39/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-186c337d").then(t)}},{path:"/pages/05db39/index.html",redirect:"/pages/05db39/"},{path:"/08.关于/99.Vuepress/02.MarkDown常用表情.html",redirect:"/pages/05db39/"},{name:"v-29c86f27",path:"/pages/f55287/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-29c86f27").then(t)}},{path:"/pages/f55287/index.html",redirect:"/pages/f55287/"},{path:"/08.关于/99.Vuepress/03.Vuepress模版.html",redirect:"/pages/f55287/"},{name:"v-8fe1d638",path:"/pages/4369fc/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-8fe1d638").then(t)}},{path:"/pages/4369fc/index.html",redirect:"/pages/4369fc/"},{path:"/08.关于/99.Vuepress/05.GitHub Actions部署Vuepress.html",redirect:"/pages/4369fc/"},{name:"v-65c8431a",path:"/pages/f5def0/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-65c8431a").then(t)}},{path:"/pages/f5def0/index.html",redirect:"/pages/f5def0/"},{path:"/08.关于/99.Vuepress/06.VuePress搭建个人博客.html",redirect:"/pages/f5def0/"},{name:"v-a2ef8514",path:"/about/appreciate/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-a2ef8514").then(t)}},{path:"/about/appreciate/index.html",redirect:"/about/appreciate/"},{path:"/08.关于/02.关于-赞赏的用途.html",redirect:"/about/appreciate/"},{name:"v-64aacaa9",path:"/pages/30933c/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-64aacaa9").then(t)}},{path:"/pages/30933c/index.html",redirect:"/pages/30933c/"},{path:"/08.关于/99.Vuepress/08.Vuepress插件推荐.html",redirect:"/pages/30933c/"},{name:"v-d4fad862",path:"/pages/88bc78/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-d4fad862").then(t)}},{path:"/pages/88bc78/index.html",redirect:"/pages/88bc78/"},{path:"/09.娱乐/02.影视/01.2022最新免费影视网站推荐.html",redirect:"/pages/88bc78/"},{name:"v-187bc2f1",path:"/pages/add5e2/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-187bc2f1").then(t)}},{path:"/pages/add5e2/index.html",redirect:"/pages/add5e2/"},{path:"/09.娱乐/03.漫画/01.漫画app合集.html",redirect:"/pages/add5e2/"},{name:"v-388052e8",path:"/pages/ca521c/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-388052e8").then(t)}},{path:"/pages/ca521c/index.html",redirect:"/pages/ca521c/"},{path:"/09.娱乐/04.音乐/01.在线音乐下载.html",redirect:"/pages/ca521c/"},{name:"v-53104ef6",path:"/archives/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-53104ef6").then(t)}},{path:"/archives/index.html",redirect:"/archives/"},{path:"/@pages/archivesPage.html",redirect:"/archives/"},{name:"v-1a9d53e5",path:"/categories/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-1a9d53e5").then(t)}},{path:"/categories/index.html",redirect:"/categories/"},{path:"/@pages/categoriesPage.html",redirect:"/categories/"},{name:"v-9b21b728",path:"/pages/3c34a0/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-9b21b728").then(t)}},{path:"/pages/3c34a0/index.html",redirect:"/pages/3c34a0/"},{path:"/08.关于/99.Vuepress/04.Vuepress手写自动生成侧边栏函数.html",redirect:"/pages/3c34a0/"},{name:"v-150b83f6",path:"/tags/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-150b83f6").then(t)}},{path:"/tags/index.html",redirect:"/tags/"},{path:"/@pages/tagsPage.html",redirect:"/tags/"},{name:"v-a113e2c4",path:"/",component:St,beforeEnter:(n,e,t)=>{me("Layout","v-a113e2c4").then(t)}},{path:"/index.html",redirect:"/"},{path:"*",component:St}],Tt={title:"前端有道",description:"前端有道,技术博客,前端,前端开发,前端博客,前端框架,web前端,前端面试,技术文档,学习,面试,JavaScript,js,es6,typeScript,ts,vue,python,css3,html5,node,git,github,markdown,vuepress,react",base:"/",headTags:[["link",{rel:"icon",href:"https://feyoudao.oss-cn-hongkong.aliyuncs.com/site/star_field.ico"}],["meta",{name:"shenma-site-verification",content:"f892afc1a8add6e6e6891572ee20bc3d_1652173604"}],["meta",{"http-equiv":"Content-Type",content:"text/html;charset=gb2312"}],["meta",{name:"sogou_site_verification",content:"pLC60dtSZc"}],["meta",{name:"baidu-site-verification",content:"code-T8obz32BBI"}],["meta",{name:"360-site-verification",content:"af881508ea01a3f1b32e5c1628ecd05b"}],["meta",{name:"msvalidate.01",content:"c2598f74a60ff811a8155a1092cf4fe0_1652173064"}],["meta",{name:"viewport",content:"width=device-width,initial-scale=1,user-scalable=no"}],["meta",{name:"keywords",content:"前端有道,技术博客,前端,前端开发,前端博客,前端框架,web前端,前端面试,技术文档,学习,面试,JavaScript,js,es6,typeScript,ts,vue,python,css3,html5,node,git,github,markdown,vuepress,react"}],["script",{src:"https://unpkg.com/twikoo@1.5.10/dist/twikoo.all.min.js"}],["meta",{name:"referrer",content:"no-referrer-when-downgrade"}],["link",{rel:"stylesheet",href:"https://at.alicdn.com/t/font_3077305_pt8umhrn4k9.css"}]],pages:[{title:"开发目录",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"02.开发",imgUrl:"https://feyoudao.oss-cn-hongkong.aliyuncs.com/frentend/1.jpg",description:"JavaScript、ES6、Vue框架等前端技术"}},title:"开发目录",date:"2020-03-11T21:50:53.000Z",permalink:"/web",sidebar:!1,article:!1,comment:!1,editLink:!1,readingShow:"top"},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/02.%E5%BC%80%E5%8F%91.html",relativePath:"00.目录页/02.开发.md",key:"v-204a4efc",path:"/web/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"算法目录",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"03.算法",imgUrl:"https://feyoudao.oss-cn-hongkong.aliyuncs.com/frentend/1.jpg",description:"JavaScript、ES6、Vue框架等前端技术"}},title:"算法目录",date:"2020-03-11T21:50:53.000Z",permalink:"/algorithm",sidebar:!1,article:!1,comment:!1,editLink:!1,readingShow:"top"},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/03.%E7%AE%97%E6%B3%95.html",relativePath:"00.目录页/03.算法.md",key:"v-4b554a7a",path:"/algorithm/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"工具目录",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"06.工具",imgUrl:"https://feyoudao.oss-cn-hongkong.aliyuncs.com/frentend/2.gif",description:"JavaScript、ES6、Vue框架等前端技术"}},title:"工具目录",date:"2020-03-11T21:50:53.000Z",permalink:"/tools",sidebar:!1,article:!1,comment:!1,editLink:!1,readingShow:"top"},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/06.%E5%B7%A5%E5%85%B7.html",relativePath:"00.目录页/06.工具.md",key:"v-3905653a",path:"/tools/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"留言区",frontmatter:{title:"留言区",date:"2020-03-11T21:50:53.000Z",permalink:"/message-area",sidebar:!1,article:!1,comment:!1,editLink:!1,prev:!1,next:!1,lastUpdated:!1,tags:null,readingShow:"top"},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/08.%E7%95%99%E8%A8%80%E5%8C%BA.html",relativePath:"00.目录页/08.留言区.md",key:"v-312e8bc4",path:"/message-area/",headersStr:null,content:"欢迎大家留言讨论。 如果加载异常，请重新刷新页面。",normalizedContent:"欢迎大家留言讨论。 如果加载异常，请重新刷新页面。",charsets:{cjk:!0},lastUpdated:"2022/05/09, 09:20:10",lastUpdatedTimestamp:165208801e4},{title:"休闲娱乐",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"09.娱乐",imgUrl:"https://feyoudao.oss-cn-hongkong.aliyuncs.com/frentend/3.gif",description:"JavaScript、ES6、Vue框架等前端技术"}},title:"休闲娱乐",date:"2020-03-11T21:50:53.000Z",permalink:"/entertainment",sidebar:!1,article:!1,comment:!1,editLink:!1,readingShow:"top"},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/09.%E5%A8%B1%E4%B9%90.html",relativePath:"00.目录页/09.娱乐.md",key:"v-764532ee",path:"/entertainment/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/09, 16:07:37",lastUpdatedTimestamp:1652112457e3},{title:"开发百宝箱",frontmatter:{title:"开发百宝箱",date:"2022-05-09T02:03:48.000Z",permalink:"/nav",article:!1,categories:[null],tags:[null],readingShow:"top"},regularPath:"/01.%E5%AF%BC%E8%88%AA/01.%E5%AF%BC%E8%88%AA-%E8%B5%84%E6%BA%90%E5%AF%BC%E8%88%AA.html",relativePath:"01.导航/01.导航-资源导航.md",key:"v-6b7d2cc9",path:"/nav/",headers:[{level:2,title:"友情链接",slug:"友情链接",normalizedTitle:"友情链接",charIndex:2},{level:2,title:"搜索引擎",slug:"搜索引擎",normalizedTitle:"搜索引擎",charIndex:1706},{level:2,title:"代码托管",slug:"代码托管",normalizedTitle:"代码托管",charIndex:1715},{level:2,title:"前端开发",slug:"前端开发",normalizedTitle:"前端开发",charIndex:1724},{level:2,title:"后端开发",slug:"后端开发",normalizedTitle:"后端开发",charIndex:1733},{level:2,title:"文档工具",slug:"文档工具",normalizedTitle:"文档工具",charIndex:1742},{level:2,title:"热门社区",slug:"热门社区",normalizedTitle:"热门社区",charIndex:1751},{level:2,title:"工具合集",slug:"工具合集",normalizedTitle:"工具合集",charIndex:1760},{level:2,title:"文档教程",slug:"文档教程",normalizedTitle:"文档教程",charIndex:1769},{level:2,title:"动态图表",slug:"动态图表",normalizedTitle:"动态图表",charIndex:1778},{level:2,title:"图片图标",slug:"图片图标",normalizedTitle:"图片图标",charIndex:1787},{level:2,title:"CSS样式",slug:"css样式",normalizedTitle:"css样式",charIndex:1796},{level:2,title:"网站分析",slug:"网站分析",normalizedTitle:"网站分析",charIndex:1806},{level:2,title:"其它资源",slug:"其它资源",normalizedTitle:"其它资源",charIndex:1815},{level:2,title:"参考来源",slug:"参考来源",normalizedTitle:"参考来源",charIndex:1824}],headersStr:"友情链接 搜索引擎 代码托管 前端开发 后端开发 文档工具 热门社区 工具合集 文档教程 动态图表 图片图标 CSS样式 网站分析 其它资源 参考来源",content:"# 友情链接\n\nGeorge Chan\n\n让我给你讲讲他的传奇故事吧\n\nbutcher2000\n\n即使再小的帆，也能远航\n\nEvan's blog\n\n前端的小学生\n\n二丫讲梵\n\n💻学习📝记录🔗分享\n\nWeibw\n\n一个没有梦想的咸鱼\n\nJava 全栈知识体系\n\nJava 全栈知识体系\n\n风祈的时光录\n\n主要是Java技术栈的博客，比较偏原理，源码类型的博主\n\nxustudyxu\n\n一起学习编程!\n\n- name: George Chan\n  desc: 让我给你讲讲他的传奇故事吧\n  avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://cyc0819.top/\n  bgColor: '#FFB6C1'\n  textColor: '#621529'  \n  \n- name: butcher2000\n  desc: 即使再小的帆，也能远航\n  avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://blog.csdn.net/weixin_46827107\n  bgColor: '#CBEAFA'\n  textColor: '#6854A1'\n  \n- name: Evan's blog\n  desc: 前端的小学生\n  avatar: https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  link: https://xugaoyi.com/\n  bgColor: '#B9D59C'\n  textColor: '#3B551F'\n\n- name: 二丫讲梵\n  desc: 💻学习📝记录🔗分享\n  avatar: https://wiki.eryajf.net/img/logo.png\n  link: https://wiki.eryajf.net/\n  bgColor: '#FBEBEC'\n  textColor: '#603420'\n\n- name: Weibw\n  desc: 一个没有梦想的咸鱼\n  avatar: https://cdn.jsdelivr.net/gh/Weibw162/image-hosting@dev/%E6%9D%82%E5%BD%95/image.735febsv1zo0.webp\n  link: http://weibw162.com/\n  bgColor: '#FFCEDE'\n  textColor: '#621529'\n  \n- name: Java 全栈知识体系\n  desc: Java 全栈知识体系\n  avatar: https://www.pdai.tech/_images/index-read.gif\n  link: https://www.pdai.tech/\n  bgColor: '#FCDBA0'\n  textColor: '#A05F2C'\n  \n- name: 风祈的时光录\n  desc: 主要是Java技术栈的博客，比较偏原理，源码类型的博主\n  avatar: https://npm.elemecdn.com/lql_static@latest/avatar/1.jpg\n  link: https://imlql.cn/\n  bgColor: '#FFEFE2'\n  textColor: '#A05F2C'\n\n- name: xustudyxu\n  desc: 一起学习编程!\n  avatar: https://cdn.jsdelivr.net/gh/xustudyxu/image-hosting@master/20220423/01.3d9wrma6qlq0.webp\n  link: https://frxcat.fun/\n  bgColor: '#CBEAFA'\n\n\n\n# 搜索引擎\n\n\n# 代码托管\n\n\n# 前端开发\n\n\n# 后端开发\n\n\n# 文档工具\n\n\n# 热门社区\n\n\n# 工具合集\n\n\n# 文档教程\n\n\n# 动态图表\n\n\n# 图片图标\n\n\n# CSS样式\n\n\n# 网站分析\n\n\n# 其它资源\n\n\n# 参考来源\n\nhttps://www.pdai.tech/md/resource/tools.html",normalizedContent:"# 友情链接\n\ngeorge chan\n\n让我给你讲讲他的传奇故事吧\n\nbutcher2000\n\n即使再小的帆，也能远航\n\nevan's blog\n\n前端的小学生\n\n二丫讲梵\n\n💻学习📝记录🔗分享\n\nweibw\n\n一个没有梦想的咸鱼\n\njava 全栈知识体系\n\njava 全栈知识体系\n\n风祈的时光录\n\n主要是java技术栈的博客，比较偏原理，源码类型的博主\n\nxustudyxu\n\n一起学习编程!\n\n- name: george chan\n  desc: 让我给你讲讲他的传奇故事吧\n  avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://cyc0819.top/\n  bgcolor: '#ffb6c1'\n  textcolor: '#621529'  \n  \n- name: butcher2000\n  desc: 即使再小的帆，也能远航\n  avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://blog.csdn.net/weixin_46827107\n  bgcolor: '#cbeafa'\n  textcolor: '#6854a1'\n  \n- name: evan's blog\n  desc: 前端的小学生\n  avatar: https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200103123203.jpg\n  link: https://xugaoyi.com/\n  bgcolor: '#b9d59c'\n  textcolor: '#3b551f'\n\n- name: 二丫讲梵\n  desc: 💻学习📝记录🔗分享\n  avatar: https://wiki.eryajf.net/img/logo.png\n  link: https://wiki.eryajf.net/\n  bgcolor: '#fbebec'\n  textcolor: '#603420'\n\n- name: weibw\n  desc: 一个没有梦想的咸鱼\n  avatar: https://cdn.jsdelivr.net/gh/weibw162/image-hosting@dev/%e6%9d%82%e5%bd%95/image.735febsv1zo0.webp\n  link: http://weibw162.com/\n  bgcolor: '#ffcede'\n  textcolor: '#621529'\n  \n- name: java 全栈知识体系\n  desc: java 全栈知识体系\n  avatar: https://www.pdai.tech/_images/index-read.gif\n  link: https://www.pdai.tech/\n  bgcolor: '#fcdba0'\n  textcolor: '#a05f2c'\n  \n- name: 风祈的时光录\n  desc: 主要是java技术栈的博客，比较偏原理，源码类型的博主\n  avatar: https://npm.elemecdn.com/lql_static@latest/avatar/1.jpg\n  link: https://imlql.cn/\n  bgcolor: '#ffefe2'\n  textcolor: '#a05f2c'\n\n- name: xustudyxu\n  desc: 一起学习编程!\n  avatar: https://cdn.jsdelivr.net/gh/xustudyxu/image-hosting@master/20220423/01.3d9wrma6qlq0.webp\n  link: https://frxcat.fun/\n  bgcolor: '#cbeafa'\n\n\n\n# 搜索引擎\n\n\n# 代码托管\n\n\n# 前端开发\n\n\n# 后端开发\n\n\n# 文档工具\n\n\n# 热门社区\n\n\n# 工具合集\n\n\n# 文档教程\n\n\n# 动态图表\n\n\n# 图片图标\n\n\n# css样式\n\n\n# 网站分析\n\n\n# 其它资源\n\n\n# 参考来源\n\nhttps://www.pdai.tech/md/resource/tools.html",charsets:{cjk:!0},lastUpdated:"2022/06/17, 02:41:44",lastUpdatedTimestamp:1655433704e3},{title:"导航-技术社区",frontmatter:{title:"导航-技术社区",date:"2022-05-09T02:03:48.000Z",permalink:"/nav/community",article:!1,categories:[null],tags:[null],readingShow:"top"},regularPath:"/01.%E5%AF%BC%E8%88%AA/02.%E5%AF%BC%E8%88%AA-%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA.html",relativePath:"01.导航/02.导航-技术社区.md",key:"v-b0adcb88",path:"/nav/community/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/10, 03:47:24",lastUpdatedTimestamp:1652154444e3},{title:"导航-技术社区",frontmatter:{title:"导航-技术社区",date:"2022-05-09T02:03:48.000Z",permalink:"/nav/ui",article:!1,categories:[null],tags:[null],readingShow:"top"},regularPath:"/01.%E5%AF%BC%E8%88%AA/03.%E5%AF%BC%E8%88%AA-%E7%BB%84%E4%BB%B6%E5%BA%93.html",relativePath:"01.导航/03.导航-组件库.md",key:"v-bc4c4ece",path:"/nav/ui/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/10, 03:47:24",lastUpdatedTimestamp:1652154444e3},{title:"资料福利",frontmatter:{title:"资料福利",date:"2022-04-16T17:14:10.000Z",permalink:"/pages/a15787/",categories:[null],tags:[null],sticky:2,readingShow:"top"},regularPath:"/01.%E5%AF%BC%E8%88%AA/99.%E5%AF%BC%E8%88%AA-%E8%B5%84%E6%96%99%E7%A6%8F%E5%88%A9.html",relativePath:"01.导航/99.导航-资料福利.md",key:"v-c9b073d6",path:"/pages/a15787/",headers:[{level:2,title:"某课",slug:"某课",normalizedTitle:"某课",charIndex:11},{level:3,title:"TypeScript 系统入门到项目实战",slug:"typescript-系统入门到项目实战",normalizedTitle:"typescript 系统入门到项目实战",charIndex:39},{level:3,title:"再学JavaScript ES(6-10)全版本语法大全",slug:"再学javascript-es-6-10-全版本语法大全",normalizedTitle:"再学javascript es(6-10)全版本语法大全",charIndex:83},{level:3,title:"某客时间",slug:"某客时间",normalizedTitle:"某客时间",charIndex:133},{level:3,title:"《Web前端工程师修炼之道》- 书籍",slug:"《web前端工程师修炼之道》-书籍",normalizedTitle:"《web前端工程师修炼之道》- 书籍",charIndex:144},{level:3,title:"Vue2+Vue3前端框架全套视频",slug:"vue2-vue3前端框架全套视频",normalizedTitle:"vue2+vue3前端框架全套视频",charIndex:351},{level:3,title:"2021黑马前端React精品教程",slug:"_2021黑马前端react精品教程",normalizedTitle:"2021黑马前端react精品教程",charIndex:632}],headersStr:"某课 TypeScript 系统入门到项目实战 再学JavaScript ES(6-10)全版本语法大全 某客时间 《Web前端工程师修炼之道》- 书籍 Vue2+Vue3前端框架全套视频 2021黑马前端React精品教程",content:"# 资料福利\n\n\n# 某课\n\n关注前端有道公众号后台回复关键字自取。\n\n\n# TypeScript 系统入门到项目实战\n\n\n\n\n关键字:\n\ndell ts\n\n\n\n# 再学JavaScript ES(6-10)全版本语法大全\n\n\n\n\n关键字:\n\nes6课程\n\n\n\n# 某客时间\n\n\n\n\n# 《Web前端工程师修炼之道》- 书籍\n\n\n\n《Web前端工程师修炼之道（原书第4版）》将帮助你学习如何使用最新技术、最佳实践经验，以及当今的Web标准，其中包括HTML5和CSS3。每章都提供一些练习和小测验，帮助你了解不同的技术，巩固你对重要概念的理解。\n\n> 链接: https://pan.baidu.com/s/1QBIaaJrDBriKjfurUYv9Qw?pwd=5gqq 提取码: 5gqq\n\n\n# Vue2+Vue3前端框架全套视频\n\n\n\nWeb前端开发工程师，主要职责是利用(X)HTML/CSS/JavaScript/Flash等各种Web技术进行客户端产品的开发。完成客户端程序(也就是浏览器端)的开发，开发JavaScript以及Flash模块，同时结合后台开发技术模拟整体效果，进行丰富互联网的Web开发，致力于通过技术改善用户体验。\n\n * 百度：https://pan.baidu.com/s/13JM7QGJDs-spdRvioW7kkQ\n * 阿里：https://www.aliyundrive.com/s/ZQ3SBc7FAVu\n\n\n# 2021黑马前端React精品教程\n\n\n\n * 百度：https://pan.baidu.com/s/16Ib61vAxPeickgmLyrASKA\n * 阿里：https://www.aliyundrive.com/s/tqDt6nWcPkP",normalizedContent:"# 资料福利\n\n\n# 某课\n\n关注前端有道公众号后台回复关键字自取。\n\n\n# typescript 系统入门到项目实战\n\n\n\n\n关键字:\n\ndell ts\n\n\n\n# 再学javascript es(6-10)全版本语法大全\n\n\n\n\n关键字:\n\nes6课程\n\n\n\n# 某客时间\n\n\n\n\n# 《web前端工程师修炼之道》- 书籍\n\n\n\n《web前端工程师修炼之道（原书第4版）》将帮助你学习如何使用最新技术、最佳实践经验，以及当今的web标准，其中包括html5和css3。每章都提供一些练习和小测验，帮助你了解不同的技术，巩固你对重要概念的理解。\n\n> 链接: https://pan.baidu.com/s/1qbiaajrdbrikjfuruyv9qw?pwd=5gqq 提取码: 5gqq\n\n\n# vue2+vue3前端框架全套视频\n\n\n\nweb前端开发工程师，主要职责是利用(x)html/css/javascript/flash等各种web技术进行客户端产品的开发。完成客户端程序(也就是浏览器端)的开发，开发javascript以及flash模块，同时结合后台开发技术模拟整体效果，进行丰富互联网的web开发，致力于通过技术改善用户体验。\n\n * 百度：https://pan.baidu.com/s/13jm7qgjds-spdrviow7kkq\n * 阿里：https://www.aliyundrive.com/s/zq3sbc7favu\n\n\n# 2021黑马前端react精品教程\n\n\n\n * 百度：https://pan.baidu.com/s/16ib61vaxpeickgmlyraska\n * 阿里：https://www.aliyundrive.com/s/tqdt6nwcpkp",charsets:{cjk:!0},lastUpdated:"2022/06/17, 02:41:44",lastUpdatedTimestamp:1655433704e3},{title:"JS中数组有多少种遍历的方法",frontmatter:{title:"JS中数组有多少种遍历的方法",date:"2022-03-16T17:33:55.000Z",permalink:"/pages/a1a15e/",categories:["前端开发"],tags:["基础知识"],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/01.%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/01.JS%E4%B8%AD%E6%95%B0%E7%BB%84%E6%9C%89%E5%A4%9A%E5%B0%91%E7%A7%8D%E9%81%8D%E5%8E%86%E7%9A%84%E6%96%B9%E6%B3%95.html",relativePath:"02.开发/01.基础知识/01.JS中数组有多少种遍历的方法.md",key:"v-46c389cd",path:"/pages/a1a15e/",headers:[{level:2,title:"for循环",slug:"for循环",normalizedTitle:"for循环",charIndex:68},{level:2,title:"forEach遍历",slug:"foreach遍历",normalizedTitle:"foreach遍历",charIndex:641},{level:2,title:"forIn循环",slug:"forin循环",normalizedTitle:"forin循环",charIndex:759},{level:2,title:"map遍历",slug:"map遍历",normalizedTitle:"map遍历",charIndex:1022},{level:2,title:"forof遍历（ES6）",slug:"forof遍历-es6",normalizedTitle:"forof遍历（es6）",charIndex:1121},{level:2,title:"find",slug:"find",normalizedTitle:"find",charIndex:1138}],headersStr:"for循环 forEach遍历 forIn循环 map遍历 forof遍历（ES6） find",content:"# ECMAScript中数组有多少种遍历的方法\n\ndemo数组\n\nconst list = [7, 5, 2, 3, 5]\n\n\n\n# for循环\n\n简单实用的一种，性能不错。可以用break、continue中断循环操作。\n\n语法\n\nfor (初始化表达式; 条件; 递增表达式) {\n  语句\n}\n\n\n * 初始化表达式（initialize）：确定循环变量的初始值，只在循环开始时执行一次。\n * 条件表达式（test）：每轮循环开始时，都要执行这个条件表达式，只有值为真，才继续进行循环。\n * 递增表达式（increment）：每轮循环的最后一个操作，通常用来递增循环变量。\n\n执行的顺序为：\n\n * 第一次循环，即初始化循环 : 初始化表达式 --\x3e 条件表达式 --\x3e 语句 --\x3e 递增表达式\n * 下次的循环： 条件表达式 --\x3e 语句 --\x3e 递增表达式\n\n示例\n\nfor (let index = 0; index < array.length; index++) {\n    const element = array[index];\n}\n\n\n优化for循环\n\n使用临时变量，将长度缓存起来，避免重复获取数组长度，当数组长度多时优化效果比较明显。\n\nfor (let index = 0,len = array.length; index < len; index++) {\n    const element = array[index];\n}\n\n\n\n# forEach遍历\n\n * 没有返回值，可以改变原数组。\n * 没有中断操作，意味着不能用break、continue，性能弱于普通for循环。\n\narray.forEach(element => {\n       \n});\n\n\n\n# forIn循环\n\n这个循环很常用，但实际上，经分析测试，在众多的循环遍历方式中，它的效率是最低的。\n\n其实这个API本身就不是给数组遍历使用的。\n\nfor (const key in object) {\n    if (Object.hasOwnProperty.call(object, key)) {\n        const element = object[key];\n        array.forEach(element => {\n            \n        });\n    }\n}\n\n\n\n# map遍历\n\nmap和forEach使用方法类似，性能略弱于forEach，区别在于map返回值会产生一个新数组。\n\narray.map(element => {\n       \n});\n\n\n\n# forof遍历（ES6）\n\n\n# find\n\n性能分析 有兴趣的同学可以参考这个demoJS中几种常用数组遍历性能分析工具\n\n\n\n\n# 参考\n\n * https://wangdoc.com/javascript/basic/grammar.html#for-%E5%BE%AA%E7%8E%AF\n * https://coding.imooc.com/learn/list/389.html\n * https://dailc.github.io/2016/11/25/baseKnowlenge_javascript_jsarrayGoThrough",normalizedContent:"# ecmascript中数组有多少种遍历的方法\n\ndemo数组\n\nconst list = [7, 5, 2, 3, 5]\n\n\n\n# for循环\n\n简单实用的一种，性能不错。可以用break、continue中断循环操作。\n\n语法\n\nfor (初始化表达式; 条件; 递增表达式) {\n  语句\n}\n\n\n * 初始化表达式（initialize）：确定循环变量的初始值，只在循环开始时执行一次。\n * 条件表达式（test）：每轮循环开始时，都要执行这个条件表达式，只有值为真，才继续进行循环。\n * 递增表达式（increment）：每轮循环的最后一个操作，通常用来递增循环变量。\n\n执行的顺序为：\n\n * 第一次循环，即初始化循环 : 初始化表达式 --\x3e 条件表达式 --\x3e 语句 --\x3e 递增表达式\n * 下次的循环： 条件表达式 --\x3e 语句 --\x3e 递增表达式\n\n示例\n\nfor (let index = 0; index < array.length; index++) {\n    const element = array[index];\n}\n\n\n优化for循环\n\n使用临时变量，将长度缓存起来，避免重复获取数组长度，当数组长度多时优化效果比较明显。\n\nfor (let index = 0,len = array.length; index < len; index++) {\n    const element = array[index];\n}\n\n\n\n# foreach遍历\n\n * 没有返回值，可以改变原数组。\n * 没有中断操作，意味着不能用break、continue，性能弱于普通for循环。\n\narray.foreach(element => {\n       \n});\n\n\n\n# forin循环\n\n这个循环很常用，但实际上，经分析测试，在众多的循环遍历方式中，它的效率是最低的。\n\n其实这个api本身就不是给数组遍历使用的。\n\nfor (const key in object) {\n    if (object.hasownproperty.call(object, key)) {\n        const element = object[key];\n        array.foreach(element => {\n            \n        });\n    }\n}\n\n\n\n# map遍历\n\nmap和foreach使用方法类似，性能略弱于foreach，区别在于map返回值会产生一个新数组。\n\narray.map(element => {\n       \n});\n\n\n\n# forof遍历（es6）\n\n\n# find\n\n性能分析 有兴趣的同学可以参考这个demojs中几种常用数组遍历性能分析工具\n\n\n\n\n# 参考\n\n * https://wangdoc.com/javascript/basic/grammar.html#for-%e5%be%aa%e7%8e%af\n * https://coding.imooc.com/learn/list/389.html\n * https://dailc.github.io/2016/11/25/baseknowlenge_javascript_jsarraygothrough",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"正则速查表",frontmatter:{title:"正则速查表",date:"2018-12-28T00:00:00.000Z",tags:["工程化"],permalink:"/pages/97fe24/",categories:["前端","工程化"],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/02.%E5%B7%A5%E7%A8%8B%E5%8C%96/02.%E6%AD%A3%E5%88%99%E9%80%9F%E6%9F%A5%E8%A1%A8.html",relativePath:"02.开发/02.工程化/02.正则速查表.md",key:"v-8021b6a0",path:"/pages/97fe24/",headers:[{level:2,title:"账号&密码相关",slug:"账号-密码相关",normalizedTitle:"账号&amp;密码相关",charIndex:null},{level:3,title:"'手机号(mobile phone)中国(严谨), 根据工信部 2019 年最新公布的手机号段',",slug:"手机号-mobile-phone-中国-严谨-根据工信部-2019-年最新公布的手机号段",normalizedTitle:"'手机号(mobile phone)中国(严谨), 根据工信部 2019 年最新公布的手机号段',",charIndex:14},{level:3,title:"'手机号(mobile phone)中国(宽松), 只要是 13,14,15,16,17,18,19 开头即可',",slug:"手机号-mobile-phone-中国-宽松-只要是-13-14-15-16-17-18-19-开头即可",normalizedTitle:"'手机号(mobile phone)中国(宽松), 只要是 13,14,15,16,17,18,19 开头即可',",charIndex:227},{level:3,title:"'手机号(mobile phone)中国(最宽松), 只要是 1 开头即可, 如果你的手机号是用来接收短信, 优先建议选择这一条',",slug:"手机号-mobile-phone-中国-最宽松-只要是-1-开头即可-如果你的手机号是用来接收短信-优先建议选择这一条",normalizedTitle:"'手机号(mobile phone)中国(最宽松), 只要是 1 开头即可, 如果你的手机号是用来接收短信, 优先建议选择这一条',",charIndex:377},{level:3,title:"'email(邮箱)',",slug:"email-邮箱",normalizedTitle:"'email(邮箱)',",charIndex:533},{level:3,title:"'帐号是否合法(字母开头，允许 5-16 字节，允许字母数字下划线组合'",slug:"帐号是否合法-字母开头-允许-5-16-字节-允许字母数字下划线组合",normalizedTitle:"'帐号是否合法(字母开头，允许 5-16 字节，允许字母数字下划线组合'",charIndex:729},{level:3,title:"'用户名校验，4 到 16 位（字母，数字，下划线，减号）',",slug:"用户名校验-4-到-16-位-字母-数字-下划线-减号",normalizedTitle:"'用户名校验，4 到 16 位（字母，数字，下划线，减号）',",charIndex:833},{level:3,title:"'数字和字母组成',",slug:"数字和字母组成",normalizedTitle:"'数字和字母组成',",charIndex:911},{level:3,title:"'密码强度校验，最少 6 位，包括至少 1 个大写字母，1 个小写字母，1 个数字，1 个特殊字符',",slug:"密码强度校验-最少-6-位-包括至少-1-个大写字母-1-个小写字母-1-个数字-1-个特殊字符",normalizedTitle:"'密码强度校验，最少 6 位，包括至少 1 个大写字母，1 个小写字母，1 个数字，1 个特殊字符',",charIndex:973},{level:3,title:"'微信号(wx)，6 至 20 位，以字母开头，字母，数字，减号，下划线'",slug:"微信号-wx-6-至-20-位-以字母开头-字母-数字-减号-下划线",normalizedTitle:"'微信号(wx)，6 至 20 位，以字母开头，字母，数字，减号，下划线'",charIndex:1119},{level:3,title:"'qq 号格式正确',",slug:"qq-号格式正确",normalizedTitle:"'qq 号格式正确',",charIndex:1220},{level:2,title:"银行相关",slug:"银行相关",normalizedTitle:"银行相关",charIndex:1284},{level:3,title:"'身份证号(1 代,15 位数字)',",slug:"身份证号-1-代-15-位数字",normalizedTitle:"'身份证号(1 代,15 位数字)',",charIndex:1293},{level:3,title:"'身份证号(2 代,18 位数字),最后一位是校验位,可能为数字或字符 X',",slug:"身份证号-2-代-18-位数字-最后一位是校验位-可能为数字或字符-x",normalizedTitle:"'身份证号(2 代,18 位数字),最后一位是校验位,可能为数字或字符 x',",charIndex:1398},{level:3,title:"'身份证号, 支持 1/2 代(15 位/18 位数字)',",slug:"身份证号-支持-1-2-代-15-位-18-位数字",normalizedTitle:"'身份证号, 支持 1/2 代(15 位/18 位数字)',",charIndex:1548},{level:3,title:"'护照（包含香港、澳门）',",slug:"护照-包含香港、澳门",normalizedTitle:"'护照（包含香港、澳门）',",charIndex:1719},{level:3,title:"'香港身份证 ',",slug:"香港身份证",normalizedTitle:"'香港身份证 ',",charIndex:1896},{level:3,title:"'澳门身份证 ',",slug:"澳门身份证",normalizedTitle:"'澳门身份证 ',",charIndex:1954},{level:3,title:"'台湾身份证 ',",slug:"台湾身份证",normalizedTitle:"'台湾身份证 ',",charIndex:2010},{level:3,title:"'银行卡号（10 到 30 位, 覆盖对公/私账户, 参考[微信支付(https://pay.weixin.qq.com/wiki/doc/api/xiaowei.php?chapter=22_1)）',",slug:"银行卡号-10-到-30-位-覆盖对公-私账户-参考-微信支付-https-pay-weixin-qq-com-wiki-doc-api-xiaowei-php-chapter-22-1",normalizedTitle:"'银行卡号（10 到 30 位, 覆盖对公/私账户, 参考[微信支付(https://pay.weixin.qq.com/wiki/doc/api/xiaowei.php?chapter=22_1)）',",charIndex:2062},{level:3,title:"'邮政编码(中国)',",slug:"邮政编码-中国",normalizedTitle:"'邮政编码(中国)',",charIndex:2228},{level:3,title:"'统一社会信用代码',",slug:"统一社会信用代码",normalizedTitle:"'统一社会信用代码',",charIndex:2338},{level:3,title:"'统一社会信用代码(宽松匹配)(15 位/18 位/20 位数字/字母)',",slug:"统一社会信用代码-宽松匹配-15-位-18-位-20-位数字-字母",normalizedTitle:"'统一社会信用代码(宽松匹配)(15 位/18 位/20 位数字/字母)',",charIndex:2455},{level:2,title:"数字相关",slug:"数字相关",normalizedTitle:"数字相关",charIndex:2602},{level:3,title:"'小数',",slug:"小数",normalizedTitle:"'小数',",charIndex:2611},{level:3,title:"'数字',",slug:"数字",normalizedTitle:"'数字',",charIndex:2655},{level:3,title:"'股票代码(A 股)'",slug:"股票代码-a-股",normalizedTitle:"'股票代码(a 股)'",charIndex:2695},{level:3,title:"'数字/货币金额（支持负数、千分位分隔符）'",slug:"数字-货币金额-支持负数、千分位分隔符",normalizedTitle:"'数字/货币金额（支持负数、千分位分隔符）'",charIndex:2838},{level:3,title:"'数字/货币金额 (只支持正数、不支持校验千分位分隔符)'",slug:"数字-货币金额-只支持正数、不支持校验千分位分隔符",normalizedTitle:"'数字/货币金额 (只支持正数、不支持校验千分位分隔符)'",charIndex:2961},{level:2,title:"网络&地址相关",slug:"网络-地址相关",normalizedTitle:"网络&amp;地址相关",charIndex:null},{level:3,title:"'mac 地址',",slug:"mac-地址",normalizedTitle:"'mac 地址',",charIndex:3108},{level:3,title:"'视频(video)链接地址（视频格式可按需增删）',",slug:"视频-video-链接地址-视频格式可按需增删",normalizedTitle:"'视频(video)链接地址（视频格式可按需增删）',",charIndex:3221},{level:3,title:"'图片(image)链接地址（图片格式可按需增删）'",slug:"图片-image-链接地址-图片格式可按需增删",normalizedTitle:"'图片(image)链接地址（图片格式可按需增删）'",charIndex:3373},{level:3,title:"'迅雷链接',",slug:"迅雷链接",normalizedTitle:"'迅雷链接',",charIndex:3863},{level:3,title:"'ed2k 链接(宽松匹配)',",slug:"ed2k-链接-宽松匹配",normalizedTitle:"'ed2k 链接(宽松匹配)',",charIndex:4018},{level:3,title:"'磁力链接(宽松匹配)',",slug:"磁力链接-宽松匹配",normalizedTitle:"'磁力链接(宽松匹配)',",charIndex:4253},{level:3,title:"'子网掩码',",slug:"子网掩码",normalizedTitle:"'子网掩码',",charIndex:4384},{level:3,title:"'ip-v4[:端口',",slug:"ip-v4-端口",normalizedTitle:"'ip-v4[:端口',",charIndex:4509},{level:3,title:"'ip-v6[:端口',",slug:"ip-v6-端口",normalizedTitle:"'ip-v6[:端口',",charIndex:4754},{level:2,title:"时间相关",slug:"时间相关",normalizedTitle:"时间相关",charIndex:6518},{level:3,title:"'12 小时制时间（hh:mm:ss）',",slug:"_12-小时制时间-hh-mm-ss",normalizedTitle:"'12 小时制时间（hh:mm:ss）',",charIndex:6527},{level:3,title:"'24 小时制时间（HH:mm:ss）',",slug:"_24-小时制时间-hh-mm-ss",normalizedTitle:"'24 小时制时间（hh:mm:ss）',",charIndex:6618},{level:3,title:"'date(日期)',",slug:"date-日期",normalizedTitle:"'date(日期)',",charIndex:6696},{level:2,title:"中文&字母&数字相关",slug:"中文-字母-数字相关",normalizedTitle:"中文&amp;字母&amp;数字相关",charIndex:null},{level:3,title:"'中文姓名',",slug:"中文姓名",normalizedTitle:"'中文姓名',",charIndex:6833},{level:3,title:"'英文姓名',",slug:"英文姓名",normalizedTitle:"'英文姓名',",charIndex:6912},{level:3,title:"'中文/汉字',",slug:"中文-汉字",normalizedTitle:"'中文/汉字',",charIndex:7013},{level:3,title:"'英文字母',",slug:"英文字母",normalizedTitle:"'英文字母',",charIndex:7380},{level:3,title:"'中文和数字',",slug:"中文和数字",normalizedTitle:"'中文和数字',",charIndex:7421},{level:3,title:"'数字和英文字母组成，并且同时含有数字和英文字母',",slug:"数字和英文字母组成-并且同时含有数字和英文字母",normalizedTitle:"'数字和英文字母组成，并且同时含有数字和英文字母',",charIndex:7798},{level:3,title:"'小写英文字母组成',",slug:"小写英文字母组成",normalizedTitle:"'小写英文字母组成',",charIndex:7879},{level:3,title:"'大写英文字母',",slug:"大写英文字母",normalizedTitle:"'大写英文字母',",charIndex:7921},{level:3,title:"'不能包含字母',",slug:"不能包含字母",normalizedTitle:"'不能包含字母',",charIndex:7964},{level:3,title:"'匹配连续重复的字符',",slug:"匹配连续重复的字符",normalizedTitle:"'匹配连续重复的字符',",charIndex:8015},{level:2,title:"车牌相关",slug:"车牌相关",normalizedTitle:"车牌相关",charIndex:8073},{level:3,title:"'火车车次'",slug:"火车车次",normalizedTitle:"'火车车次'",charIndex:8082},{level:3,title:"'车牌号(新能源)',",slug:"车牌号-新能源",normalizedTitle:"'车牌号(新能源)',",charIndex:8167},{level:3,title:"'车牌号(非新能源)',",slug:"车牌号-非新能源",normalizedTitle:"'车牌号(非新能源)',",charIndex:8355},{level:3,title:"'车牌号(新能源+非新能源)',",slug:"车牌号-新能源-非新能源",normalizedTitle:"'车牌号(新能源+非新能源)',",charIndex:8482},{level:2,title:"其他相关",slug:"其他相关",normalizedTitle:"其他相关",charIndex:8682},{level:3,title:"'大于等于 0, 小于等于 150, 支持小数位出现 5, 如 145.5, 用于判断考卷分数',",slug:"大于等于-0-小于等于-150-支持小数位出现-5-如-145-5-用于判断考卷分数",normalizedTitle:"'大于等于 0, 小于等于 150, 支持小数位出现 5, 如 145.5, 用于判断考卷分数',",charIndex:8691},{level:3,title:"'html 注释',",slug:"html-注释",normalizedTitle:"'html 注释',",charIndex:8807},{level:3,title:"'md5 格式(32 位)',",slug:"md5-格式-32-位",normalizedTitle:"'md5 格式(32 位)',",charIndex:8851},{level:3,title:"'GUID/UUID'",slug:"guid-uuid",normalizedTitle:"'guid/uuid'",charIndex:8940},{level:3,title:"'版本号(version)格式必须为 X.Y.Z',",slug:"版本号-version-格式必须为-x-y-z",normalizedTitle:"'版本号(version)格式必须为 x.y.z',",charIndex:9121},{level:3,title:"'16 进制颜色',",slug:"_16-进制颜色",normalizedTitle:"'16 进制颜色',",charIndex:9188},{level:3,title:"'java 包名',",slug:"java-包名",normalizedTitle:"'java 包名',",charIndex:9278},{level:3,title:"'html 标签(宽松匹配)',",slug:"html-标签-宽松匹配",normalizedTitle:"'html 标签(宽松匹配)',",charIndex:9350}],headersStr:"账号&密码相关 '手机号(mobile phone)中国(严谨), 根据工信部 2019 年最新公布的手机号段', '手机号(mobile phone)中国(宽松), 只要是 13,14,15,16,17,18,19 开头即可', '手机号(mobile phone)中国(最宽松), 只要是 1 开头即可, 如果你的手机号是用来接收短信, 优先建议选择这一条', 'email(邮箱)', '帐号是否合法(字母开头，允许 5-16 字节，允许字母数字下划线组合' '用户名校验，4 到 16 位（字母，数字，下划线，减号）', '数字和字母组成', '密码强度校验，最少 6 位，包括至少 1 个大写字母，1 个小写字母，1 个数字，1 个特殊字符', '微信号(wx)，6 至 20 位，以字母开头，字母，数字，减号，下划线' 'qq 号格式正确', 银行相关 '身份证号(1 代,15 位数字)', '身份证号(2 代,18 位数字),最后一位是校验位,可能为数字或字符 X', '身份证号, 支持 1/2 代(15 位/18 位数字)', '护照（包含香港、澳门）', '香港身份证 ', '澳门身份证 ', '台湾身份证 ', '银行卡号（10 到 30 位, 覆盖对公/私账户, 参考[微信支付(https://pay.weixin.qq.com/wiki/doc/api/xiaowei.php?chapter=22_1)）', '邮政编码(中国)', '统一社会信用代码', '统一社会信用代码(宽松匹配)(15 位/18 位/20 位数字/字母)', 数字相关 '小数', '数字', '股票代码(A 股)' '数字/货币金额（支持负数、千分位分隔符）' '数字/货币金额 (只支持正数、不支持校验千分位分隔符)' 网络&地址相关 'mac 地址', '视频(video)链接地址（视频格式可按需增删）', '图片(image)链接地址（图片格式可按需增删）' '迅雷链接', 'ed2k 链接(宽松匹配)', '磁力链接(宽松匹配)', '子网掩码', 'ip-v4[:端口', 'ip-v6[:端口', 时间相关 '12 小时制时间（hh:mm:ss）', '24 小时制时间（HH:mm:ss）', 'date(日期)', 中文&字母&数字相关 '中文姓名', '英文姓名', '中文/汉字', '英文字母', '中文和数字', '数字和英文字母组成，并且同时含有数字和英文字母', '小写英文字母组成', '大写英文字母', '不能包含字母', '匹配连续重复的字符', 车牌相关 '火车车次' '车牌号(新能源)', '车牌号(非新能源)', '车牌号(新能源+非新能源)', 其他相关 '大于等于 0, 小于等于 150, 支持小数位出现 5, 如 145.5, 用于判断考卷分数', 'html 注释', 'md5 格式(32 位)', 'GUID/UUID' '版本号(version)格式必须为 X.Y.Z', '16 进制颜色', 'java 包名', 'html 标签(宽松匹配)',",content:"# 账号&密码相关\n\n\n# '手机号(mobile phone)中国(严谨), 根据工信部 2019 年最新公布的手机号段',\n\njs /^(?:(?:\\+|00)86)?1(?:(?:3[\\d)|(?:4[5-79)|(?:5[0-35-9)|(?:6[5-7)|(?:7[0-8)|(?:8[\\d)|(?:9[189))\\d8}$/ 示例：'008618311006933', '+8617888829981', '19119255642'\n\n\n# '手机号(mobile phone)中国(宽松), 只要是 13,14,15,16,17,18,19 开头即可',\n\njs /^(?:(?:\\+|00)86)?1[3-9\\d9}$/ 示例：'008618311006933', '+8617888829981', '19119255642'\n\n\n# '手机号(mobile phone)中国(最宽松), 只要是 1 开头即可, 如果你的手机号是用来接收短信, 优先建议选择这一条',\n\njs /^(?:(?:\\+|00)86)?1\\d10}$/ 示例：'008618311006933', '+8617888829981', '19119255642'\n\n\n# 'email(邮箱)',\n\njs /^(([^<>()[\\\\\\.,;:\\s@\"+(\\.[^<>()[\\\\\\.,;:\\s@\"+)*)|(\".+\"))@((\\[[0-91,3}\\.[0-91,3}\\.[0-91,3}\\.[0-91,3}\\)|(([a-zA-Z\\-0-9+\\.)+[a-zA-Z2,}))$/ 示例：'90203918@qq.com', 'nbilly@126.com'\n\n\n# '帐号是否合法(字母开头，允许 5-16 字节，允许字母数字下划线组合'\n\njs /^[a-zA-Z\\w4,15}$/ 示例：'justin', 'justin1989', 'justin_666'\n\n\n# '用户名校验，4 到 16 位（字母，数字，下划线，减号）',\n\njs /^[a-zA-Z0-9_-4,16}$/ 示例：'xiaohua_qq'\n\n\n# '数字和字母组成',\n\njs /^[A-Za-z0-9+$/ 示例：'james666', 'haha233hi'\n\n\n# '密码强度校验，最少 6 位，包括至少 1 个大写字母，1 个小写字母，1 个数字，1 个特殊字符',\n\njs /^\\S*(?=\\S6,})(?=\\S*\\d)(?=\\S*[A-Z)(?=\\S*[a-z)(?=\\S*[!@#$%^&*? )\\S*$/ 示例：'Kd@curry666'\n\n\n# '微信号(wx)，6 至 20 位，以字母开头，字母，数字，减号，下划线'\n\njs /^[a-zA-Z[-_a-zA-Z0-95,19}$/ 示例：'github666', 'kd_-666'\n\n\n# 'qq 号格式正确',\n\njs /^[1-9[0-94,10}$/ **示例：**903013545, 9020304\n\n\n# 银行相关\n\n\n# '身份证号(1 代,15 位数字)',\n\njs /^[1-9\\d7}(?:0\\d|10|11|12)(?:0[1-9|[1-2[\\d|30|31)\\d3}$/ 示例：'123456991010193'\n\n\n# '身份证号(2 代,18 位数字),最后一位是校验位,可能为数字或字符 X',\n\njs /^[1-9\\d5}(?:18|19|20)\\d2}(?:0[1-9|10|11|12)(?:0[1-9|[1-2\\d|30|31)\\d3}[\\dXx$/ 示例：'12345619991205131x'\n\n\n# '身份证号, 支持 1/2 代(15 位/18 位数字)',\n\njs /(^\\d8}(0\\d|10|11|12)([0-2\\d|30|31)\\d3}$)|(^\\d6}(18|19|20)\\d2}(0[1-9|10|11|12)([0-2\\d|30|31)\\d3}(\\d|X|x)$)/ 示例：'622223199912051311'\n\n\n# '护照（包含香港、澳门）',\n\njs /(^[EeKkGgDdSsPpHh\\d8}$)|(^(([Ee[a-fA-F)|([DdSsPp[Ee)|([Kk[Jj)|([Mm[Aa)|(1[45))\\d7}$)/ 示例：'s28233515', '141234567', '159203084', 'MA1234567', 'K25345719'\n\n\n# '香港身份证 ',\n\njs /^[a-zA-Z\\d6}\\([\\dA\\)$/ 示例：'K034169(1)'\n\n\n# '澳门身份证 ',\n\njs /^[1|5|7\\d6}[(\\d)3}$/ 示例：'5686611(1)'\n\n\n# '台湾身份证 ',\n\njs /^[a-zA-Z[0-99}$/ 示例：'U193683453'\n\n\n# '银行卡号（10 到 30 位, 覆盖对公/私账户, 参考[微信支付(https://pay.weixin.qq.com/wiki/doc/api/xiaowei.php?chapter=22_1)）',\n\njs /^[1-9\\d9,29}$/ **示例：**6234567890, 6222026006705354217\n\n\n# '邮政编码(中国)',\n\njs /^(0[1-7|1[0-356|2[0-7|3[0-6|4[0-7|5[1-7|6[1-7|7[0-5|8[013-6)\\d4}$/ 示例：'734500', '100101'\n\n\n# '统一社会信用代码',\n\njs /^[0-9A-HJ-NPQRTUWXY2}\\d6}[0-9A-HJ-NPQRTUWXY10}$/ 示例：'91230184MA1BUFLT44', '92371000MA3MXH0E3W',\n\n\n# '统一社会信用代码(宽松匹配)(15 位/18 位/20 位数字/字母)',\n\njs /^(([0-9A-Za-z15})|([0-9A-Za-z18})|([0-9A-Za-z20}))$/ 示例：'91110108772551611J', '911101085923662400'\n\n\n# 数字相关\n\n\n# '小数',\n\njs /^\\d+\\.\\d+$/ 示例：'0.0', '0.09'\n\n\n# '数字',\n\njs /^\\d1,}$/ **示例：**12345678\n\n\n# '股票代码(A 股)'\n\njs /^(s[hz|S[HZ)(000[\\d3}|002[\\d3}|300[\\d3}|600[\\d3}|60[\\d4})$/ 示例：'sz000858', 'SZ002136', 'sz300675', 'SH600600', 'sh601155'\n\n\n# '数字/货币金额（支持负数、千分位分隔符）'\n\njs /^-?\\d+(,\\d3})*(\\.\\d1,2})?$/ **示例：**100, -0.99, 3, 234.32, -1, 900, 235.09, '12,345,678.90'\n\n\n# '数字/货币金额 (只支持正数、不支持校验千分位分隔符)'\n\njs /(?:^[1-9([0-9+)?(?:\\.[0-91,2})?$)|(?:^(?:0)$)|(?:^[0-9\\.[0-9(?:[0-9)?$)/ **示例：**0.99, 8.99, 666\n\n\n# 网络&地址相关\n\n\n# 'mac 地址',\n\njs /^((([a-f0-92}:)5})|(([a-f0-92}-)5}))[a-f0-92}$/i, 示例：'38:f9:d3:4b:f5:51', '00-0C-29-CA-E4-66'\n\n\n# '视频(video)链接地址（视频格式可按需增删）',\n\njs /^https?:\\/\\/(.+\\/)+.+(\\.(swf|avi|flv|mpg|rm|mov|wav|asf|3gp|mkv|rmvb|mp4))$/i 示例：'http://www.abc.com/video/wc.avi'\n\n\n# '图片(image)链接地址（图片格式可按需增删）'\n\n**示例：**'https://www.abc.com/logo.png'\n### '必须带端口号的网址(或 ip)'\n\n\n\njavascript /^((ht|f)tps?😕/)?[\\w-+(.[\\w-+)+:\\d1,5}/?$/\n\n**示例：**\n```'https://www.qq.com:8080', '127.0.0.1:5050', 'baidu.com:8001', 'http://192.168.1.1:9090', '192.168.1.1', 'https://www.jd.com'```\n    \n### '网址(url,支持端口和\"?+参数\"和\"#+参数)'\n\n```js /^(((ht|f)tps?):\\/\\/)?[\\w-+(\\.[\\w-+)+([\\w.,@?^=%&:/~+#-*[\\w@?^=%&/~+#-)?$/```\n**示例：**\n```'www.qq.com', 'https://baidu.com', '360.com:8080/vue/#/a=1&b=2',\n\n\n\n# '迅雷链接',\n\njs /^thunderx?:\\/\\/[a-zA-Z\\d+=$/ 示例： 'thunder://QUEsICdtYWduZXQ6P3h0PXVybjpidGloOjBCQTE0RTUxRkUwNjU1RjE0Qzc4NjE4RjY4NDY0QjZFNTEyNjcyOUMnWlo='\n\n\n# 'ed2k 链接(宽松匹配)',\n\njs /^ed2k:\\/\\/\\|file\\|.+\\|\\/$/ 示例： 'ed2k://|file|%E5%AF%84%E7%94%9F%E8%99%AB.PARASITE.2019.HD-1080p.X264.AAC-UUMp4(ED2000.COM).mp4|2501554832|C0B93E0879C6071CBED732C20CE577A3|h=5HTKZPQFYRKORN52I3M7GQ4QQCIHFIBV|/'\n\n\n# '磁力链接(宽松匹配)',\n\njs /^magnet:\\?xt=urn:btih:[0-9a-fA-F40,}.*$/ 示例： 'magnet:?xt=urn:btih:40A89A6F4FB1498A98087109D012A9A851FBE0FC'\n\n\n# '子网掩码',\n\njs /^(?:\\d1,2}|1\\d\\d|2[0-4\\d|25[0-5)(?:\\.(?:\\d1,2}|1\\d\\d|2[0-4\\d|25[0-5))3}$/ 示例：'255.255.255.0', '255.224.0.0'\n\n\n# 'ip-v4[:端口',\n\njs /^((\\d|[1-9\\d|1\\d\\d|2[0-4\\d|25[0-5)\\.)3}(\\d|[1-9\\d|1\\d\\d|2[0-4\\d|25[0-5)(?::(?:[0-9|[1-9[0-91,3}|[1-5[0-94}|6[0-4[0-93}|65[0-4[0-92}|655[0-2[0-9|6553[0-5))?$/ 示例：'172.16.0.0', '172.16.0.0:8080', '127.0.0.0', '127.0.0.0:998'\n\n\n# 'ip-v6[:端口',\n\njs /^(?:(?:(?:[0-9A-Fa-f1,4}:)7}[0-9A-Fa-f1,4})|(([0-9A-Fa-f1,4}:)6}:[0-9A-Fa-f1,4})|(([0-9A-Fa-f1,4}:)5}:([0-9A-Fa-f1,4}:)?[0-9A-Fa-f1,4})|(([0-9A-Fa-f1,4}:)4}:([0-9A-Fa-f1,4}:)0,2}[0-9A-Fa-f1,4})|(([0-9A-Fa-f1,4}:)3}:([0-9A-Fa-f1,4}:)0,3}[0-9A-Fa-f1,4})|(([0-9A-Fa-f1,4}:)2}:([0-9A-Fa-f1,4}:)0,4}[0-9A-Fa-f1,4})|(([0-9A-Fa-f1,4}:)6}((\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b)\\.)3}(\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b))|(([0-9A-Fa-f1,4}:)0,5}:((\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b)\\.)3}(\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b))|(::([0-9A-Fa-f1,4}:)0,5}((\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b)\\.)3}(\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b))|([0-9A-Fa-f1,4}::([0-9A-Fa-f1,4}:)0,5}[0-9A-Fa-f1,4})|(::([0-9A-Fa-f1,4}:)0,6}[0-9A-Fa-f1,4})|(([0-9A-Fa-f1,4}:)1,7}:))|\\[(?:(?:(?:[0-9A-Fa-f1,4}:)7}[0-9A-Fa-f1,4})|(([0-9A-Fa-f1,4}:)6}:[0-9A-Fa-f1,4})|(([0-9A-Fa-f1,4}:)5}:([0-9A-Fa-f1,4}:)?[0-9A-Fa-f1,4})|(([0-9A-Fa-f1,4}:)4}:([0-9A-Fa-f1,4}:)0,2}[0-9A-Fa-f1,4})|(([0-9A-Fa-f1,4}:)3}:([0-9A-Fa-f1,4}:)0,3}[0-9A-Fa-f1,4})|(([0-9A-Fa-f1,4}:)2}:([0-9A-Fa-f1,4}:)0,4}[0-9A-Fa-f1,4})|(([0-9A-Fa-f1,4}:)6}((\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b)\\.)3}(\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b))|(([0-9A-Fa-f1,4}:)0,5}:((\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b)\\.)3}(\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b))|(::([0-9A-Fa-f1,4}:)0,5}((\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b)\\.)3}(\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b))|([0-9A-Fa-f1,4}::([0-9A-Fa-f1,4}:)0,5}[0-9A-Fa-f1,4})|(::([0-9A-Fa-f1,4}:)0,6}[0-9A-Fa-f1,4})|(([0-9A-Fa-f1,4}:)1,7}:))\\(?::(?:[0-9|[1-9[0-91,3}|[1-5[0-94}|6[0-4[0-93}|65[0-4[0-92}|655[0-2[0-9|6553[0-5))?$/i, 示例：'2031:0000:130f:0000:0000:09c0:876a:130b', '[2031:0000:130f:0000:0000:09c0:876a:130b:8080'\n\n\n# 时间相关\n\n\n# '12 小时制时间（hh:mm:ss）',\n\njs /^(?:1[0-2|0?[1-9):[0-5\\d:[0-5\\d$/ 示例： '11:34:55','23:34:55'\n\n\n# '24 小时制时间（HH:mm:ss）',\n\njs /^(?:[01\\d|2[0-3):[0-5\\d:[0-5\\d$/ 示例：'23:34:55'\n\n\n# 'date(日期)',\n\njs /^\\d1,4}(-)(1[0-2|0?[1-9)\\1(0?[1-9|[1-2\\d|30|31)$/ 示例：'1990-12-12', '1-1-1','0000-1-1', ,'2020-00-01'\n\n\n# 中文&字母&数字相关\n\n\n# '中文姓名',\n\njs /^(?:[\\u4e00-\\u9fa5·2,16})$/ 示例：'葛二蛋', '凯文·杜兰特', '德克·维尔纳·诺维茨基'\n\n\n# '英文姓名',\n\njs /(^[a-zA-Z[a-zA-Z\\s0,20}[a-zA-Z$)/ 示例：'James', 'Kevin Wayne Durant', 'Dirk Nowitzki'\n\n\n# '中文/汉字',\n\n/^(?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0])+$/\n\n\n示例：'正则', '前端'\n\n\n# '英文字母',\n\njs /^[a-zA-Z+$/ 示例：'Russel'\n\n\n# '中文和数字',\n\n/^((?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0])|(\\d))+$/\n\n\n示例：'哈哈哈', '你好6啊'\n\n\n# '数字和英文字母组成，并且同时含有数字和英文字母',\n\njs /^(?=.*[a-zA-Z)(?=.*\\d).+$/ 示例：'我a我1我', 'a对1'\n\n\n# '小写英文字母组成',\n\njs /^[a-z+$/ 示例：'russel'\n\n\n# '大写英文字母',\n\njs /^[A-Z+$/ 示例：'ABC', 'KD'\n\n\n# '不能包含字母',\n\njs /^[^A-Za-z*$/ 示例：'你好6啊', '@¥()！'\n\n\n# '匹配连续重复的字符',\n\njs /(.)\\1+/ 示例：'我我我', '112233', '11234'\n\n\n# 车牌相关\n\n\n# '火车车次'\n\n/^[GCDZTSPKXLY1-9\\d1,4}$/\n\n\n示例：'G1868', 'D102', 'D9', 'Z5', 'Z24', 'Z17'\n\n\n# '车牌号(新能源)',\n\njs /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领[A-HJ-NP-Z(?:((\\d5}[A-HJK)|([A-HJK[A-HJ-NP-Z0-9[0-94}))|[A-HJ-NP-Z0-94}[A-HJ-NP-Z0-9挂学警港澳)$/ 示例：'京AD92035', '甘G23459F', '京AA92035',\n\n\n# '车牌号(非新能源)',\n\njs /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领[A-HJ-NP-Z[A-HJ-NP-Z0-94}[A-HJ-NP-Z0-9挂学警港澳$/ 示例：'京A00599', '黑D23908'\n\n\n# '车牌号(新能源+非新能源)',\n\njs /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领[A-HJ-NP-Z[A-HJ-NP-Z0-94,5}[A-HJ-NP-Z0-9挂学警港澳$/ 示例：'京A12345D', '京A00599', '京AD92035', '甘G23459F', '京AA92035', ,'宁AD1234555555', '浙苏H6F681'\n\n\n# 其他相关\n\n\n# '大于等于 0, 小于等于 150, 支持小数位出现 5, 如 145.5, 用于判断考卷分数',\n\njs /^150$|^(?:\\d|[1-9\\d|1[0-4\\d)(?:\\.5)?$/ **示例：**150, 100.5\n\n\n# 'html 注释',\n\njs /^\x3c!--[\\s\\S*?--\x3e$/ 示例：''\n\n\n# 'md5 格式(32 位)',\n\njs /^([a-f\\d32}|[A-F\\d32})$/ 示例：'21fe181c5bfc16306a6828c1f7b762e8',\n\n\n# 'GUID/UUID'\n\njs /^[a-f\\d4}(?:[a-f\\d4}-)4}[a-f\\d12}$/i 示例： 'e155518c-ca1b-443c-9be9-fe90fdab7345', '41E3DAF5-6E37-4BCC-9F8E-0D9521E2AA8D', '00000000-0000-0000-0000-000000000000'\n\n\n# '版本号(version)格式必须为 X.Y.Z',\n\njs /^\\d+(?:\\.\\d+)2}$/ 示例：'16.3.10'\n\n\n# '16 进制颜色',\n\njs /^#?([a-fA-F0-96}|[a-fA-F0-93})$/ 示例：'#f00', '#F90', '#000', '#fe9de8'\n\n\n# 'java 包名',\n\njs /^([a-zA-Z_\\w*)+([.[a-zA-Z_\\w*)+$/ 示例：'com.bbb.name'\n\n\n# 'html 标签(宽松匹配)',\n\njs /<(\\w+)[^>*>(.*?<\\/\\1>)?/ 示例：'\n\n2333\n', '', '\n'\n\n",normalizedContent:"# 账号&密码相关\n\n\n# '手机号(mobile phone)中国(严谨), 根据工信部 2019 年最新公布的手机号段',\n\njs /^(?:(?:\\+|00)86)?1(?:(?:3[\\d)|(?:4[5-79)|(?:5[0-35-9)|(?:6[5-7)|(?:7[0-8)|(?:8[\\d)|(?:9[189))\\d8}$/ 示例：'008618311006933', '+8617888829981', '19119255642'\n\n\n# '手机号(mobile phone)中国(宽松), 只要是 13,14,15,16,17,18,19 开头即可',\n\njs /^(?:(?:\\+|00)86)?1[3-9\\d9}$/ 示例：'008618311006933', '+8617888829981', '19119255642'\n\n\n# '手机号(mobile phone)中国(最宽松), 只要是 1 开头即可, 如果你的手机号是用来接收短信, 优先建议选择这一条',\n\njs /^(?:(?:\\+|00)86)?1\\d10}$/ 示例：'008618311006933', '+8617888829981', '19119255642'\n\n\n# 'email(邮箱)',\n\njs /^(([^<>()[\\\\\\.,;:\\s@\"+(\\.[^<>()[\\\\\\.,;:\\s@\"+)*)|(\".+\"))@((\\[[0-91,3}\\.[0-91,3}\\.[0-91,3}\\.[0-91,3}\\)|(([a-za-z\\-0-9+\\.)+[a-za-z2,}))$/ 示例：'90203918@qq.com', 'nbilly@126.com'\n\n\n# '帐号是否合法(字母开头，允许 5-16 字节，允许字母数字下划线组合'\n\njs /^[a-za-z\\w4,15}$/ 示例：'justin', 'justin1989', 'justin_666'\n\n\n# '用户名校验，4 到 16 位（字母，数字，下划线，减号）',\n\njs /^[a-za-z0-9_-4,16}$/ 示例：'xiaohua_qq'\n\n\n# '数字和字母组成',\n\njs /^[a-za-z0-9+$/ 示例：'james666', 'haha233hi'\n\n\n# '密码强度校验，最少 6 位，包括至少 1 个大写字母，1 个小写字母，1 个数字，1 个特殊字符',\n\njs /^\\s*(?=\\s6,})(?=\\s*\\d)(?=\\s*[a-z)(?=\\s*[a-z)(?=\\s*[!@#$%^&*? )\\s*$/ 示例：'kd@curry666'\n\n\n# '微信号(wx)，6 至 20 位，以字母开头，字母，数字，减号，下划线'\n\njs /^[a-za-z[-_a-za-z0-95,19}$/ 示例：'github666', 'kd_-666'\n\n\n# 'qq 号格式正确',\n\njs /^[1-9[0-94,10}$/ **示例：**903013545, 9020304\n\n\n# 银行相关\n\n\n# '身份证号(1 代,15 位数字)',\n\njs /^[1-9\\d7}(?:0\\d|10|11|12)(?:0[1-9|[1-2[\\d|30|31)\\d3}$/ 示例：'123456991010193'\n\n\n# '身份证号(2 代,18 位数字),最后一位是校验位,可能为数字或字符 x',\n\njs /^[1-9\\d5}(?:18|19|20)\\d2}(?:0[1-9|10|11|12)(?:0[1-9|[1-2\\d|30|31)\\d3}[\\dxx$/ 示例：'12345619991205131x'\n\n\n# '身份证号, 支持 1/2 代(15 位/18 位数字)',\n\njs /(^\\d8}(0\\d|10|11|12)([0-2\\d|30|31)\\d3}$)|(^\\d6}(18|19|20)\\d2}(0[1-9|10|11|12)([0-2\\d|30|31)\\d3}(\\d|x|x)$)/ 示例：'622223199912051311'\n\n\n# '护照（包含香港、澳门）',\n\njs /(^[eekkggddsspphh\\d8}$)|(^(([ee[a-fa-f)|([ddsspp[ee)|([kk[jj)|([mm[aa)|(1[45))\\d7}$)/ 示例：'s28233515', '141234567', '159203084', 'ma1234567', 'k25345719'\n\n\n# '香港身份证 ',\n\njs /^[a-za-z\\d6}\\([\\da\\)$/ 示例：'k034169(1)'\n\n\n# '澳门身份证 ',\n\njs /^[1|5|7\\d6}[(\\d)3}$/ 示例：'5686611(1)'\n\n\n# '台湾身份证 ',\n\njs /^[a-za-z[0-99}$/ 示例：'u193683453'\n\n\n# '银行卡号（10 到 30 位, 覆盖对公/私账户, 参考[微信支付(https://pay.weixin.qq.com/wiki/doc/api/xiaowei.php?chapter=22_1)）',\n\njs /^[1-9\\d9,29}$/ **示例：**6234567890, 6222026006705354217\n\n\n# '邮政编码(中国)',\n\njs /^(0[1-7|1[0-356|2[0-7|3[0-6|4[0-7|5[1-7|6[1-7|7[0-5|8[013-6)\\d4}$/ 示例：'734500', '100101'\n\n\n# '统一社会信用代码',\n\njs /^[0-9a-hj-npqrtuwxy2}\\d6}[0-9a-hj-npqrtuwxy10}$/ 示例：'91230184ma1buflt44', '92371000ma3mxh0e3w',\n\n\n# '统一社会信用代码(宽松匹配)(15 位/18 位/20 位数字/字母)',\n\njs /^(([0-9a-za-z15})|([0-9a-za-z18})|([0-9a-za-z20}))$/ 示例：'91110108772551611j', '911101085923662400'\n\n\n# 数字相关\n\n\n# '小数',\n\njs /^\\d+\\.\\d+$/ 示例：'0.0', '0.09'\n\n\n# '数字',\n\njs /^\\d1,}$/ **示例：**12345678\n\n\n# '股票代码(a 股)'\n\njs /^(s[hz|s[hz)(000[\\d3}|002[\\d3}|300[\\d3}|600[\\d3}|60[\\d4})$/ 示例：'sz000858', 'sz002136', 'sz300675', 'sh600600', 'sh601155'\n\n\n# '数字/货币金额（支持负数、千分位分隔符）'\n\njs /^-?\\d+(,\\d3})*(\\.\\d1,2})?$/ **示例：**100, -0.99, 3, 234.32, -1, 900, 235.09, '12,345,678.90'\n\n\n# '数字/货币金额 (只支持正数、不支持校验千分位分隔符)'\n\njs /(?:^[1-9([0-9+)?(?:\\.[0-91,2})?$)|(?:^(?:0)$)|(?:^[0-9\\.[0-9(?:[0-9)?$)/ **示例：**0.99, 8.99, 666\n\n\n# 网络&地址相关\n\n\n# 'mac 地址',\n\njs /^((([a-f0-92}:)5})|(([a-f0-92}-)5}))[a-f0-92}$/i, 示例：'38:f9:d3:4b:f5:51', '00-0c-29-ca-e4-66'\n\n\n# '视频(video)链接地址（视频格式可按需增删）',\n\njs /^https?:\\/\\/(.+\\/)+.+(\\.(swf|avi|flv|mpg|rm|mov|wav|asf|3gp|mkv|rmvb|mp4))$/i 示例：'http://www.abc.com/video/wc.avi'\n\n\n# '图片(image)链接地址（图片格式可按需增删）'\n\n**示例：**'https://www.abc.com/logo.png'\n### '必须带端口号的网址(或 ip)'\n\n\n\njavascript /^((ht|f)tps?😕/)?[\\w-+(.[\\w-+)+:\\d1,5}/?$/\n\n**示例：**\n```'https://www.qq.com:8080', '127.0.0.1:5050', 'baidu.com:8001', 'http://192.168.1.1:9090', '192.168.1.1', 'https://www.jd.com'```\n    \n### '网址(url,支持端口和\"?+参数\"和\"#+参数)'\n\n```js /^(((ht|f)tps?):\\/\\/)?[\\w-+(\\.[\\w-+)+([\\w.,@?^=%&:/~+#-*[\\w@?^=%&/~+#-)?$/```\n**示例：**\n```'www.qq.com', 'https://baidu.com', '360.com:8080/vue/#/a=1&b=2',\n\n\n\n# '迅雷链接',\n\njs /^thunderx?:\\/\\/[a-za-z\\d+=$/ 示例： 'thunder://quesicdtywduzxq6p3h0pxvybjpidgloojbcqte0rtuxrkuwnju1rje0qzc4nje4rjy4ndy0qjzfnteynjcyoumnwlo='\n\n\n# 'ed2k 链接(宽松匹配)',\n\njs /^ed2k:\\/\\/\\|file\\|.+\\|\\/$/ 示例： 'ed2k://|file|%e5%af%84%e7%94%9f%e8%99%ab.parasite.2019.hd-1080p.x264.aac-uump4(ed2000.com).mp4|2501554832|c0b93e0879c6071cbed732c20ce577a3|h=5htkzpqfyrkorn52i3m7gq4qqcihfibv|/'\n\n\n# '磁力链接(宽松匹配)',\n\njs /^magnet:\\?xt=urn:btih:[0-9a-fa-f40,}.*$/ 示例： 'magnet:?xt=urn:btih:40a89a6f4fb1498a98087109d012a9a851fbe0fc'\n\n\n# '子网掩码',\n\njs /^(?:\\d1,2}|1\\d\\d|2[0-4\\d|25[0-5)(?:\\.(?:\\d1,2}|1\\d\\d|2[0-4\\d|25[0-5))3}$/ 示例：'255.255.255.0', '255.224.0.0'\n\n\n# 'ip-v4[:端口',\n\njs /^((\\d|[1-9\\d|1\\d\\d|2[0-4\\d|25[0-5)\\.)3}(\\d|[1-9\\d|1\\d\\d|2[0-4\\d|25[0-5)(?::(?:[0-9|[1-9[0-91,3}|[1-5[0-94}|6[0-4[0-93}|65[0-4[0-92}|655[0-2[0-9|6553[0-5))?$/ 示例：'172.16.0.0', '172.16.0.0:8080', '127.0.0.0', '127.0.0.0:998'\n\n\n# 'ip-v6[:端口',\n\njs /^(?:(?:(?:[0-9a-fa-f1,4}:)7}[0-9a-fa-f1,4})|(([0-9a-fa-f1,4}:)6}:[0-9a-fa-f1,4})|(([0-9a-fa-f1,4}:)5}:([0-9a-fa-f1,4}:)?[0-9a-fa-f1,4})|(([0-9a-fa-f1,4}:)4}:([0-9a-fa-f1,4}:)0,2}[0-9a-fa-f1,4})|(([0-9a-fa-f1,4}:)3}:([0-9a-fa-f1,4}:)0,3}[0-9a-fa-f1,4})|(([0-9a-fa-f1,4}:)2}:([0-9a-fa-f1,4}:)0,4}[0-9a-fa-f1,4})|(([0-9a-fa-f1,4}:)6}((\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b)\\.)3}(\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b))|(([0-9a-fa-f1,4}:)0,5}:((\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b)\\.)3}(\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b))|(::([0-9a-fa-f1,4}:)0,5}((\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b)\\.)3}(\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b))|([0-9a-fa-f1,4}::([0-9a-fa-f1,4}:)0,5}[0-9a-fa-f1,4})|(::([0-9a-fa-f1,4}:)0,6}[0-9a-fa-f1,4})|(([0-9a-fa-f1,4}:)1,7}:))|\\[(?:(?:(?:[0-9a-fa-f1,4}:)7}[0-9a-fa-f1,4})|(([0-9a-fa-f1,4}:)6}:[0-9a-fa-f1,4})|(([0-9a-fa-f1,4}:)5}:([0-9a-fa-f1,4}:)?[0-9a-fa-f1,4})|(([0-9a-fa-f1,4}:)4}:([0-9a-fa-f1,4}:)0,2}[0-9a-fa-f1,4})|(([0-9a-fa-f1,4}:)3}:([0-9a-fa-f1,4}:)0,3}[0-9a-fa-f1,4})|(([0-9a-fa-f1,4}:)2}:([0-9a-fa-f1,4}:)0,4}[0-9a-fa-f1,4})|(([0-9a-fa-f1,4}:)6}((\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b)\\.)3}(\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b))|(([0-9a-fa-f1,4}:)0,5}:((\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b)\\.)3}(\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b))|(::([0-9a-fa-f1,4}:)0,5}((\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b)\\.)3}(\\b((25[0-5)|(1\\d2})|(2[0-4\\d)|(\\d1,2}))\\b))|([0-9a-fa-f1,4}::([0-9a-fa-f1,4}:)0,5}[0-9a-fa-f1,4})|(::([0-9a-fa-f1,4}:)0,6}[0-9a-fa-f1,4})|(([0-9a-fa-f1,4}:)1,7}:))\\(?::(?:[0-9|[1-9[0-91,3}|[1-5[0-94}|6[0-4[0-93}|65[0-4[0-92}|655[0-2[0-9|6553[0-5))?$/i, 示例：'2031:0000:130f:0000:0000:09c0:876a:130b', '[2031:0000:130f:0000:0000:09c0:876a:130b:8080'\n\n\n# 时间相关\n\n\n# '12 小时制时间（hh:mm:ss）',\n\njs /^(?:1[0-2|0?[1-9):[0-5\\d:[0-5\\d$/ 示例： '11:34:55','23:34:55'\n\n\n# '24 小时制时间（hh:mm:ss）',\n\njs /^(?:[01\\d|2[0-3):[0-5\\d:[0-5\\d$/ 示例：'23:34:55'\n\n\n# 'date(日期)',\n\njs /^\\d1,4}(-)(1[0-2|0?[1-9)\\1(0?[1-9|[1-2\\d|30|31)$/ 示例：'1990-12-12', '1-1-1','0000-1-1', ,'2020-00-01'\n\n\n# 中文&字母&数字相关\n\n\n# '中文姓名',\n\njs /^(?:[\\u4e00-\\u9fa5·2,16})$/ 示例：'葛二蛋', '凯文·杜兰特', '德克·维尔纳·诺维茨基'\n\n\n# '英文姓名',\n\njs /(^[a-za-z[a-za-z\\s0,20}[a-za-z$)/ 示例：'james', 'kevin wayne durant', 'dirk nowitzki'\n\n\n# '中文/汉字',\n\n/^(?:[\\u3400-\\u4db5\\u4e00-\\u9fea\\ufa0e\\ufa0f\\ufa11\\ufa13\\ufa14\\ufa1f\\ufa21\\ufa23\\ufa24\\ufa27-\\ufa29]|[\\ud840-\\ud868\\ud86a-\\ud86c\\ud86f-\\ud872\\ud874-\\ud879][\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud87a[\\udc00-\\udfe0])+$/\n\n\n示例：'正则', '前端'\n\n\n# '英文字母',\n\njs /^[a-za-z+$/ 示例：'russel'\n\n\n# '中文和数字',\n\n/^((?:[\\u3400-\\u4db5\\u4e00-\\u9fea\\ufa0e\\ufa0f\\ufa11\\ufa13\\ufa14\\ufa1f\\ufa21\\ufa23\\ufa24\\ufa27-\\ufa29]|[\\ud840-\\ud868\\ud86a-\\ud86c\\ud86f-\\ud872\\ud874-\\ud879][\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud87a[\\udc00-\\udfe0])|(\\d))+$/\n\n\n示例：'哈哈哈', '你好6啊'\n\n\n# '数字和英文字母组成，并且同时含有数字和英文字母',\n\njs /^(?=.*[a-za-z)(?=.*\\d).+$/ 示例：'我a我1我', 'a对1'\n\n\n# '小写英文字母组成',\n\njs /^[a-z+$/ 示例：'russel'\n\n\n# '大写英文字母',\n\njs /^[a-z+$/ 示例：'abc', 'kd'\n\n\n# '不能包含字母',\n\njs /^[^a-za-z*$/ 示例：'你好6啊', '@¥()！'\n\n\n# '匹配连续重复的字符',\n\njs /(.)\\1+/ 示例：'我我我', '112233', '11234'\n\n\n# 车牌相关\n\n\n# '火车车次'\n\n/^[gcdztspkxly1-9\\d1,4}$/\n\n\n示例：'g1868', 'd102', 'd9', 'z5', 'z24', 'z17'\n\n\n# '车牌号(新能源)',\n\njs /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领[a-hj-np-z(?:((\\d5}[a-hjk)|([a-hjk[a-hj-np-z0-9[0-94}))|[a-hj-np-z0-94}[a-hj-np-z0-9挂学警港澳)$/ 示例：'京ad92035', '甘g23459f', '京aa92035',\n\n\n# '车牌号(非新能源)',\n\njs /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领[a-hj-np-z[a-hj-np-z0-94}[a-hj-np-z0-9挂学警港澳$/ 示例：'京a00599', '黑d23908'\n\n\n# '车牌号(新能源+非新能源)',\n\njs /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领[a-hj-np-z[a-hj-np-z0-94,5}[a-hj-np-z0-9挂学警港澳$/ 示例：'京a12345d', '京a00599', '京ad92035', '甘g23459f', '京aa92035', ,'宁ad1234555555', '浙苏h6f681'\n\n\n# 其他相关\n\n\n# '大于等于 0, 小于等于 150, 支持小数位出现 5, 如 145.5, 用于判断考卷分数',\n\njs /^150$|^(?:\\d|[1-9\\d|1[0-4\\d)(?:\\.5)?$/ **示例：**150, 100.5\n\n\n# 'html 注释',\n\njs /^\x3c!--[\\s\\s*?--\x3e$/ 示例：''\n\n\n# 'md5 格式(32 位)',\n\njs /^([a-f\\d32}|[a-f\\d32})$/ 示例：'21fe181c5bfc16306a6828c1f7b762e8',\n\n\n# 'guid/uuid'\n\njs /^[a-f\\d4}(?:[a-f\\d4}-)4}[a-f\\d12}$/i 示例： 'e155518c-ca1b-443c-9be9-fe90fdab7345', '41e3daf5-6e37-4bcc-9f8e-0d9521e2aa8d', '00000000-0000-0000-0000-000000000000'\n\n\n# '版本号(version)格式必须为 x.y.z',\n\njs /^\\d+(?:\\.\\d+)2}$/ 示例：'16.3.10'\n\n\n# '16 进制颜色',\n\njs /^#?([a-fa-f0-96}|[a-fa-f0-93})$/ 示例：'#f00', '#f90', '#000', '#fe9de8'\n\n\n# 'java 包名',\n\njs /^([a-za-z_\\w*)+([.[a-za-z_\\w*)+$/ 示例：'com.bbb.name'\n\n\n# 'html 标签(宽松匹配)',\n\njs /<(\\w+)[^>*>(.*?<\\/\\1>)?/ 示例：'\n\n2333\n', '', '\n'\n\n",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"npm&yarn操作命令都在这了",frontmatter:{title:"npm&yarn操作命令都在这了",date:"2017-12-28T00:00:00.000Z",tags:["工程化"],permalink:"/pages/b89816/",categories:["前端","工程化"],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/02.%E5%B7%A5%E7%A8%8B%E5%8C%96/03.npm&yarn%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%E9%83%BD%E5%9C%A8%E8%BF%99%E4%BA%86.html",relativePath:"02.开发/02.工程化/03.npm&yarn操作命令都在这了.md",key:"v-f162a536",path:"/pages/b89816/",headers:[{level:2,title:"Usage",slug:"usage",normalizedTitle:"usage",charIndex:64},{level:3,title:"全局安装",slug:"全局安装",normalizedTitle:"全局安装",charIndex:74},{level:3,title:"初始化一个项目",slug:"初始化一个项目",normalizedTitle:"初始化一个项目",charIndex:301},{level:3,title:"安装项目依赖",slug:"安装项目依赖",normalizedTitle:"安装项目依赖",charIndex:391},{level:3,title:"管理全局包",slug:"管理全局包",normalizedTitle:"管理全局包",charIndex:2108},{level:3,title:"升级依赖项",slug:"升级依赖项",normalizedTitle:"升级依赖项",charIndex:2690},{level:3,title:"删除依赖包",slug:"删除依赖包",normalizedTitle:"删除依赖包",charIndex:2947},{level:3,title:"更新项目中所有依赖项",slug:"更新项目中所有依赖项",normalizedTitle:"更新项目中所有依赖项",charIndex:3103},{level:3,title:"切换国内镜像",slug:"切换国内镜像",normalizedTitle:"切换国内镜像",charIndex:4076},{level:3,title:"nrm / yrm 管理镜像源工具",slug:"nrm-yrm-管理镜像源工具",normalizedTitle:"nrm / yrm 管理镜像源工具",charIndex:4742},{level:3,title:"建议",slug:"建议",normalizedTitle:"建议",charIndex:5281},{level:3,title:"参考文章",slug:"参考文章",normalizedTitle:"参考文章",charIndex:5606}],headersStr:"Usage 全局安装 初始化一个项目 安装项目依赖 管理全局包 升级依赖项 删除依赖包 更新项目中所有依赖项 切换国内镜像 nrm / yrm 管理镜像源工具 建议 参考文章",content:'有时候想查个命令，或者换个镜像找了几篇文章才找到，最近闲着没事干，干脆整理一篇文档，以后就不用在网上瞎搜有的还写不全。\n\n\n# Usage\n\n\n# 全局安装\n\n安装node\n\nmac同学，安装全局包会提示权限不足，在前面添加sudo就行\n\n// 安装node自带npm，检查是否安装成功，执行如下命令\nnpm -v  \n// 6.14.15\n\n// yarn\nnpm install -g yarn\n\n// cnpm \nnpm install -g cnpm\n\n// pnpm\nnpm install -g pnpm\n\n\ncnpm、pnpm 用法类似npm，yarn不一样地方列出来单独说明。\n\n\n# 初始化一个项目\n\nnpm init\n// OR\nyarn init\n\n// 快速生成的package.json默认配置\nnpm init -y\nyarn init -y\n\n\n\n# 安装项目依赖\n\nnpm / cnpm / pnpm\n\nnpm install [package]\n// 简写\nnpm i [package]\n\n// 安装指定版本\nnpm i[package]@[version]\nnpm i [package]@[tag]\n\n// 全局安装依赖\nnpm i -g [package]\n\n\nyarn\n\nyarn add [package]\n\n// 安装指定版本\nyarn add [package]@[version]\nyarn add [package]@[tag]\n\n// 全局安装依赖\nyarn global add [package]\n\n\n小栗子\n\n// 安装指定版本jquery\nnpm i jquery@3.0.0\n\n// 安装最新版本\nnpm i react@latest\n\n// 安装的依赖项都可以通过package.json 查看\n"dependencies": {\n    "@loadable/component": "^5.14.1",\n    "prismjs": "^1.23.0",\n    "react-dom": "^17.0.2",\n    "react-helmet": "^6.1.0",\n    "react-router-dom": "^5.2.0",\n    "jquery": "^3.0.0",\n    "react": "^17.0.2",\n},\n\n\nTips1 意外情况\n\n可能安装依赖卡断，或者中断安装依赖，后面在重新安装，会提示报错这是因为有缓存的原因。\n\n方式一\n\n删除node_modules包重新安装。\n\n方式二\n\n删除缓存\n\nnpm cache clean --force\n\n\nTips2 --save--dev作用\n\n在安装我们依赖的时候，经常会看到后缀 --save或--save--dev，入行那会什么都不懂照着写去，能用就行，结果开发好好的，线上就是不行。\n\nnpm install vue --no-save\nnpm install vue --save\nnpm install @babel/core --save-dev\n\n\n--no-save 查看package.json，文件内容不发生改变，在运行项目时能正常运行，当npm i时候，不会安装该依赖，提示安装该依赖。\n\n--save 查看package.json 会有一个dependencies对象，里面就是项目运行需要的依赖。 dependencies 代表项目运行所依赖的模块 简写 -S\n\nnpm install express -S\n\n\n--save-dev 查看package.json 会有一个devDependencies对象，里面就是项目开发时候需要的依赖。 devDependencies 代表项目开发所需要的模块 如：babel 是发布时，将 ES6 代码编译成 ES5 ，那么 babel 就是devDependencies。 简写 -D\n\nnpm install express -D\n\n\nTips3 ^和~的区别\n\n// package.json中^和~的区别\n\n"dependencies": {\n    "vue": "~2.5.0",\n    "es6-promise": "^2.0.0"\n},\n\n~符号\n假设Vue后面更新新的版本，已经到2.6.0或者3.2.0以上\n当我们重新安装项目依赖，只会匹配到2.5.x的最新版本，不会安装到2.6.0及以上\n\n^符号\n假设es6-promise更新3.0.0，当我们重新安装项目依赖，es6-promise始终是2.0.0\n\n\nTips4 版本号代表含义\n\n"dependencies": {\n    "vue": "2.6.14"\n}\n\n\n第一位表示：主版本号，常用于大版本更新，可能不兼容旧版本。\n\n如Vue2.0和Vue3.0,虽然说向下兼容，但是部分语法存在兼容问题。\n\n\n第二位表示：次版本号，增加了新的功能，基本向下兼容。\n\n第三位表示：补丁号， 修复了bug等。\n\n\n# 管理全局包\n\n查看 npm 全局安装过的包\n\nnpm list -g --depth=0\n\n\n\n\n查看全局包需要更新\n\nnpm outdated -g --depth=0\n\n\n\n\n更新全局的依赖\n\nnpm update -g\n\n// 更新指定依赖\nnpm i [package]\n\n// 可能报错 Remove the existing file and try again, \nor run npm with --force to overwrite files recklessly.\n\n1. 卸载依赖\nnpm uninstall -g [package]\n\n清理 npm 缓存\nnpm cache clean --force\n\n重新安装\nnpm i -g [package] \n\n// 第二种 强制安装\nnpm install -g [package] --force \n// 也适用于yarn\n\n\n查看 yarn 全局安装过的包\n\nyarn global list --depth=0\n\n\n\n\n查看全局包需要更新 没有，网上找了很久没有相关文章。\n\n更新全局的依赖\n\nyarn global upgrade\n\n// 更新指定依赖\nyarn global add <package>@lates\nyarn global add yrm@lates\n\n\n\n# 升级依赖项\n\nnpm/yarn查看项目中包是否更新\n\nyarn outdated\n\n\n\n\n"dependencies": {\n    "vue": "~2.6.0"\n},\n\nnpm update vue\n// 不会更新package.json文件\nnpm i vue   // 重新安装，会更新最新版本\n\nyarn upgrade vue@2.6.14 指定版本\nyarn upgrade vue@^ //选择指定版本\n\n"dependencies": {\n    "vue": "^2.6.14"\n}\n\n\n\n# 删除依赖包\n\n"dependencies": {\n    "vue": "^2.6.14"\n}\n\nnpm uninstall vue\n\nyarn remove vue\n\n// 删除全局依赖\nnpm uninstall -g <package>\nyarn global remove <package>\n\n\n\n# 更新项目中所有依赖项\n\n * npm-check\n * npm-check-updates\n\n二者目的相同，只是在更新过程中的一些交互展示形式存在一定的差异\n\n# npm-check-updates\n\n安装\n\nnpm install -g npm-check-updates\n\n\n使用\n\n// 查看可更新包\nncu\n\n[====================] 12/12 100%\n @vssue/api-github-v4                         ^1.4.0  →   ^1.4.7     \n @vssue/vuepress-plugin-vssue                 ^1.4.6  →   ^1.4.8     \n @vuepress-reco/vuepress-plugin-back-to-top   ^1.5.7  →   ^1.6.0     \n @vuepress/plugin-google-analytics            ^1.8.1  →   ^1.8.2     \n @vuepress/plugin-pwa                         ^1.8.1  →   ^1.8.2     \n dayjs                                       ^1.10.4  →  ^1.10.7     \n vuepress                                     ^1.8.1  →   ^1.8.2     \n vuepress-plugin-live2d-model                 ^1.0.0  →   ^1.0.7     \n vuepress-plugin-one-click-copy               ^1.0.2  →   ^1.0.6 \n \n // 升级所有依赖项\n ncu -u\n ncu -u vuepress dayjs ...\n\n\n\n\n# npm-check\n\n安装\n\nnpm install npm-check -g\n\n\n使用\n\n// 查看可更新包\nnpm-check\n \n// 升级所有依赖项\nnpm-check -u\n\n\n\n\n\n# 切换国内镜像\n\n目前常用的镜像列表\n\n  npm ---- https://registry.npmjs.org/\n  cnpm --- https://registry.nlark.com/\n  taobao - https://registry.npm.taobao.org\n  yarn --- https://registry.yarnpkg.com/\n  tencent- https://mirrors.cloud.tencent.com/npm/  \n\n\n查看yarn当前镜像源\n\nyarn config get registry\n\nnpm config get registry\n\ncnpm config get registry\n\npnpm config get registry\n\n//https://registry.nlark.com/\n\n\n设置镜像源\n\n// 全局使用\nyarn config set registry https://registry.npm.taobao.org\n\nnpm config set registry https://registry.nlark.com/\n// ...\n\n// 临时在项目中使用\nnpm install --registry https://registry.npm.taobao.org\n\n\n还原镜像源\n\nnpm config set registry https://registry.npmjs.org\n// 根据上面的镜像列表替换就行。\n\n\n\n# nrm / yrm 管理镜像源工具\n\nyrm/nrm 不仅可以快速切换镜像源，还可以测试自己网络访问不同源的速度，且yrm/nrm用法都相同。\n\n安装 yrm /nrm\n\nnpm install -g yrm\n// or\nnpm install -g nrm\n\n\n列出当前镜像源列表\n\nyrm ls\n\nnpm -----  https://registry.npmjs.org/\ncnpm ----  http://r.cnpmjs.org/\ntaobao --  https://registry.npm.taobao.org/\nnj ------  https://registry.nodejitsu.com/\nrednpm -- http://registry.mirror.cqupt.edu.cn\nskimdb -- https://skimdb.npmjs.com/registry\nyarn ----  https://registry.yarnpkg.com\n\n\n使用，测试\n\nyrm use taobao\n// https://registry.npm.taobao.org/\n\nyrm test taobao\n// taobao - 187ms\n\n\n\n# 建议\n\nWindows用户\n\n推荐使用yarn/npm，可能cnpm/pnpm安装速度优于yarn/npm，但是可能造成诡异的 bug，比如项目运行不起来等等，最简单直接的方法就是删除node_modules重新安装。\n\n如图所示，图中的项目通过pnpm/cnpm安装的依赖项， 直接运行不起来，之所以只针对Win系统，因为Win系统删除node_modules快则几分钟，慢则十几分钟，而mac直接秒删，试错成本低可以尝试。\n\n\n\nQ: 项目通过cnpm/pnpm 安装依赖怎么知道会不会有诡异的 bug。\n\nA: 项目如果能运行起来，99%不会有诡异的 bug，万一调试中报错，写的代码有没有问题，可以查看报错日志自行查看一下相关教程。\n\n\n# 参考文章\n\n * https://blog.csdn.net/xuaner8786/article/details/81630445\n * https://juejin.cn/post/6844904114762022926\n * https://www.npmjs.com/package/npm-check-updates\n * https://juejin.cn/post/6913833065647341581\n * https://github.com/dylang/npm-check',normalizedContent:'有时候想查个命令，或者换个镜像找了几篇文章才找到，最近闲着没事干，干脆整理一篇文档，以后就不用在网上瞎搜有的还写不全。\n\n\n# usage\n\n\n# 全局安装\n\n安装node\n\nmac同学，安装全局包会提示权限不足，在前面添加sudo就行\n\n// 安装node自带npm，检查是否安装成功，执行如下命令\nnpm -v  \n// 6.14.15\n\n// yarn\nnpm install -g yarn\n\n// cnpm \nnpm install -g cnpm\n\n// pnpm\nnpm install -g pnpm\n\n\ncnpm、pnpm 用法类似npm，yarn不一样地方列出来单独说明。\n\n\n# 初始化一个项目\n\nnpm init\n// or\nyarn init\n\n// 快速生成的package.json默认配置\nnpm init -y\nyarn init -y\n\n\n\n# 安装项目依赖\n\nnpm / cnpm / pnpm\n\nnpm install [package]\n// 简写\nnpm i [package]\n\n// 安装指定版本\nnpm i[package]@[version]\nnpm i [package]@[tag]\n\n// 全局安装依赖\nnpm i -g [package]\n\n\nyarn\n\nyarn add [package]\n\n// 安装指定版本\nyarn add [package]@[version]\nyarn add [package]@[tag]\n\n// 全局安装依赖\nyarn global add [package]\n\n\n小栗子\n\n// 安装指定版本jquery\nnpm i jquery@3.0.0\n\n// 安装最新版本\nnpm i react@latest\n\n// 安装的依赖项都可以通过package.json 查看\n"dependencies": {\n    "@loadable/component": "^5.14.1",\n    "prismjs": "^1.23.0",\n    "react-dom": "^17.0.2",\n    "react-helmet": "^6.1.0",\n    "react-router-dom": "^5.2.0",\n    "jquery": "^3.0.0",\n    "react": "^17.0.2",\n},\n\n\ntips1 意外情况\n\n可能安装依赖卡断，或者中断安装依赖，后面在重新安装，会提示报错这是因为有缓存的原因。\n\n方式一\n\n删除node_modules包重新安装。\n\n方式二\n\n删除缓存\n\nnpm cache clean --force\n\n\ntips2 --save--dev作用\n\n在安装我们依赖的时候，经常会看到后缀 --save或--save--dev，入行那会什么都不懂照着写去，能用就行，结果开发好好的，线上就是不行。\n\nnpm install vue --no-save\nnpm install vue --save\nnpm install @babel/core --save-dev\n\n\n--no-save 查看package.json，文件内容不发生改变，在运行项目时能正常运行，当npm i时候，不会安装该依赖，提示安装该依赖。\n\n--save 查看package.json 会有一个dependencies对象，里面就是项目运行需要的依赖。 dependencies 代表项目运行所依赖的模块 简写 -s\n\nnpm install express -s\n\n\n--save-dev 查看package.json 会有一个devdependencies对象，里面就是项目开发时候需要的依赖。 devdependencies 代表项目开发所需要的模块 如：babel 是发布时，将 es6 代码编译成 es5 ，那么 babel 就是devdependencies。 简写 -d\n\nnpm install express -d\n\n\ntips3 ^和~的区别\n\n// package.json中^和~的区别\n\n"dependencies": {\n    "vue": "~2.5.0",\n    "es6-promise": "^2.0.0"\n},\n\n~符号\n假设vue后面更新新的版本，已经到2.6.0或者3.2.0以上\n当我们重新安装项目依赖，只会匹配到2.5.x的最新版本，不会安装到2.6.0及以上\n\n^符号\n假设es6-promise更新3.0.0，当我们重新安装项目依赖，es6-promise始终是2.0.0\n\n\ntips4 版本号代表含义\n\n"dependencies": {\n    "vue": "2.6.14"\n}\n\n\n第一位表示：主版本号，常用于大版本更新，可能不兼容旧版本。\n\n如vue2.0和vue3.0,虽然说向下兼容，但是部分语法存在兼容问题。\n\n\n第二位表示：次版本号，增加了新的功能，基本向下兼容。\n\n第三位表示：补丁号， 修复了bug等。\n\n\n# 管理全局包\n\n查看 npm 全局安装过的包\n\nnpm list -g --depth=0\n\n\n\n\n查看全局包需要更新\n\nnpm outdated -g --depth=0\n\n\n\n\n更新全局的依赖\n\nnpm update -g\n\n// 更新指定依赖\nnpm i [package]\n\n// 可能报错 remove the existing file and try again, \nor run npm with --force to overwrite files recklessly.\n\n1. 卸载依赖\nnpm uninstall -g [package]\n\n清理 npm 缓存\nnpm cache clean --force\n\n重新安装\nnpm i -g [package] \n\n// 第二种 强制安装\nnpm install -g [package] --force \n// 也适用于yarn\n\n\n查看 yarn 全局安装过的包\n\nyarn global list --depth=0\n\n\n\n\n查看全局包需要更新 没有，网上找了很久没有相关文章。\n\n更新全局的依赖\n\nyarn global upgrade\n\n// 更新指定依赖\nyarn global add <package>@lates\nyarn global add yrm@lates\n\n\n\n# 升级依赖项\n\nnpm/yarn查看项目中包是否更新\n\nyarn outdated\n\n\n\n\n"dependencies": {\n    "vue": "~2.6.0"\n},\n\nnpm update vue\n// 不会更新package.json文件\nnpm i vue   // 重新安装，会更新最新版本\n\nyarn upgrade vue@2.6.14 指定版本\nyarn upgrade vue@^ //选择指定版本\n\n"dependencies": {\n    "vue": "^2.6.14"\n}\n\n\n\n# 删除依赖包\n\n"dependencies": {\n    "vue": "^2.6.14"\n}\n\nnpm uninstall vue\n\nyarn remove vue\n\n// 删除全局依赖\nnpm uninstall -g <package>\nyarn global remove <package>\n\n\n\n# 更新项目中所有依赖项\n\n * npm-check\n * npm-check-updates\n\n二者目的相同，只是在更新过程中的一些交互展示形式存在一定的差异\n\n# npm-check-updates\n\n安装\n\nnpm install -g npm-check-updates\n\n\n使用\n\n// 查看可更新包\nncu\n\n[====================] 12/12 100%\n @vssue/api-github-v4                         ^1.4.0  →   ^1.4.7     \n @vssue/vuepress-plugin-vssue                 ^1.4.6  →   ^1.4.8     \n @vuepress-reco/vuepress-plugin-back-to-top   ^1.5.7  →   ^1.6.0     \n @vuepress/plugin-google-analytics            ^1.8.1  →   ^1.8.2     \n @vuepress/plugin-pwa                         ^1.8.1  →   ^1.8.2     \n dayjs                                       ^1.10.4  →  ^1.10.7     \n vuepress                                     ^1.8.1  →   ^1.8.2     \n vuepress-plugin-live2d-model                 ^1.0.0  →   ^1.0.7     \n vuepress-plugin-one-click-copy               ^1.0.2  →   ^1.0.6 \n \n // 升级所有依赖项\n ncu -u\n ncu -u vuepress dayjs ...\n\n\n\n\n# npm-check\n\n安装\n\nnpm install npm-check -g\n\n\n使用\n\n// 查看可更新包\nnpm-check\n \n// 升级所有依赖项\nnpm-check -u\n\n\n\n\n\n# 切换国内镜像\n\n目前常用的镜像列表\n\n  npm ---- https://registry.npmjs.org/\n  cnpm --- https://registry.nlark.com/\n  taobao - https://registry.npm.taobao.org\n  yarn --- https://registry.yarnpkg.com/\n  tencent- https://mirrors.cloud.tencent.com/npm/  \n\n\n查看yarn当前镜像源\n\nyarn config get registry\n\nnpm config get registry\n\ncnpm config get registry\n\npnpm config get registry\n\n//https://registry.nlark.com/\n\n\n设置镜像源\n\n// 全局使用\nyarn config set registry https://registry.npm.taobao.org\n\nnpm config set registry https://registry.nlark.com/\n// ...\n\n// 临时在项目中使用\nnpm install --registry https://registry.npm.taobao.org\n\n\n还原镜像源\n\nnpm config set registry https://registry.npmjs.org\n// 根据上面的镜像列表替换就行。\n\n\n\n# nrm / yrm 管理镜像源工具\n\nyrm/nrm 不仅可以快速切换镜像源，还可以测试自己网络访问不同源的速度，且yrm/nrm用法都相同。\n\n安装 yrm /nrm\n\nnpm install -g yrm\n// or\nnpm install -g nrm\n\n\n列出当前镜像源列表\n\nyrm ls\n\nnpm -----  https://registry.npmjs.org/\ncnpm ----  http://r.cnpmjs.org/\ntaobao --  https://registry.npm.taobao.org/\nnj ------  https://registry.nodejitsu.com/\nrednpm -- http://registry.mirror.cqupt.edu.cn\nskimdb -- https://skimdb.npmjs.com/registry\nyarn ----  https://registry.yarnpkg.com\n\n\n使用，测试\n\nyrm use taobao\n// https://registry.npm.taobao.org/\n\nyrm test taobao\n// taobao - 187ms\n\n\n\n# 建议\n\nwindows用户\n\n推荐使用yarn/npm，可能cnpm/pnpm安装速度优于yarn/npm，但是可能造成诡异的 bug，比如项目运行不起来等等，最简单直接的方法就是删除node_modules重新安装。\n\n如图所示，图中的项目通过pnpm/cnpm安装的依赖项， 直接运行不起来，之所以只针对win系统，因为win系统删除node_modules快则几分钟，慢则十几分钟，而mac直接秒删，试错成本低可以尝试。\n\n\n\nq: 项目通过cnpm/pnpm 安装依赖怎么知道会不会有诡异的 bug。\n\na: 项目如果能运行起来，99%不会有诡异的 bug，万一调试中报错，写的代码有没有问题，可以查看报错日志自行查看一下相关教程。\n\n\n# 参考文章\n\n * https://blog.csdn.net/xuaner8786/article/details/81630445\n * https://juejin.cn/post/6844904114762022926\n * https://www.npmjs.com/package/npm-check-updates\n * https://juejin.cn/post/6913833065647341581\n * https://github.com/dylang/npm-check',charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"手写el-form表单组件",frontmatter:{title:"手写el-form表单组件",date:"2021-5-29",categories:["frontEnd"],tags:["vue"],permalink:"/pages/eb8ac7/",readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/03.%E7%BB%84%E4%BB%B6%E5%BA%93/01.%E6%89%8B%E5%86%99el-form%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6.html",relativePath:"02.开发/03.组件库/01.手写el-form表单组件.md",key:"v-05feeb6b",path:"/pages/eb8ac7/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:3,title:"Form 表单",slug:"form-表单",normalizedTitle:"form 表单",charIndex:300},{level:3,title:"组件",slug:"组件",normalizedTitle:"组件",charIndex:23},{level:2,title:"参考文章",slug:"参考文章",normalizedTitle:"参考文章",charIndex:5861}],headersStr:"前言 Form 表单 组件 参考文章",content:'# 前言\n\n在刚入行时候，只会知道如何使用表单组件，在后面一两年工作中也没有什么技术积累成为一个工具人，操作最多的就是ctrl+c和ctrl+v，在去年进了一家新公司，这家公司以前旧项目代码经过太多人的手，代码已经快不成人样了，难以维护，技术人员已经跑的差不多了，我进去好在让我们负责新的项目开发，要不然可能第二天就看不到我了，哈哈。项目主要面向于小程序和H5端，网上的UI库很难满足产品后续规划需求开发，只好开始研究组件原理及封装组件。\n\n最近又个项目让我有开始接触element-ui，想到当初对el-form表单有一些困惑，查看一下源码和一些技术文章，对el-form有一些新的认识。\n\n\n# Form 表单\n\n下面是一份el-form示例代码\n\n<template>\n  <el-form :model="ruleForm" :rules="rules" ref="ruleForm">\n    <el-form-item label="名字" prop="pass">\n      <el-input type="password" v-model="ruleForm.pass"></el-input>\n    </el-form-item>\n    <el-form-item label="年龄" prop="age">\n      <el-input v-model.number="ruleForm.age"></el-input>\n    </el-form-item>\n    <el-form-item>\n      <el-button type="primary" @click="submitForm(\'ruleForm\')">提交</el-button>\n      <el-button @click="resetForm(\'ruleForm\')">重置</el-button>\n    </el-form-item>\n  </el-form>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      ruleForm: {\n        pass: \'\',\n        checkPass: \'\',\n        age: \'\',\n      },\n      rules: {\n        pass: [{ required: true, message: \'请输入名字\', trigger: \'blur\' }],\n        age: [{ required: true, message: \'请输入年龄\', trigger: \'blur\' }],\n      },\n    }\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert(\'submit!\')\n        } else {\n          console.log(\'error submit!!\')\n          return false\n        }\n      })\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n  },\n}\n<\/script>\n\n\n首先要清楚一下组件的使用方式\n\n 1. el-form接收model和rule两个prop\n    1. model表示表单绑定的数据对象\n    2. rule表示验证规则策略，表单验证\n 2. el-form-item接收的prop属性，对应form组件的model数据中某个key值，如果rule刚好有key，给定的条件下去如失去焦点验证规则匹不匹配。\n\n最终得到类似这样代码结构\n\n<template>\n  <div>\n    <form @submit.prevent>\n      <div>\n        姓名<input v-model="form.name" />\n      </div>\n      <div>\n        年龄<input v-model="form.age" />\n      </div>\n      <div>\n        <button @click="submit">提交</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n\n\n# 组件\n\n组件中嵌套组件，主要是通过slot插槽，可以将组件拼接成上面代码结构。代码如下\n\nel-form\n\n<template>\n    <form>\n        <slot></slot>\n    </form>\n</template>\n<script>\nexport default {\n    name:\'elForm\'\n}\n<\/script>\n\n\nel-form-item\n\n<template>\n    <div>\n        <slot></slot>\n    </div>\n</template>\n<script>\nexport default {\n    name:\'elFormItem\'\n}\n<\/script>\n\n\nel-input\n\n<template>\n    <input type="text">\n</template>\n<script>\nexport default {\n    name:\'elInput\'\n}\n<\/script>\n\n\n接下来就要考虑到组件中的通讯。 由于组件中有可能嵌套很多的组件，如果单纯通过$parent和$children查找出来的父级组件，不一定是el-form组件。\n\n两个问题：\n\n * el-form-item组件如何得到el-form的数据\n * el-form组件如何和el-form-item进行交互\n\n解决第一问题，可以通过provide与inject实现。 解决第二问题，就要讲到dispatch派发和broadcast广播\n\n# provide与inject\n\n通过provide将当前表单实例传递到所有后代组件中，后代通过inject接受传递的值。\n\nel-form\n\n<template>\n    <form><slot></slot></form>\n</template>\n<script>\nexport default {\n    name:\'elForm\',\n    provide(){\n        return {\n            elForm: this\n        }  \n    },\n    props:{\n        model:{\n            type:Object,\n            default:()=>({})\n        },\n        rules:Object\n    }\n}\n<\/script>\n\n\nel-form-item\n\n<template>\n    <div><slot></slot></div>\n</template>\n<script>\nexport default {\n    name:\'elFormItem\',\n    inject:[\'elForm\'],\n    props:{\n        label:{ \n            type:String,\n            default:\'\'\n        },\n        prop:String \n    },\n    mounted(){\n       console.log(this.elForm)\n    }\n}\n<\/script>\n\n\nprovide中this指el-form组件， this.elForm就能得到el-form组件中的数据和方法。\n\n# dispatch和broadcast广播\n\n$dispatch与$broadcast是一种有历史的组件通信方式，因为他们是Vue1.0提供的一种方式，在Vue2.0中废弃了。\n\n$dispatch: $dispatch会向上触发一个事件，同时传递要触发的祖先组件的名称与参数，当事件向上传递到对应的组件上时会触发组件上的事件侦听器，同时传播会停止。\n\n$broadcast: $broadcast会向所有的后代组件传播一个事件，同时传递要触发的后代组件的名称与参数，当事件传递到对应的后代组件时，会触发组件上的事件侦听器，同时传播会停止（因为向下传递是树形的，所以只会停止其中一个叶子分支的传递）\n\n$dispatch\n\n/**\n * 派发 (向上查找) (一个)\n * @param componentName // 需要找的组件的名称\n * @param eventName // 事件名称\n * @param params // 需要传递的参数\n */\n    dispatch(componentName, eventName, params) {\n        let parent = this.$parent || this.$root;//$parent 找到最近的父节点 $root 根节点\n        let name = parent.$options.name; // 获取当前组件实例的name\n        // 如果当前有节点 && 当前没名称 且 当前名称等于需要传进来的名称的时候就去查找当前的节点\n        // 循环出当前名称的一样的组件实例\n        while (parent && (!name||name!==componentName)) {\n            parent = parent.$parent;\n            if (parent) {\n                name = parent.$options.name;\n            }\n        }\n        // 有节点表示当前找到了name一样的实例\n        if (parent) {\n            parent.$emit.apply(parent,[eventName].concat(params))\n        }\n    },\n\n\n$broadcast\n\n/**\n * 派发 (向上查找) (一个)\n * @param componentName // 需要找的组件的名称\n * @param eventName // 事件名称\n * @param params // 需要传递的参数\n */\nbroadcast(componentName, eventName, params) {\n// 循环子节点找到名称一样的子节点 否则 递归 当前子节点\nthis.$children.map(child=>{\n    if (componentName===child.$options.name) {\n        child.$emit.apply(child,[eventName].concat(params))\n    }else {\n        broadcast.apply(child,[componentName,eventName].concat(params))\n    }\n})\n\n\n验证表单\n\nasync-validator是一个表单的异步验证的第三方库，也是element-ui 中的form组件所使用的验证方式。\n\nel-form-item\n\n<template>\n  <div>\n    <label v-if="label">{{label}}</label>\n    <slot></slot>\n    {{errorMessage}}\n  </div>\n</template>\n<script>\nimport Schema from "async-validator";\nexport default {\n  name: "elFormItem",\n  inject: ["elForm"],\n  props: {\n    label: {\n      type: String,\n      default: ""\n    },\n    prop: String\n  },\n  data(){\n      return {errorMessage:\'\'}\n  },\n  mounted() {\n    this.$on("validate", () => {\n      if (this.prop) {\n        let rule = this.elForm.rules[this.prop];\n        let newValue = this.elForm.model[this.prop];\n\n        let descriptor = {\n          [this.prop]: rule\n        };\n        let schema = new Schema(descriptor);\n        \n        return schema.validate({[this.prop]:newValue},(err,res)=>{\n            if(err){\n                this.errorMessage = err[0].message;\n            }else{\n                this.errorMessage = \'\'\n            }\n        })\n      }\n    });\n  }\n};\n<\/script>\n\n\n\n# 参考文章\n\n * http://www.javascriptpeixun.cn/course/3496/task/220891/show\n * https://juejin.cn/post/6844904200598454286#heading-19\n * https://juejin.cn/post/6844903821513064456#heading-11',normalizedContent:'# 前言\n\n在刚入行时候，只会知道如何使用表单组件，在后面一两年工作中也没有什么技术积累成为一个工具人，操作最多的就是ctrl+c和ctrl+v，在去年进了一家新公司，这家公司以前旧项目代码经过太多人的手，代码已经快不成人样了，难以维护，技术人员已经跑的差不多了，我进去好在让我们负责新的项目开发，要不然可能第二天就看不到我了，哈哈。项目主要面向于小程序和h5端，网上的ui库很难满足产品后续规划需求开发，只好开始研究组件原理及封装组件。\n\n最近又个项目让我有开始接触element-ui，想到当初对el-form表单有一些困惑，查看一下源码和一些技术文章，对el-form有一些新的认识。\n\n\n# form 表单\n\n下面是一份el-form示例代码\n\n<template>\n  <el-form :model="ruleform" :rules="rules" ref="ruleform">\n    <el-form-item label="名字" prop="pass">\n      <el-input type="password" v-model="ruleform.pass"></el-input>\n    </el-form-item>\n    <el-form-item label="年龄" prop="age">\n      <el-input v-model.number="ruleform.age"></el-input>\n    </el-form-item>\n    <el-form-item>\n      <el-button type="primary" @click="submitform(\'ruleform\')">提交</el-button>\n      <el-button @click="resetform(\'ruleform\')">重置</el-button>\n    </el-form-item>\n  </el-form>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      ruleform: {\n        pass: \'\',\n        checkpass: \'\',\n        age: \'\',\n      },\n      rules: {\n        pass: [{ required: true, message: \'请输入名字\', trigger: \'blur\' }],\n        age: [{ required: true, message: \'请输入年龄\', trigger: \'blur\' }],\n      },\n    }\n  },\n  methods: {\n    submitform(formname) {\n      this.$refs[formname].validate(valid => {\n        if (valid) {\n          alert(\'submit!\')\n        } else {\n          console.log(\'error submit!!\')\n          return false\n        }\n      })\n    },\n    resetform(formname) {\n      this.$refs[formname].resetfields()\n    },\n  },\n}\n<\/script>\n\n\n首先要清楚一下组件的使用方式\n\n 1. el-form接收model和rule两个prop\n    1. model表示表单绑定的数据对象\n    2. rule表示验证规则策略，表单验证\n 2. el-form-item接收的prop属性，对应form组件的model数据中某个key值，如果rule刚好有key，给定的条件下去如失去焦点验证规则匹不匹配。\n\n最终得到类似这样代码结构\n\n<template>\n  <div>\n    <form @submit.prevent>\n      <div>\n        姓名<input v-model="form.name" />\n      </div>\n      <div>\n        年龄<input v-model="form.age" />\n      </div>\n      <div>\n        <button @click="submit">提交</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n\n\n# 组件\n\n组件中嵌套组件，主要是通过slot插槽，可以将组件拼接成上面代码结构。代码如下\n\nel-form\n\n<template>\n    <form>\n        <slot></slot>\n    </form>\n</template>\n<script>\nexport default {\n    name:\'elform\'\n}\n<\/script>\n\n\nel-form-item\n\n<template>\n    <div>\n        <slot></slot>\n    </div>\n</template>\n<script>\nexport default {\n    name:\'elformitem\'\n}\n<\/script>\n\n\nel-input\n\n<template>\n    <input type="text">\n</template>\n<script>\nexport default {\n    name:\'elinput\'\n}\n<\/script>\n\n\n接下来就要考虑到组件中的通讯。 由于组件中有可能嵌套很多的组件，如果单纯通过$parent和$children查找出来的父级组件，不一定是el-form组件。\n\n两个问题：\n\n * el-form-item组件如何得到el-form的数据\n * el-form组件如何和el-form-item进行交互\n\n解决第一问题，可以通过provide与inject实现。 解决第二问题，就要讲到dispatch派发和broadcast广播\n\n# provide与inject\n\n通过provide将当前表单实例传递到所有后代组件中，后代通过inject接受传递的值。\n\nel-form\n\n<template>\n    <form><slot></slot></form>\n</template>\n<script>\nexport default {\n    name:\'elform\',\n    provide(){\n        return {\n            elform: this\n        }  \n    },\n    props:{\n        model:{\n            type:object,\n            default:()=>({})\n        },\n        rules:object\n    }\n}\n<\/script>\n\n\nel-form-item\n\n<template>\n    <div><slot></slot></div>\n</template>\n<script>\nexport default {\n    name:\'elformitem\',\n    inject:[\'elform\'],\n    props:{\n        label:{ \n            type:string,\n            default:\'\'\n        },\n        prop:string \n    },\n    mounted(){\n       console.log(this.elform)\n    }\n}\n<\/script>\n\n\nprovide中this指el-form组件， this.elform就能得到el-form组件中的数据和方法。\n\n# dispatch和broadcast广播\n\n$dispatch与$broadcast是一种有历史的组件通信方式，因为他们是vue1.0提供的一种方式，在vue2.0中废弃了。\n\n$dispatch: $dispatch会向上触发一个事件，同时传递要触发的祖先组件的名称与参数，当事件向上传递到对应的组件上时会触发组件上的事件侦听器，同时传播会停止。\n\n$broadcast: $broadcast会向所有的后代组件传播一个事件，同时传递要触发的后代组件的名称与参数，当事件传递到对应的后代组件时，会触发组件上的事件侦听器，同时传播会停止（因为向下传递是树形的，所以只会停止其中一个叶子分支的传递）\n\n$dispatch\n\n/**\n * 派发 (向上查找) (一个)\n * @param componentname // 需要找的组件的名称\n * @param eventname // 事件名称\n * @param params // 需要传递的参数\n */\n    dispatch(componentname, eventname, params) {\n        let parent = this.$parent || this.$root;//$parent 找到最近的父节点 $root 根节点\n        let name = parent.$options.name; // 获取当前组件实例的name\n        // 如果当前有节点 && 当前没名称 且 当前名称等于需要传进来的名称的时候就去查找当前的节点\n        // 循环出当前名称的一样的组件实例\n        while (parent && (!name||name!==componentname)) {\n            parent = parent.$parent;\n            if (parent) {\n                name = parent.$options.name;\n            }\n        }\n        // 有节点表示当前找到了name一样的实例\n        if (parent) {\n            parent.$emit.apply(parent,[eventname].concat(params))\n        }\n    },\n\n\n$broadcast\n\n/**\n * 派发 (向上查找) (一个)\n * @param componentname // 需要找的组件的名称\n * @param eventname // 事件名称\n * @param params // 需要传递的参数\n */\nbroadcast(componentname, eventname, params) {\n// 循环子节点找到名称一样的子节点 否则 递归 当前子节点\nthis.$children.map(child=>{\n    if (componentname===child.$options.name) {\n        child.$emit.apply(child,[eventname].concat(params))\n    }else {\n        broadcast.apply(child,[componentname,eventname].concat(params))\n    }\n})\n\n\n验证表单\n\nasync-validator是一个表单的异步验证的第三方库，也是element-ui 中的form组件所使用的验证方式。\n\nel-form-item\n\n<template>\n  <div>\n    <label v-if="label">{{label}}</label>\n    <slot></slot>\n    {{errormessage}}\n  </div>\n</template>\n<script>\nimport schema from "async-validator";\nexport default {\n  name: "elformitem",\n  inject: ["elform"],\n  props: {\n    label: {\n      type: string,\n      default: ""\n    },\n    prop: string\n  },\n  data(){\n      return {errormessage:\'\'}\n  },\n  mounted() {\n    this.$on("validate", () => {\n      if (this.prop) {\n        let rule = this.elform.rules[this.prop];\n        let newvalue = this.elform.model[this.prop];\n\n        let descriptor = {\n          [this.prop]: rule\n        };\n        let schema = new schema(descriptor);\n        \n        return schema.validate({[this.prop]:newvalue},(err,res)=>{\n            if(err){\n                this.errormessage = err[0].message;\n            }else{\n                this.errormessage = \'\'\n            }\n        })\n      }\n    });\n  }\n};\n<\/script>\n\n\n\n# 参考文章\n\n * http://www.javascriptpeixun.cn/course/3496/task/220891/show\n * https://juejin.cn/post/6844904200598454286#heading-19\n * https://juejin.cn/post/6844903821513064456#heading-11',charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"Vue Toast组件开发",frontmatter:{title:"Vue Toast组件开发",date:"2021-5-29",tags:["vue"],permalink:"/pages/8b7457/",categories:["前端","组件库"],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/03.%E7%BB%84%E4%BB%B6%E5%BA%93/02.Vue%20Toast%E7%BB%84%E4%BB%B6%E5%BC%80%E5%8F%91.html",relativePath:"02.开发/03.组件库/02.Vue Toast组件开发.md",key:"v-240615fb",path:"/pages/8b7457/",headersStr:null,content:"import vue from 'vue';\n// 这里就是我们刚刚创建的那个静态组件\nimport toastComponent from './Toast.vue';\n// 返回一个 扩展实例构造器, 关于 vue.extend 有不懂的同学,可以去查看以下官方文档 https://cn.vuejs.org/v2/api/#Vue-extend\nconst ToastConstructor = vue.extend(toastComponent);\n// 定义弹出组件的函数 接收2个参数, 要显示的文本 和 显示时间\nfunction showToast(text, duration = 2000) {\n  // 实例化一个 toast.vue\n  const toastDom = new ToastConstructor({\n    el: document.createElement('div'),\n    data() {\n      return {\n        text: text,\n        showWrap: true,\n        showContent: true\n      };\n    }\n  });\n  // 把 实例化的 toast.vue 添加到 body 里\n  document.body.appendChild(toastDom.$el);\n  // 提前 250ms 执行淡出动画(因为我们再css里面设置的隐藏动画持续是250ms)\n  setTimeout(() => {\n    toastDom.showContent = false;\n  }, duration - 250);\n  // 过了 duration 时间后隐藏整个组件\n  setTimeout(() => {\n    toastDom.showWrap = false;\n  }, duration);\n}\n// 注册为全局组件的函数\nfunction registryToast() {\n  // 将组件注册到 vue 的 原型链里去,\n  // 这样就可以在所有 vue 的实例里面使用 this.$toast()\n  vue.prototype.$toast = showToast;\n}\nexport { showToast, registryToast };\n\n\n\n<template>\n  <div class=\"wrap\" v-if=\"showWrap\" :class=\"showContent ? 'fadein' : 'fadeout'\">\n    {{ text }}\n  </div>\n</template>\n<style scoped>\n.wrap {\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 5px;\n  max-width: 400px;\n  padding: 20px;\n  transform: translate(-50%, -50%);\n  color: #fff;\n}\n.fadein {\n  animation: animate_in 0.25s;\n}\n.fadeout {\n  animation: animate_out 0.25s;\n  opacity: 0;\n}\n@keyframes animate_in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes animate_out {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n</style>\n\n",normalizedContent:"import vue from 'vue';\n// 这里就是我们刚刚创建的那个静态组件\nimport toastcomponent from './toast.vue';\n// 返回一个 扩展实例构造器, 关于 vue.extend 有不懂的同学,可以去查看以下官方文档 https://cn.vuejs.org/v2/api/#vue-extend\nconst toastconstructor = vue.extend(toastcomponent);\n// 定义弹出组件的函数 接收2个参数, 要显示的文本 和 显示时间\nfunction showtoast(text, duration = 2000) {\n  // 实例化一个 toast.vue\n  const toastdom = new toastconstructor({\n    el: document.createelement('div'),\n    data() {\n      return {\n        text: text,\n        showwrap: true,\n        showcontent: true\n      };\n    }\n  });\n  // 把 实例化的 toast.vue 添加到 body 里\n  document.body.appendchild(toastdom.$el);\n  // 提前 250ms 执行淡出动画(因为我们再css里面设置的隐藏动画持续是250ms)\n  settimeout(() => {\n    toastdom.showcontent = false;\n  }, duration - 250);\n  // 过了 duration 时间后隐藏整个组件\n  settimeout(() => {\n    toastdom.showwrap = false;\n  }, duration);\n}\n// 注册为全局组件的函数\nfunction registrytoast() {\n  // 将组件注册到 vue 的 原型链里去,\n  // 这样就可以在所有 vue 的实例里面使用 this.$toast()\n  vue.prototype.$toast = showtoast;\n}\nexport { showtoast, registrytoast };\n\n\n\n<template>\n  <div class=\"wrap\" v-if=\"showwrap\" :class=\"showcontent ? 'fadein' : 'fadeout'\">\n    {{ text }}\n  </div>\n</template>\n<style scoped>\n.wrap {\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 5px;\n  max-width: 400px;\n  padding: 20px;\n  transform: translate(-50%, -50%);\n  color: #fff;\n}\n.fadein {\n  animation: animate_in 0.25s;\n}\n.fadeout {\n  animation: animate_out 0.25s;\n  opacity: 0;\n}\n@keyframes animate_in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes animate_out {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n</style>\n\n",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"Vue icon组件开发",frontmatter:{title:"Vue icon组件开发",date:"2021-5-29",categories:["frontEnd"],tags:["vue"],permalink:"/pages/46ca1d/",readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/03.%E7%BB%84%E4%BB%B6%E5%BA%93/05.Vue%20icon%E7%BB%84%E4%BB%B6%E5%BC%80%E5%8F%91.html",relativePath:"02.开发/03.组件库/05.Vue icon组件开发.md",key:"v-329c4901",path:"/pages/46ca1d/",headersStr:null,content:'<template>\n  <svg class="icon" aria-hidden="true" :class="svgClass">\n    <use :xlink:href="`#${icon}`"></use>\n  </svg>\n</template>\n<script>\nexport default {\n  name: \'lcxIcon\',\n  props: {\n    icon: {\n      type: String,\n      required: true\n    },\n    svgClass: {\n      type: String\n    }\n  }\n};\n<\/script>\n<style lang="scss" scoped>\n.icon {\n  width: 1em;\n  height: 1em;\n  vertical-align: -0.15em;\n  fill: currentColor;\n  overflow: hidden;\n  color: #999;\n}\n</style>\n\n',normalizedContent:'<template>\n  <svg class="icon" aria-hidden="true" :class="svgclass">\n    <use :xlink:href="`#${icon}`"></use>\n  </svg>\n</template>\n<script>\nexport default {\n  name: \'lcxicon\',\n  props: {\n    icon: {\n      type: string,\n      required: true\n    },\n    svgclass: {\n      type: string\n    }\n  }\n};\n<\/script>\n<style lang="scss" scoped>\n.icon {\n  width: 1em;\n  height: 1em;\n  vertical-align: -0.15em;\n  fill: currentcolor;\n  overflow: hidden;\n  color: #999;\n}\n</style>\n\n',charsets:{},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"Vue input组件开发",frontmatter:{title:"Vue input组件开发",date:"2021-5-29",categories:["frontEnd"],tags:["vue"],permalink:"/pages/689ad5/",readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/03.%E7%BB%84%E4%BB%B6%E5%BA%93/06.Vue%20input%E7%BB%84%E4%BB%B6%E5%BC%80%E5%8F%91.html",relativePath:"02.开发/03.组件库/06.Vue input组件开发.md",key:"v-5b94954a",path:"/pages/689ad5/",headersStr:null,content:'<template>\n  <div class="lcx-input" :class="inputClass">\n    \x3c!-- <slot name=\'prefix\' /> --\x3e\n    <input\n      :type="showPassword ? (passwordVisible ?type : \'password\' ) : type"\n      :name="name"\n      :value="value"\n      :placeholder="placeholder"\n      :disabled="disabled"\n      @input="$emit(\'input\', $event.target.value)"\n      class="lcx-input__inner"\n      ref="input"\n    />\n    \x3c!-- <slot name=\'suffix\' /> --\x3e\n    \x3c!-- native 给原生绑定事件 不加给组件绑定事件 --\x3e\n    \x3c!-- <div\n      class="clearable"\n      v-if="clearable"\n      @click="$emit(\'input\', \'\')"\n      @mousedown.prevent\n    >\n      X\n    </div> --\x3e\n    <lcx-icon class="clearable" icon="icon-guanbi" v-if="clearable" @click.native="$emit(\'input\', \'\')" @mousedown.native.prevent />\n    <lcx-icon class="showPassword" icon="icon-icon-test" v-if="showPassword" @click.native="changeStatus" />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \'lcx-input\',\n  props: {\n    value: {\n      type: String,\n      default: null,\n    },\n    name: {\n      type: String,\n      default: null,\n    },\n    placeholder: {\n      type: String,\n      default: \'请输入内容\',\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    type: {\n      type: String,\n      default: \'text\',\n    },\n    clearable: {\n      type: Boolean,\n      default: false,\n    },\n    showPassword: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    inputClass() {\n      const classes = [];\n      if (this.clearable || this.showPassword) {\n        classes.push(`lcx-input--suffix`);\n      }\n      // if (this.clearable || this.showPassword) {\n      //   classes.push(`lcx-input--prefix`);\n      // }\n      return classes;\n    },\n  },\n  data() {\n    return {\n      passwordVisible: false,\n    };\n  },\n  methods:{\n    changeStatus(){\n       this.passwordVisible = !this.passwordVisible\n       this.$nextTick(()=>{\n        this.$refs.input.focus()\n       })\n    }\n  }\n};\n<\/script>\n<style lang="scss" scoped>\n.lcx-input {\n  position: relative;\n  font-size: 14px;\n  display: inline-block;\n  width: 180px;\n  &.lcx-input--prefix{\n    .lcx-input__inner {\n      padding: 0 30px 0 15px;\n    }\n  }\n  &.lcx-input--suffix{\n    .lcx-input__inner {\n      padding: 0 30px 0 15px;\n    }\n  }\n  &.lcx-input--prefix.lcx-input--suffix{\n    .lcx-input__inner {\n      padding: 0 30px;\n    }\n  }\n  .lcx-input__inner {\n    -webkit-appearance: none;\n    background-color: #fff;\n    background-image: none;\n    border-radius: 4px;\n    border: 1px solid #dcdfe6;\n    box-sizing: border-box;\n    color: #606266;\n    display: inline-block;\n    font-size: inherit;\n    height: 40px;\n    // line-height: 40px;\n    outline: none;\n    padding: 0 15px;\n    transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\n    width: 100%;\n    &[disabled] {\n      background-color: #f5f7fa;\n      border-color: #e4e7ed;\n      color: #c0c4cc;\n      cursor: not-allowed;\n    }\n  }\n  .clearable {\n    position: absolute;\n    right: 14.5px;\n    top: 15px;\n    font-size: 12px;\n    cursor: pointer;\n  }\n  .showPassword {\n    position: absolute;\n    right: 10px;\n    top: 12px;\n    font-size: 16px;\n    cursor: pointer;\n  }\n}\n</style>\n\n',normalizedContent:'<template>\n  <div class="lcx-input" :class="inputclass">\n    \x3c!-- <slot name=\'prefix\' /> --\x3e\n    <input\n      :type="showpassword ? (passwordvisible ?type : \'password\' ) : type"\n      :name="name"\n      :value="value"\n      :placeholder="placeholder"\n      :disabled="disabled"\n      @input="$emit(\'input\', $event.target.value)"\n      class="lcx-input__inner"\n      ref="input"\n    />\n    \x3c!-- <slot name=\'suffix\' /> --\x3e\n    \x3c!-- native 给原生绑定事件 不加给组件绑定事件 --\x3e\n    \x3c!-- <div\n      class="clearable"\n      v-if="clearable"\n      @click="$emit(\'input\', \'\')"\n      @mousedown.prevent\n    >\n      x\n    </div> --\x3e\n    <lcx-icon class="clearable" icon="icon-guanbi" v-if="clearable" @click.native="$emit(\'input\', \'\')" @mousedown.native.prevent />\n    <lcx-icon class="showpassword" icon="icon-icon-test" v-if="showpassword" @click.native="changestatus" />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \'lcx-input\',\n  props: {\n    value: {\n      type: string,\n      default: null,\n    },\n    name: {\n      type: string,\n      default: null,\n    },\n    placeholder: {\n      type: string,\n      default: \'请输入内容\',\n    },\n    disabled: {\n      type: boolean,\n      default: false,\n    },\n    type: {\n      type: string,\n      default: \'text\',\n    },\n    clearable: {\n      type: boolean,\n      default: false,\n    },\n    showpassword: {\n      type: boolean,\n      default: false,\n    },\n  },\n  computed: {\n    inputclass() {\n      const classes = [];\n      if (this.clearable || this.showpassword) {\n        classes.push(`lcx-input--suffix`);\n      }\n      // if (this.clearable || this.showpassword) {\n      //   classes.push(`lcx-input--prefix`);\n      // }\n      return classes;\n    },\n  },\n  data() {\n    return {\n      passwordvisible: false,\n    };\n  },\n  methods:{\n    changestatus(){\n       this.passwordvisible = !this.passwordvisible\n       this.$nexttick(()=>{\n        this.$refs.input.focus()\n       })\n    }\n  }\n};\n<\/script>\n<style lang="scss" scoped>\n.lcx-input {\n  position: relative;\n  font-size: 14px;\n  display: inline-block;\n  width: 180px;\n  &.lcx-input--prefix{\n    .lcx-input__inner {\n      padding: 0 30px 0 15px;\n    }\n  }\n  &.lcx-input--suffix{\n    .lcx-input__inner {\n      padding: 0 30px 0 15px;\n    }\n  }\n  &.lcx-input--prefix.lcx-input--suffix{\n    .lcx-input__inner {\n      padding: 0 30px;\n    }\n  }\n  .lcx-input__inner {\n    -webkit-appearance: none;\n    background-color: #fff;\n    background-image: none;\n    border-radius: 4px;\n    border: 1px solid #dcdfe6;\n    box-sizing: border-box;\n    color: #606266;\n    display: inline-block;\n    font-size: inherit;\n    height: 40px;\n    // line-height: 40px;\n    outline: none;\n    padding: 0 15px;\n    transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\n    width: 100%;\n    &[disabled] {\n      background-color: #f5f7fa;\n      border-color: #e4e7ed;\n      color: #c0c4cc;\n      cursor: not-allowed;\n    }\n  }\n  .clearable {\n    position: absolute;\n    right: 14.5px;\n    top: 15px;\n    font-size: 12px;\n    cursor: pointer;\n  }\n  .showpassword {\n    position: absolute;\n    right: 10px;\n    top: 12px;\n    font-size: 16px;\n    cursor: pointer;\n  }\n}\n</style>\n\n',charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"Vue message组件开发",frontmatter:{title:"Vue message组件开发",date:"2021-7-28",categories:["frontEnd"],tags:["vue"],permalink:"/pages/db6289/",readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/03.%E7%BB%84%E4%BB%B6%E5%BA%93/07.Vue%20message%E7%BB%84%E4%BB%B6%E5%BC%80%E5%8F%91.html",relativePath:"02.开发/03.组件库/07.Vue message组件开发.md",key:"v-0ba8f21b",path:"/pages/db6289/",headersStr:null,content:"import Vue from 'vue';\nimport messageComp from './message.vue';\nlet MessageConstructor = Vue.extend(messageComp);\nconst Message = options => {\n  let instance = new MessageConstructor({\n    data: options\n  });\n  instance.$mount();\n  document.body.appendChild(instance.$el);\n  instance.visible = true;\n};\n['success', 'error', 'warning'].forEach(type => {\n  Message[type] = function(options) {\n    options.type = type;\n    return Message(options);\n  };\n});\nexport { Message };\n\n\n\n<template>\n  <transition name=\"fade\">\n    <div v-if=\"visible\">hello {{ message }} {{ type }}</div>\n  </transition>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      message: '',\n      type: true,\n      visible: false,\n      duration: 3000\n    };\n  },\n  mounted() {\n    if (this.duration > 0) {\n      this.timer = setTimeout(() => {\n        this.visible = false;\n        this.$destroy(); // 销毁实例\n        this.$el.parentNode.removeChild(this.$el); // 销毁组件\n      }, this.duration);\n    }\n  }\n};\n<\/script>\n<style lang=\"scss\" scoped>\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n.fade-enter-active,\n.fade-leave-active {\n  transition: all 1s linear;\n}\n</style>\n\n",normalizedContent:"import vue from 'vue';\nimport messagecomp from './message.vue';\nlet messageconstructor = vue.extend(messagecomp);\nconst message = options => {\n  let instance = new messageconstructor({\n    data: options\n  });\n  instance.$mount();\n  document.body.appendchild(instance.$el);\n  instance.visible = true;\n};\n['success', 'error', 'warning'].foreach(type => {\n  message[type] = function(options) {\n    options.type = type;\n    return message(options);\n  };\n});\nexport { message };\n\n\n\n<template>\n  <transition name=\"fade\">\n    <div v-if=\"visible\">hello {{ message }} {{ type }}</div>\n  </transition>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      message: '',\n      type: true,\n      visible: false,\n      duration: 3000\n    };\n  },\n  mounted() {\n    if (this.duration > 0) {\n      this.timer = settimeout(() => {\n        this.visible = false;\n        this.$destroy(); // 销毁实例\n        this.$el.parentnode.removechild(this.$el); // 销毁组件\n      }, this.duration);\n    }\n  }\n};\n<\/script>\n<style lang=\"scss\" scoped>\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n.fade-enter-active,\n.fade-leave-active {\n  transition: all 1s linear;\n}\n</style>\n\n",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"Vue Popover组件开发",frontmatter:{title:"Vue Popover组件开发",date:"2021-5-29",tags:["vue"],permalink:"/pages/915ee7/",categories:["前端","组件库"],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/03.%E7%BB%84%E4%BB%B6%E5%BA%93/08.Vue%20Popover%E7%BB%84%E4%BB%B6%E5%BC%80%E5%8F%91.html",relativePath:"02.开发/03.组件库/08.Vue Popover组件开发.md",key:"v-aca4b80a",path:"/pages/915ee7/",headersStr:null,content:"\n<template>\n  <div class=\"lcx-popover\">\n    <div\n      class=\"lcx-popover-content\"\n      :class=\"`content-${placement}`\"\n      v-if=\"visible\"\n      ref=\"content\"\n      @click.stop\n    >\n      <h3>{{ title }}</h3>\n      {{ content }}\n      <i class=\"arrow\"></i>\n    </div>\n    <slot name=\"reference\"></slot>\n  </div>\n</template>\n<script>\nconst on = (element, event, handle) => {\n  element.addEventListener(event, handle, false);\n};\nconst off = (element, event, handle) => {\n  element.removeEventListener(event, handle, false);\n};\nexport default {\n  name: 'lcx-popover',\n  data() {\n    return {\n      visible: false,\n    };\n  },\n  watch: {\n    visible(val) {\n      if (val) {\n        this.$nextTick(() => {\n          let content = this.$refs.content;\n          document.body.appendChild(content);\n          if (this.trigger === 'hover') {\n            on(content, 'mouseenter', this.handleMouseEnter);\n            on(content, 'mouseleave', this.handleMouseLeave);\n          }\n        });\n      }\n    },\n  },\n  props: {\n    title: {\n      type: String,\n    },\n    trigger: {\n      type: String,\n    },\n    width: {\n      type: String,\n    },\n    content: {\n      type: String,\n    },\n    placement: {\n      type: String,\n      validator(type) {\n        if (!['top', 'left', 'right', 'botton'].includes(type)) {\n          throw new Error(\n            '属性必须是' + ['top', 'left', 'right', 'botton'].join('、')\n          );\n        }\n        return true;\n      },\n    },\n  },\n  methods: {\n    handleToggle() {\n      this.visible = !this.visible;\n    },\n    handleDocumentToggle(e) {\n      if (this.$el.contains(e.target)) return;\n      this.visible = false;\n    },\n    handleMouseEnter() {\n      clearTimeout(this.timer);\n      this.visible = true;\n    },\n    handleMouseLeave() {\n      this.timer = setTimeout(() => {\n        this.visible = false;\n      }, 200);\n    },\n  },\n  mounted() {\n    let reference = this.$slots.reference;\n    if (reference) {\n      this.reference = reference[0].elm;\n    }\n    if (this.trigger === 'hover') {\n      on(this.$el, 'mouseenter', this.handleMouseEnter);\n      on(this.$el, 'mouseleave', this.handleMouseLeave);\n    } else if (this.trigger === 'click') {\n      on(this.reference, 'click', this.handleToggle);\n      on(document, 'click', this.handleDocumentToggle);\n    }\n  },\n  beforeDestroy() {\n    off(this.$el, 'mouseenter', this.handleMouseEnter);\n    off(this.$el, 'mouseleave', this.handleMouseLeave);\n    off(this.reference, 'click', this.handleToggle);\n    off(document, 'click', this.handleDocumentToggle);\n  },\n};\n<\/script>\n<style lang=\"scss\" scoped>\n.lcx-popover {\n  display: inline-block;\n  position: relative;\n  &-content {\n    position: absolute;\n    top: 100px;\n    left: 30px;\n    padding: 15px;\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n    background-color: #fff;\n  }\n}\n.arrow {\n  &::before {\n    position: absolute;\n    display: block;\n    content: '';\n    width: 0;\n    height: 0;\n    border: 10px solid transparent;\n    border-bottom-color: #fff;\n    filter: drop-shadow(0 -2px 1px #eee);\n  }\n  // &::after {\n  //   border-bottom-color: #fff;\n  //   transform: translateY(1px);\n  //   filter: drop-shadow(0 -2px 1px #ccc);\n  // }\n}\n.content-top{\n  .arrow {\n    &::before {\n      top: -19px;\n      left: 50%;\n      margin-left: -10px;\n    }\n  }\n}\n.content-bottom{\n  .arrow {\n    &::before {\n      bottom: -19px;\n      left: 50%;\n      margin-left: -10px;\n      transform: rotate(-180deg);\n    }\n  }\n}\n.content-left{\n  .arrow {\n    &::before {\n      top: 50%;\n      left: -19px;\n      margin-top: -10px;\n      transform: rotate(-90deg);\n    }\n  }\n}\n.content-right{\n  .arrow {\n    &::before {\n      top: 50%;\n      right: -19px;\n      margin-top: -10px;\n      transform: rotate(90deg);\n    }\n  }\n}\n</style>\n",normalizedContent:"\n<template>\n  <div class=\"lcx-popover\">\n    <div\n      class=\"lcx-popover-content\"\n      :class=\"`content-${placement}`\"\n      v-if=\"visible\"\n      ref=\"content\"\n      @click.stop\n    >\n      <h3>{{ title }}</h3>\n      {{ content }}\n      <i class=\"arrow\"></i>\n    </div>\n    <slot name=\"reference\"></slot>\n  </div>\n</template>\n<script>\nconst on = (element, event, handle) => {\n  element.addeventlistener(event, handle, false);\n};\nconst off = (element, event, handle) => {\n  element.removeeventlistener(event, handle, false);\n};\nexport default {\n  name: 'lcx-popover',\n  data() {\n    return {\n      visible: false,\n    };\n  },\n  watch: {\n    visible(val) {\n      if (val) {\n        this.$nexttick(() => {\n          let content = this.$refs.content;\n          document.body.appendchild(content);\n          if (this.trigger === 'hover') {\n            on(content, 'mouseenter', this.handlemouseenter);\n            on(content, 'mouseleave', this.handlemouseleave);\n          }\n        });\n      }\n    },\n  },\n  props: {\n    title: {\n      type: string,\n    },\n    trigger: {\n      type: string,\n    },\n    width: {\n      type: string,\n    },\n    content: {\n      type: string,\n    },\n    placement: {\n      type: string,\n      validator(type) {\n        if (!['top', 'left', 'right', 'botton'].includes(type)) {\n          throw new error(\n            '属性必须是' + ['top', 'left', 'right', 'botton'].join('、')\n          );\n        }\n        return true;\n      },\n    },\n  },\n  methods: {\n    handletoggle() {\n      this.visible = !this.visible;\n    },\n    handledocumenttoggle(e) {\n      if (this.$el.contains(e.target)) return;\n      this.visible = false;\n    },\n    handlemouseenter() {\n      cleartimeout(this.timer);\n      this.visible = true;\n    },\n    handlemouseleave() {\n      this.timer = settimeout(() => {\n        this.visible = false;\n      }, 200);\n    },\n  },\n  mounted() {\n    let reference = this.$slots.reference;\n    if (reference) {\n      this.reference = reference[0].elm;\n    }\n    if (this.trigger === 'hover') {\n      on(this.$el, 'mouseenter', this.handlemouseenter);\n      on(this.$el, 'mouseleave', this.handlemouseleave);\n    } else if (this.trigger === 'click') {\n      on(this.reference, 'click', this.handletoggle);\n      on(document, 'click', this.handledocumenttoggle);\n    }\n  },\n  beforedestroy() {\n    off(this.$el, 'mouseenter', this.handlemouseenter);\n    off(this.$el, 'mouseleave', this.handlemouseleave);\n    off(this.reference, 'click', this.handletoggle);\n    off(document, 'click', this.handledocumenttoggle);\n  },\n};\n<\/script>\n<style lang=\"scss\" scoped>\n.lcx-popover {\n  display: inline-block;\n  position: relative;\n  &-content {\n    position: absolute;\n    top: 100px;\n    left: 30px;\n    padding: 15px;\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n    background-color: #fff;\n  }\n}\n.arrow {\n  &::before {\n    position: absolute;\n    display: block;\n    content: '';\n    width: 0;\n    height: 0;\n    border: 10px solid transparent;\n    border-bottom-color: #fff;\n    filter: drop-shadow(0 -2px 1px #eee);\n  }\n  // &::after {\n  //   border-bottom-color: #fff;\n  //   transform: translatey(1px);\n  //   filter: drop-shadow(0 -2px 1px #ccc);\n  // }\n}\n.content-top{\n  .arrow {\n    &::before {\n      top: -19px;\n      left: 50%;\n      margin-left: -10px;\n    }\n  }\n}\n.content-bottom{\n  .arrow {\n    &::before {\n      bottom: -19px;\n      left: 50%;\n      margin-left: -10px;\n      transform: rotate(-180deg);\n    }\n  }\n}\n.content-left{\n  .arrow {\n    &::before {\n      top: 50%;\n      left: -19px;\n      margin-top: -10px;\n      transform: rotate(-90deg);\n    }\n  }\n}\n.content-right{\n  .arrow {\n    &::before {\n      top: 50%;\n      right: -19px;\n      margin-top: -10px;\n      transform: rotate(90deg);\n    }\n  }\n}\n</style>\n",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"Vue button组件开发",frontmatter:{title:"Vue button组件开发",date:"2021-5-29",categories:["frontEnd"],tags:["vue"],permalink:"/pages/8ea1aa/",readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/03.%E7%BB%84%E4%BB%B6%E5%BA%93/04.Vue%20button%E7%BB%84%E4%BB%B6%E5%BC%80%E5%8F%91.html",relativePath:"02.开发/03.组件库/04.Vue button组件开发.md",key:"v-8a0a5766",path:"/pages/8ea1aa/",headersStr:null,content:"<template>\n  <button class=\"lcx-button\" :class=\"btnClass\">\n    <lcx-icon :icon=\"icon\" v-if=\"icon\" />\n    <slot></slot>\n  </button>\n</template>\n<script>\nexport default {\n  name: 'lcx-button',\n  props: {\n    type: {\n      type: String,\n      default: '',\n      validator(type) {\n        if (\n          type &&\n          !['primary', 'success', 'info', 'danger', 'warning'].includes(type)\n        ) {\n          // eslint-disable-next-line no-console\n          console.error(\n            'type类型必须为其中一种' +\n              ['primary', 'success', 'info', 'danger', 'warning'].join('、')\n          );\n          return false;\n        }\n        return true;\n      }\n    },\n    icon: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    btnClass() {\n      let classes = [];\n      if (this.type) {\n        classes.push(`lcx-button-${this.type}`);\n      }\n      return classes;\n    }\n  }\n};\n<\/script>\n<style lang=\"scss\" scoped>\n@import '@/assets/css/_var.scss';\n.lcx-button {\n  display: inline-block;\n  white-space: nowrap;\n  cursor: pointer;\n  background: #fff;\n  color: #606266;\n  -webkit-appearance: none;\n  text-align: center;\n  box-sizing: border-box;\n  margin: 0;\n  padding: 12px 20px;\n  font-size: 16px;\n  border-radius: 4px;\n  border: 1px solid #dcdfe6;\n  background-color: #fff;\n  &:hover {\n    color: $primary;\n    border-color: #c6e2ff;\n    background-color: #ecf5ff;\n  }\n  &:focus,\n  &:active {\n    color: $primary;\n    border-color: #c6e2ff;\n    background-color: #ecf5ff;\n    outline: none;\n  }\n  ::v-deep .icon {\n    margin-right: 5px;\n    color: #fff;\n  }\n\n  @each $type,\n    $color\n      in (\n        primary: $primary,\n        success: $success,\n        info: $info,\n        danger: $danger,\n        warning: $warning\n      )\n  {\n    &-#{$type} {\n      color: #fff;\n      background-color: $color;\n    }\n  }\n  @each $type,\n    $color\n      in (\n        primary: $primary-background-hover,\n        success: $success-background-hover,\n        info: $info-background-hover,\n        danger: $danger-background-hover,\n        warning: $warning-background-hover\n      )\n  {\n    &-#{$type}:hover {\n      color: #fff;\n      background-color: $color;\n      border-color: $color;\n    }\n  }\n\n  @each $type,\n    $color\n      in (\n        primary: $primary-background-active,\n        success: $success-background-active,\n        info: $info-background-active,\n        danger: $danger-background-active,\n        warning: $warning-background-active\n      )\n  {\n    &-#{$type}:active,\n    &-#{$type}:focus {\n      color: #fff;\n      background-color: $color;\n      border-color: $color;\n    }\n  }\n}\n</style>\n\n",normalizedContent:"<template>\n  <button class=\"lcx-button\" :class=\"btnclass\">\n    <lcx-icon :icon=\"icon\" v-if=\"icon\" />\n    <slot></slot>\n  </button>\n</template>\n<script>\nexport default {\n  name: 'lcx-button',\n  props: {\n    type: {\n      type: string,\n      default: '',\n      validator(type) {\n        if (\n          type &&\n          !['primary', 'success', 'info', 'danger', 'warning'].includes(type)\n        ) {\n          // eslint-disable-next-line no-console\n          console.error(\n            'type类型必须为其中一种' +\n              ['primary', 'success', 'info', 'danger', 'warning'].join('、')\n          );\n          return false;\n        }\n        return true;\n      }\n    },\n    icon: {\n      type: string,\n      default: ''\n    }\n  },\n  computed: {\n    btnclass() {\n      let classes = [];\n      if (this.type) {\n        classes.push(`lcx-button-${this.type}`);\n      }\n      return classes;\n    }\n  }\n};\n<\/script>\n<style lang=\"scss\" scoped>\n@import '@/assets/css/_var.scss';\n.lcx-button {\n  display: inline-block;\n  white-space: nowrap;\n  cursor: pointer;\n  background: #fff;\n  color: #606266;\n  -webkit-appearance: none;\n  text-align: center;\n  box-sizing: border-box;\n  margin: 0;\n  padding: 12px 20px;\n  font-size: 16px;\n  border-radius: 4px;\n  border: 1px solid #dcdfe6;\n  background-color: #fff;\n  &:hover {\n    color: $primary;\n    border-color: #c6e2ff;\n    background-color: #ecf5ff;\n  }\n  &:focus,\n  &:active {\n    color: $primary;\n    border-color: #c6e2ff;\n    background-color: #ecf5ff;\n    outline: none;\n  }\n  ::v-deep .icon {\n    margin-right: 5px;\n    color: #fff;\n  }\n\n  @each $type,\n    $color\n      in (\n        primary: $primary,\n        success: $success,\n        info: $info,\n        danger: $danger,\n        warning: $warning\n      )\n  {\n    &-#{$type} {\n      color: #fff;\n      background-color: $color;\n    }\n  }\n  @each $type,\n    $color\n      in (\n        primary: $primary-background-hover,\n        success: $success-background-hover,\n        info: $info-background-hover,\n        danger: $danger-background-hover,\n        warning: $warning-background-hover\n      )\n  {\n    &-#{$type}:hover {\n      color: #fff;\n      background-color: $color;\n      border-color: $color;\n    }\n  }\n\n  @each $type,\n    $color\n      in (\n        primary: $primary-background-active,\n        success: $success-background-active,\n        info: $info-background-active,\n        danger: $danger-background-active,\n        warning: $warning-background-active\n      )\n  {\n    &-#{$type}:active,\n    &-#{$type}:focus {\n      color: #fff;\n      background-color: $color;\n      border-color: $color;\n    }\n  }\n}\n</style>\n\n",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"移动端1px问题",frontmatter:{title:"移动端1px问题",date:"2021-7-28",tags:["CSS"],permalink:"/pages/0c3675/",categories:["前端","CSS"],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/04.CSS/02.%E7%A7%BB%E5%8A%A8%E7%AB%AF1px%E9%97%AE%E9%A2%98.html",relativePath:"02.开发/04.CSS/02.移动端1px问题.md",key:"v-6662b64c",path:"/pages/0c3675/",headers:[{level:2,title:"1px 问题的起因",slug:"_1px-问题的起因",normalizedTitle:"1px 问题的起因",charIndex:157},{level:2,title:"解决方案",slug:"解决方案",normalizedTitle:"解决方案",charIndex:147},{level:3,title:"1.直接写 0.5px",slug:"_1-直接写-0-5px",normalizedTitle:"1.直接写 0.5px",charIndex:919},{level:3,title:"2.用图片代替边框",slug:"_2-用图片代替边框",normalizedTitle:"2.用图片代替边框",charIndex:1107},{level:3,title:"3.background渐变",slug:"_3-background渐变",normalizedTitle:"3.background渐变",charIndex:1286},{level:3,title:"4.box-shadow模拟边框实现",slug:"_4-box-shadow模拟边框实现",normalizedTitle:"4.box-shadow模拟边框实现",charIndex:1532},{level:3,title:"5.伪元素先放大后缩小",slug:"_5-伪元素先放大后缩小",normalizedTitle:"5.伪元素先放大后缩小",charIndex:1784},{level:3,title:"6.设置viewport解决问题",slug:"_6-设置viewport解决问题",normalizedTitle:"6.设置viewport解决问题",charIndex:2287},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:3833},{level:2,title:"参考文章",slug:"参考文章",normalizedTitle:"参考文章",charIndex:3933}],headersStr:"1px 问题的起因 解决方案 1.直接写 0.5px 2.用图片代替边框 3.background渐变 4.box-shadow模拟边框实现 5.伪元素先放大后缩小 6.设置viewport解决问题 总结 参考文章",content:"# 移动端1px问题\n\n在移动端web开发中，UI设计稿中设置边框为1像素，前端在开发过程中如果出现border:1px，测试会发现在retina屏机型中，1px会比较粗，即经典的移动端1px像素问题。\n\n1px 问题在实际面试中，尤其是大厂面试中出现的频率是比较高的。本文就探讨几种1px问题解决方案。\n\n\n# 1px 问题的起因\n\n1px 问题指的是在一些 Retina屏幕 的机型上，移动端页面的 1px 会变得很粗，呈现出不止 1px 的效果。\n\n原因很简单——CSS 中的 1px 并不能和移动设备上的 1px 划等号。它们之间的比例关系有一个专门的属性来描述：\n\n// 设备像素比\nwindow.devicePixelRatio = 设备的物理像素 / CSS像素\n\n\n一个物理像素等于多少个设备像素取决于移动设备的屏幕特性(是否是Retina)和用户缩放比例。\n\n大家可以尝试打开自己的 Chrome 浏览器，启动移动端调试模式，然后尝试在控制台去输出这个 devicePixelRatio 的值。这里我选中了 iPhone6/7/8 这系列的机型，输出的结果就是2：\n\n\n\n这就意味着我设置的 1px CSS 像素，在移动端上会用 2 个物理像素来进行渲染，所以实际看到的一定会比 1px 粗一些。\n\n\n# 解决方案\n\n1px 问题的解决方案是其实非常多的。不过从实用的角度出发，建议大家掌握3～4种就可以了，其他方法了解一下就行。\n\n方案                 优点           缺点\n直接写 0.5px          代码简单         IOS及Android老设备不支持\n用图片代替边框            全机型兼容        修改颜色及不支持圆角\nbackground渐变       全机型兼容        代码多及不支持圆角\nbox-shadow模拟边框实现   全机型兼容        有边框和虚影无法实现\n伪元素先放大后缩小          简单实用         缺点不明显\n设置viewport解决问题     一套代码适用所有页面   缺点不明显\n\n\n# 1.直接写 0.5px\n\n在 WWDC大会上，对ios8+的并且是DPR=2的设备来说，给出来了1px方案，当写 0.5px的时候，就会显示一个物理像素宽度的 border。 所以在iOS下，你可以这样写\n\nborder:0.5px solid #E5E5E5\n\n\n虽然解决问题了，但是实用性不高，首先，得考虑IOS 系统需要8及以上的版本，安卓系统则有不兼容问题。\n\n\n# 2.用图片代替边框\n\nborder: 1px solid transparent;\nborder-image: url('xxx.jpg') 2 repeat;\n\n\n虽然解决问题了，但是后期样式调整会让人奔溃，比如颜色调整得UI小伙伴重新上传图片，然后又要修改代码，或者直接文件替换有涉及到图片缓存问题，如果后期来了一个要有边框圆角需求完全没法搞。\n\n\n# 3.background渐变\n\nbackground-position: left top;\nbackground-image: -webkit-gradient(linear,left bottom,left top,color-stop(0.5,transparent),color-stop(0.5,#e0e0e0),to(#e0e0e0));\n\n\n代码多，展示的边框实际是在原本的border空间内部的，如果元素背景色有变化的样式, 边框线也会消失；最后也不能适应圆角样式。\n\n\n# 4.box-shadow模拟边框实现\n\nbox-shadow: 0  -1px 1px -1px #e5e5e5,   //上边线\n            1px  0  1px -1px #e5e5e5,   //右边线\n            0  1px  1px -1px #e5e5e5,   //下边线\n            -1px 0  1px -1px #e5e5e5;   //左边线\n\n\n毕竟展示的阴影和边框一个样，但如果有边框还要有虚影样式就没法搞，鱼和熊掌不可兼得。\n\n\n# 5.伪元素先放大后缩小\n\n这个方法的可行性会更高，兼容性也更好。\n\n实现方式：在目标元素的后面追加一个 ::after 伪元素，让这个元素布局为 absolute 之后、整个伸展开铺在目标元素上，然后把它的宽和高都设置为目标元素的两倍，border值设为 1px。接着借助 CSS 动画特效中的放缩能力，把整个伪元素缩小为原来的 50%。此时，伪元素的宽高刚好可以和原有的目标元素对齐，而 border 也缩小为了 1px 的二分之一，间接地实现了 0.5px 的效果。\n\n.hairline{\n  position: relative;\n  &::after{\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 1px;\n    width: 100%;\n    transform: scaleY(0.5);\n    transform-origin: 0 0;\n    background-color: #EDEDED;\n  }\n}\n\n\n目前大部分移动端UI采用该方案，全机型兼容。\n\n\n# 6.设置viewport解决问题\n\n利用viewport+rem+js 实现的，边框1px直接写上自动转换。\n\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" id=\"WebViewport\" content=\"initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no\" />\n        <title>Document</title>\n        <style type=\"text/css\"></style>\n    </head>\n    <body>\n        <script type=\"text/javascript\">\n            let viewport = document.querySelector('meta[name=viewport]')\n            //下面是根据设备像素设置viewport\n            if (window.devicePixelRatio == 1) {\n                viewport.setAttribute('content', 'width=device-width,initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no')\n            }\n            if (window.devicePixelRatio == 2) {\n                viewport.setAttribute('content', 'width=device-width,initial-scale=0.5, maximum-scale=0.5, minimum-scale=0.5, user-scalable=no')\n            }\n            if (window.devicePixelRatio == 3) {\n                viewport.setAttribute('content', 'width=device-width,initial-scale=0.3333333333333333, maximum-scale=0.3333333333333333, minimum-scale=0.3333333333333333, user-scalable=no')\n            }\n            function resize() {\n                let width = screen.width > 750 ? '75px' : screen.width / 10 + 'px'\n                document.getElementsByTagName('html')[0].style.fontSize = width\n            }\n            window.onresize = resize\n        <\/script>\n    </body>\n</html>\n\n\n这种方式，优点很明显，全机型兼容，直接写1px简单方便！\n\n\n# 总结\n\n新项目最好使用的是设置viewport解决问题，这个方法兼容性好，后期写起来方便，其次用的比较多的方法就是伪元素的方法。 其他的背景图片，阴影的方法毕竟还是不太灵活，而且兼容性不好。\n\n\n# 参考文章\n\n * A tale of two viewports\n * 解锁前端面试体系核心攻略\n * 手淘H5页面的终端适配\n * 1px方案",normalizedContent:"# 移动端1px问题\n\n在移动端web开发中，ui设计稿中设置边框为1像素，前端在开发过程中如果出现border:1px，测试会发现在retina屏机型中，1px会比较粗，即经典的移动端1px像素问题。\n\n1px 问题在实际面试中，尤其是大厂面试中出现的频率是比较高的。本文就探讨几种1px问题解决方案。\n\n\n# 1px 问题的起因\n\n1px 问题指的是在一些 retina屏幕 的机型上，移动端页面的 1px 会变得很粗，呈现出不止 1px 的效果。\n\n原因很简单——css 中的 1px 并不能和移动设备上的 1px 划等号。它们之间的比例关系有一个专门的属性来描述：\n\n// 设备像素比\nwindow.devicepixelratio = 设备的物理像素 / css像素\n\n\n一个物理像素等于多少个设备像素取决于移动设备的屏幕特性(是否是retina)和用户缩放比例。\n\n大家可以尝试打开自己的 chrome 浏览器，启动移动端调试模式，然后尝试在控制台去输出这个 devicepixelratio 的值。这里我选中了 iphone6/7/8 这系列的机型，输出的结果就是2：\n\n\n\n这就意味着我设置的 1px css 像素，在移动端上会用 2 个物理像素来进行渲染，所以实际看到的一定会比 1px 粗一些。\n\n\n# 解决方案\n\n1px 问题的解决方案是其实非常多的。不过从实用的角度出发，建议大家掌握3～4种就可以了，其他方法了解一下就行。\n\n方案                 优点           缺点\n直接写 0.5px          代码简单         ios及android老设备不支持\n用图片代替边框            全机型兼容        修改颜色及不支持圆角\nbackground渐变       全机型兼容        代码多及不支持圆角\nbox-shadow模拟边框实现   全机型兼容        有边框和虚影无法实现\n伪元素先放大后缩小          简单实用         缺点不明显\n设置viewport解决问题     一套代码适用所有页面   缺点不明显\n\n\n# 1.直接写 0.5px\n\n在 wwdc大会上，对ios8+的并且是dpr=2的设备来说，给出来了1px方案，当写 0.5px的时候，就会显示一个物理像素宽度的 border。 所以在ios下，你可以这样写\n\nborder:0.5px solid #e5e5e5\n\n\n虽然解决问题了，但是实用性不高，首先，得考虑ios 系统需要8及以上的版本，安卓系统则有不兼容问题。\n\n\n# 2.用图片代替边框\n\nborder: 1px solid transparent;\nborder-image: url('xxx.jpg') 2 repeat;\n\n\n虽然解决问题了，但是后期样式调整会让人奔溃，比如颜色调整得ui小伙伴重新上传图片，然后又要修改代码，或者直接文件替换有涉及到图片缓存问题，如果后期来了一个要有边框圆角需求完全没法搞。\n\n\n# 3.background渐变\n\nbackground-position: left top;\nbackground-image: -webkit-gradient(linear,left bottom,left top,color-stop(0.5,transparent),color-stop(0.5,#e0e0e0),to(#e0e0e0));\n\n\n代码多，展示的边框实际是在原本的border空间内部的，如果元素背景色有变化的样式, 边框线也会消失；最后也不能适应圆角样式。\n\n\n# 4.box-shadow模拟边框实现\n\nbox-shadow: 0  -1px 1px -1px #e5e5e5,   //上边线\n            1px  0  1px -1px #e5e5e5,   //右边线\n            0  1px  1px -1px #e5e5e5,   //下边线\n            -1px 0  1px -1px #e5e5e5;   //左边线\n\n\n毕竟展示的阴影和边框一个样，但如果有边框还要有虚影样式就没法搞，鱼和熊掌不可兼得。\n\n\n# 5.伪元素先放大后缩小\n\n这个方法的可行性会更高，兼容性也更好。\n\n实现方式：在目标元素的后面追加一个 ::after 伪元素，让这个元素布局为 absolute 之后、整个伸展开铺在目标元素上，然后把它的宽和高都设置为目标元素的两倍，border值设为 1px。接着借助 css 动画特效中的放缩能力，把整个伪元素缩小为原来的 50%。此时，伪元素的宽高刚好可以和原有的目标元素对齐，而 border 也缩小为了 1px 的二分之一，间接地实现了 0.5px 的效果。\n\n.hairline{\n  position: relative;\n  &::after{\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 1px;\n    width: 100%;\n    transform: scaley(0.5);\n    transform-origin: 0 0;\n    background-color: #ededed;\n  }\n}\n\n\n目前大部分移动端ui采用该方案，全机型兼容。\n\n\n# 6.设置viewport解决问题\n\n利用viewport+rem+js 实现的，边框1px直接写上自动转换。\n\n<!doctype html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\" />\n        <meta name=\"viewport\" id=\"webviewport\" content=\"initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no\" />\n        <title>document</title>\n        <style type=\"text/css\"></style>\n    </head>\n    <body>\n        <script type=\"text/javascript\">\n            let viewport = document.queryselector('meta[name=viewport]')\n            //下面是根据设备像素设置viewport\n            if (window.devicepixelratio == 1) {\n                viewport.setattribute('content', 'width=device-width,initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no')\n            }\n            if (window.devicepixelratio == 2) {\n                viewport.setattribute('content', 'width=device-width,initial-scale=0.5, maximum-scale=0.5, minimum-scale=0.5, user-scalable=no')\n            }\n            if (window.devicepixelratio == 3) {\n                viewport.setattribute('content', 'width=device-width,initial-scale=0.3333333333333333, maximum-scale=0.3333333333333333, minimum-scale=0.3333333333333333, user-scalable=no')\n            }\n            function resize() {\n                let width = screen.width > 750 ? '75px' : screen.width / 10 + 'px'\n                document.getelementsbytagname('html')[0].style.fontsize = width\n            }\n            window.onresize = resize\n        <\/script>\n    </body>\n</html>\n\n\n这种方式，优点很明显，全机型兼容，直接写1px简单方便！\n\n\n# 总结\n\n新项目最好使用的是设置viewport解决问题，这个方法兼容性好，后期写起来方便，其次用的比较多的方法就是伪元素的方法。 其他的背景图片，阴影的方法毕竟还是不太灵活，而且兼容性不好。\n\n\n# 参考文章\n\n * a tale of two viewports\n * 解锁前端面试体系核心攻略\n * 手淘h5页面的终端适配\n * 1px方案",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"CSS 实现多行文本“展开收起”",frontmatter:{title:"CSS 实现多行文本“展开收起”",date:"2022-03-16T16:35:52.000Z",permalink:"/pages/5aae97/",categories:["前端开发","CSS"],tags:[null],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/04.CSS/03.CSS%20%E5%AE%9E%E7%8E%B0%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC%E2%80%9C%E5%B1%95%E5%BC%80%E6%94%B6%E8%B5%B7%E2%80%9D.html",relativePath:"02.开发/04.CSS/03.CSS 实现多行文本“展开收起”.md",key:"v-2eb304a4",path:"/pages/5aae97/",headers:[{level:2,title:"1\\. 多行文本截断",slug:"_1-多行文本截断",normalizedTitle:"1. 多行文本截断",charIndex:427},{level:2,title:"2\\. 右下角环绕效果",slug:"_2-右下角环绕效果",normalizedTitle:"2. 右下角环绕效果",charIndex:740},{level:2,title:"3\\. 动态高度",slug:"_3-动态高度",normalizedTitle:"3. 动态高度",charIndex:1714},{level:2,title:"4.其他浏览器的兼容处理",slug:"_4-其他浏览器的兼容处理",normalizedTitle:"4.其他浏览器的兼容处理",charIndex:2916}],headersStr:"1\\. 多行文本截断 2\\. 右下角环绕效果 3\\. 动态高度 4.其他浏览器的兼容处理",content:'> 来源https://juejin.cn/post/6963904955262435336#heading-5\n\n\n# CSS 实现多行文本“展开收起”\n\n多行文本展开收起是一个很常见的交互， 如下图演示\n\n实现这一类布局和交互难点主要有以下几点\n\n * 位于多行文本右下角的“展开收起”按钮\n * “展开”和“收起”两种状态的切换\n * 当文本不超过指定行数时，不显示“展开收起”按钮\n\n说实话，之前单独看这个布局，即使借助 JavaScript 也不是一件容易的事啊（需要计算文字宽度动态截取文本，vue-clamp就是这么做的），更别说下面的交互和判断逻辑了，不过经过我的一番琢磨，其实纯 CSS 也能完美实现的，下面就一步一步来看看如何实现吧~\n\n\n# 一、位于右下角的“展开收起”按钮\n\n很多设计同学都喜欢这样的设计，把按钮放在右下角，和文本 混合 在一起，而不是单独一行，视觉上可能更加舒适美观。先看看多行文本截断吧，这个比较简单\n\n\n# 1. 多行文本截断\n\n假设有这样一个 html 结构\n\n<div class="text">\n  浮动元素是如何定位的\n正如我们前面提到的那样，当一个元素浮动之后，它会被移出正常的文档流，然后向左或者向右平移，一直平移直到碰到了所处的容器的边框，或者碰到另外一个浮动的元素。\n</div>\n\n\n\n多行文本超出省略大家应该很熟悉这个了吧，主要用到用到 line-clamp，关键样式如下\n\n.text {\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n\n\n\n\n\n# 2. 右下角环绕效果\n\n提到 文本环绕效果，一般能想到 浮动 float，没错，千万不要以为浮动已经是过去式了，具体的场景还是很有用的。比如下面放一个按钮，然后设置浮动\n\n<div class="text">\n  <button class="btn">展开</button>\n  浮动元素是如何定位的\n正如我们前面提到的那样，当一个元素浮动之后，它会被移出正常的文档流，然后向左或者向右平移，一直平移直到碰到了所处的容器的边框，或者碰到另外一个浮动的元素。\n</div>\n\n\n\n.btn {\n  float: left;\n  /*其他装饰样式*/\n}\n\n\n\n如果设置右浮动\n\n.btn {\n  float: right;\n  /*其他装饰样式*/\n}\n\n\n\n这时已经有了 环绕 的效果了，只是位于右上角，如何将按钮移到右下角呢？先尝试一下 margin\n\n.btn {\n  float: right;\n  margin-top: 50px;\n  /*其他装饰样式*/\n}\n\n\n\n\n\n可以看到，虽然按钮到了右下角，但是文本却没有环绕按钮上方的空间，空出了一大截，无能为力了吗？\n\n虽然 margin 不能解决问题，但是整个文本还是受到了浮动按钮的影响，如果有多个浮动元素会怎么样呢？这里用伪元素来 ::before 代替\n\n.text::before{\n  content: \'\';\n  float: right;\n  width: 10px;\n  height: 50px;/*先随便设置一个高度*/\n  background: red\n}\n\n\n\n\n\n现在按钮到了伪元素的左侧，如何移到下面呢？很简单，清除一下浮动 clear: both; 就可以了\n\n.btn {\n  float: right;\n  clear: both;\n  /*其他装饰样式*/\n}\n\n\n\n\n\n可以看到，现在文本是完全环绕在右侧的两个浮动元素了，只要把红色背景的伪元素宽度设置为0（或者不设置宽度，默认就是 0），就实现了右下角环绕的效果\n\n.text::before{\n  content: \'\';\n  float: right;\n  width: 0; /*设置为0，或者不设置宽度*/\n  height: 50px;/*先随便设置一个高度*/\n}\n\n\n\n\n\n\n# 3. 动态高度\n\n上面虽然完成了右下加环绕，但是高度是固定的，如何动态设置呢？这里可以用到 calc 计算，用整个容器高度减去按钮的高度即可，如下\n\n.text::before{\n  content: \'\';\n  float: right;\n  width: 0;\n  height: calc(100% - 24px);\n}\n\n\n\n\n\n很可惜，好像并没有什么效果，打开控制台看看，结果发现 calc(100% - 24px) 计算高度为 0\n\n\n\n原因其实很容易想到，就是高度 100% 失效的问题，关于这类问题网上的分析有很多，通常的解决方式是给父级指定一个高度，但是这里的高度是动态变化的，而且还有展开状态，高度更是不可预知，所以设置高度不可取。\n\n除此之外，其实还有另一种方式，那就是利用 flex 布局。大概的方法就是在 flex 布局 的子项中，可以通过百分比来计算变化高度，具体可参考 w3.org 中关于 css-flexbox 的描述\n\n> If the flex item hasalign-self: stretch, redo layout for its contents, treating this used size as its definite cross size so that percentage-sized children can be resolved.\n\n因此，这里需要给 .text 包裹一层，然后设置 display: flex\n\n<div class="wrap">\n  <div class="text">\n    <button class="btn">展开</button>\n    浮动元素是如何定位的\n  正如我们前面提到的那样，当一个元素浮动之后，它会被移出正常的文档流，然后向左或者向右平移，一直平移直到碰到了所处的容器的边框，或者碰到另外一个浮动的元素。\n  </div>\n</div>\n\n\n\n.wrap{\n  display: flex;\n}\n\n\n\n> 实践下来，display: grid 和 display: -webkit-box 同样有效，原理类似\n\n这样下来，刚才的计算高度就生效了，改变文本的行数，同样位于右下角~\n\n\n\n除此之外，动态高度也可以采用负的 margin 来实现（性能会比 calc 略好一点）\n\n.text::before{\n  content: \'\';\n  float: right;\n  width: 0;\n  /*height: calc(100% - 24px);*/\n  height: 100%;\n  margin-bottom: -24px;\n}\n\n\n\n到这里，右下角环绕的效果就基本完成，省略号也是位于展开按钮之前的，完整代码可以查看 codepen 右下角多行展开环绕效果\n\n\n# 4.其他浏览器的兼容处理\n\n上面的实现是最完美的处理方式。原本以为兼容性没什么大问题的，毕竟只用到了文本截断和浮动，-webkit-line-clamp 虽然是 -webkit- 前缀，不过 firefox 也是支持的，打开一看傻了眼，safari 和 firefox 居然全乱了！\n\n\n\n这就有点难受了，前面那么多努力都白费了吗？不可能不管这两个，不然就只能是 demo 了，无法用于生产环境。\n\n赶紧打开控制台看看是什么原因。一番查找，结果发现是display: -webkit-box！设置该属性后，原本的文本好像变成了一整块，浮动元素也无法产生环绕效果，去掉之后浮动就正常了\n\n\n\n那么问题来了：没有 display: -webkit-box 怎么实现多行截断呢 ？\n\n其实上面的努力已经实现了右下角环绕的效果，如果在知道行数的情况下设置一个最大高度，是不是也完成了多行截断呢？为了便于设置高度，可以添加一个行高 line-height，如果需要设置成 3 行，那高度就设置成line-height * 3\n\n.text {\n  /*\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  */\n  line-height: 1.5;\n  max-height: 4.5em;\n  overflow: hidden;\n}\n\n\n\n为了方便更好的控制行数，这里可以把常用的行数通过属性选择器独立出来（通常不会太多），如下\n\n[line-clamp="1"] {\n  max-height: 1.5em;\n}\n[line-clamp="2"] {\n  max-height: 3em;\n}\n[line-clamp="3"] {\n  max-height: 4.5em;\n}\n...\n\n\n\n\x3c!--3行--\x3e\n<div class="text" line-clamp="3">\n...\n</div>\n\x3c!--5行--\x3e\n<div class="text" line-clamp="5">\n ...\n</div>\n\n\n\n\n\n可以看到基本上正常了，除了没有省略号，现在加上省略号吧，跟在展开按钮之前就可以了，可以用伪元素实现\n\n.btn::before{\n  content: \'...\';\n  position: absolute;\n  left: -10px;\n  color: #333;\n  transform: translateX(-100%)\n}\n\n\n\n\n\n这样，Safari 和 Firefox 的兼容布局基本上就完成了，完整代码可以查看 codepen 右下角多行展开环绕效果（全兼容）\n\n\n# 二、“展开”和“收起”两种状态\n\n提到 CSS 状态切换，大家都能想到 input type="checkbox" 吧。这里我们也需要用到这个特性，首先加一个 input，然后把之前的 button 换成 label ，并且通过 for 属性关联起来\n\n<div class="wrap">\n  <input type="checkbox" id="exp">\n  <div class="text">\n    <label class="btn" for="exp">展开</label>\n    浮动元素是如何定位的\n  正如我们前面提到的那样，当一个元素浮动之后，它会被移出正常的文档流，然后向左或者向右平移，一直平移直到碰到了所处的容器的边框，或者碰到另外一个浮动的元素。\n  </div>\n</div>\n\n\n\n这样，在点击 label 的时候，实际上是点击了 input 元素，现在来添加两种状态，分别是只显示 3 行和不做行数限制\n\n.exp:checked+.text{\n  -webkit-line-clamp: 999; /*设置一个足够大的行数就可以了*/\n}\n\n\n\n兼容版本可以直接设置最大高度 max-height 为一个较大的值，或者直接设置为 none\n\n.exp:checked+.text{\n  max-height: none;\n}\n\n\n\n\n\n这里还有一个小问题，“展开”按钮在点击后应该变成“收起”，如何修改呢？\n\n有一个技巧，凡是碰到需要动态修改内容的，都可以使用伪类 content 生成技术，具体做法就是去除或者隐藏按钮里面的文字，采用伪元素生成\n\n<label class="btn" for="exp"></label>\x3c!--去除按钮文字--\x3e\n\n\n\n.btn::after{\n  content:\'展开\' /*采用content生成*/\n}\n\n\n\n添加 :checked 状态\n\n.exp:checked+.text .btn::after{\n  content:\'收起\'\n}\n\n\n\n兼容版本由于前面的省略号是模拟出来的，不能自动隐藏，所以需要额外来处理\n\n.exp:checked+.text .btn::before {\n    visibility: hidden; /*在展开状态下隐藏省略号*/\n}\n\n\n\n\n\n基本和本文开头的效果一致了，完整代码可以查看 codepen 多行展开收起交互，兼容版本可以查看 codepen 多行展开收起交互（全兼容）\n\n还有一点，如果给max-height设置一个合适的值，注意，是合适的值，具体原理可以参考 CSS 奇技淫巧：动态高度过渡动画，还能加上过渡动画\n\n.text{\n  transition: .3s max-height;\n}\n.exp:checked+.text{\n  max-height: 200px; /*超出最大行高度就可以了*/\n}\n\n\n\n\n\n\n# 三、文本行数的判断\n\n上面的交互已经基本满足要求了，但是还是会有问题。比如当文本较少时，此时是没有发生截断，也就是没有省略号的，但是“展开”按钮却仍然位于右下角，如何隐藏呢？\n\n\n\n通常 js 的解决方式很容易，比较一下元素的 scrollHeight 和 clientHeight 即可，然后添加相对应的类名。下面是伪代码\n\nif (el.scrollHeight > el.clientHeight) {\n  // 文本超出了\n  el.classList.add(\'trunk\')\n} \n\n\n\n那么，CSS 如何实现这类判断呢？\n\n可以肯定的是，CSS 是没有这类逻辑判断，大多数我们都需要从别的角度，采用 “障眼法” 来实现。比如在这个场景，当没有发生截断的时候，表示文本完全可见了，这时，如果在文本末尾添加一个元素（红色小方块），为了不影响原有布局，这里设置了绝对定位\n\n.text::after {\n    content: \'\';\n    width: 10px;\n    height: 10px;\n    position: absolute;\n    background: red;\n}\n\n\n\n可以看到，这里的红色小方块是完全跟随省略号的。当省略号出现时，红色小方块必定消失，因为已经被挤下去了，这里把父级 overflow: hidden 暂时隐藏就能看到是什么原理了\n\n\n\n然后，可以把刚才这个红色的小方块设置一个足够大的尺寸，比如 100% * 100%\n\n.text::after {\n    content: \'\';\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    background: red;\n}\n\n\n\n\n\n可以看到，红色的块块把右下角的都覆盖了，现在把背景改为白色（和父级同底色），父级 overflow: hidden重新加上\n\n.text::after {\n    content: \'\';\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    background: #fff;\n}\n\n\n\n现在看看点击展开的效果吧\n\n\n\n现在展开以后，发现按钮不见（被刚才那个伪元素所覆盖，并且也点击不了），如果希望点击以后仍然可见呢？添加一下 :checked 状态即可，在展开时隐藏覆盖层\n\n.exp:checked+.text::after{\n    visibility: hidden;\n}\n\n\n\n这样，就实现了在文字较少的情况下隐藏展开按钮的功能\n\n\n\n最终完整代码可以查看codepen 多行展开收起自动隐藏，兼容版本可以查看codepen 多行展开收起自动隐藏（全兼容）\n\n> 需要注意的是，兼容版本可以支持到 IE 10+（这就过分了啊，居然还支持 IE），但是由于 IE 不支持 codepen，所以测试 IE 可以自行复制在本地测试。\n\n\n\n\n# 四、总结和说明\n\n总的来说，重点还是在布局方面，交互其实相对容易，整体实现的成本其实是很低的，也没有比较生僻的属性，除了布局方面 -webkit-box 貌似有点 bug （毕竟是 -webkit-内核 ， 火狐只是借鉴了过来，难免有些问题），幸运的是可以通过另一种方式实现多行文本截断效果，兼容性相当不错，基本上全兼容（IE10+），这里整理一下实现重点\n\n * 文本环绕效果首先考虑浮动 float\n * flex 布局子元素可以通过百分比计算高度\n * 多行文本截断还可以结合文本环绕效果用max-height模拟实现\n * 状态切换可以借助 checkbox\n * CSS 改变文本可以采用伪元素生成\n * 多利用 CSS 遮挡 “障眼法”\n\n多行文本展开收起效果可以说是业界一个老大难的问题了，有很多 js 解决方案，但是感觉都不是很完美，希望这个全新思路的 CSS 解决方式能给各位带来不一样的启发，感谢阅读，欢迎点赞、收藏、转发～',normalizedContent:'> 来源https://juejin.cn/post/6963904955262435336#heading-5\n\n\n# css 实现多行文本“展开收起”\n\n多行文本展开收起是一个很常见的交互， 如下图演示\n\n实现这一类布局和交互难点主要有以下几点\n\n * 位于多行文本右下角的“展开收起”按钮\n * “展开”和“收起”两种状态的切换\n * 当文本不超过指定行数时，不显示“展开收起”按钮\n\n说实话，之前单独看这个布局，即使借助 javascript 也不是一件容易的事啊（需要计算文字宽度动态截取文本，vue-clamp就是这么做的），更别说下面的交互和判断逻辑了，不过经过我的一番琢磨，其实纯 css 也能完美实现的，下面就一步一步来看看如何实现吧~\n\n\n# 一、位于右下角的“展开收起”按钮\n\n很多设计同学都喜欢这样的设计，把按钮放在右下角，和文本 混合 在一起，而不是单独一行，视觉上可能更加舒适美观。先看看多行文本截断吧，这个比较简单\n\n\n# 1. 多行文本截断\n\n假设有这样一个 html 结构\n\n<div class="text">\n  浮动元素是如何定位的\n正如我们前面提到的那样，当一个元素浮动之后，它会被移出正常的文档流，然后向左或者向右平移，一直平移直到碰到了所处的容器的边框，或者碰到另外一个浮动的元素。\n</div>\n\n\n\n多行文本超出省略大家应该很熟悉这个了吧，主要用到用到 line-clamp，关键样式如下\n\n.text {\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n\n\n\n\n\n# 2. 右下角环绕效果\n\n提到 文本环绕效果，一般能想到 浮动 float，没错，千万不要以为浮动已经是过去式了，具体的场景还是很有用的。比如下面放一个按钮，然后设置浮动\n\n<div class="text">\n  <button class="btn">展开</button>\n  浮动元素是如何定位的\n正如我们前面提到的那样，当一个元素浮动之后，它会被移出正常的文档流，然后向左或者向右平移，一直平移直到碰到了所处的容器的边框，或者碰到另外一个浮动的元素。\n</div>\n\n\n\n.btn {\n  float: left;\n  /*其他装饰样式*/\n}\n\n\n\n如果设置右浮动\n\n.btn {\n  float: right;\n  /*其他装饰样式*/\n}\n\n\n\n这时已经有了 环绕 的效果了，只是位于右上角，如何将按钮移到右下角呢？先尝试一下 margin\n\n.btn {\n  float: right;\n  margin-top: 50px;\n  /*其他装饰样式*/\n}\n\n\n\n\n\n可以看到，虽然按钮到了右下角，但是文本却没有环绕按钮上方的空间，空出了一大截，无能为力了吗？\n\n虽然 margin 不能解决问题，但是整个文本还是受到了浮动按钮的影响，如果有多个浮动元素会怎么样呢？这里用伪元素来 ::before 代替\n\n.text::before{\n  content: \'\';\n  float: right;\n  width: 10px;\n  height: 50px;/*先随便设置一个高度*/\n  background: red\n}\n\n\n\n\n\n现在按钮到了伪元素的左侧，如何移到下面呢？很简单，清除一下浮动 clear: both; 就可以了\n\n.btn {\n  float: right;\n  clear: both;\n  /*其他装饰样式*/\n}\n\n\n\n\n\n可以看到，现在文本是完全环绕在右侧的两个浮动元素了，只要把红色背景的伪元素宽度设置为0（或者不设置宽度，默认就是 0），就实现了右下角环绕的效果\n\n.text::before{\n  content: \'\';\n  float: right;\n  width: 0; /*设置为0，或者不设置宽度*/\n  height: 50px;/*先随便设置一个高度*/\n}\n\n\n\n\n\n\n# 3. 动态高度\n\n上面虽然完成了右下加环绕，但是高度是固定的，如何动态设置呢？这里可以用到 calc 计算，用整个容器高度减去按钮的高度即可，如下\n\n.text::before{\n  content: \'\';\n  float: right;\n  width: 0;\n  height: calc(100% - 24px);\n}\n\n\n\n\n\n很可惜，好像并没有什么效果，打开控制台看看，结果发现 calc(100% - 24px) 计算高度为 0\n\n\n\n原因其实很容易想到，就是高度 100% 失效的问题，关于这类问题网上的分析有很多，通常的解决方式是给父级指定一个高度，但是这里的高度是动态变化的，而且还有展开状态，高度更是不可预知，所以设置高度不可取。\n\n除此之外，其实还有另一种方式，那就是利用 flex 布局。大概的方法就是在 flex 布局 的子项中，可以通过百分比来计算变化高度，具体可参考 w3.org 中关于 css-flexbox 的描述\n\n> if the flex item hasalign-self: stretch, redo layout for its contents, treating this used size as its definite cross size so that percentage-sized children can be resolved.\n\n因此，这里需要给 .text 包裹一层，然后设置 display: flex\n\n<div class="wrap">\n  <div class="text">\n    <button class="btn">展开</button>\n    浮动元素是如何定位的\n  正如我们前面提到的那样，当一个元素浮动之后，它会被移出正常的文档流，然后向左或者向右平移，一直平移直到碰到了所处的容器的边框，或者碰到另外一个浮动的元素。\n  </div>\n</div>\n\n\n\n.wrap{\n  display: flex;\n}\n\n\n\n> 实践下来，display: grid 和 display: -webkit-box 同样有效，原理类似\n\n这样下来，刚才的计算高度就生效了，改变文本的行数，同样位于右下角~\n\n\n\n除此之外，动态高度也可以采用负的 margin 来实现（性能会比 calc 略好一点）\n\n.text::before{\n  content: \'\';\n  float: right;\n  width: 0;\n  /*height: calc(100% - 24px);*/\n  height: 100%;\n  margin-bottom: -24px;\n}\n\n\n\n到这里，右下角环绕的效果就基本完成，省略号也是位于展开按钮之前的，完整代码可以查看 codepen 右下角多行展开环绕效果\n\n\n# 4.其他浏览器的兼容处理\n\n上面的实现是最完美的处理方式。原本以为兼容性没什么大问题的，毕竟只用到了文本截断和浮动，-webkit-line-clamp 虽然是 -webkit- 前缀，不过 firefox 也是支持的，打开一看傻了眼，safari 和 firefox 居然全乱了！\n\n\n\n这就有点难受了，前面那么多努力都白费了吗？不可能不管这两个，不然就只能是 demo 了，无法用于生产环境。\n\n赶紧打开控制台看看是什么原因。一番查找，结果发现是display: -webkit-box！设置该属性后，原本的文本好像变成了一整块，浮动元素也无法产生环绕效果，去掉之后浮动就正常了\n\n\n\n那么问题来了：没有 display: -webkit-box 怎么实现多行截断呢 ？\n\n其实上面的努力已经实现了右下角环绕的效果，如果在知道行数的情况下设置一个最大高度，是不是也完成了多行截断呢？为了便于设置高度，可以添加一个行高 line-height，如果需要设置成 3 行，那高度就设置成line-height * 3\n\n.text {\n  /*\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  */\n  line-height: 1.5;\n  max-height: 4.5em;\n  overflow: hidden;\n}\n\n\n\n为了方便更好的控制行数，这里可以把常用的行数通过属性选择器独立出来（通常不会太多），如下\n\n[line-clamp="1"] {\n  max-height: 1.5em;\n}\n[line-clamp="2"] {\n  max-height: 3em;\n}\n[line-clamp="3"] {\n  max-height: 4.5em;\n}\n...\n\n\n\n\x3c!--3行--\x3e\n<div class="text" line-clamp="3">\n...\n</div>\n\x3c!--5行--\x3e\n<div class="text" line-clamp="5">\n ...\n</div>\n\n\n\n\n\n可以看到基本上正常了，除了没有省略号，现在加上省略号吧，跟在展开按钮之前就可以了，可以用伪元素实现\n\n.btn::before{\n  content: \'...\';\n  position: absolute;\n  left: -10px;\n  color: #333;\n  transform: translatex(-100%)\n}\n\n\n\n\n\n这样，safari 和 firefox 的兼容布局基本上就完成了，完整代码可以查看 codepen 右下角多行展开环绕效果（全兼容）\n\n\n# 二、“展开”和“收起”两种状态\n\n提到 css 状态切换，大家都能想到 input type="checkbox" 吧。这里我们也需要用到这个特性，首先加一个 input，然后把之前的 button 换成 label ，并且通过 for 属性关联起来\n\n<div class="wrap">\n  <input type="checkbox" id="exp">\n  <div class="text">\n    <label class="btn" for="exp">展开</label>\n    浮动元素是如何定位的\n  正如我们前面提到的那样，当一个元素浮动之后，它会被移出正常的文档流，然后向左或者向右平移，一直平移直到碰到了所处的容器的边框，或者碰到另外一个浮动的元素。\n  </div>\n</div>\n\n\n\n这样，在点击 label 的时候，实际上是点击了 input 元素，现在来添加两种状态，分别是只显示 3 行和不做行数限制\n\n.exp:checked+.text{\n  -webkit-line-clamp: 999; /*设置一个足够大的行数就可以了*/\n}\n\n\n\n兼容版本可以直接设置最大高度 max-height 为一个较大的值，或者直接设置为 none\n\n.exp:checked+.text{\n  max-height: none;\n}\n\n\n\n\n\n这里还有一个小问题，“展开”按钮在点击后应该变成“收起”，如何修改呢？\n\n有一个技巧，凡是碰到需要动态修改内容的，都可以使用伪类 content 生成技术，具体做法就是去除或者隐藏按钮里面的文字，采用伪元素生成\n\n<label class="btn" for="exp"></label>\x3c!--去除按钮文字--\x3e\n\n\n\n.btn::after{\n  content:\'展开\' /*采用content生成*/\n}\n\n\n\n添加 :checked 状态\n\n.exp:checked+.text .btn::after{\n  content:\'收起\'\n}\n\n\n\n兼容版本由于前面的省略号是模拟出来的，不能自动隐藏，所以需要额外来处理\n\n.exp:checked+.text .btn::before {\n    visibility: hidden; /*在展开状态下隐藏省略号*/\n}\n\n\n\n\n\n基本和本文开头的效果一致了，完整代码可以查看 codepen 多行展开收起交互，兼容版本可以查看 codepen 多行展开收起交互（全兼容）\n\n还有一点，如果给max-height设置一个合适的值，注意，是合适的值，具体原理可以参考 css 奇技淫巧：动态高度过渡动画，还能加上过渡动画\n\n.text{\n  transition: .3s max-height;\n}\n.exp:checked+.text{\n  max-height: 200px; /*超出最大行高度就可以了*/\n}\n\n\n\n\n\n\n# 三、文本行数的判断\n\n上面的交互已经基本满足要求了，但是还是会有问题。比如当文本较少时，此时是没有发生截断，也就是没有省略号的，但是“展开”按钮却仍然位于右下角，如何隐藏呢？\n\n\n\n通常 js 的解决方式很容易，比较一下元素的 scrollheight 和 clientheight 即可，然后添加相对应的类名。下面是伪代码\n\nif (el.scrollheight > el.clientheight) {\n  // 文本超出了\n  el.classlist.add(\'trunk\')\n} \n\n\n\n那么，css 如何实现这类判断呢？\n\n可以肯定的是，css 是没有这类逻辑判断，大多数我们都需要从别的角度，采用 “障眼法” 来实现。比如在这个场景，当没有发生截断的时候，表示文本完全可见了，这时，如果在文本末尾添加一个元素（红色小方块），为了不影响原有布局，这里设置了绝对定位\n\n.text::after {\n    content: \'\';\n    width: 10px;\n    height: 10px;\n    position: absolute;\n    background: red;\n}\n\n\n\n可以看到，这里的红色小方块是完全跟随省略号的。当省略号出现时，红色小方块必定消失，因为已经被挤下去了，这里把父级 overflow: hidden 暂时隐藏就能看到是什么原理了\n\n\n\n然后，可以把刚才这个红色的小方块设置一个足够大的尺寸，比如 100% * 100%\n\n.text::after {\n    content: \'\';\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    background: red;\n}\n\n\n\n\n\n可以看到，红色的块块把右下角的都覆盖了，现在把背景改为白色（和父级同底色），父级 overflow: hidden重新加上\n\n.text::after {\n    content: \'\';\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    background: #fff;\n}\n\n\n\n现在看看点击展开的效果吧\n\n\n\n现在展开以后，发现按钮不见（被刚才那个伪元素所覆盖，并且也点击不了），如果希望点击以后仍然可见呢？添加一下 :checked 状态即可，在展开时隐藏覆盖层\n\n.exp:checked+.text::after{\n    visibility: hidden;\n}\n\n\n\n这样，就实现了在文字较少的情况下隐藏展开按钮的功能\n\n\n\n最终完整代码可以查看codepen 多行展开收起自动隐藏，兼容版本可以查看codepen 多行展开收起自动隐藏（全兼容）\n\n> 需要注意的是，兼容版本可以支持到 ie 10+（这就过分了啊，居然还支持 ie），但是由于 ie 不支持 codepen，所以测试 ie 可以自行复制在本地测试。\n\n\n\n\n# 四、总结和说明\n\n总的来说，重点还是在布局方面，交互其实相对容易，整体实现的成本其实是很低的，也没有比较生僻的属性，除了布局方面 -webkit-box 貌似有点 bug （毕竟是 -webkit-内核 ， 火狐只是借鉴了过来，难免有些问题），幸运的是可以通过另一种方式实现多行文本截断效果，兼容性相当不错，基本上全兼容（ie10+），这里整理一下实现重点\n\n * 文本环绕效果首先考虑浮动 float\n * flex 布局子元素可以通过百分比计算高度\n * 多行文本截断还可以结合文本环绕效果用max-height模拟实现\n * 状态切换可以借助 checkbox\n * css 改变文本可以采用伪元素生成\n * 多利用 css 遮挡 “障眼法”\n\n多行文本展开收起效果可以说是业界一个老大难的问题了，有很多 js 解决方案，但是感觉都不是很完美，希望这个全新思路的 css 解决方式能给各位带来不一样的启发，感谢阅读，欢迎点赞、收藏、转发～',charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"代码被吐槽有什么好的优化方案",frontmatter:{title:"代码被吐槽有什么好的优化方案",date:"2022-01-08T19:41:00.000Z",permalink:"/pages/6eff02/",categories:["前端","ES6-ES12"],tags:[null],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/05.ES6-ES12/01.%E4%BB%A3%E7%A0%81%E8%A2%AB%E5%90%90%E6%A7%BD%E6%9C%89%E4%BB%80%E4%B9%88%E5%A5%BD%E7%9A%84%E4%BC%98%E5%8C%96%E6%96%B9%E6%A1%88.html",relativePath:"02.开发/05.ES6-ES12/01.代码被吐槽有什么好的优化方案.md",key:"v-9bc5b2d2",path:"/pages/6eff02/",headers:[{level:2,title:"一、关于取值的吐槽",slug:"一、关于取值的吐槽",normalizedTitle:"一、关于取值的吐槽",charIndex:2},{level:2,title:"二、关于合并数据的吐槽",slug:"二、关于合并数据的吐槽",normalizedTitle:"二、关于合并数据的吐槽",charIndex:663},{level:2,title:"三、关于拼接字符串的吐槽",slug:"三、关于拼接字符串的吐槽",normalizedTitle:"三、关于拼接字符串的吐槽",charIndex:1101},{level:2,title:"四、关于if中判断条件的吐槽",slug:"四、关于if中判断条件的吐槽",normalizedTitle:"四、关于if中判断条件的吐槽",charIndex:1454},{level:2,title:"五、关于列表搜索的吐槽",slug:"五、关于列表搜索的吐槽",normalizedTitle:"五、关于列表搜索的吐槽",charIndex:1673},{level:2,title:"六、关于扁平化数组的吐槽",slug:"六、关于扁平化数组的吐槽",normalizedTitle:"六、关于扁平化数组的吐槽",charIndex:1997},{level:2,title:"七、关于获取对象属性值的吐槽",slug:"七、关于获取对象属性值的吐槽",normalizedTitle:"七、关于获取对象属性值的吐槽",charIndex:2677},{level:2,title:"八、关于添加对象属性的吐槽",slug:"八、关于添加对象属性的吐槽",normalizedTitle:"八、关于添加对象属性的吐槽",charIndex:2782},{level:2,title:"九、关于输入框非空的判断",slug:"九、关于输入框非空的判断",normalizedTitle:"九、关于输入框非空的判断",charIndex:3015},{level:2,title:"十、关于异步函数的吐槽",slug:"十、关于异步函数的吐槽",normalizedTitle:"十、关于异步函数的吐槽",charIndex:3205}],headersStr:"一、关于取值的吐槽 二、关于合并数据的吐槽 三、关于拼接字符串的吐槽 四、关于if中判断条件的吐槽 五、关于列表搜索的吐槽 六、关于扁平化数组的吐槽 七、关于获取对象属性值的吐槽 八、关于添加对象属性的吐槽 九、关于输入框非空的判断 十、关于异步函数的吐槽",content:"# 一、关于取值的吐槽\n\n取值在程序中非常常见，比如从对象obj中取值。\n\nconst obj = {\n    a:1,\n    b:2,\n    c:3,\n    d:4,\n    e:5,\n}\n\n\n\n吐槽：\n\nconst a = obj.a;\nconst b = obj.b;\nconst c = obj.c;\nconst d = obj.d;\nconst e = obj.e;\n\n\n或者\n\nconst f = obj.a + obj.d;\nconst g = obj.c + obj.e;\n\n\n\n吐槽：“不会用ES6的解构赋值来取值吗？5行代码用1行代码搞定不香吗？直接用对象名加属性名去取值，要是对象名短还好，很长呢？搞得代码中到处都是这个对象名。”\n\n改进：\n\nconst {a,b,c,d,e} = obj;\nconst f = a + d;\nconst g = c + e;\n\n\n\n反驳\n\n不是不用ES6的解构赋值，而是服务端返回的数据对象中的属性名不是我想要的，这样取值，不是还得重新创建个遍历赋值。\n\n吐槽\n\n看来你对ES6的解构赋值掌握的还是不够彻底。如果想创建的变量名和对象的属性名不一致，可以这么写：\n\nconst {a:a1} = obj;\nconsole.log(a1);// 1\n\n\n\n补充\n\nES6的解构赋值虽然好用。但是要注意解构的对象不能为undefined、null。否则会报错，故要给被解构的对象一个默认值。\n\nconst {a,b,c,d,e} = obj || {};\n\n\n\n\n# 二、关于合并数据的吐槽\n\n比如合并两个数组，合并两个对象。\n\nconst a = [1,2,3];\nconst b = [1,5,6];\nconst c = a.concat(b);//[1,2,3,1,5,6]\n\nconst obj1 = {\n  a:1,\n}\nconst obj1 = {\n  b:1,\n}\nconst obj = Object.assign({}, obj1, obj2);//{a:1,b:1}\n\n\n\n吐槽\n\nES6的扩展运算符是不是忘记了，还有数组的合并不考虑去重吗？\n\n改进\n\nconst a = [1,2,3];\nconst b = [1,5,6];\nconst c = [...new Set([...a,...b])];//[1,2,3,5,6]\n\nconst obj1 = {\n  a:1,\n}\nconst obj2 = {\n  b:1,\n}\nconst obj = {...obj1,...obj2};//{a:1,b:1}\n\n\n\n\n# 三、关于拼接字符串的吐槽\n\nconst name = '小明';\nconst score = 59;\nlet result = '';\nif(score > 60){\n  result = `${name}的考试成绩及格`; \n}else{\n  result = `${name}的考试成绩不及格`; \n}\n\n\n\n吐槽\n\n像你们这样用ES6字符串模板，还不如不用，你们根本不清楚在${}中可以做什么操作。在${}中可以放入任意的JavaScript表达式，可以进行运算，以及引用对象属性。\n\n改进\n\nconst name = '小明';\nconst score = 59;\nconst result = `${name}${score > 60?'的考试成绩及格':'的考试成绩不及格'}`;\n\n\n\n\n# 四、关于if中判断条件的吐槽\n\nif(\n    type == 1 ||\n    type == 2 ||\n    type == 3 ||\n    type == 4 ||\n){\n   //...\n}\n\n\n\n吐槽\n\nES6中数组实例方法includes会不会使用呢？\n\n改进\n\nconst condition = [1,2,3,4];\n\nif( condition.includes(type) ){\n   //...\n}\n\n\n\n\n# 五、关于列表搜索的吐槽\n\n在项目中，一些没分页的列表的搜索功能由前端来实现，搜索一般分为精确搜索和模糊搜索。搜索也要叫过滤，一般用filter来实现。\n\nconst a = [1,2,3,4,5];\nconst result = a.filter( \n  item =>{\n    return item === 3\n  }\n)\n\n\n\n吐槽\n\n如果是精确搜索不会用ES6中的find吗？性能优化懂么，find方法中找到符合条件的项，就不会继续遍历数组。\n\n改进\n\nconst a = [1,2,3,4,5];\nconst result = a.find( \n  item =>{\n    return item === 3\n  }\n)\n\n\n\n\n# 六、关于扁平化数组的吐槽\n\n一个部门JSON数据中，属性名是部门id，属性值是个部门成员id数组集合，现在要把有部门的成员id都提取到一个数组集合中。\n\nconst deps = {\n'采购部':[1,2,3],\n'人事部':[5,8,12],\n'行政部':[5,14,79],\n'运输部':[3,64,105],\n}\nlet member = [];\nfor (let item in deps){\n    const value = deps[item];\n    if(Array.isArray(value)){\n        member = [...member,...value]\n    }\n}\nmember = [...new Set(member)]\n\n\n\n吐槽\n\n获取对象的全部属性值还要遍历吗？Object.values忘记了吗？还有涉及到数组的扁平化处理，为啥不用ES6提供的flat方法呢，还好这次的数组的深度最多只到2维，还要是遇到4维、5维深度的数组，是不是得循环嵌套循环来扁平化？\n\n改进\n\nconst deps = {\n    '采购部':[1,2,3],\n    '人事部':[5,8,12],\n    '行政部':[5,14,79],\n    '运输部':[3,64,105],\n}\nlet member = Object.values(deps).flat(Infinity);\n\n\n\n其中使用Infinity作为flat的参数，使得无需知道被扁平化的数组的维度。\n\n补充\n\nflat方法不支持IE浏览器。\n\n\n# 七、关于获取对象属性值的吐槽\n\nconst name = obj && obj.name;\n\n\n\n吐槽\n\nES6中的可选链操作符会使用么？\n\n改进\n\nconst name = obj?.name;\n\n\n\n\n# 八、关于添加对象属性的吐槽\n\n当给对象添加属性时，如果属性名是动态变化的，该怎么处理。\n\nlet obj = {};\nlet index = 1;\nlet key = `topic${index}`;\nobj[key] = '话题内容';\n\n\n\n吐槽\n\n为何要额外创建一个变量。不知道ES6中的对象属性名是可以用表达式吗？\n\n改进\n\nlet obj = {};\nlet index = 1;\nobj[`topic${index}`] = '话题内容';\n\n\n\n\n# 九、关于输入框非空的判断\n\n在处理输入框相关业务时，往往会判断输入框未输入值的场景。\n\nif(value !== null && value !== undefined && value !== ''){\n    //...\n}\n\n\n\n吐槽\n\nES6中新出的空值合并运算符了解过吗，要写那么多条件吗？\n\nif(value??'' !== ''){\n  //...\n}\n\n\n\n\n# 十、关于异步函数的吐槽\n\n异步函数很常见，经常是用 Promise 来实现。\n\nconst fn1 = () =>{\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(1);\n    }, 300);\n  });\n}\nconst fn2 = () =>{\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(2);\n    }, 600);\n  });\n}\nconst fn = () =>{\n   fn1().then(res1 =>{\n      console.log(res1);// 1\n      fn2().then(res2 =>{\n        console.log(res2)\n      })\n   })\n}\n\n\n\n吐槽\n\n如果这样调用异步函数，不怕形成地狱回调啊！\n\n改进\n\nconst fn = async () =>{\n  const res1 = await fn1();\n  const res2 = await fn2();\n  console.log(res1);// 1\n  console.log(res2);// 2\n}\n\n\n\n补充\n\n但是要做并发请求时，还是要用到Promise.all()。\n\nconst fn = () =>{\n   Promise.all([fn1(),fn2()]).then(res =>{\n       console.log(res);// [1,2]\n   }) \n}\n\n\n\n如果并发请求时，只要其中一个异步函数处理完成，就返回结果，要用到Promise.race()。\n\n> 作者：红尘炼心 https://juejin.cn/post/7016520448204603423",normalizedContent:"# 一、关于取值的吐槽\n\n取值在程序中非常常见，比如从对象obj中取值。\n\nconst obj = {\n    a:1,\n    b:2,\n    c:3,\n    d:4,\n    e:5,\n}\n\n\n\n吐槽：\n\nconst a = obj.a;\nconst b = obj.b;\nconst c = obj.c;\nconst d = obj.d;\nconst e = obj.e;\n\n\n或者\n\nconst f = obj.a + obj.d;\nconst g = obj.c + obj.e;\n\n\n\n吐槽：“不会用es6的解构赋值来取值吗？5行代码用1行代码搞定不香吗？直接用对象名加属性名去取值，要是对象名短还好，很长呢？搞得代码中到处都是这个对象名。”\n\n改进：\n\nconst {a,b,c,d,e} = obj;\nconst f = a + d;\nconst g = c + e;\n\n\n\n反驳\n\n不是不用es6的解构赋值，而是服务端返回的数据对象中的属性名不是我想要的，这样取值，不是还得重新创建个遍历赋值。\n\n吐槽\n\n看来你对es6的解构赋值掌握的还是不够彻底。如果想创建的变量名和对象的属性名不一致，可以这么写：\n\nconst {a:a1} = obj;\nconsole.log(a1);// 1\n\n\n\n补充\n\nes6的解构赋值虽然好用。但是要注意解构的对象不能为undefined、null。否则会报错，故要给被解构的对象一个默认值。\n\nconst {a,b,c,d,e} = obj || {};\n\n\n\n\n# 二、关于合并数据的吐槽\n\n比如合并两个数组，合并两个对象。\n\nconst a = [1,2,3];\nconst b = [1,5,6];\nconst c = a.concat(b);//[1,2,3,1,5,6]\n\nconst obj1 = {\n  a:1,\n}\nconst obj1 = {\n  b:1,\n}\nconst obj = object.assign({}, obj1, obj2);//{a:1,b:1}\n\n\n\n吐槽\n\nes6的扩展运算符是不是忘记了，还有数组的合并不考虑去重吗？\n\n改进\n\nconst a = [1,2,3];\nconst b = [1,5,6];\nconst c = [...new set([...a,...b])];//[1,2,3,5,6]\n\nconst obj1 = {\n  a:1,\n}\nconst obj2 = {\n  b:1,\n}\nconst obj = {...obj1,...obj2};//{a:1,b:1}\n\n\n\n\n# 三、关于拼接字符串的吐槽\n\nconst name = '小明';\nconst score = 59;\nlet result = '';\nif(score > 60){\n  result = `${name}的考试成绩及格`; \n}else{\n  result = `${name}的考试成绩不及格`; \n}\n\n\n\n吐槽\n\n像你们这样用es6字符串模板，还不如不用，你们根本不清楚在${}中可以做什么操作。在${}中可以放入任意的javascript表达式，可以进行运算，以及引用对象属性。\n\n改进\n\nconst name = '小明';\nconst score = 59;\nconst result = `${name}${score > 60?'的考试成绩及格':'的考试成绩不及格'}`;\n\n\n\n\n# 四、关于if中判断条件的吐槽\n\nif(\n    type == 1 ||\n    type == 2 ||\n    type == 3 ||\n    type == 4 ||\n){\n   //...\n}\n\n\n\n吐槽\n\nes6中数组实例方法includes会不会使用呢？\n\n改进\n\nconst condition = [1,2,3,4];\n\nif( condition.includes(type) ){\n   //...\n}\n\n\n\n\n# 五、关于列表搜索的吐槽\n\n在项目中，一些没分页的列表的搜索功能由前端来实现，搜索一般分为精确搜索和模糊搜索。搜索也要叫过滤，一般用filter来实现。\n\nconst a = [1,2,3,4,5];\nconst result = a.filter( \n  item =>{\n    return item === 3\n  }\n)\n\n\n\n吐槽\n\n如果是精确搜索不会用es6中的find吗？性能优化懂么，find方法中找到符合条件的项，就不会继续遍历数组。\n\n改进\n\nconst a = [1,2,3,4,5];\nconst result = a.find( \n  item =>{\n    return item === 3\n  }\n)\n\n\n\n\n# 六、关于扁平化数组的吐槽\n\n一个部门json数据中，属性名是部门id，属性值是个部门成员id数组集合，现在要把有部门的成员id都提取到一个数组集合中。\n\nconst deps = {\n'采购部':[1,2,3],\n'人事部':[5,8,12],\n'行政部':[5,14,79],\n'运输部':[3,64,105],\n}\nlet member = [];\nfor (let item in deps){\n    const value = deps[item];\n    if(array.isarray(value)){\n        member = [...member,...value]\n    }\n}\nmember = [...new set(member)]\n\n\n\n吐槽\n\n获取对象的全部属性值还要遍历吗？object.values忘记了吗？还有涉及到数组的扁平化处理，为啥不用es6提供的flat方法呢，还好这次的数组的深度最多只到2维，还要是遇到4维、5维深度的数组，是不是得循环嵌套循环来扁平化？\n\n改进\n\nconst deps = {\n    '采购部':[1,2,3],\n    '人事部':[5,8,12],\n    '行政部':[5,14,79],\n    '运输部':[3,64,105],\n}\nlet member = object.values(deps).flat(infinity);\n\n\n\n其中使用infinity作为flat的参数，使得无需知道被扁平化的数组的维度。\n\n补充\n\nflat方法不支持ie浏览器。\n\n\n# 七、关于获取对象属性值的吐槽\n\nconst name = obj && obj.name;\n\n\n\n吐槽\n\nes6中的可选链操作符会使用么？\n\n改进\n\nconst name = obj?.name;\n\n\n\n\n# 八、关于添加对象属性的吐槽\n\n当给对象添加属性时，如果属性名是动态变化的，该怎么处理。\n\nlet obj = {};\nlet index = 1;\nlet key = `topic${index}`;\nobj[key] = '话题内容';\n\n\n\n吐槽\n\n为何要额外创建一个变量。不知道es6中的对象属性名是可以用表达式吗？\n\n改进\n\nlet obj = {};\nlet index = 1;\nobj[`topic${index}`] = '话题内容';\n\n\n\n\n# 九、关于输入框非空的判断\n\n在处理输入框相关业务时，往往会判断输入框未输入值的场景。\n\nif(value !== null && value !== undefined && value !== ''){\n    //...\n}\n\n\n\n吐槽\n\nes6中新出的空值合并运算符了解过吗，要写那么多条件吗？\n\nif(value??'' !== ''){\n  //...\n}\n\n\n\n\n# 十、关于异步函数的吐槽\n\n异步函数很常见，经常是用 promise 来实现。\n\nconst fn1 = () =>{\n  return new promise((resolve, reject) => {\n    settimeout(() => {\n      resolve(1);\n    }, 300);\n  });\n}\nconst fn2 = () =>{\n  return new promise((resolve, reject) => {\n    settimeout(() => {\n      resolve(2);\n    }, 600);\n  });\n}\nconst fn = () =>{\n   fn1().then(res1 =>{\n      console.log(res1);// 1\n      fn2().then(res2 =>{\n        console.log(res2)\n      })\n   })\n}\n\n\n\n吐槽\n\n如果这样调用异步函数，不怕形成地狱回调啊！\n\n改进\n\nconst fn = async () =>{\n  const res1 = await fn1();\n  const res2 = await fn2();\n  console.log(res1);// 1\n  console.log(res2);// 2\n}\n\n\n\n补充\n\n但是要做并发请求时，还是要用到promise.all()。\n\nconst fn = () =>{\n   promise.all([fn1(),fn2()]).then(res =>{\n       console.log(res);// [1,2]\n   }) \n}\n\n\n\n如果并发请求时，只要其中一个异步函数处理完成，就返回结果，要用到promise.race()。\n\n> 作者：红尘炼心 https://juejin.cn/post/7016520448204603423",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"CSS小技巧",frontmatter:{title:"CSS小技巧",date:"2021-7-28",tags:["CSS"],permalink:"/pages/d43f57/",categories:["前端","CSS"],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/04.CSS/01.%E5%BF%85%E5%A4%87%E7%9A%84CSS%E5%B0%8F%E6%8A%80%E5%B7%A7.html",relativePath:"02.开发/04.CSS/01.必备的CSS小技巧.md",key:"v-9d96f146",path:"/pages/d43f57/",headers:[{level:2,title:"清除默认样式",slug:"清除默认样式",normalizedTitle:"清除默认样式",charIndex:19},{level:3,title:"reset.css",slug:"reset-css",normalizedTitle:"reset.css",charIndex:30},{level:3,title:"清除移动端 input 样式",slug:"清除移动端-input-样式",normalizedTitle:"清除移动端 input 样式",charIndex:1031},{level:3,title:"去除Chrome中input自动填充背景颜色",slug:"去除chrome中input自动填充背景颜色",normalizedTitle:"去除chrome中input自动填充背景颜色",charIndex:1184},{level:3,title:"清除移动端a标签变色",slug:"清除移动端a标签变色",normalizedTitle:"清除移动端a标签变色",charIndex:1426},{level:3,title:"清除input[type=number]的默认样式",slug:"清除input-type-number-的默认样式",normalizedTitle:"清除input[type=number]的默认样式",charIndex:1570},{level:3,title:"解决ios滑动滚动条卡顿",slug:"解决ios滑动滚动条卡顿",normalizedTitle:"解决ios滑动滚动条卡顿",charIndex:1794},{level:3,title:"硬件加速",slug:"硬件加速",normalizedTitle:"硬件加速",charIndex:1868},{level:2,title:"@media 查询",slug:"media-查询",normalizedTitle:"@media 查询",charIndex:1963},{level:2,title:"REM 设置",slug:"rem-设置",normalizedTitle:"rem 设置",charIndex:2475},{level:3,title:"方式一 JS",slug:"方式一-js",normalizedTitle:"方式一 js",charIndex:2486},{level:3,title:"方式二 CSS",slug:"方式二-css",normalizedTitle:"方式二 css",charIndex:3201},{level:2,title:"CSS生成一个三角形",slug:"css生成一个三角形",normalizedTitle:"css生成一个三角形",charIndex:3258},{level:2,title:"文字省略",slug:"文字省略",normalizedTitle:"文字省略",charIndex:3608},{level:2,title:"1px 下划线",slug:"_1px-下划线",normalizedTitle:"1px 下划线",charIndex:4345},{level:2,title:"动画",slug:"动画",normalizedTitle:"动画",charIndex:1877},{level:3,title:"淡入",slug:"淡入",normalizedTitle:"淡入",charIndex:4728},{level:3,title:"淡出",slug:"淡出",normalizedTitle:"淡出",charIndex:4852},{level:3,title:"旋转",slug:"旋转",normalizedTitle:"旋转",charIndex:4978},{level:2,title:"间距简写",slug:"间距简写",normalizedTitle:"间距简写",charIndex:5149},{level:3,title:"参考文献",slug:"参考文献",normalizedTitle:"参考文献",charIndex:6203}],headersStr:"清除默认样式 reset.css 清除移动端 input 样式 去除Chrome中input自动填充背景颜色 清除移动端a标签变色 清除input[type=number]的默认样式 解决ios滑动滚动条卡顿 硬件加速 @media 查询 REM 设置 方式一 JS 方式二 CSS CSS生成一个三角形 文字省略 1px 下划线 动画 淡入 淡出 旋转 间距简写 参考文献",content:'项目中必备的一些CSS样式。\n\n\n# 清除默认样式\n\n\n# reset.css\n\nhtml,body,h1,h2,h3,h4,h5,h6,div,dl,dt,dd,ul,ol,li,p,blockquote,pre,hr,figure,table,caption,th,td,form,fieldset,legend,input,button,textarea,menu{margin:0;padding:0;}\nheader,footer,section,article,aside,nav,hgroup,address,figure,figcaption,menu,details{display:block;}\ntable{border-collapse:collapse;border-spacing:0;}\ncaption,th{text-align:left;font-weight:normal;}\nhtml,body,fieldset,img,iframe,abbr{border:0;}\ni,cite,em,var,address,dfn{font-style:normal;}\n[hidefocus],summary{outline:0;}\nli{list-style:none;}\nh1,h2,h3,h4,h5,h6,small{font-size:100%;}\nsup,sub{font-size:83%;}\npre,code,kbd,samp{font-family:inherit;}\nq:before,q:after{content:none;}\ntextarea{overflow:auto;resize:none;}\nlabel,summary{cursor:default;}\na,button{cursor:pointer;}\nh1,h2,h3,h4,h5,h6,em,strong,b{font-weight:bold;}\ndel,ins,u,s,a,a:hover{text-decoration:none;}\nbody,textarea,input,button,select,keygen,legend{font:12px/1.14 arial,\\5b8b\\4f53;color:#333;outline:0;}\nbody{background:#fff;}\na,a:hover{color:#333;}\n\n\n\n# 清除移动端 input 样式\n\nborder: none;\n-moz-appearance:none;\n-webkit-appearance: none;\nborder-radius: 0;    \noutline:medium; \nbackground-color: transparent;\n\n\n\n# 去除Chrome中input自动填充背景颜色\n\ninput:-webkit-autofill,\ninput:-webkit-autofill:hover,\ninput:-webkit-autofill:focus {\n  box-shadow: 0 0 0px 1000px white inset;\n}\n\n// 选中自动填充后字体颜色并不会改变，需要添加以下代码\ninput {\n    -webkit-text-fill-color: #fff;  //设计稿的色\n}\n\n\n\n# 清除移动端a标签变色\n\n-webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n-webkit-user-select: none;\n-moz-user-focus: none;\n-moz-user-select: none;\n\n\n\n# 清除input[type=number]的默认样式\n\ninput[type=number] {\n  -moz-appearance: textfield;\n}\n\ninput[type=number]::-webkit-inner-spin-button,\ninput[type=number]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n\n\n# 解决ios滑动滚动条卡顿\n\nhtml, body {\n    -webkit-overflow-scrolling: touch; \n}\n\n\n\n# 硬件加速\n\n有时候动画可能会导致用户的电脑卡顿，你可以在特定元素中使用硬件加速来避免这个问题：\n\n.block {\n    transform: translateZ(0);\n}\n\n\n\n# @media 查询\n\n可以针对不同的媒体类型定义不同的样式。\n\n/* 横屏 */\n@media screen and (orientation:landscape){\n     \n}\n/* 竖屏 */\n@media screen and (orientation:portrait){\n     \n}\n/* 窗口宽度<960,设计宽度=768 */\n@media screen and (max-width:959px){\n     \n}\n/* 窗口宽度<768,设计宽度=640 */\n@media screen and (max-width:767px){\n     \n}\n/* 窗口宽度<640,设计宽度=480 */\n@media screen and (max-width:639px){\n     \n}\n/* 窗口宽度<480,设计宽度=320 */\n@media screen and (max-width:479px){\n     \n}\n/* 设备像素比为2 */\n/* 常用于1px边框，还应规定 3dppx 的情况 */\n@media (min-resolution: 2dppx) {\n\n}\n\n\n\n# REM 设置\n\n\n# 方式一 JS\n\n<!DOCTYPE html>\n<html lang="en">\n    <head>\n        <meta charset="UTF-8" />\n        <meta http-equiv="X-UA-Compatible" content="IE=edge" />\n        <meta name="viewport" id="WebViewport" content="initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no" />\n        <title>Document</title>\n        <style type="text/css"></style>\n    </head>\n    <body>\n        <script type="text/javascript">\n            function resize() {\n                let width = screen.width > 750 ? \'100px\' : screen.width / 10 + \'px\'\n                document.getElementsByTagName(\'html\')[0].style.fontSize = width\n            }\n            window.onresize = resize\n            \n        <\/script>\n    </body>\n</html>\n\n\n\n# 方式二 CSS\n\nhtml {\n    font-size: calc(100vw / 7.5);\n}\n\n\n\n# CSS生成一个三角形\n\n// 普通三角形\n.triangle {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 50px 0 50px 100px;\n  border-color: transparent transparent transparent #00adb5;\n}\n\n// 直角三角形\n.triangle {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 100px 100px 0 0;\n  border-color: #00adb5 transparent transparent transparent;\n}\n\n\n\n# 文字省略\n\n当文本内容长度超过容器最大宽度时，自动省略多余的文本。\n\n\x3c!-- 最多显示一行 --\x3e\n<div class="c-ellipsis">这是一段最多显示一行的文字，多余的内容会被省略</div>\n\n\x3c!-- 最多显示两行 --\x3e\n<div class="c-ellipsis-2">\n  这是一段最多显示两行的文字，多余的内容会被省略\n</div>\n\n\x3c!-- 最多显示三行 --\x3e\n<div class="c-ellipsis-3">\n  这是一段最多显示三行的文字，多余的内容会被省略\n</div>\n\n\n\n.c-ellipsis,\n.c-ellipsis-1 {\n    @include ellipsis();\n}\n\n.c-ellipsis-2 {\n    @include ellipsis(2);\n}\n\n.c-ellipsis-3 {\n    @include ellipsis(3);\n}\n\n@mixin ellipsis($column: 1) {\n\toverflow: hidden;\n\t-o-text-overflow: ellipsis;\n\ttext-overflow: ellipsis;\n\t@if $column == 1 {\n\t\twhite-space: nowrap;\n\t} @else {\n\t    display: -webkit-box;\n\t    white-space: normal !important;\n\t    word-wrap: break-word;\n\t    -webkit-line-clamp: $column;\n\t    -webkit-box-orient: vertical\n\t}\n}\n\n\n\n# 1px 下划线\n\n.c-underline,\n.c-underline__top,\n.c-modal__title {\n    position: relative;\n}\n\n.c-underline::after,\n.c-underline__top::after {\n    content: "";\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 2;\n    height: 1px;\n    transform: scaleY(0.5);\n    background-color: #ededed;\n}\n\n.c-underline__top:after {\n    top: 0;\n    bottom: auto;\n}\n\n\n\n# 动画\n\n\n# 淡入\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0\n  }\n  100% {\n    opacity: 1\n  }\n}\n\n.fadeIn {\n  animation-name: fadeIn;\n}\n\n\n\n# 淡出\n\n@keyframes fadeOut {\n  0% {\n    opacity: 1\n  }\n  100% {\n    opacity: 0\n  }\n}\n.fadeOut {\n  animation-name: fadeOut;\n}\n\n\n\n# 旋转\n\n@keyframes c-spin {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}\n\n.c-spin{\n    animation-name: c-spin;\n}\n\n\n\n# 间距简写\n\n在0-80以内，是4的倍数或者是12的倍数。 html\n\n\x3c!--内边距24像素--\x3e\n<div class="p24"></div>\n\n\x3c!--外边距向左12像素--\x3e\n<div class="ml12"></div>\nptb 上下内边距\nplr 左右内边距\np t b l r上下左右边距\n\n\nscss\n\n// 定义内外边距，历遍1-80\n@for $i from 0 through 80 {\n    // 只要能被4除尽的数或者12的倍数\n    @if $i % 4 == 0 or $i % 12 == 0 {\n        .hr#{$i} {\n            height: $i + rpx;\n            background-color: #f5f5f5;\n            display: block;\n        }\n        // ptb30 plr30 p24\n        .ptb#{$i} {\n            padding-top: $i + rpx !important;\n            padding-bottom: $i + rpx !important;\n        }\n        .plr#{$i} {\n            padding-left: $i + rpx !important;\n            padding-right: $i + rpx !important;\n        }\n        .p#{$i} {\n            padding: $i + rpx !important;\n        }\n\n        @each $short, $long in l left, t top, r right, b bottom {\n            // 缩写版，ml30\n            .m#{$short}#{$i} {\n                margin-#{$long}: $i + rpx !important;\n            }\n            .p#{$short}#{$i} {\n                padding-#{$long}: $i + rpx !important;\n            }\n        }\n    }\n}\n\n\n\n# 参考文献\n\n * https://medium.com/free-code-camp/css-naming-conventions-that-will-save-you-hours-of-debugging-35cea737d849\n * http://ipestov.com/22-essential-css-recipes/\n * https://vant-contrib.gitee.io/vant/#/zh-CN/',normalizedContent:'项目中必备的一些css样式。\n\n\n# 清除默认样式\n\n\n# reset.css\n\nhtml,body,h1,h2,h3,h4,h5,h6,div,dl,dt,dd,ul,ol,li,p,blockquote,pre,hr,figure,table,caption,th,td,form,fieldset,legend,input,button,textarea,menu{margin:0;padding:0;}\nheader,footer,section,article,aside,nav,hgroup,address,figure,figcaption,menu,details{display:block;}\ntable{border-collapse:collapse;border-spacing:0;}\ncaption,th{text-align:left;font-weight:normal;}\nhtml,body,fieldset,img,iframe,abbr{border:0;}\ni,cite,em,var,address,dfn{font-style:normal;}\n[hidefocus],summary{outline:0;}\nli{list-style:none;}\nh1,h2,h3,h4,h5,h6,small{font-size:100%;}\nsup,sub{font-size:83%;}\npre,code,kbd,samp{font-family:inherit;}\nq:before,q:after{content:none;}\ntextarea{overflow:auto;resize:none;}\nlabel,summary{cursor:default;}\na,button{cursor:pointer;}\nh1,h2,h3,h4,h5,h6,em,strong,b{font-weight:bold;}\ndel,ins,u,s,a,a:hover{text-decoration:none;}\nbody,textarea,input,button,select,keygen,legend{font:12px/1.14 arial,\\5b8b\\4f53;color:#333;outline:0;}\nbody{background:#fff;}\na,a:hover{color:#333;}\n\n\n\n# 清除移动端 input 样式\n\nborder: none;\n-moz-appearance:none;\n-webkit-appearance: none;\nborder-radius: 0;    \noutline:medium; \nbackground-color: transparent;\n\n\n\n# 去除chrome中input自动填充背景颜色\n\ninput:-webkit-autofill,\ninput:-webkit-autofill:hover,\ninput:-webkit-autofill:focus {\n  box-shadow: 0 0 0px 1000px white inset;\n}\n\n// 选中自动填充后字体颜色并不会改变，需要添加以下代码\ninput {\n    -webkit-text-fill-color: #fff;  //设计稿的色\n}\n\n\n\n# 清除移动端a标签变色\n\n-webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n-webkit-user-select: none;\n-moz-user-focus: none;\n-moz-user-select: none;\n\n\n\n# 清除input[type=number]的默认样式\n\ninput[type=number] {\n  -moz-appearance: textfield;\n}\n\ninput[type=number]::-webkit-inner-spin-button,\ninput[type=number]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n\n\n# 解决ios滑动滚动条卡顿\n\nhtml, body {\n    -webkit-overflow-scrolling: touch; \n}\n\n\n\n# 硬件加速\n\n有时候动画可能会导致用户的电脑卡顿，你可以在特定元素中使用硬件加速来避免这个问题：\n\n.block {\n    transform: translatez(0);\n}\n\n\n\n# @media 查询\n\n可以针对不同的媒体类型定义不同的样式。\n\n/* 横屏 */\n@media screen and (orientation:landscape){\n     \n}\n/* 竖屏 */\n@media screen and (orientation:portrait){\n     \n}\n/* 窗口宽度<960,设计宽度=768 */\n@media screen and (max-width:959px){\n     \n}\n/* 窗口宽度<768,设计宽度=640 */\n@media screen and (max-width:767px){\n     \n}\n/* 窗口宽度<640,设计宽度=480 */\n@media screen and (max-width:639px){\n     \n}\n/* 窗口宽度<480,设计宽度=320 */\n@media screen and (max-width:479px){\n     \n}\n/* 设备像素比为2 */\n/* 常用于1px边框，还应规定 3dppx 的情况 */\n@media (min-resolution: 2dppx) {\n\n}\n\n\n\n# rem 设置\n\n\n# 方式一 js\n\n<!doctype html>\n<html lang="en">\n    <head>\n        <meta charset="utf-8" />\n        <meta http-equiv="x-ua-compatible" content="ie=edge" />\n        <meta name="viewport" id="webviewport" content="initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no" />\n        <title>document</title>\n        <style type="text/css"></style>\n    </head>\n    <body>\n        <script type="text/javascript">\n            function resize() {\n                let width = screen.width > 750 ? \'100px\' : screen.width / 10 + \'px\'\n                document.getelementsbytagname(\'html\')[0].style.fontsize = width\n            }\n            window.onresize = resize\n            \n        <\/script>\n    </body>\n</html>\n\n\n\n# 方式二 css\n\nhtml {\n    font-size: calc(100vw / 7.5);\n}\n\n\n\n# css生成一个三角形\n\n// 普通三角形\n.triangle {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 50px 0 50px 100px;\n  border-color: transparent transparent transparent #00adb5;\n}\n\n// 直角三角形\n.triangle {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 100px 100px 0 0;\n  border-color: #00adb5 transparent transparent transparent;\n}\n\n\n\n# 文字省略\n\n当文本内容长度超过容器最大宽度时，自动省略多余的文本。\n\n\x3c!-- 最多显示一行 --\x3e\n<div class="c-ellipsis">这是一段最多显示一行的文字，多余的内容会被省略</div>\n\n\x3c!-- 最多显示两行 --\x3e\n<div class="c-ellipsis-2">\n  这是一段最多显示两行的文字，多余的内容会被省略\n</div>\n\n\x3c!-- 最多显示三行 --\x3e\n<div class="c-ellipsis-3">\n  这是一段最多显示三行的文字，多余的内容会被省略\n</div>\n\n\n\n.c-ellipsis,\n.c-ellipsis-1 {\n    @include ellipsis();\n}\n\n.c-ellipsis-2 {\n    @include ellipsis(2);\n}\n\n.c-ellipsis-3 {\n    @include ellipsis(3);\n}\n\n@mixin ellipsis($column: 1) {\n\toverflow: hidden;\n\t-o-text-overflow: ellipsis;\n\ttext-overflow: ellipsis;\n\t@if $column == 1 {\n\t\twhite-space: nowrap;\n\t} @else {\n\t    display: -webkit-box;\n\t    white-space: normal !important;\n\t    word-wrap: break-word;\n\t    -webkit-line-clamp: $column;\n\t    -webkit-box-orient: vertical\n\t}\n}\n\n\n\n# 1px 下划线\n\n.c-underline,\n.c-underline__top,\n.c-modal__title {\n    position: relative;\n}\n\n.c-underline::after,\n.c-underline__top::after {\n    content: "";\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 2;\n    height: 1px;\n    transform: scaley(0.5);\n    background-color: #ededed;\n}\n\n.c-underline__top:after {\n    top: 0;\n    bottom: auto;\n}\n\n\n\n# 动画\n\n\n# 淡入\n\n@keyframes fadein {\n  0% {\n    opacity: 0\n  }\n  100% {\n    opacity: 1\n  }\n}\n\n.fadein {\n  animation-name: fadein;\n}\n\n\n\n# 淡出\n\n@keyframes fadeout {\n  0% {\n    opacity: 1\n  }\n  100% {\n    opacity: 0\n  }\n}\n.fadeout {\n  animation-name: fadeout;\n}\n\n\n\n# 旋转\n\n@keyframes c-spin {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}\n\n.c-spin{\n    animation-name: c-spin;\n}\n\n\n\n# 间距简写\n\n在0-80以内，是4的倍数或者是12的倍数。 html\n\n\x3c!--内边距24像素--\x3e\n<div class="p24"></div>\n\n\x3c!--外边距向左12像素--\x3e\n<div class="ml12"></div>\nptb 上下内边距\nplr 左右内边距\np t b l r上下左右边距\n\n\nscss\n\n// 定义内外边距，历遍1-80\n@for $i from 0 through 80 {\n    // 只要能被4除尽的数或者12的倍数\n    @if $i % 4 == 0 or $i % 12 == 0 {\n        .hr#{$i} {\n            height: $i + rpx;\n            background-color: #f5f5f5;\n            display: block;\n        }\n        // ptb30 plr30 p24\n        .ptb#{$i} {\n            padding-top: $i + rpx !important;\n            padding-bottom: $i + rpx !important;\n        }\n        .plr#{$i} {\n            padding-left: $i + rpx !important;\n            padding-right: $i + rpx !important;\n        }\n        .p#{$i} {\n            padding: $i + rpx !important;\n        }\n\n        @each $short, $long in l left, t top, r right, b bottom {\n            // 缩写版，ml30\n            .m#{$short}#{$i} {\n                margin-#{$long}: $i + rpx !important;\n            }\n            .p#{$short}#{$i} {\n                padding-#{$long}: $i + rpx !important;\n            }\n        }\n    }\n}\n\n\n\n# 参考文献\n\n * https://medium.com/free-code-camp/css-naming-conventions-that-will-save-you-hours-of-debugging-35cea737d849\n * http://ipestov.com/22-essential-css-recipes/\n * https://vant-contrib.gitee.io/vant/#/zh-cn/',charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"ES12令人期待的新特性",frontmatter:{title:"ES12令人期待的新特性",date:"2021-7-28",categories:["frontEnd"],tags:["ES6"],permalink:"/pages/a3ded1/",readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/05.ES6-ES12/02.ES12%E4%BB%A4%E4%BA%BA%E6%9C%9F%E5%BE%85%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7.html",relativePath:"02.开发/05.ES6-ES12/02.ES12令人期待的新特性.md",key:"v-5e733e73",path:"/pages/a3ded1/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"String.prototype.replaceAll()",slug:"string-prototype-replaceall",normalizedTitle:"string.prototype.replaceall()",charIndex:107},{level:2,title:"Promise.any",slug:"promise-any",normalizedTitle:"promise.any",charIndex:140},{level:2,title:"逻辑运算符和赋值表达式（&&=，||=，??=）",slug:"逻辑运算符和赋值表达式",normalizedTitle:"逻辑运算符和赋值表达式（&amp;&amp;=，||=，??=）",charIndex:null},{level:3,title:"1、带有 && 运算符的逻辑赋值运算符",slug:"_1、带有-运算符的逻辑赋值运算符",normalizedTitle:"1、带有 &amp;&amp; 运算符的逻辑赋值运算符",charIndex:null},{level:3,title:"2、带有||的运算符逻辑赋值运算符",slug:"_2、带有-的运算符逻辑赋值运算符",normalizedTitle:"2、带有||的运算符逻辑赋值运算符",charIndex:3340},{level:3,title:"3、带有?? 运算符的逻辑赋值运算符",slug:"_3、带有-运算符的逻辑赋值运算符",normalizedTitle:"3、带有?? 运算符的逻辑赋值运算符",charIndex:3612},{level:2,title:"数值分隔符",slug:"数值分隔符",normalizedTitle:"数值分隔符",charIndex:170},{level:2,title:"WeakRef and Finalizers",slug:"weakref-and-finalizers",normalizedTitle:"weakref and finalizers",charIndex:179},{level:2,title:"参考文章",slug:"参考文章",normalizedTitle:"参考文章",charIndex:5290}],headersStr:"前言 String.prototype.replaceAll() Promise.any 逻辑运算符和赋值表达式（&&=，||=，??=） 1、带有 && 运算符的逻辑赋值运算符 2、带有||的运算符逻辑赋值运算符 3、带有?? 运算符的逻辑赋值运算符 数值分隔符 WeakRef and Finalizers 参考文章",content:'# 前言\n\n2021年3月13日，ES2021 候选提案发布了其最终功能集的版本。如果它能够在今年6月的ECMA 大会上通过，就会成为官方的标准！\n\n这个候选提案提及到ECMAScript新特性如下所示：\n\n * String.prototype.replaceAll()\n * Promise.any\n * 逻辑运算符和赋值表达式\n * 数值分隔符\n * WeakRef and Finalizers\n\n这些新的特性已经进入第四阶段且已添加到谷歌 Chrome V8 引擎中。接下来我们来介绍下这些ES2021的新特性吧。\n\n\n# String.prototype.replaceAll()\n\nconst newString = oldString.replaceAll(pattern, replacement);\n\n\n该方法返回一个新的字符串，所有 pattern会被传递给它的replacement替换。 其中pattern参数可以是字符串或正则表达式，replacement参数可以是字符串或针对每次匹配执行的函数。\n\nreplaceAll方法是String.replace方法的续集，String.replace仅替换pattern的第一次找到的位置。\n\nconst str = "Linda is a self-taught developer.Linda will rule the world";\n\nlet newStr = str.replace("Linda","Micheal")\n//output: Micheal is a self-taught developer.Linda will rule the world\n\nlet newStr = str.replaceAll("Linda","Micheal")\n//output: Micheal is a self-taught developer.Micheal will rule the world\n\n\n\n以往如果需要替换所有匹配项的话，就要写成正则表达式，才能进行完全替换。\n\nconst str = "hello world, hello code";\nconst newStr = str.replace(/hello/g, "hi");\nconsole.log(newStr); // "hi world, hi code"\n\n\n现在有了String.prototype.replaceAll() 即便是输入字符串也能完全替换匹配项。\n\nconst str = "hello world, hello code";\nconst newStr = str.replaceAll("hello", "hi");\nconsole.log(newStr); // "hi world, hi code"\n\n\n\n# Promise.any\n\n在 ES6 中引入了 Promise.race() 和 Promise.all()方法，ES2020 加入了 Promise.allSettled()。 ES2021 又增加了一个使 Promise 处理更加容易的方法：Promise.any()\n\nPromise.any() 接收一个Promise可迭代对象，只要其中的一个 promise 成功，就返回那个已经成功的 promise （如示例 1 所示）。如果可迭代对象中没有一个 promise 成功（即所有的 promise 都失败/拒绝），就返回一个失败的 promise和AggregateError类型的实例（如示例 2 所示），它是 Error的一个子类，用于把单一的错误集合在一起。\n\nPromise.any()跟Promise.race()方法很像，只有一点不同，就是不会因为某个 Promise 变成rejected状态而结束。\n\n// 示例1\nPromise.any([\n  new Promise((resolve, reject) => setTimeout(reject, 200, \'Third\')),\n  new Promise((resolve, reject) => setTimeout(resolve, 1000, \'Second\')),\n  new Promise((resolve, reject) => setTimeout(resolve, 2000, \'First\')),\n])\n.then(value => console.log(`Result1: ${value}`))\n.catch (err => console.log(err))\n\nPromise.race([\n  new Promise((resolve, reject) => setTimeout(reject, 200, \'Third\')),\n  new Promise((resolve, reject) => setTimeout(resolve, 1000, \'Second\')),\n  new Promise((resolve, reject) => setTimeout(resolve, 2000, \'First\')),\n])\n.then(value => console.log(`Result2: ${value}`))\n.catch (err => console.log(err))\n\n/**** Output ****/\n// Third\n// Result1: Second\n\n\n上面代码中，Promise.any()方法的参数数组包含三个 Promise 操作。其中只要有一个变成fulfilled，Promise.any()返回的 Promise 对象就变成fulfilled,而Promise.race([p1, p2, p3])里面哪个结果获得的快，就返回那个结果，不管结果本身是成功状态还是失败状态。\n\n如果没有 fulfilled (成功的) promise，Promise.any() 返回 AggregateError 错误。\n\n// 示例 2\nconst pErr1 = new Promise((resolve, reject) => {\n  reject(\'总是失败1\');\n});\nconst pErr2 = new Promise((resolve, reject) => {\n  reject(\'总是失败2\');\n});\nPromise.any([pErr1,pErr2]).catch((err) => {\n  console.log(err);\n})\n\n/**** Output ****/\n// "AggregateError: All promises were rejected"\n\n\n\n# 逻辑运算符和赋值表达式（&&=，||=，??=）\n\n在 JavaScript 中有许多赋值运算符和逻辑运算符，如以下基本示例：\n\n// Assignment Operator Example\nlet num = 5\nnum+=10\nconsole.log(num) // 15\n// Logical Operator Example\nlet num1 = 6\nlet num2 = 3\nconsole.log(num1 === 6 && num2 === 2) // false\nconsole.log(num1 === 6 || num2 === 2) // true\n\n\n新的提案让我们将能把逻辑运算符和赋值运算符结合起来\n\n\n# 1、带有 && 运算符的逻辑赋值运算符\n\nvar x = 1;\nvar y = 2;\nx &&= y;\nconsole.log(x); // 2\n\n\n第3行的操作等价为：x && (x = y) 或者等价于\n\nif(x) {\n  x = y\n}\n\n\n由于x是真实值，因此赋值了的值y，即2。简而言之，运算符&&=仅当 LHS 值为真时，才将 RHS 变量值赋给 LHS 变量。\n\n\n# 2、带有||的运算符逻辑赋值运算符\n\n仅当 LHS 值为假时，才将 RHS 变量值赋给 LHS 变量。\n\n// Logical Assignment Operator with || operator\nlet num1\nlet num2 = 10\nnum1 ||= num2\nconsole.log(num1) // 10\n// Line 4 can also be written as following ways\n// 1. num1 || (num1 = num2)\n// 2. if (!num1) num1 = num2\n\n\n\n# 3、带有?? 运算符的逻辑赋值运算符\n\nES2020 引入了空值合并运算符，其也可以与赋值运算符结合使用。仅当 LHS 为 undefined 或仅为 null 时，才将 RHS 变量值赋给 LHS 变量。\n\n// Logical Assignment Operator with ?? operator\nlet num1\nlet num2 = 10\nnum1 ??= num2\nconsole.log(num1) // 10\nnum1 = false\nnum1 ??= num2\nconsole.log(num1) // false\n// Line 4 can also be written as following ways\n// num1 ?? (num1 = num2)\n\n\n\n# 数值分隔符\n\n我们将通过使用_（下划线）字符在数字组之间提供分隔，使读取数值更加容易，提高可读性。\n\nlet x = 100_000; // 100000\n\n\n数值分隔符也适用于BigInt数字。\n\nconst trillion = 1000_000_000_000n;\nconsole.log(trillion.toString()); // "1000000000000"\n\n\n分隔符仅出于可读性目的。因此，它可以放置在数字中的任何位置。\n\nconst amount = 178_00;\nconsole.log(amount.toString()); // "17800"\n\n\n\n# WeakRef and Finalizers\n\n此功能包含两个高级对象 WeakRef和 FinalizationRegistry。根据使用情况，这些接口可以单独使用，也可以一起使用。**官方建议不要轻易使用 WeakRef 和 finalizer。**其中一个原因是它们可能不可预测，另一个是它们并没有真正帮 gc 完成工作，实际上可能会垃圾回收的工作更加困难。\n\n在 JavaScript 中，当你创建了一个创建对象的引用时，这个引用可以防止对象被垃圾收集，也就是说 JavaScript 无法删除对象并释放其内存。只要对该对象的引用一直存在，就可以使这个对象永远存在。\n\nES2021 了新的类 WeakRefs。允许创建对象的弱引用。这样就能够在跟踪现有对象时不会阻止对其进行垃圾回收。对于缓存和对象映射非常有用。\n\n必须用 new关键字创建新的 WeakRef，并把某些对象作为参数放入括号中。当你想读取引用（被引用的对象）时，可以通过在弱引用上调用 deref() 来实现。\n\nconst myWeakRef = new WeakRef({\n  name: \'星野\',\n  year: \'25\'\n})\n\nmyWeakRef.deref()\n// => {  name: \'星野\', year: \'25\' }\n\nmyWeakRef.deref().name\n// => \'星野\'\n\n\n与 WeakRef 紧密相连的还有另一个功能，名为 finalizers 或 FinalizationRegistry。这个功能允许你注册一个回调函数，这个回调函数将会在对象被垃圾回收时调用。\n\n// 创建 FinalizationRegistry:\nconst reg = new FinalizationRegistry((val) => {\n  console.log(val)\n})\n\n(() => {\n  // 创建新对象:\n  const obj = {}\n\n  //为 “obj” 对象注册 finalizer：\n  //第一个参数：要为其注册 finalizer 的对象。\n  //第二个参数：上面定义的回调函数的值。\n  reg.register(obj, \'obj has been garbage-collected.\')\n})()\n// 当 "obj" 被垃圾回收时输出：\n// \'obj has been garbage-collected.\'\n\n\n\n# 参考文章\n\n * ES2021 / ES12 New Features\n * Everything new coming in ES2021\n * JavaScript ES2021 Exciting Features\n * 即将发布的 ES2021（ES12）中有哪些有趣的功能',normalizedContent:'# 前言\n\n2021年3月13日，es2021 候选提案发布了其最终功能集的版本。如果它能够在今年6月的ecma 大会上通过，就会成为官方的标准！\n\n这个候选提案提及到ecmascript新特性如下所示：\n\n * string.prototype.replaceall()\n * promise.any\n * 逻辑运算符和赋值表达式\n * 数值分隔符\n * weakref and finalizers\n\n这些新的特性已经进入第四阶段且已添加到谷歌 chrome v8 引擎中。接下来我们来介绍下这些es2021的新特性吧。\n\n\n# string.prototype.replaceall()\n\nconst newstring = oldstring.replaceall(pattern, replacement);\n\n\n该方法返回一个新的字符串，所有 pattern会被传递给它的replacement替换。 其中pattern参数可以是字符串或正则表达式，replacement参数可以是字符串或针对每次匹配执行的函数。\n\nreplaceall方法是string.replace方法的续集，string.replace仅替换pattern的第一次找到的位置。\n\nconst str = "linda is a self-taught developer.linda will rule the world";\n\nlet newstr = str.replace("linda","micheal")\n//output: micheal is a self-taught developer.linda will rule the world\n\nlet newstr = str.replaceall("linda","micheal")\n//output: micheal is a self-taught developer.micheal will rule the world\n\n\n\n以往如果需要替换所有匹配项的话，就要写成正则表达式，才能进行完全替换。\n\nconst str = "hello world, hello code";\nconst newstr = str.replace(/hello/g, "hi");\nconsole.log(newstr); // "hi world, hi code"\n\n\n现在有了string.prototype.replaceall() 即便是输入字符串也能完全替换匹配项。\n\nconst str = "hello world, hello code";\nconst newstr = str.replaceall("hello", "hi");\nconsole.log(newstr); // "hi world, hi code"\n\n\n\n# promise.any\n\n在 es6 中引入了 promise.race() 和 promise.all()方法，es2020 加入了 promise.allsettled()。 es2021 又增加了一个使 promise 处理更加容易的方法：promise.any()\n\npromise.any() 接收一个promise可迭代对象，只要其中的一个 promise 成功，就返回那个已经成功的 promise （如示例 1 所示）。如果可迭代对象中没有一个 promise 成功（即所有的 promise 都失败/拒绝），就返回一个失败的 promise和aggregateerror类型的实例（如示例 2 所示），它是 error的一个子类，用于把单一的错误集合在一起。\n\npromise.any()跟promise.race()方法很像，只有一点不同，就是不会因为某个 promise 变成rejected状态而结束。\n\n// 示例1\npromise.any([\n  new promise((resolve, reject) => settimeout(reject, 200, \'third\')),\n  new promise((resolve, reject) => settimeout(resolve, 1000, \'second\')),\n  new promise((resolve, reject) => settimeout(resolve, 2000, \'first\')),\n])\n.then(value => console.log(`result1: ${value}`))\n.catch (err => console.log(err))\n\npromise.race([\n  new promise((resolve, reject) => settimeout(reject, 200, \'third\')),\n  new promise((resolve, reject) => settimeout(resolve, 1000, \'second\')),\n  new promise((resolve, reject) => settimeout(resolve, 2000, \'first\')),\n])\n.then(value => console.log(`result2: ${value}`))\n.catch (err => console.log(err))\n\n/**** output ****/\n// third\n// result1: second\n\n\n上面代码中，promise.any()方法的参数数组包含三个 promise 操作。其中只要有一个变成fulfilled，promise.any()返回的 promise 对象就变成fulfilled,而promise.race([p1, p2, p3])里面哪个结果获得的快，就返回那个结果，不管结果本身是成功状态还是失败状态。\n\n如果没有 fulfilled (成功的) promise，promise.any() 返回 aggregateerror 错误。\n\n// 示例 2\nconst perr1 = new promise((resolve, reject) => {\n  reject(\'总是失败1\');\n});\nconst perr2 = new promise((resolve, reject) => {\n  reject(\'总是失败2\');\n});\npromise.any([perr1,perr2]).catch((err) => {\n  console.log(err);\n})\n\n/**** output ****/\n// "aggregateerror: all promises were rejected"\n\n\n\n# 逻辑运算符和赋值表达式（&&=，||=，??=）\n\n在 javascript 中有许多赋值运算符和逻辑运算符，如以下基本示例：\n\n// assignment operator example\nlet num = 5\nnum+=10\nconsole.log(num) // 15\n// logical operator example\nlet num1 = 6\nlet num2 = 3\nconsole.log(num1 === 6 && num2 === 2) // false\nconsole.log(num1 === 6 || num2 === 2) // true\n\n\n新的提案让我们将能把逻辑运算符和赋值运算符结合起来\n\n\n# 1、带有 && 运算符的逻辑赋值运算符\n\nvar x = 1;\nvar y = 2;\nx &&= y;\nconsole.log(x); // 2\n\n\n第3行的操作等价为：x && (x = y) 或者等价于\n\nif(x) {\n  x = y\n}\n\n\n由于x是真实值，因此赋值了的值y，即2。简而言之，运算符&&=仅当 lhs 值为真时，才将 rhs 变量值赋给 lhs 变量。\n\n\n# 2、带有||的运算符逻辑赋值运算符\n\n仅当 lhs 值为假时，才将 rhs 变量值赋给 lhs 变量。\n\n// logical assignment operator with || operator\nlet num1\nlet num2 = 10\nnum1 ||= num2\nconsole.log(num1) // 10\n// line 4 can also be written as following ways\n// 1. num1 || (num1 = num2)\n// 2. if (!num1) num1 = num2\n\n\n\n# 3、带有?? 运算符的逻辑赋值运算符\n\nes2020 引入了空值合并运算符，其也可以与赋值运算符结合使用。仅当 lhs 为 undefined 或仅为 null 时，才将 rhs 变量值赋给 lhs 变量。\n\n// logical assignment operator with ?? operator\nlet num1\nlet num2 = 10\nnum1 ??= num2\nconsole.log(num1) // 10\nnum1 = false\nnum1 ??= num2\nconsole.log(num1) // false\n// line 4 can also be written as following ways\n// num1 ?? (num1 = num2)\n\n\n\n# 数值分隔符\n\n我们将通过使用_（下划线）字符在数字组之间提供分隔，使读取数值更加容易，提高可读性。\n\nlet x = 100_000; // 100000\n\n\n数值分隔符也适用于bigint数字。\n\nconst trillion = 1000_000_000_000n;\nconsole.log(trillion.tostring()); // "1000000000000"\n\n\n分隔符仅出于可读性目的。因此，它可以放置在数字中的任何位置。\n\nconst amount = 178_00;\nconsole.log(amount.tostring()); // "17800"\n\n\n\n# weakref and finalizers\n\n此功能包含两个高级对象 weakref和 finalizationregistry。根据使用情况，这些接口可以单独使用，也可以一起使用。**官方建议不要轻易使用 weakref 和 finalizer。**其中一个原因是它们可能不可预测，另一个是它们并没有真正帮 gc 完成工作，实际上可能会垃圾回收的工作更加困难。\n\n在 javascript 中，当你创建了一个创建对象的引用时，这个引用可以防止对象被垃圾收集，也就是说 javascript 无法删除对象并释放其内存。只要对该对象的引用一直存在，就可以使这个对象永远存在。\n\nes2021 了新的类 weakrefs。允许创建对象的弱引用。这样就能够在跟踪现有对象时不会阻止对其进行垃圾回收。对于缓存和对象映射非常有用。\n\n必须用 new关键字创建新的 weakref，并把某些对象作为参数放入括号中。当你想读取引用（被引用的对象）时，可以通过在弱引用上调用 deref() 来实现。\n\nconst myweakref = new weakref({\n  name: \'星野\',\n  year: \'25\'\n})\n\nmyweakref.deref()\n// => {  name: \'星野\', year: \'25\' }\n\nmyweakref.deref().name\n// => \'星野\'\n\n\n与 weakref 紧密相连的还有另一个功能，名为 finalizers 或 finalizationregistry。这个功能允许你注册一个回调函数，这个回调函数将会在对象被垃圾回收时调用。\n\n// 创建 finalizationregistry:\nconst reg = new finalizationregistry((val) => {\n  console.log(val)\n})\n\n(() => {\n  // 创建新对象:\n  const obj = {}\n\n  //为 “obj” 对象注册 finalizer：\n  //第一个参数：要为其注册 finalizer 的对象。\n  //第二个参数：上面定义的回调函数的值。\n  reg.register(obj, \'obj has been garbage-collected.\')\n})()\n// 当 "obj" 被垃圾回收时输出：\n// \'obj has been garbage-collected.\'\n\n\n\n# 参考文章\n\n * es2021 / es12 new features\n * everything new coming in es2021\n * javascript es2021 exciting features\n * 即将发布的 es2021（es12）中有哪些有趣的功能',charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"代码中大量的if/else你有什么优化方案",frontmatter:{title:"代码中大量的if/else你有什么优化方案",date:"2021-7-28",tags:["JavaScript"],permalink:"/pages/6f1790/",categories:["前端","JavaScript"],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/06.JavaScript/01.%E4%BB%A3%E7%A0%81%E4%B8%AD%E5%A4%A7%E9%87%8F%E7%9A%84if-else%E4%BD%A0%E6%9C%89%E4%BB%80%E4%B9%88%E4%BC%98%E5%8C%96%E6%96%B9%E6%A1%88.html",relativePath:"02.开发/06.JavaScript/01.代码中大量的if-else你有什么优化方案.md",key:"v-6c5a0b5f",path:"/pages/6f1790/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"单个 if 语句优化",slug:"单个-if-语句优化",normalizedTitle:"单个 if 语句优化",charIndex:2342},{level:2,title:"if/else 语句优化",slug:"if-else-语句优化",normalizedTitle:"if/else 语句优化",charIndex:2356},{level:3,title:"排非策略",slug:"排非策略",normalizedTitle:"排非策略",charIndex:2995},{level:3,title:"三元运算符",slug:"三元运算符",normalizedTitle:"三元运算符",charIndex:3003},{level:2,title:"单个 if 多条件优化",slug:"单个-if-多条件优化",normalizedTitle:"单个 if 多条件优化",charIndex:2372},{level:2,title:"多个 else if 分支优化",slug:"多个-else-if-分支优化",normalizedTitle:"多个 else if 分支优化",charIndex:2387},{level:3,title:"switch",slug:"switch",normalizedTitle:"switch",charIndex:4262},{level:3,title:"key-value",slug:"key-value",normalizedTitle:"key-value",charIndex:4269},{level:3,title:"Map",slug:"map",normalizedTitle:"map",charIndex:4279},{level:2,title:"参考文章",slug:"参考文章",normalizedTitle:"参考文章",charIndex:6218}],headersStr:"前言 单个 if 语句优化 if/else 语句优化 排非策略 三元运算符 单个 if 多条件优化 多个 else if 分支优化 switch key-value Map 参考文章",content:"# 前言\n\n在产品快速迭代的中，由于追求开发速度，我们往往忽略代码的可读性与扩展性，不合理的使用if-else条件判断会使我们的程序复杂度大大提升，同时也会使代码的可读性急速下降，后期维护难度也大大提高，真的让人脑壳疼。比如下方示例：\n\n// 贷款申请操作的处理\nfunction check() {\n  // 是否输入正确用户名\n  if (this.checkUsername(this.username)) {\n    // 是否输入正确身份证号\n    if (this.checkIdCard(this.idCard)) {\n      // 请输入正确的电话号码\n      if (this.checkTel(this.tel)) {\n        // 担保人是本人\n        if (this.dbr === '担保人是本人') {\n          // 是否存在身份证正面\n          if (document.querySelector('.sfzzm img')) {\n            console.log('存在身份证正面')\n            // 是否存在身份证反面\n            if (document.querySelector('.sfzfm img')) {\n              console.log('存在身份证反面')\n              // 是否存在学历证书\n              if (document.querySelector('.xlzs img')) {\n                console.log('存在学历证书')\n                if (this.ydxy) {\n                  this.tijiaoIsShow = false\n                }\n              } else {\n                Toast('请上传学历证书')\n                this.tijiaoIsShow = true\n              }\n            } else {\n              Toast('请上传身份证反面')\n            }\n          } else {\n            Toast('请上传身份证正面')\n          }\n        } else if (this.dbr == '担保人不是本人') {\n          if (this.checkUsername(this.dbrname)) {\n            if (this.checkIdCard(this.dbridCard)) {\n              if (this.checkTel(this.dbrzyzh)) {\n                if (document.querySelector('.sfzzm img')) {\n                  console.log('存在身份证正面')\n                  if (document.querySelector('.sfzfm img')) {\n                    console.log('存在身份证反面')\n                    if (document.querySelector('.xlzs img')) {\n                      console.log('存在学历证书')\n                      this.tijiaoIsShow = false\n                    } else {\n                      Toast('请上传学历证书')\n                    }\n                  } else {\n                    Toast('请上传身份证反面')\n                  }\n                } else {\n                  Toast('请上传身份证正面')\n                }\n              } else {\n                Toast('请输入担保人展业证号')\n              }\n            } else {\n              Toast('请输入担保人身份证号')\n            }\n          } else {\n            Toast('请输入担保人姓名')\n          }\n        } else {\n          Toast('请选择担保人是否为本人')\n        }\n      } else {\n        Toast('请输入正确的电话号码')\n      }\n    } else {\n      Toast('请输入正确的身份证号')\n    }\n  } else {\n    Toast('请输入正确的姓名')\n  }\n}\n\n\n如果你接手这样一段代码，相信大家和我的心情是一样的：\n\n\n\n本文归纳以下几种优化if-else场景，希望对大家有所帮助。\n\n * 单个 if 语句优化\n * if/else 语句优化\n * 单个 if 多条件优化\n * 多个 else if 分支优化\n\n\n# 单个 if 语句优化\n\n优化前\n\nif (flag) {\n  this.handleFn()\n}\n\n\n优化后\n\nflag && this.handleFn()\n// handleFn是普通函数\n\n\n这种写法就比较清晰，简洁，好读！\n\n另外如果遇到有很多的if语句，但是执行的功能函数却是一致的情况，我们可以用”逻辑与“或者”逻辑或“来把他们合并成一个表达式。如果我们这些彼此独立的条件判断可以被视为同一次检查的场景时，一次检查的意图明显在可读性上优于多次的条件检查。我们来看一段代码片段:\n\nif (!(staffInfo.patientName && staffInfo.phone)) {\n  // doSomething\n}\n...\nif (!(staffInfo.phone && staffInfo.idCardNum)) {\n  // doSomething\n}\n\n\n\n\n我们可以通过合并逻辑，将上面代码修改为如下：\n\nif (!(staffInfo.patientName && staffInfo.phone) || !(staffInfo.phone && staffInfo.idCardNum)) {\n  // doSomething\n}\n\n\n\n# if/else 语句优化\n\nif/else可以说在项目中遇到频率是最高，通常可以这两种策略优化\n\n * 排非策略\n * 三元运算符\n\n\n# 排非策略\n\n比如用户登录场景，如果用户名和密码输入框为空，那么我们就提示用户”用户名和密码不能为空”；如果有值，就执行登录的操作。\n\n优化前\n\nif (user && password) {\n  // 逻辑处理\n} else {\n  throw '用户名和密码不能为空!'\n}\n\n\n优化后\n\nif (!user || !password) return throw '用户名和密码不能为空!'\n// 逻辑处理\n\n\n表单提交时，需要提前排除那些提交不规范的内容，通常情况下，表单提交遇到不符合我们要求大于我们提交成功的情形，排非策略是个很不错的选择。\n\n\n# 三元运算符\n\n示例一\n\nlet allow = null\nif（age >= 18）{\n   allow = '通过';\n} else {\n   allow = '拒绝';\n}\n\n// 优化后\nlet allow = age >= 18 ? '通过' : '拒绝'\n\n\n示例二\n\nif (flag) {\n  success()\n} else {\n  fail()\n}\n\n//优化后\nflag ? success() : fail()\n\n\n三元运算符相比if/else来说，只需一行语句，代码简练精炼。\n\n\n# 单个 if 多条件优化\n\n优化前\n\nfunction test(type) {\n  if (type === 'jpg' || type === 'png' || type === 'gif' || type === 'svg') {\n    console.log('该文件为图片')\n  }\n}\n\n\n优化后\n\nfunction test(type) {\n  const imgArr = ['jpg', 'png', 'gif', 'svg']\n  if (imgArr.includes(type)) {\n    console.log('该文件为图片')\n  }\n}\n\n\n\n# 多个 else if 分支优化\n\n多个else if通常是一个糟糕的选择，它导致设计复杂，代码可读性差，并且可能导致重构困难。\n\nif (this.type === 'A') {\n  this.handleA()\n} else if (this.type === 'B') {\n  this.handleB()\n} else if (this.type === 'C') {\n  this.handleC()\n} else if (this.type === 'D') {\n  this.handleD()\n} else {\n  this.handleE()\n}\n\n\n我们经常遇到多个else if条件判断代码，随着逻辑复杂性的增加，else if的代码将变得越来越肿。\n\n看一下逻辑绘制为流程图\n\n\n\n从上面的流程图可以看出，不同条件分支的代码具有很高的耦合度。先前的条件判断将影响后续的代码流，并且此类代码在后续开发中难以维护。我们可以通过switch、key-value和Map来优化代码。\n\n\n# switch\n\nswitch (val) {\n  case 'A':\n    handleA()\n    break\n  case 'B':\n    handleB()\n    break\n  case 'C':\n    handleC()\n    break\n  case 'D':\n    handleD()\n    break\n}\n\n\n看一下逻辑绘制为流程图\n\n\n\n流程图显然更简单。而且，不同的条件分支之间没有嵌套，并且它们彼此独立。逻辑很清楚。\n\n\n# key-value\n\n虽然switch语句在逻辑上确实比else if语句简单，但是代码本身也有点多。\n\n其实我们对象枚举，将条件与特定操作相关联的键值。\n\nlet enums = {\n  A: handleA,\n  B: handleB,\n  C: handleC,\n  D: handleD,\n  E: handleE,\n}\nfunction action(val) {\n  let handleType = enums[val]\n  handleType()\n}\n\n\n流程图：\n\n\n\n这种方式消除了所有条件语句，并使用键值对象存储条件和操作之间的关系。当我们需要根据条件执行代码时，我们不再需要使用else if或switch语句来处理相应的动作，我们只需从中提取相应的函数 handleType 并执行它即可。\n\n\n# Map\n\n实际上我们还可以通过Map来进一步的优化我们的代码。\n\n对比Object的话，Map具有许多优点\n\n * 对象的键只能是字符串或符号，而Map的键可以是任何类型的值。\n * 我们可以使用Map size属性轻松获取Map的键/值对的数量，而对象的键/值对的数量只能手动确定。\n * 具有极快的查找速度。\n\n上面的例子可以优化如下：\n\nlet enums = new Map([\n  ['A', handleA],\n  ['B', handleB],\n  ['C', handleC],\n  ['D', handleD],\n  ['E', handleE],\n])\n\nfunction action(val) {\n  let handleType = enums(val)\n  handleType()\n}\n\n\n如果我们遇到多层复杂条件，Map语句优势就更明显了！\n\nif (mode == 'kline') {\n  if (this.type === 'A') {\n    this.handleA()\n  } else if (this.type === 'B') {\n    this.handleB()\n  } else if (this.type === 'C') {\n    this.handleC()\n  } else if (this.type === 'D') {\n    this.handleD()\n  }\n} else if ((mode = 'depth')) {\n  if (this.type === 'A') {\n    this.handleA()\n  } else if (this.type === 'B') {\n    this.handleB()\n  } else if (this.type === 'C') {\n    this.handleC()\n  } else if (this.type === 'D') {\n    this.handleD()\n  }\n}\n\n\n对于上述如此复杂的场景，是否可以通过Map来进行优化？\n\n其实我们只需要将不同的判断语句连接成一个字符串，以便我们可以将条件和操作以键值格式关联在一起。\n\nlet enums = new Map([\n  ['kline_A', handleKlineA],\n  ['kline_B', handleKlineB],\n  ['kline_C', handleKlineC],\n  ['kline_D', handleKlineD],\n  ['kline_E', handleKlineE],\n  ['depth_A', handleDepthA],\n  ['depth_B', handleDepthB],\n  ['depth_C', handleDepthC],\n])\n\nfunction action(mode, type) {\n  let key = `${mode}_${type}`\n  let handleType = enums(key)\n  handleType()\n}\n\n\n瞬间简单明了很多，有木有～～～\n\n\n# 参考文章\n\n * if-else 重构优化\n * if-else 逻辑判断优化\n * How to Use if-else\n * Javascript 条件语句优化策略\n * 深入浅出代码优化﹣if/else",normalizedContent:"# 前言\n\n在产品快速迭代的中，由于追求开发速度，我们往往忽略代码的可读性与扩展性，不合理的使用if-else条件判断会使我们的程序复杂度大大提升，同时也会使代码的可读性急速下降，后期维护难度也大大提高，真的让人脑壳疼。比如下方示例：\n\n// 贷款申请操作的处理\nfunction check() {\n  // 是否输入正确用户名\n  if (this.checkusername(this.username)) {\n    // 是否输入正确身份证号\n    if (this.checkidcard(this.idcard)) {\n      // 请输入正确的电话号码\n      if (this.checktel(this.tel)) {\n        // 担保人是本人\n        if (this.dbr === '担保人是本人') {\n          // 是否存在身份证正面\n          if (document.queryselector('.sfzzm img')) {\n            console.log('存在身份证正面')\n            // 是否存在身份证反面\n            if (document.queryselector('.sfzfm img')) {\n              console.log('存在身份证反面')\n              // 是否存在学历证书\n              if (document.queryselector('.xlzs img')) {\n                console.log('存在学历证书')\n                if (this.ydxy) {\n                  this.tijiaoisshow = false\n                }\n              } else {\n                toast('请上传学历证书')\n                this.tijiaoisshow = true\n              }\n            } else {\n              toast('请上传身份证反面')\n            }\n          } else {\n            toast('请上传身份证正面')\n          }\n        } else if (this.dbr == '担保人不是本人') {\n          if (this.checkusername(this.dbrname)) {\n            if (this.checkidcard(this.dbridcard)) {\n              if (this.checktel(this.dbrzyzh)) {\n                if (document.queryselector('.sfzzm img')) {\n                  console.log('存在身份证正面')\n                  if (document.queryselector('.sfzfm img')) {\n                    console.log('存在身份证反面')\n                    if (document.queryselector('.xlzs img')) {\n                      console.log('存在学历证书')\n                      this.tijiaoisshow = false\n                    } else {\n                      toast('请上传学历证书')\n                    }\n                  } else {\n                    toast('请上传身份证反面')\n                  }\n                } else {\n                  toast('请上传身份证正面')\n                }\n              } else {\n                toast('请输入担保人展业证号')\n              }\n            } else {\n              toast('请输入担保人身份证号')\n            }\n          } else {\n            toast('请输入担保人姓名')\n          }\n        } else {\n          toast('请选择担保人是否为本人')\n        }\n      } else {\n        toast('请输入正确的电话号码')\n      }\n    } else {\n      toast('请输入正确的身份证号')\n    }\n  } else {\n    toast('请输入正确的姓名')\n  }\n}\n\n\n如果你接手这样一段代码，相信大家和我的心情是一样的：\n\n\n\n本文归纳以下几种优化if-else场景，希望对大家有所帮助。\n\n * 单个 if 语句优化\n * if/else 语句优化\n * 单个 if 多条件优化\n * 多个 else if 分支优化\n\n\n# 单个 if 语句优化\n\n优化前\n\nif (flag) {\n  this.handlefn()\n}\n\n\n优化后\n\nflag && this.handlefn()\n// handlefn是普通函数\n\n\n这种写法就比较清晰，简洁，好读！\n\n另外如果遇到有很多的if语句，但是执行的功能函数却是一致的情况，我们可以用”逻辑与“或者”逻辑或“来把他们合并成一个表达式。如果我们这些彼此独立的条件判断可以被视为同一次检查的场景时，一次检查的意图明显在可读性上优于多次的条件检查。我们来看一段代码片段:\n\nif (!(staffinfo.patientname && staffinfo.phone)) {\n  // dosomething\n}\n...\nif (!(staffinfo.phone && staffinfo.idcardnum)) {\n  // dosomething\n}\n\n\n\n\n我们可以通过合并逻辑，将上面代码修改为如下：\n\nif (!(staffinfo.patientname && staffinfo.phone) || !(staffinfo.phone && staffinfo.idcardnum)) {\n  // dosomething\n}\n\n\n\n# if/else 语句优化\n\nif/else可以说在项目中遇到频率是最高，通常可以这两种策略优化\n\n * 排非策略\n * 三元运算符\n\n\n# 排非策略\n\n比如用户登录场景，如果用户名和密码输入框为空，那么我们就提示用户”用户名和密码不能为空”；如果有值，就执行登录的操作。\n\n优化前\n\nif (user && password) {\n  // 逻辑处理\n} else {\n  throw '用户名和密码不能为空!'\n}\n\n\n优化后\n\nif (!user || !password) return throw '用户名和密码不能为空!'\n// 逻辑处理\n\n\n表单提交时，需要提前排除那些提交不规范的内容，通常情况下，表单提交遇到不符合我们要求大于我们提交成功的情形，排非策略是个很不错的选择。\n\n\n# 三元运算符\n\n示例一\n\nlet allow = null\nif（age >= 18）{\n   allow = '通过';\n} else {\n   allow = '拒绝';\n}\n\n// 优化后\nlet allow = age >= 18 ? '通过' : '拒绝'\n\n\n示例二\n\nif (flag) {\n  success()\n} else {\n  fail()\n}\n\n//优化后\nflag ? success() : fail()\n\n\n三元运算符相比if/else来说，只需一行语句，代码简练精炼。\n\n\n# 单个 if 多条件优化\n\n优化前\n\nfunction test(type) {\n  if (type === 'jpg' || type === 'png' || type === 'gif' || type === 'svg') {\n    console.log('该文件为图片')\n  }\n}\n\n\n优化后\n\nfunction test(type) {\n  const imgarr = ['jpg', 'png', 'gif', 'svg']\n  if (imgarr.includes(type)) {\n    console.log('该文件为图片')\n  }\n}\n\n\n\n# 多个 else if 分支优化\n\n多个else if通常是一个糟糕的选择，它导致设计复杂，代码可读性差，并且可能导致重构困难。\n\nif (this.type === 'a') {\n  this.handlea()\n} else if (this.type === 'b') {\n  this.handleb()\n} else if (this.type === 'c') {\n  this.handlec()\n} else if (this.type === 'd') {\n  this.handled()\n} else {\n  this.handlee()\n}\n\n\n我们经常遇到多个else if条件判断代码，随着逻辑复杂性的增加，else if的代码将变得越来越肿。\n\n看一下逻辑绘制为流程图\n\n\n\n从上面的流程图可以看出，不同条件分支的代码具有很高的耦合度。先前的条件判断将影响后续的代码流，并且此类代码在后续开发中难以维护。我们可以通过switch、key-value和map来优化代码。\n\n\n# switch\n\nswitch (val) {\n  case 'a':\n    handlea()\n    break\n  case 'b':\n    handleb()\n    break\n  case 'c':\n    handlec()\n    break\n  case 'd':\n    handled()\n    break\n}\n\n\n看一下逻辑绘制为流程图\n\n\n\n流程图显然更简单。而且，不同的条件分支之间没有嵌套，并且它们彼此独立。逻辑很清楚。\n\n\n# key-value\n\n虽然switch语句在逻辑上确实比else if语句简单，但是代码本身也有点多。\n\n其实我们对象枚举，将条件与特定操作相关联的键值。\n\nlet enums = {\n  a: handlea,\n  b: handleb,\n  c: handlec,\n  d: handled,\n  e: handlee,\n}\nfunction action(val) {\n  let handletype = enums[val]\n  handletype()\n}\n\n\n流程图：\n\n\n\n这种方式消除了所有条件语句，并使用键值对象存储条件和操作之间的关系。当我们需要根据条件执行代码时，我们不再需要使用else if或switch语句来处理相应的动作，我们只需从中提取相应的函数 handletype 并执行它即可。\n\n\n# map\n\n实际上我们还可以通过map来进一步的优化我们的代码。\n\n对比object的话，map具有许多优点\n\n * 对象的键只能是字符串或符号，而map的键可以是任何类型的值。\n * 我们可以使用map size属性轻松获取map的键/值对的数量，而对象的键/值对的数量只能手动确定。\n * 具有极快的查找速度。\n\n上面的例子可以优化如下：\n\nlet enums = new map([\n  ['a', handlea],\n  ['b', handleb],\n  ['c', handlec],\n  ['d', handled],\n  ['e', handlee],\n])\n\nfunction action(val) {\n  let handletype = enums(val)\n  handletype()\n}\n\n\n如果我们遇到多层复杂条件，map语句优势就更明显了！\n\nif (mode == 'kline') {\n  if (this.type === 'a') {\n    this.handlea()\n  } else if (this.type === 'b') {\n    this.handleb()\n  } else if (this.type === 'c') {\n    this.handlec()\n  } else if (this.type === 'd') {\n    this.handled()\n  }\n} else if ((mode = 'depth')) {\n  if (this.type === 'a') {\n    this.handlea()\n  } else if (this.type === 'b') {\n    this.handleb()\n  } else if (this.type === 'c') {\n    this.handlec()\n  } else if (this.type === 'd') {\n    this.handled()\n  }\n}\n\n\n对于上述如此复杂的场景，是否可以通过map来进行优化？\n\n其实我们只需要将不同的判断语句连接成一个字符串，以便我们可以将条件和操作以键值格式关联在一起。\n\nlet enums = new map([\n  ['kline_a', handleklinea],\n  ['kline_b', handleklineb],\n  ['kline_c', handleklinec],\n  ['kline_d', handleklined],\n  ['kline_e', handleklinee],\n  ['depth_a', handledeptha],\n  ['depth_b', handledepthb],\n  ['depth_c', handledepthc],\n])\n\nfunction action(mode, type) {\n  let key = `${mode}_${type}`\n  let handletype = enums(key)\n  handletype()\n}\n\n\n瞬间简单明了很多，有木有～～～\n\n\n# 参考文章\n\n * if-else 重构优化\n * if-else 逻辑判断优化\n * how to use if-else\n * javascript 条件语句优化策略\n * 深入浅出代码优化﹣if/else",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"nutils-js 前端开发的工具类库",frontmatter:{title:"nutils-js 前端开发的工具类库",date:"2021-5-29",categories:["frontEnd"],tags:["vue"],permalink:"/pages/46fd38/",readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/06.JavaScript/03.nutils-js%20%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%9A%84%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%BA%93.html",relativePath:"02.开发/06.JavaScript/03.nutils-js 前端开发的工具类库.md",key:"v-70f93156",path:"/pages/46fd38/",headers:[{level:2,title:"⬇️ 安装",slug:"安装",normalizedTitle:"⬇️ 安装",charIndex:291},{level:2,title:"🍻 使用",slug:"使用",normalizedTitle:"🍻 使用",charIndex:319},{level:2,title:"📦 API 文档",slug:"api-文档",normalizedTitle:"📦 api 文档",charIndex:398},{level:3,title:"数组",slug:"数组",normalizedTitle:"数组",charIndex:412},{level:3,title:"对象",slug:"对象",normalizedTitle:"对象",charIndex:612},{level:3,title:"函数",slug:"函数",normalizedTitle:"函数",charIndex:170},{level:3,title:"字符串",slug:"字符串",normalizedTitle:"字符串",charIndex:938},{level:3,title:"数字",slug:"数字",normalizedTitle:"数字",charIndex:999},{level:3,title:"浏览器",slug:"浏览器",normalizedTitle:"浏览器",charIndex:1144},{level:3,title:"环境",slug:"环境",normalizedTitle:"环境",charIndex:1266},{level:2,title:"数组",slug:"数组-2",normalizedTitle:"数组",charIndex:412},{level:3,title:"multArray二维数组转换",slug:"multarray二维数组转换",normalizedTitle:"multarray二维数组转换",charIndex:419},{level:3,title:"flatten扁平化数组",slug:"flatten扁平化数组",normalizedTitle:"flatten扁平化数组",charIndex:438},{level:3,title:"flattenDeep指定层级扁平化数组",slug:"flattendeep指定层级扁平化数组",normalizedTitle:"flattendeep指定层级扁平化数组",charIndex:454},{level:3,title:"isArrayEqual检查两个数组各项相等",slug:"isarrayequal检查两个数组各项相等",normalizedTitle:"isarrayequal检查两个数组各项相等",charIndex:478},{level:3,title:"allEqual检查数组各项相等",slug:"allequal检查数组各项相等",normalizedTitle:"allequal检查数组各项相等",charIndex:504},{level:3,title:"diffArray具有唯一array值的数组",slug:"diffarray具有唯一array值的数组",normalizedTitle:"diffarray具有唯一array值的数组",charIndex:524},{level:3,title:"haveArr具有共同array值的数组",slug:"havearr具有共同array值的数组",normalizedTitle:"havearr具有共同array值的数组",charIndex:550},{level:3,title:"uniqueArray数组去重",slug:"uniquearray数组去重",normalizedTitle:"uniquearray数组去重",charIndex:574},{level:3,title:"uniqueArrayObject数组对象去重",slug:"uniquearrayobject数组对象去重",normalizedTitle:"uniquearrayobject数组对象去重",charIndex:593},{level:3,title:"treeData生成树结构数据",slug:"treedata生成树结构数据",normalizedTitle:"treedata生成树结构数据",charIndex:620},{level:3,title:"ascArr数组升序",slug:"ascarr数组升序",normalizedTitle:"ascarr数组升序",charIndex:639},{level:3,title:"descArr数组降序",slug:"descarr数组降序",normalizedTitle:"descarr数组降序",charIndex:653},{level:3,title:"shuffle随机排序",slug:"shuffle随机排序",normalizedTitle:"shuffle随机排序",charIndex:668},{level:3,title:"takeArray截取数组开始指定的元素",slug:"takearray截取数组开始指定的元素",normalizedTitle:"takearray截取数组开始指定的元素",charIndex:683},{level:3,title:"takeLastArray截取数组最后指定的元素",slug:"takelastarray截取数组最后指定的元素",normalizedTitle:"takelastarray截取数组最后指定的元素",charIndex:707},{level:3,title:"cloneArray克隆数组",slug:"clonearray克隆数组",normalizedTitle:"clonearray克隆数组",charIndex:735},{level:3,title:"maxArray数组中最大值",slug:"maxarray数组中最大值",normalizedTitle:"maxarray数组中最大值",charIndex:753},{level:3,title:"minArray数组中最小值",slug:"minarray数组中最小值",normalizedTitle:"minarray数组中最小值",charIndex:771},{level:3,title:"validArray去除数组中的无效值",slug:"validarray去除数组中的无效值",normalizedTitle:"validarray去除数组中的无效值",charIndex:789},{level:2,title:"对象",slug:"对象-2",normalizedTitle:"对象",charIndex:612},{level:3,title:"isObjectEqual检查两个对象各项值相等",slug:"isobjectequal检查两个对象各项值相等",normalizedTitle:"isobjectequal检查两个对象各项值相等",charIndex:820},{level:3,title:"cloneObject克隆对象",slug:"cloneobject克隆对象",normalizedTitle:"cloneobject克隆对象",charIndex:848},{level:2,title:"函数",slug:"函数-2",normalizedTitle:"函数",charIndex:170},{level:3,title:"debounce函数防抖",slug:"debounce函数防抖",normalizedTitle:"debounce函数防抖",charIndex:875},{level:3,title:"throttle函数节流",slug:"throttle函数节流",normalizedTitle:"throttle函数节流",charIndex:891},{level:3,title:"typeFn类型判断",slug:"typefn类型判断",normalizedTitle:"typefn类型判断",charIndex:907},{level:3,title:"calcFn加减乘除运算",slug:"calcfn加减乘除运算",normalizedTitle:"calcfn加减乘除运算",charIndex:921},{level:2,title:"字符串",slug:"字符串-2",normalizedTitle:"字符串",charIndex:938},{level:3,title:"isNil值是否是null或undefined",slug:"isnil值是否是null或undefined",normalizedTitle:"isnil值是否是null或undefined",charIndex:946},{level:3,title:"padStart遮住字符串",slug:"padstart遮住字符串",normalizedTitle:"padstart遮住字符串",charIndex:973},{level:3,title:"thousands数字每隔三位数加分号",slug:"thousands数字每隔三位数加分号",normalizedTitle:"thousands数字每隔三位数加分号",charIndex:990},{level:2,title:"数字",slug:"数字-2",normalizedTitle:"数字",charIndex:999},{level:3,title:"randomNumber指定范围的随机整数",slug:"randomnumber指定范围的随机整数",normalizedTitle:"randomnumber指定范围的随机整数",charIndex:1021},{level:3,title:"average求平均值",slug:"average求平均值",normalizedTitle:"average求平均值",charIndex:1046},{level:3,title:"averageBy检查数组对象各项相等",slug:"averageby检查数组对象各项相等",normalizedTitle:"averageby检查数组对象各项相等",charIndex:1061},{level:3,title:"aboutEqual两个值是否约等于",slug:"aboutequal两个值是否约等于",normalizedTitle:"aboutequal两个值是否约等于",charIndex:1084},{level:3,title:"getLineSize计算两点之间的距离",slug:"getlinesize计算两点之间的距离",normalizedTitle:"getlinesize计算两点之间的距离",charIndex:1106},{level:3,title:"sum数组中值总和",slug:"sum数组中值总和",normalizedTitle:"sum数组中值总和",charIndex:1130},{level:2,title:"浏览器",slug:"浏览器-2",normalizedTitle:"浏览器",charIndex:1144},{level:3,title:"copyTextH5 复制文本",slug:"copytexth5-复制文本",normalizedTitle:"copytexth5 复制文本",charIndex:1152},{level:3,title:"getCurrentURL获取当前的 URL 地址",slug:"getcurrenturl获取当前的-url-地址",normalizedTitle:"getcurrenturl获取当前的 url 地址",charIndex:1171},{level:3,title:"scrollToTop返回顶部",slug:"scrolltotop返回顶部",normalizedTitle:"scrolltotop返回顶部",charIndex:1200},{level:3,title:"smoothScroll平滑滚动页面",slug:"smoothscroll平滑滚动页面",normalizedTitle:"smoothscroll平滑滚动页面",charIndex:1219},{level:3,title:"isCurrentPage是否是当前页面",slug:"iscurrentpage是否是当前页面",normalizedTitle:"iscurrentpage是否是当前页面",charIndex:1241},{level:2,title:"环境",slug:"环境-2",normalizedTitle:"环境",charIndex:1266},{level:3,title:"isBrowser是否是浏览器",slug:"isbrowser是否是浏览器",normalizedTitle:"isbrowser是否是浏览器",charIndex:1273},{level:3,title:"isWechatBrowser判断微信浏览器还是普通 h5",slug:"iswechatbrowser判断微信浏览器还是普通-h5",normalizedTitle:"iswechatbrowser判断微信浏览器还是普通 h5",charIndex:1292},{level:3,title:"isMobile判断是否是移动端",slug:"ismobile判断是否是移动端",normalizedTitle:"ismobile判断是否是移动端",charIndex:1325}],headersStr:"⬇️ 安装 🍻 使用 📦 API 文档 数组 对象 函数 字符串 数字 浏览器 环境 数组 multArray二维数组转换 flatten扁平化数组 flattenDeep指定层级扁平化数组 isArrayEqual检查两个数组各项相等 allEqual检查数组各项相等 diffArray具有唯一array值的数组 haveArr具有共同array值的数组 uniqueArray数组去重 uniqueArrayObject数组对象去重 treeData生成树结构数据 ascArr数组升序 descArr数组降序 shuffle随机排序 takeArray截取数组开始指定的元素 takeLastArray截取数组最后指定的元素 cloneArray克隆数组 maxArray数组中最大值 minArray数组中最小值 validArray去除数组中的无效值 对象 isObjectEqual检查两个对象各项值相等 cloneObject克隆对象 函数 debounce函数防抖 throttle函数节流 typeFn类型判断 calcFn加减乘除运算 字符串 isNil值是否是null或undefined padStart遮住字符串 thousands数字每隔三位数加分号 数字 randomNumber指定范围的随机整数 average求平均值 averageBy检查数组对象各项相等 aboutEqual两个值是否约等于 getLineSize计算两点之间的距离 sum数组中值总和 浏览器 copyTextH5 复制文本 getCurrentURL获取当前的 URL 地址 scrollToTop返回顶部 smoothScroll平滑滚动页面 isCurrentPage是否是当前页面 环境 isBrowser是否是浏览器 isWechatBrowser判断微信浏览器还是普通 h5 isMobile判断是否是移动端",content:"# nutils-js 前端开发的工具类库\n\n> nutils-js官网 https://feyoudao.cn/nutils-js-site/\n\n\n\n🚀 nutils-js 是一个模块化、高性能的 JavaScript 工具类库。\n\n日常开发中难免遇到Array Object String Number等数据处理 或者性能优化防抖节流函数或者URL参数处理 类型判断 为避免不同项目复制粘贴代码的麻烦，将方法进行封装成工具库，并且发布在npm上，如果后续有更优的写法也会做进一步的更新。或者你有好的建议为本项目贡献一份力的话，欢迎为本项目提交 pr，一起探讨和交流。\n\n\n# ⬇️ 安装\n\nnpm i nutils-js\n\n\n\n# 🍻 使用\n\nconst nutils = require('nutils-js')\nnutils.multArray([1, 2, 3], 2)\n\n\n\n# 📦 API 文档\n\n\n# 数组\n\n * multArray二维数组转换\n * flatten扁平化数组\n * flattenDeep指定层级扁平化数组\n * isArrayEqual检查两个数组各项相等\n * allEqual检查数组各项相等\n * diffArray具有唯一array值的数组\n * haveArr具有共同array值的数组\n * uniqueArray数组去重\n * uniqueArrayObject数组对象去重\n * treeData生成树结构数据\n * ascArr数组升序\n * descArr数组降序\n * shuffle随机排序\n * takeArray截取数组开始指定的元素\n * takeLastArray截取数组最后指定的元素\n * cloneArray克隆数组\n * maxArray数组中最大值\n * minArray数组中最小值\n * validArray去除数组中的无效值\n\n\n# 对象\n\n * isObjectEqual检查两个对象各项值相等\n * cloneObject克隆对象\n\n\n# 函数\n\n * debounce函数防抖\n * throttle函数节流\n * typeFn类型判断\n * calcFn加减乘除运算\n\n\n# 字符串\n\n * isNil值是否是null或undefined\n * padStart遮住字符串\n * thousands数字每隔三位数加分号\n\n\n# 数字\n\n * randomNumber指定范围的随机整数\n * average求平均值\n * averageBy检查数组对象各项相等\n * aboutEqual两个值是否约等于\n * getLineSize计算两点之间的距离\n * sum数组中值总和\n\n\n# 浏览器\n\n * copyTextH5 复制文本\n * getCurrentURL获取当前的 URL 地址\n * scrollToTop返回顶部\n * smoothScroll平滑滚动页面\n * isCurrentPage是否是当前页面\n\n\n# 环境\n\n * isBrowser是否是浏览器\n * isWechatBrowser判断微信浏览器还是普通 h5\n * isMobile判断是否是移动端\n\n\n# 数组\n\n\n# multArray二维数组转换\n\n将数组（array）拆分成多个子数组，并将这些子数组组成一个新数组。\n\nmultArray(array, count)\n\n\n参数\n\narray需要处理的数组 count = 1子数组需要的长度\n\n示例\n\nmultArray([1, 2, 3, 4, 5, 6, 7], 2)\n=> [[1, 2], [3, 4], [5, 6], [7]]\n\nmultArray(['a', 'b', 'c', 'd'], 3)\n=> [['a', 'b', 'c'], ['d']]\n\n\n源码\n\nfunction multArray(arr, count = 1) {\n    let pages = []\n    arr.forEach((item, index) => {\n        const page = Math.floor(index / count)\n        if (!pages[page]) pages[page] = []\n        pages[page].push(item)\n    })\n    return pages\n}\n\n\n\n# flatten扁平化数组\n\n将多层嵌套数组（array）拆分成一个数组\n\nflatten(array)\n\n\n参数\n\narray多层嵌套数组\n\n示例\n\nflatten([1, [2], [3], [4, 5]])\n\n// [1, 2, 3, 4, 5]\n\n\n源码\n\n// 扁平化  Map 方法\nconst flatten = arr => [].concat(...arr.map(v => (Array.isArray(v) ? flatten(v) : v)))\n\n// 扁平化  reduce 方法\nconst flatten = arr => arr.reduce((a, c) => a.concat(Array.isArray(c) ? flatten(c) : c), [])\n\n\n\n# flattenDeep指定层级扁平化数组\n\n将多层嵌套数组（array）拆分成指定层级数组\n\nflattenDeep(array, depth)\n\n\n参数\n\narray多层嵌套数组 depth = 减少的嵌套层级数\n\n示例\n\nflattenDeep([1, [2, [3, [4]], 5]], 1)\n// => [1, 2, [3, [4]], 5]\n\n// ES6方法 `flat(depth)`\n;[1, [2, [3, [4]], 5]].flat(1)\n// => [1, 2, [3, [4]], 5]\n\n\n源码\n\nconst flattenDeep = (arr, depth = 1) => arr.reduce((a, v) => a.concat(depth > 1 && Array.isArray(v) ? flatten(v, depth - 1) : v), [])\n\n\n\n# isArrayEqual检查两个数组各项相等\n\n比较两个数组内的各项值是否相等，返回一个Boolean值\n\nisArrayEqual(array, array)\n\n\n参数\n\narray 要检查的数组 array 要检查的数组\n\n示例\n\nisArrayEqual([6, 5, 2, 4, 1, 3], [1, 2, 3, 4, 5, 6])\n// => true\n\nisArrayEqual([6, 5, 2, 7, 1, 3], [1, 2, 3, 4, 5, 6])\n// => false\n\n\n源码\n\nconst isArrayEqual = (a, b, has = true) => {\n    if (a.length !== b.length) return (has = false)\n    const s = new Set(b)\n    if (a.find(x => !s.has(x))) return (has = false)\n    return has\n}\n\n\n\n# allEqual检查数组各项相等\n\nallEqual(array)\n\n\n参数\n\narray 要检查的数组\n\n示例\n\nallEqual([1, 2, 3, 4, 5, 6])\n// => false\n\nallEqual([1, 1, 1, 1])\n// => true\n\n\n源码\n\nconst allEqual = arr => arr.every(val => val === arr[0])\n\n\n\n# diffArray具有唯一array值的数组\n\n创建一个具有唯一 array 值的数组，每个值不包含在其他给定的数组中\n\ndiffArray(array, array2)\n\n\n参数\n\narray 要检查的数组 array2要排除的数组\n\n示例\n\ndiffArray([1, 2, 6, 7], [1, 2, 9, 5])\n// => [ 6, 7 ]\n\n\n源码\n\nconst diffArray = (a, b) => {\n    const s = new Set(b)\n    let arr = a.filter(x => !s.has(x))\n    return arr\n}\n\n\n\n# haveArr具有共同array值的数组\n\n创建一个具有共同 array 值的数组，每个值包含在其他给定的数组中\n\nhaveArr(array, array2)\n\n\n参数\n\narray 要检查的数组 array2要包含的数组\n\n示例\n\nhaveArr([1, 2, 6, 7], [1, 2, 9, 5])\n// => [ 1, 2 ]\n\n\n源码\n\nconst haveArr = (a, b) => {\n    const s = new Set(b)\n    return a.filter(x => s.has(x))\n}\n// ES6 includes\nconst haveArr = (arr, values) => arr.filter(v => values.includes(v))\n\n\n\n# uniqueArray数组去重\n\n创建一个去重后的 array 数组副本\n\nuniqueArray(array)\n\n\n参数\n\narray 要去重的数组\n\n示例\n\nuniqueArray([1, 2, 2, 3, 4, 4, 5])\n// => [ 1, 2, 3, 4, 5 ]\n\n\n源码\n\nconst uniqueArray = (...arr) => [...new Set(arr)]\n\nconst uniqueArray = (...arr) => Array.from(new Set(arr))\n\n\n\n# uniqueArrayObject数组对象去重\n\n创建一个去重后的 array 数组对象副本\n\nuniqueArrayObject(array)\n\n\n参数\n\narray 要去重的数组 key 要去重的对象属性值\n\n示例\n\nconst responseList = [\n    { id: 1, a: 1 },\n    { id: 2, a: 2 },\n    { id: 3, a: 3 },\n    { id: 1, a: 4 },\n    { id: 2, a: 2 },\n    { id: 3, a: 3 },\n    { id: 1, a: 4 },\n    { id: 2, a: 2 },\n    { id: 3, a: 3 },\n    { id: 1, a: 4 },\n    { id: 2, a: 2 },\n    { id: 3, a: 3 },\n    { id: 1, a: 4 }\n]\n\nuniqueArrayObject(responseList, 'id')\n\n// => [ { id: 1, a: 1 }, { id: 2, a: 2 }, { id: 3, a: 3 } ]\n\n\n源码\n\nconst uniqueArrayObject = (arr, key) => {\n    return arr.reduce((acc, cur) => {\n        const ids = acc.map(item => item[key])\n        return ids.includes(cur[key]) ? acc : [...acc, cur]\n    }, [])\n}\n\n\n\n# treeData生成树结构数据\n\n该函数传入一个数组， 每项id对应其父级数据parent_id，返回一个树结构数组\n\ntreeData(array, id, parent_id)\n\n\n参数\n\narray 要生成树结构的数组 id 自定义属性名 parent_id 父级自定义属性名\n\n示例\n\nconst comments = [\n    { id: 1, parent_id: null },\n    { id: 2, parent_id: 1 },\n    { id: 3, parent_id: 1 },\n    { id: 4, parent_id: 2 },\n    { id: 5, parent_id: 4 }\n]\n\ntreeData(comments)\n\n// => [ { id: 1, parent_id: null, children: [ [Object], [Object] ] } ]\n\n\n源码\n\nconst treeData = (arr, id = null, link = 'parent_id') => arr.filter(item => item[link] === id).map(item => ({ ...item, children: treeData(arr, item.id) }))\n\n\n\n# ascArr数组升序\n\n返回升序后的新数组\n\n> sort()方法会改变原数组，默认按 unicode 码顺序排列\n\nascArr(array)\n\n\n参数\n\narray 要检查的排序数组\n\n示例\n\nascArr([3, 2, 3, 4, 1])\n// => [ 1, 2, 3, 3, 4 ]\n\n\n源码\n\n// 通过ES6 ...展开运算符浅拷贝一份新数组\nconst ascArr = arr => [...arr].sort((a, b) => a - b)\n\n\n\n# descArr数组降序\n\n返回降序后的新数组\n\ndescArr(array)\n\n\n参数\n\narray 要检查的排序数组\n\n示例\n\ndescArr([3, 2, 3, 4, 1])\n// => [ 1, 2, 3, 3, 4 ]\n\n\n源码\n\nconst descArr = arr => [...arr].sort((a, b) => b - a)\n\n\n\n# shuffle随机排序\n\n创建一个随机的数组，使用Fisher-Yates算法随机排序数组的元素\n\nshuffle(array)\n\n\n参数\n\narray 要随机的数组\n\n示例\n\nshuffle([2, 3, 1])\n// => [3, 1, 2]\n\n\n源码\n\nconst shuffle = ([...arr]) => {\n    let m = arr.length\n    while (m) {\n        const i = Math.floor(Math.random() * m--)\n        ;[arr[m], arr[i]] = [arr[i], arr[m]]\n    }\n    return arr\n}\n\n\n\n# takeArray截取数组开始指定的元素\n\n从 array 数组的最开始一个元素开始提取 n 个元素\n\ntakeArray(array, n)\n\n\n参数\n\narray要检索的数组。 n=要提取的元素n个数。\n\n示例\n\ntakeArray([2, 3, 1], 2)\n// => [2, 3]\n\n\n源码\n\nconst takeArray = (arr, n = 1) => arr.slice(0, n)\n\n\n\n# takeLastArray截取数组最后指定的元素\n\n从 array 数组的最后一个元素开始提取 n 个元素\n\ntakeLastArray(array, n)\n\n\n参数\n\narray要检索的数组。 n=要提取的元素n个数。\n\n示例\n\ntakeArray([2, 3, 1], 2)\n// => [3, 1]\n\n\n源码\n\nconst takeLastArray = (arr, n = 1) => arr.slice(0, -n)\n\n\n\n# cloneArray克隆数组\n\n浅拷贝一份数组副本\n\ncloneArray(array)\n\n\n参数\n\narray要复制的数组\n\n示例\n\ncloneArray([1, 24])\n// => [1, 24]\n\n\n源码\n\n// ES6 ...\nconst cloneArray = arr => [...arr]\n\n// ES6 Array.from\nconst cloneArray = arr => Array.from(arr)\n\n// concat()\nconst cloneArray = arr => [].concat(arr)\n\n// map()\nconst cloneArray = arr => arr.map(x => x)\n\ncloneArray([1, 24]) // [1, 24]\n\n\n\n# maxArray数组中最大值\n\n过滤原数组中所有的非假值元素，返回数组中的最大值\n\nmaxArray(array)\n\n\n参数\n\narray待处理的数组\n\n示例\n\nmaxArray([0, -1, -2, -3, false])\n// => 0\n\n\n源码\n\nconst maxArray = arr => Math.max(...arr.filter(v => Boolean(v) || v === 0))\n\n\n\n# minArray数组中最小值\n\n过滤原数组中所有的非假值元素，返回数组中的最小值\n\nminArray(array)\n\n\n参数\n\narray待处理的数组\n\n示例 js\n\nminArray([0, -1, -2, -3, false])\n// => -3\n\n\n源码\n\nconst minArray = (arr) => Math.min(...arr.filter((v) => Boolean(v) || v === 0));\n\n\n\n# validArray去除数组中的无效值\n\n创建一个新数组，包含原数组中所有的非假值元素。例如false, null,0, \"\", undefined, 和 NaN 都是被认为是“假值”。\n\nvalidArray(array)\n\n\n参数\n\narray待处理的数组\n\n示例\n\nminArray([0, 1, false, 2, '', 3])\n// => [1, 2, 3]\n\n\n源码\n\nconst validArray = arr => arr.filter(Boolean)\n\n\n\n# 对象\n\n\n# isObjectEqual检查两个对象各项值相等\n\nisObjectEqual(object, object2)\n\n\n参数\n\nobject待检索的对象 object2待检索的对象\n\n示例\n\nisObjectEqual({ a: 2, b: 4 }, { b: 4, a: 2 })\n// => true\nisObjectEqual({ a: 2, b: 4, c: 6 }, { b: 4, a: 2 })\n// => false\n\n\n源码\n\nfunction isObjectEqual(obj1, obj2, has = true) {\n    // 判断类型\n    const o1 = obj1 instanceof Object\n    const o2 = obj2 instanceof Object\n    if (!o1 || !o2) return obj1 === obj2\n    // 判断长度\n    const keys1 = Object.getOwnPropertyNames(obj1)\n    const keys2 = Object.getOwnPropertyNames(obj2)\n    if (keyslength !== keyslength) return false\n    // 各项对比\n    for (let o in obj1) {\n        let t1 = obj1[o] instanceof Object\n        let t2 = obj2[o] instanceof Object\n        if (t1 && t2) {\n            has = diffByObj(obj1[o], obj2[o])\n        } else if (obj1[o] !== obj2[o]) {\n            has = false\n            break\n        }\n    }\n    return has\n}\n\n\n\n# cloneObject克隆对象\n\n浅拷贝一份对象副本\n\ncloneObject(object)\n\n\n参数\n\nobject要复制的对象\n\n示例\n\nconst a = { x: 1, y: 1 }\nconst b = cloneObject(a)\n// => a !== b\n\n\n源码\n\n// ES6 ...\nconst cloneObject = (obj, temp = {}) => (temp = { ...obj })\n\n// Object.assign()\nconst cloneObject = obj => Object.assign({}, obj)\n\n\n\n# 函数\n\n\n# debounce函数防抖\n\n在事件被触发 n 秒后再执行回调，如果在这 n 秒内又被触发，则重新计时。\n\ndebounce(fn, wait)\n\n\n参数\n\nfn 要防抖动的函数 wait=500需要延迟的毫秒数\n\n示例\n\ndebounce(()=> { console.log('debounce') }, 1000)\n// => 1秒后打印'debounce'\n\n\n源码\n\n/** *\n * 防抖\n * @parmas fn 回调函数\n * @parmas time 规定时间\n */\nconst debounce = (function () {\n    let timer = {}\n    return function (func, wait = 500) {\n        let context = this // 注意 this 指向\n        let args = arguments // arguments中存着e\n        let name = arguments[0].name || 'arrow' //箭头函数\n        if (timer[name]) clearTimeout(timer[name])\n        timer[name] = setTimeout(() => {\n            func.apply(this, args)\n        }, wait)\n    }\n})()\n\n\n\n# throttle函数节流\n\n规定一个单位时间，在这个单位时间内，只能有一次触发事件的回调函数执行，如果在同一个单位时间内某事件被触发多次，只有一次能生效。\n\nthrottle(fn, wait)\n\n\n参数\n\nfn 要节流的函数 wait=500需要延迟的毫秒数\n\n示例\n\nthrottle(() => {\n    console.log('throttle')\n}, 1000)\n// 1秒多次触发打印一次`throttle`\n\n\n源码\n\n/** *\n * 节流(规定的时间才触发)\n * @parmas fn 结束完运行的回调\n * @parmas delay 规定时间\n */\nexport const throttle = (function () {\n    let timeout = null\n    return function (func, wait) {\n        let context = this\n        let args = arguments\n        if (!timeout) {\n            timeout = setTimeout(() => {\n                timeout = null\n                func.apply(context, args)\n            }, wait)\n        }\n    }\n})()\n\nthrottle(fn, 300)\n\n\n\n# typeFn类型判断\n\n判断是否是 Array Object String Number类型\n\ntypeFn.type(value)\n\n\n参数\n\ntype 数据类型 value要检验的值\n\n示例\n\ntypeFn.String('1')\ntypeFn.Number(1)\ntypeFn.Boolean(false)\ntypeFn.Null(null)\ntypeFn.Array([1, 2])\ntypeFn.Object({ a: 1 })\ntypeFn.Function(() => {})\n\n// => true\n\n\n源码\n\nlet typeFn = {}\nconst curring = (fn, arr = []) => {\n    let len = fn.length\n    return (...args) => {\n        arr = arr.concat(args)\n        if (arr.length < len) {\n            return curring(fn, arr)\n        }\n        return fn(...arr)\n    }\n}\n\nfunction isType(type, content) {\n    return Object.prototype.toString.call(content) === `[object ${type}]`\n}\n;['String', 'Number', 'Boolean', 'Null', 'Array', 'Object', 'Function'].forEach(type => {\n    typeFn[type] = curring(isType)(type)\n})\n\n\n\n# calcFn加减乘除运算\n\n因为 JavaScript 遵循 IEEE 754 数学标准，使用 64 位浮点数进行运算。在进行十进制运算时会导致精度丢失。\n\ncalcFn.add(value1, value2, value3)\n\n\n参数\n\nadd``sub``mul``div 运算符 value要计算的值\n\n示例\n\n解决 0.1+0.2 !== 0.3 问题\n//加法\ncalcFn.add(0.1, 0.2) // 0.3\n\n//减法\ncalcFn.sub(0.1, 0.2) // 0.1\n\n//乘法\ncalcFn.mul(0.2, 0.3) // 0.06\n\n// 乘法\ncalcFn.add(0.1, 0.2) // 0.5\n\n\n源码\n\nconst calcFn = {\n  add() {\n      let arg = Array.from(arguments);\n      return arg.reduce((total, num) => {\n          return accAdd(total, num);\n      });\b\n  },\n  sub() {\n      let arg = Array.from(arguments);\n      return arg.reduce((total, num) => {\n          return accAdd(total, -num);\n      });\n  },\n  mul() {\n      let arg = Array.from(arguments);\n      return arg.reduce((total, num) => {\n          return accMul(total, num);\n      });\n  },\n  div() {\n      let arg = Array.from(arguments);\n      return arg.reduce((total, num) => {\n          return accDiv(total, num);\n      });\n  }\n}\n\nfunction accAdd(arg1, arg2) {\n  let r1, r2, m;\n  try {\n      r1 = argtoString().split(\".\")[1].length;\n  } catch (e) {\n      r1 = 0;\n  }\n  try {\n      r2 = argtoString().split(\".\")[1].length;\n  } catch (e) {\n      r2 = 0;\n  }\n  m = Math.pow(10, Math.max(r1, r2));\n  return (arg1 * m + arg2 * m) / m;\n}\n\nfunction accMul(arg1, arg2) {\n  let m = 0,\n      s1 = argtoString(),\n      s2 = argtoString();\n  try {\n      m += ssplit(\".\")[1].length;\n  } catch (e) {}\n  try {\n      m += ssplit(\".\")[1].length;\n  } catch (e) {}\n  return Number(sreplace(\".\", \"\")) * Number(sreplace(\".\", \"\")) / Math.pow(10, m);\n}\n\nfunction accDiv(arg1, arg2) {\n  let t1 = 0,\n      t2 = 0,\n      r1, r2;\n  try {\n      t1 = argtoString().split(\".\")[1].length;\n  } catch (e) {}\n  try {\n      t2 = argtoString().split(\".\")[1].length;\n  } catch (e) {}\n  r1 = Number(argtoString().replace(\".\", \"\"));\n  r2 = Number(argtoString().replace(\".\", \"\"));\n  return (r1 / r2) * Math.pow(10, t2 - t1);\n}\n\n\n\n# 字符串\n\n\n# isNil值是否是null或undefined\n\nisNil(value)\n\n\n参数\n\nvalue 要检验的值\n\n示例\n\nisNil(null)\nisNil(undefined)\n// => true\n\n\n源码\n\nconst isNil = val => val === undefined || val === null\n\n\n\n# padStart遮住字符串\n\npadStart(value, n, maskChar)\n\n\n参数\n\nvalue 要遮住字符串 n = 4 填充的长度 maskChar 填充字符\n\n示例\n\npadStart('18659808664')\n// => 1865*******\n\n\n源码\n\nconst padStart = (str, n = 4, maskChar = '*') => str.slice(0, n).padStart(str.length, maskChar)\n\n\n\n# thousands数字每隔三位数加分号\n\nthousands(number)\n\n\n参数\n\nnumber 数字或者浮点数\n\n示例\n\nthousands(12255552323)\n// => 12,255,552323\n\n\n源码\n\nconst thousands = num => num.toString().replace(num.toString().indexOf('.') > -1 ? /(\\d)(?=(\\d{3})+\\.)/g : /(\\d)(?=(\\d{3})+$)/g, '$1,')\n\n\n\n# 数字\n\n\n# randomNumber指定范围的随机整数\n\nrandomNumber(min, max)\n\n\n参数\n\nmin 指定范围最小值 max 指定范围最大值\n\n示例\n\nrandomNumber(0, 10)\n// => 7\n// => 2\n\n\n源码\n\nconst randomNumber = (min = 0, max = 10) => Math.floor(Math.random() * (max - min + 1)) + min\n\n\n\n# average求平均值\n\naverage(value1, value2, value3)\n\n\n参数\n\nvalue 数字\n\n示例\n\naverage(...[1, 2, 3])\naverage(1, 2, 3)\n// => 2\n\n\n源码\n\nconst average = (...nums) => nums.reduce((acc, val) => acc + val, 0) / nums.length\n\n\n\n# averageBy检查数组对象各项相等\n\naverageBy(array, fn)\n\n\n参数\n\narray 要迭代的数组 fn 迭代函数\n\n示例\n\naverageBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], o => o.n)\naverageBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], 'n')\n// => 5\n\n\n源码\n\nconst averageBy = (arr, fn) => arr.map(typeof fn === 'function' ? fn : val => val[fn]).reduce((acc, val) => acc + val, 0) / arr.length\n\n\n\n# aboutEqual两个值是否约等于\n\n传入两个数字是否大致相等，误差在可接受范围内\n\naboutEqual(n1, n2, epsilon)\n\n\n参数\n\nn1 n2 要比较的数字 epsilon 误差可接受范围内\n\n示例\n\naboutEqual(25, 2, 0.06)\n// => true\n\n\n源码\n\nconst aboutEqual = (n1, n2, epsilon = 0.001) => Math.abs(n1 - n2) < epsilon\n\n\n\n# getLineSize计算两点之间的距离\n\n勾股定理计算两点之间的距离\n\ngetLineSize = (x1, y1, x2, y2)\n\n\n参数\n\nx1 y1 x2 y2坐标点\n\n示例\n\ngetLineSize(0, 0, 3, 4)\n// => 5\n\n\n源码\n\nconst getLineSize = (x1, y1, x2, y2) => Math.hypot(x2 - x1, y2 - y1)\n\n\n\n# sum数组中值总和\n\nsum(value1, value2, value3)\n\n\n参数\n\nvalue1 value2 value3要迭代的数字\n\n示例\n\nsum(1, 2, 3, 4)\nsum(...[1, 2, 3, 4])\n// => 10\n\n\n源码\n\nconst sum = (...arr) => [...arr].reduce((acc, val) => acc + val, 0)\n\n\n\n# 浏览器\n\n\n# copyTextH5 复制文本\n\ncopyText(content, callback)\n\n\n参数\n\ncontent要复制文字 callback 回调用户提示\n\n示例\n\ncopyText(content, text => {\n    this.$toast(text)\n})\n\n\n源码\n\nfunction copyText(content, callback) {\n    if (!document.queryCommandSupported('copy')) {\n        //为了兼容有些浏览器 queryCommandSupported 的判断\n        console.log('浏览器不支持')\n        return\n    }\n    let textarea = document.createElement('textarea')\n    textarea.value = content\n    textarea.readOnly = 'readOnly'\n    document.body.appendChild(textarea)\n    textarea.select() // 选择对象\n    textarea.setSelectionRange(0, content.length) //核心\n    let result = document.execCommand('copy') // 执行浏览器复制命令\n    callback && callback(result ? '复制成功~~' : '复制失败~~')\n    textarea.remove()\n}\n\n\n\n# getCurrentURL获取当前的 URL 地址\n\n该函数返回当前页面的 URL 地址。\n\n示例\n\ngetCurrentURL()\n// => \"https://qqlcxgithub.io/\"\n\n\n源码\n\nconst getCurrentURL = () => window.location.href\n\n\n\n# scrollToTop返回顶部\n\n平滑地滚动到当前页面的顶部。\n\n示例\n\nscrollToTop()\n// => 当前页面的顶部\n\n\n源码\n\nconst scrollToTop = () => {\n    const c = document.documentElement.scrollTop || document.body.scrollTop\n    if (c > 0) {\n        window.requestAnimationFrame(scrollToTop)\n        window.scrollTo(0, c - c / 8)\n    }\n}\n\n\n\n# smoothScroll平滑滚动页面\n\n平滑滚动到浏览器窗口的可见区域\n\n示例\n\nsmoothScroll('#fooBar');\n// => 平滑滚动到ID为fooBar的元素\nsmoothScroll （'.fooBar' ）;\n// => 使用fooBar类平滑滚动到第一个元素\n\n\n源码\n\nconst smoothScroll = element =>\n    document.querySelector(element).scrollIntoView({\n        behavior: 'smooth'\n    })\n\n\n\n# isCurrentPage是否是当前页面\n\n浏览器的选项卡是否是用户在浏览\n\n示例\n\nisCurrentPage()\n// => true\n\n\n源码\n\nisCurrentPage = () => !document.hidden\n\n\n\n# 环境\n\n\n# isBrowser是否是浏览器\n\n返回当前运行时环境是否为浏览器\n\n示例\n\nisBrowser()\n// => true (browser)\n// => false (Node)\n\n\n源码\n\nconst isBrowser = () => ![typeof window, typeof document].includes('undefined')\n\n\n\n# isWechatBrowser判断微信浏览器还是普通 h5\n\n示例\n\nisWechatBrowser()\n// => true\n\n\n源码\n\nconst isWechatBrowser = (() => {\n    let ua = navigator.userAgent.toLowerCase()\n    return /micromessenger/.test(ua)\n})()\n\n\n\n# isMobile判断是否是移动端\n\n示例\n\nisMobile()\n// => true\n\n\n源码\n\nconst isMobile = () => /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)\n",normalizedContent:"# nutils-js 前端开发的工具类库\n\n> nutils-js官网 https://feyoudao.cn/nutils-js-site/\n\n\n\n🚀 nutils-js 是一个模块化、高性能的 javascript 工具类库。\n\n日常开发中难免遇到array object string number等数据处理 或者性能优化防抖节流函数或者url参数处理 类型判断 为避免不同项目复制粘贴代码的麻烦，将方法进行封装成工具库，并且发布在npm上，如果后续有更优的写法也会做进一步的更新。或者你有好的建议为本项目贡献一份力的话，欢迎为本项目提交 pr，一起探讨和交流。\n\n\n# ⬇️ 安装\n\nnpm i nutils-js\n\n\n\n# 🍻 使用\n\nconst nutils = require('nutils-js')\nnutils.multarray([1, 2, 3], 2)\n\n\n\n# 📦 api 文档\n\n\n# 数组\n\n * multarray二维数组转换\n * flatten扁平化数组\n * flattendeep指定层级扁平化数组\n * isarrayequal检查两个数组各项相等\n * allequal检查数组各项相等\n * diffarray具有唯一array值的数组\n * havearr具有共同array值的数组\n * uniquearray数组去重\n * uniquearrayobject数组对象去重\n * treedata生成树结构数据\n * ascarr数组升序\n * descarr数组降序\n * shuffle随机排序\n * takearray截取数组开始指定的元素\n * takelastarray截取数组最后指定的元素\n * clonearray克隆数组\n * maxarray数组中最大值\n * minarray数组中最小值\n * validarray去除数组中的无效值\n\n\n# 对象\n\n * isobjectequal检查两个对象各项值相等\n * cloneobject克隆对象\n\n\n# 函数\n\n * debounce函数防抖\n * throttle函数节流\n * typefn类型判断\n * calcfn加减乘除运算\n\n\n# 字符串\n\n * isnil值是否是null或undefined\n * padstart遮住字符串\n * thousands数字每隔三位数加分号\n\n\n# 数字\n\n * randomnumber指定范围的随机整数\n * average求平均值\n * averageby检查数组对象各项相等\n * aboutequal两个值是否约等于\n * getlinesize计算两点之间的距离\n * sum数组中值总和\n\n\n# 浏览器\n\n * copytexth5 复制文本\n * getcurrenturl获取当前的 url 地址\n * scrolltotop返回顶部\n * smoothscroll平滑滚动页面\n * iscurrentpage是否是当前页面\n\n\n# 环境\n\n * isbrowser是否是浏览器\n * iswechatbrowser判断微信浏览器还是普通 h5\n * ismobile判断是否是移动端\n\n\n# 数组\n\n\n# multarray二维数组转换\n\n将数组（array）拆分成多个子数组，并将这些子数组组成一个新数组。\n\nmultarray(array, count)\n\n\n参数\n\narray需要处理的数组 count = 1子数组需要的长度\n\n示例\n\nmultarray([1, 2, 3, 4, 5, 6, 7], 2)\n=> [[1, 2], [3, 4], [5, 6], [7]]\n\nmultarray(['a', 'b', 'c', 'd'], 3)\n=> [['a', 'b', 'c'], ['d']]\n\n\n源码\n\nfunction multarray(arr, count = 1) {\n    let pages = []\n    arr.foreach((item, index) => {\n        const page = math.floor(index / count)\n        if (!pages[page]) pages[page] = []\n        pages[page].push(item)\n    })\n    return pages\n}\n\n\n\n# flatten扁平化数组\n\n将多层嵌套数组（array）拆分成一个数组\n\nflatten(array)\n\n\n参数\n\narray多层嵌套数组\n\n示例\n\nflatten([1, [2], [3], [4, 5]])\n\n// [1, 2, 3, 4, 5]\n\n\n源码\n\n// 扁平化  map 方法\nconst flatten = arr => [].concat(...arr.map(v => (array.isarray(v) ? flatten(v) : v)))\n\n// 扁平化  reduce 方法\nconst flatten = arr => arr.reduce((a, c) => a.concat(array.isarray(c) ? flatten(c) : c), [])\n\n\n\n# flattendeep指定层级扁平化数组\n\n将多层嵌套数组（array）拆分成指定层级数组\n\nflattendeep(array, depth)\n\n\n参数\n\narray多层嵌套数组 depth = 减少的嵌套层级数\n\n示例\n\nflattendeep([1, [2, [3, [4]], 5]], 1)\n// => [1, 2, [3, [4]], 5]\n\n// es6方法 `flat(depth)`\n;[1, [2, [3, [4]], 5]].flat(1)\n// => [1, 2, [3, [4]], 5]\n\n\n源码\n\nconst flattendeep = (arr, depth = 1) => arr.reduce((a, v) => a.concat(depth > 1 && array.isarray(v) ? flatten(v, depth - 1) : v), [])\n\n\n\n# isarrayequal检查两个数组各项相等\n\n比较两个数组内的各项值是否相等，返回一个boolean值\n\nisarrayequal(array, array)\n\n\n参数\n\narray 要检查的数组 array 要检查的数组\n\n示例\n\nisarrayequal([6, 5, 2, 4, 1, 3], [1, 2, 3, 4, 5, 6])\n// => true\n\nisarrayequal([6, 5, 2, 7, 1, 3], [1, 2, 3, 4, 5, 6])\n// => false\n\n\n源码\n\nconst isarrayequal = (a, b, has = true) => {\n    if (a.length !== b.length) return (has = false)\n    const s = new set(b)\n    if (a.find(x => !s.has(x))) return (has = false)\n    return has\n}\n\n\n\n# allequal检查数组各项相等\n\nallequal(array)\n\n\n参数\n\narray 要检查的数组\n\n示例\n\nallequal([1, 2, 3, 4, 5, 6])\n// => false\n\nallequal([1, 1, 1, 1])\n// => true\n\n\n源码\n\nconst allequal = arr => arr.every(val => val === arr[0])\n\n\n\n# diffarray具有唯一array值的数组\n\n创建一个具有唯一 array 值的数组，每个值不包含在其他给定的数组中\n\ndiffarray(array, array2)\n\n\n参数\n\narray 要检查的数组 array2要排除的数组\n\n示例\n\ndiffarray([1, 2, 6, 7], [1, 2, 9, 5])\n// => [ 6, 7 ]\n\n\n源码\n\nconst diffarray = (a, b) => {\n    const s = new set(b)\n    let arr = a.filter(x => !s.has(x))\n    return arr\n}\n\n\n\n# havearr具有共同array值的数组\n\n创建一个具有共同 array 值的数组，每个值包含在其他给定的数组中\n\nhavearr(array, array2)\n\n\n参数\n\narray 要检查的数组 array2要包含的数组\n\n示例\n\nhavearr([1, 2, 6, 7], [1, 2, 9, 5])\n// => [ 1, 2 ]\n\n\n源码\n\nconst havearr = (a, b) => {\n    const s = new set(b)\n    return a.filter(x => s.has(x))\n}\n// es6 includes\nconst havearr = (arr, values) => arr.filter(v => values.includes(v))\n\n\n\n# uniquearray数组去重\n\n创建一个去重后的 array 数组副本\n\nuniquearray(array)\n\n\n参数\n\narray 要去重的数组\n\n示例\n\nuniquearray([1, 2, 2, 3, 4, 4, 5])\n// => [ 1, 2, 3, 4, 5 ]\n\n\n源码\n\nconst uniquearray = (...arr) => [...new set(arr)]\n\nconst uniquearray = (...arr) => array.from(new set(arr))\n\n\n\n# uniquearrayobject数组对象去重\n\n创建一个去重后的 array 数组对象副本\n\nuniquearrayobject(array)\n\n\n参数\n\narray 要去重的数组 key 要去重的对象属性值\n\n示例\n\nconst responselist = [\n    { id: 1, a: 1 },\n    { id: 2, a: 2 },\n    { id: 3, a: 3 },\n    { id: 1, a: 4 },\n    { id: 2, a: 2 },\n    { id: 3, a: 3 },\n    { id: 1, a: 4 },\n    { id: 2, a: 2 },\n    { id: 3, a: 3 },\n    { id: 1, a: 4 },\n    { id: 2, a: 2 },\n    { id: 3, a: 3 },\n    { id: 1, a: 4 }\n]\n\nuniquearrayobject(responselist, 'id')\n\n// => [ { id: 1, a: 1 }, { id: 2, a: 2 }, { id: 3, a: 3 } ]\n\n\n源码\n\nconst uniquearrayobject = (arr, key) => {\n    return arr.reduce((acc, cur) => {\n        const ids = acc.map(item => item[key])\n        return ids.includes(cur[key]) ? acc : [...acc, cur]\n    }, [])\n}\n\n\n\n# treedata生成树结构数据\n\n该函数传入一个数组， 每项id对应其父级数据parent_id，返回一个树结构数组\n\ntreedata(array, id, parent_id)\n\n\n参数\n\narray 要生成树结构的数组 id 自定义属性名 parent_id 父级自定义属性名\n\n示例\n\nconst comments = [\n    { id: 1, parent_id: null },\n    { id: 2, parent_id: 1 },\n    { id: 3, parent_id: 1 },\n    { id: 4, parent_id: 2 },\n    { id: 5, parent_id: 4 }\n]\n\ntreedata(comments)\n\n// => [ { id: 1, parent_id: null, children: [ [object], [object] ] } ]\n\n\n源码\n\nconst treedata = (arr, id = null, link = 'parent_id') => arr.filter(item => item[link] === id).map(item => ({ ...item, children: treedata(arr, item.id) }))\n\n\n\n# ascarr数组升序\n\n返回升序后的新数组\n\n> sort()方法会改变原数组，默认按 unicode 码顺序排列\n\nascarr(array)\n\n\n参数\n\narray 要检查的排序数组\n\n示例\n\nascarr([3, 2, 3, 4, 1])\n// => [ 1, 2, 3, 3, 4 ]\n\n\n源码\n\n// 通过es6 ...展开运算符浅拷贝一份新数组\nconst ascarr = arr => [...arr].sort((a, b) => a - b)\n\n\n\n# descarr数组降序\n\n返回降序后的新数组\n\ndescarr(array)\n\n\n参数\n\narray 要检查的排序数组\n\n示例\n\ndescarr([3, 2, 3, 4, 1])\n// => [ 1, 2, 3, 3, 4 ]\n\n\n源码\n\nconst descarr = arr => [...arr].sort((a, b) => b - a)\n\n\n\n# shuffle随机排序\n\n创建一个随机的数组，使用fisher-yates算法随机排序数组的元素\n\nshuffle(array)\n\n\n参数\n\narray 要随机的数组\n\n示例\n\nshuffle([2, 3, 1])\n// => [3, 1, 2]\n\n\n源码\n\nconst shuffle = ([...arr]) => {\n    let m = arr.length\n    while (m) {\n        const i = math.floor(math.random() * m--)\n        ;[arr[m], arr[i]] = [arr[i], arr[m]]\n    }\n    return arr\n}\n\n\n\n# takearray截取数组开始指定的元素\n\n从 array 数组的最开始一个元素开始提取 n 个元素\n\ntakearray(array, n)\n\n\n参数\n\narray要检索的数组。 n=要提取的元素n个数。\n\n示例\n\ntakearray([2, 3, 1], 2)\n// => [2, 3]\n\n\n源码\n\nconst takearray = (arr, n = 1) => arr.slice(0, n)\n\n\n\n# takelastarray截取数组最后指定的元素\n\n从 array 数组的最后一个元素开始提取 n 个元素\n\ntakelastarray(array, n)\n\n\n参数\n\narray要检索的数组。 n=要提取的元素n个数。\n\n示例\n\ntakearray([2, 3, 1], 2)\n// => [3, 1]\n\n\n源码\n\nconst takelastarray = (arr, n = 1) => arr.slice(0, -n)\n\n\n\n# clonearray克隆数组\n\n浅拷贝一份数组副本\n\nclonearray(array)\n\n\n参数\n\narray要复制的数组\n\n示例\n\nclonearray([1, 24])\n// => [1, 24]\n\n\n源码\n\n// es6 ...\nconst clonearray = arr => [...arr]\n\n// es6 array.from\nconst clonearray = arr => array.from(arr)\n\n// concat()\nconst clonearray = arr => [].concat(arr)\n\n// map()\nconst clonearray = arr => arr.map(x => x)\n\nclonearray([1, 24]) // [1, 24]\n\n\n\n# maxarray数组中最大值\n\n过滤原数组中所有的非假值元素，返回数组中的最大值\n\nmaxarray(array)\n\n\n参数\n\narray待处理的数组\n\n示例\n\nmaxarray([0, -1, -2, -3, false])\n// => 0\n\n\n源码\n\nconst maxarray = arr => math.max(...arr.filter(v => boolean(v) || v === 0))\n\n\n\n# minarray数组中最小值\n\n过滤原数组中所有的非假值元素，返回数组中的最小值\n\nminarray(array)\n\n\n参数\n\narray待处理的数组\n\n示例 js\n\nminarray([0, -1, -2, -3, false])\n// => -3\n\n\n源码\n\nconst minarray = (arr) => math.min(...arr.filter((v) => boolean(v) || v === 0));\n\n\n\n# validarray去除数组中的无效值\n\n创建一个新数组，包含原数组中所有的非假值元素。例如false, null,0, \"\", undefined, 和 nan 都是被认为是“假值”。\n\nvalidarray(array)\n\n\n参数\n\narray待处理的数组\n\n示例\n\nminarray([0, 1, false, 2, '', 3])\n// => [1, 2, 3]\n\n\n源码\n\nconst validarray = arr => arr.filter(boolean)\n\n\n\n# 对象\n\n\n# isobjectequal检查两个对象各项值相等\n\nisobjectequal(object, object2)\n\n\n参数\n\nobject待检索的对象 object2待检索的对象\n\n示例\n\nisobjectequal({ a: 2, b: 4 }, { b: 4, a: 2 })\n// => true\nisobjectequal({ a: 2, b: 4, c: 6 }, { b: 4, a: 2 })\n// => false\n\n\n源码\n\nfunction isobjectequal(obj1, obj2, has = true) {\n    // 判断类型\n    const o1 = obj1 instanceof object\n    const o2 = obj2 instanceof object\n    if (!o1 || !o2) return obj1 === obj2\n    // 判断长度\n    const keys1 = object.getownpropertynames(obj1)\n    const keys2 = object.getownpropertynames(obj2)\n    if (keyslength !== keyslength) return false\n    // 各项对比\n    for (let o in obj1) {\n        let t1 = obj1[o] instanceof object\n        let t2 = obj2[o] instanceof object\n        if (t1 && t2) {\n            has = diffbyobj(obj1[o], obj2[o])\n        } else if (obj1[o] !== obj2[o]) {\n            has = false\n            break\n        }\n    }\n    return has\n}\n\n\n\n# cloneobject克隆对象\n\n浅拷贝一份对象副本\n\ncloneobject(object)\n\n\n参数\n\nobject要复制的对象\n\n示例\n\nconst a = { x: 1, y: 1 }\nconst b = cloneobject(a)\n// => a !== b\n\n\n源码\n\n// es6 ...\nconst cloneobject = (obj, temp = {}) => (temp = { ...obj })\n\n// object.assign()\nconst cloneobject = obj => object.assign({}, obj)\n\n\n\n# 函数\n\n\n# debounce函数防抖\n\n在事件被触发 n 秒后再执行回调，如果在这 n 秒内又被触发，则重新计时。\n\ndebounce(fn, wait)\n\n\n参数\n\nfn 要防抖动的函数 wait=500需要延迟的毫秒数\n\n示例\n\ndebounce(()=> { console.log('debounce') }, 1000)\n// => 1秒后打印'debounce'\n\n\n源码\n\n/** *\n * 防抖\n * @parmas fn 回调函数\n * @parmas time 规定时间\n */\nconst debounce = (function () {\n    let timer = {}\n    return function (func, wait = 500) {\n        let context = this // 注意 this 指向\n        let args = arguments // arguments中存着e\n        let name = arguments[0].name || 'arrow' //箭头函数\n        if (timer[name]) cleartimeout(timer[name])\n        timer[name] = settimeout(() => {\n            func.apply(this, args)\n        }, wait)\n    }\n})()\n\n\n\n# throttle函数节流\n\n规定一个单位时间，在这个单位时间内，只能有一次触发事件的回调函数执行，如果在同一个单位时间内某事件被触发多次，只有一次能生效。\n\nthrottle(fn, wait)\n\n\n参数\n\nfn 要节流的函数 wait=500需要延迟的毫秒数\n\n示例\n\nthrottle(() => {\n    console.log('throttle')\n}, 1000)\n// 1秒多次触发打印一次`throttle`\n\n\n源码\n\n/** *\n * 节流(规定的时间才触发)\n * @parmas fn 结束完运行的回调\n * @parmas delay 规定时间\n */\nexport const throttle = (function () {\n    let timeout = null\n    return function (func, wait) {\n        let context = this\n        let args = arguments\n        if (!timeout) {\n            timeout = settimeout(() => {\n                timeout = null\n                func.apply(context, args)\n            }, wait)\n        }\n    }\n})()\n\nthrottle(fn, 300)\n\n\n\n# typefn类型判断\n\n判断是否是 array object string number类型\n\ntypefn.type(value)\n\n\n参数\n\ntype 数据类型 value要检验的值\n\n示例\n\ntypefn.string('1')\ntypefn.number(1)\ntypefn.boolean(false)\ntypefn.null(null)\ntypefn.array([1, 2])\ntypefn.object({ a: 1 })\ntypefn.function(() => {})\n\n// => true\n\n\n源码\n\nlet typefn = {}\nconst curring = (fn, arr = []) => {\n    let len = fn.length\n    return (...args) => {\n        arr = arr.concat(args)\n        if (arr.length < len) {\n            return curring(fn, arr)\n        }\n        return fn(...arr)\n    }\n}\n\nfunction istype(type, content) {\n    return object.prototype.tostring.call(content) === `[object ${type}]`\n}\n;['string', 'number', 'boolean', 'null', 'array', 'object', 'function'].foreach(type => {\n    typefn[type] = curring(istype)(type)\n})\n\n\n\n# calcfn加减乘除运算\n\n因为 javascript 遵循 ieee 754 数学标准，使用 64 位浮点数进行运算。在进行十进制运算时会导致精度丢失。\n\ncalcfn.add(value1, value2, value3)\n\n\n参数\n\nadd``sub``mul``div 运算符 value要计算的值\n\n示例\n\n解决 0.1+0.2 !== 0.3 问题\n//加法\ncalcfn.add(0.1, 0.2) // 0.3\n\n//减法\ncalcfn.sub(0.1, 0.2) // 0.1\n\n//乘法\ncalcfn.mul(0.2, 0.3) // 0.06\n\n// 乘法\ncalcfn.add(0.1, 0.2) // 0.5\n\n\n源码\n\nconst calcfn = {\n  add() {\n      let arg = array.from(arguments);\n      return arg.reduce((total, num) => {\n          return accadd(total, num);\n      });\b\n  },\n  sub() {\n      let arg = array.from(arguments);\n      return arg.reduce((total, num) => {\n          return accadd(total, -num);\n      });\n  },\n  mul() {\n      let arg = array.from(arguments);\n      return arg.reduce((total, num) => {\n          return accmul(total, num);\n      });\n  },\n  div() {\n      let arg = array.from(arguments);\n      return arg.reduce((total, num) => {\n          return accdiv(total, num);\n      });\n  }\n}\n\nfunction accadd(arg1, arg2) {\n  let r1, r2, m;\n  try {\n      r1 = argtostring().split(\".\")[1].length;\n  } catch (e) {\n      r1 = 0;\n  }\n  try {\n      r2 = argtostring().split(\".\")[1].length;\n  } catch (e) {\n      r2 = 0;\n  }\n  m = math.pow(10, math.max(r1, r2));\n  return (arg1 * m + arg2 * m) / m;\n}\n\nfunction accmul(arg1, arg2) {\n  let m = 0,\n      s1 = argtostring(),\n      s2 = argtostring();\n  try {\n      m += ssplit(\".\")[1].length;\n  } catch (e) {}\n  try {\n      m += ssplit(\".\")[1].length;\n  } catch (e) {}\n  return number(sreplace(\".\", \"\")) * number(sreplace(\".\", \"\")) / math.pow(10, m);\n}\n\nfunction accdiv(arg1, arg2) {\n  let t1 = 0,\n      t2 = 0,\n      r1, r2;\n  try {\n      t1 = argtostring().split(\".\")[1].length;\n  } catch (e) {}\n  try {\n      t2 = argtostring().split(\".\")[1].length;\n  } catch (e) {}\n  r1 = number(argtostring().replace(\".\", \"\"));\n  r2 = number(argtostring().replace(\".\", \"\"));\n  return (r1 / r2) * math.pow(10, t2 - t1);\n}\n\n\n\n# 字符串\n\n\n# isnil值是否是null或undefined\n\nisnil(value)\n\n\n参数\n\nvalue 要检验的值\n\n示例\n\nisnil(null)\nisnil(undefined)\n// => true\n\n\n源码\n\nconst isnil = val => val === undefined || val === null\n\n\n\n# padstart遮住字符串\n\npadstart(value, n, maskchar)\n\n\n参数\n\nvalue 要遮住字符串 n = 4 填充的长度 maskchar 填充字符\n\n示例\n\npadstart('18659808664')\n// => 1865*******\n\n\n源码\n\nconst padstart = (str, n = 4, maskchar = '*') => str.slice(0, n).padstart(str.length, maskchar)\n\n\n\n# thousands数字每隔三位数加分号\n\nthousands(number)\n\n\n参数\n\nnumber 数字或者浮点数\n\n示例\n\nthousands(12255552323)\n// => 12,255,552323\n\n\n源码\n\nconst thousands = num => num.tostring().replace(num.tostring().indexof('.') > -1 ? /(\\d)(?=(\\d{3})+\\.)/g : /(\\d)(?=(\\d{3})+$)/g, '$1,')\n\n\n\n# 数字\n\n\n# randomnumber指定范围的随机整数\n\nrandomnumber(min, max)\n\n\n参数\n\nmin 指定范围最小值 max 指定范围最大值\n\n示例\n\nrandomnumber(0, 10)\n// => 7\n// => 2\n\n\n源码\n\nconst randomnumber = (min = 0, max = 10) => math.floor(math.random() * (max - min + 1)) + min\n\n\n\n# average求平均值\n\naverage(value1, value2, value3)\n\n\n参数\n\nvalue 数字\n\n示例\n\naverage(...[1, 2, 3])\naverage(1, 2, 3)\n// => 2\n\n\n源码\n\nconst average = (...nums) => nums.reduce((acc, val) => acc + val, 0) / nums.length\n\n\n\n# averageby检查数组对象各项相等\n\naverageby(array, fn)\n\n\n参数\n\narray 要迭代的数组 fn 迭代函数\n\n示例\n\naverageby([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], o => o.n)\naverageby([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], 'n')\n// => 5\n\n\n源码\n\nconst averageby = (arr, fn) => arr.map(typeof fn === 'function' ? fn : val => val[fn]).reduce((acc, val) => acc + val, 0) / arr.length\n\n\n\n# aboutequal两个值是否约等于\n\n传入两个数字是否大致相等，误差在可接受范围内\n\naboutequal(n1, n2, epsilon)\n\n\n参数\n\nn1 n2 要比较的数字 epsilon 误差可接受范围内\n\n示例\n\naboutequal(25, 2, 0.06)\n// => true\n\n\n源码\n\nconst aboutequal = (n1, n2, epsilon = 0.001) => math.abs(n1 - n2) < epsilon\n\n\n\n# getlinesize计算两点之间的距离\n\n勾股定理计算两点之间的距离\n\ngetlinesize = (x1, y1, x2, y2)\n\n\n参数\n\nx1 y1 x2 y2坐标点\n\n示例\n\ngetlinesize(0, 0, 3, 4)\n// => 5\n\n\n源码\n\nconst getlinesize = (x1, y1, x2, y2) => math.hypot(x2 - x1, y2 - y1)\n\n\n\n# sum数组中值总和\n\nsum(value1, value2, value3)\n\n\n参数\n\nvalue1 value2 value3要迭代的数字\n\n示例\n\nsum(1, 2, 3, 4)\nsum(...[1, 2, 3, 4])\n// => 10\n\n\n源码\n\nconst sum = (...arr) => [...arr].reduce((acc, val) => acc + val, 0)\n\n\n\n# 浏览器\n\n\n# copytexth5 复制文本\n\ncopytext(content, callback)\n\n\n参数\n\ncontent要复制文字 callback 回调用户提示\n\n示例\n\ncopytext(content, text => {\n    this.$toast(text)\n})\n\n\n源码\n\nfunction copytext(content, callback) {\n    if (!document.querycommandsupported('copy')) {\n        //为了兼容有些浏览器 querycommandsupported 的判断\n        console.log('浏览器不支持')\n        return\n    }\n    let textarea = document.createelement('textarea')\n    textarea.value = content\n    textarea.readonly = 'readonly'\n    document.body.appendchild(textarea)\n    textarea.select() // 选择对象\n    textarea.setselectionrange(0, content.length) //核心\n    let result = document.execcommand('copy') // 执行浏览器复制命令\n    callback && callback(result ? '复制成功~~' : '复制失败~~')\n    textarea.remove()\n}\n\n\n\n# getcurrenturl获取当前的 url 地址\n\n该函数返回当前页面的 url 地址。\n\n示例\n\ngetcurrenturl()\n// => \"https://qqlcxgithub.io/\"\n\n\n源码\n\nconst getcurrenturl = () => window.location.href\n\n\n\n# scrolltotop返回顶部\n\n平滑地滚动到当前页面的顶部。\n\n示例\n\nscrolltotop()\n// => 当前页面的顶部\n\n\n源码\n\nconst scrolltotop = () => {\n    const c = document.documentelement.scrolltop || document.body.scrolltop\n    if (c > 0) {\n        window.requestanimationframe(scrolltotop)\n        window.scrollto(0, c - c / 8)\n    }\n}\n\n\n\n# smoothscroll平滑滚动页面\n\n平滑滚动到浏览器窗口的可见区域\n\n示例\n\nsmoothscroll('#foobar');\n// => 平滑滚动到id为foobar的元素\nsmoothscroll （'.foobar' ）;\n// => 使用foobar类平滑滚动到第一个元素\n\n\n源码\n\nconst smoothscroll = element =>\n    document.queryselector(element).scrollintoview({\n        behavior: 'smooth'\n    })\n\n\n\n# iscurrentpage是否是当前页面\n\n浏览器的选项卡是否是用户在浏览\n\n示例\n\niscurrentpage()\n// => true\n\n\n源码\n\niscurrentpage = () => !document.hidden\n\n\n\n# 环境\n\n\n# isbrowser是否是浏览器\n\n返回当前运行时环境是否为浏览器\n\n示例\n\nisbrowser()\n// => true (browser)\n// => false (node)\n\n\n源码\n\nconst isbrowser = () => ![typeof window, typeof document].includes('undefined')\n\n\n\n# iswechatbrowser判断微信浏览器还是普通 h5\n\n示例\n\niswechatbrowser()\n// => true\n\n\n源码\n\nconst iswechatbrowser = (() => {\n    let ua = navigator.useragent.tolowercase()\n    return /micromessenger/.test(ua)\n})()\n\n\n\n# ismobile判断是否是移动端\n\n示例\n\nismobile()\n// => true\n\n\n源码\n\nconst ismobile = () => /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(navigator.useragent)\n",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"13个JS一行代码，它们会让你看起来像个大佬",frontmatter:{title:"13个JS一行代码，它们会让你看起来像个大佬",date:"2022-03-16T17:29:23.000Z",permalink:"/pages/18fdc2/",categories:["前端开发","JavaScript"],tags:[null],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/06.JavaScript/05.13%E4%B8%AAJS%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%EF%BC%8C%E5%AE%83%E4%BB%AC%E4%BC%9A%E8%AE%A9%E4%BD%A0%E7%9C%8B%E8%B5%B7%E6%9D%A5%E5%83%8F%E4%B8%AA%E5%A4%A7%E4%BD%AC.html",relativePath:"02.开发/06.JavaScript/05.13个JS一行代码，它们会让你看起来像个大佬.md",key:"v-7f4c930a",path:"/pages/18fdc2/",headers:[{level:2,title:"1. 获取一个随机布尔值 (true/false)",slug:"_1-获取一个随机布尔值-true-false",normalizedTitle:"1. 获取一个随机布尔值 (true/false)",charIndex:68},{level:2,title:"2. 检查提供的日期是否为工作日",slug:"_2-检查提供的日期是否为工作日",normalizedTitle:"2. 检查提供的日期是否为工作日",charIndex:213},{level:2,title:"3.反转字符串",slug:"_3-反转字符串",normalizedTitle:"3.反转字符串",charIndex:269},{level:2,title:"4.检查当前选项卡是否在视图/焦点中",slug:"_4-检查当前选项卡是否在视图-焦点中",normalizedTitle:"4.检查当前选项卡是否在视图/焦点中",charIndex:341},{level:2,title:"5.检查一个数字是偶数还是奇数",slug:"_5-检查一个数字是偶数还是奇数",normalizedTitle:"5.检查一个数字是偶数还是奇数",charIndex:407},{level:2,title:"6. 从日期中获取时间",slug:"_6-从日期中获取时间",normalizedTitle:"6. 从日期中获取时间",charIndex:429},{level:2,title:"7.将数字截断为固定小数点",slug:"_7-将数字截断为固定小数点",normalizedTitle:"7.将数字截断为固定小数点",charIndex:512},{level:2,title:"8.检查元素当前是否处于焦点",slug:"_8-检查元素当前是否处于焦点",normalizedTitle:"8.检查元素当前是否处于焦点",charIndex:573},{level:2,title:"9. 检查当前用户是否支持触摸事件",slug:"_9-检查当前用户是否支持触摸事件",normalizedTitle:"9. 检查当前用户是否支持触摸事件",charIndex:639},{level:2,title:"10.检查当前用户是否在苹果设备上",slug:"_10-检查当前用户是否在苹果设备上",normalizedTitle:"10.检查当前用户是否在苹果设备上",charIndex:663},{level:2,title:"11. 滚动到页面顶部",slug:"_11-滚动到页面顶部",normalizedTitle:"11. 滚动到页面顶部",charIndex:731},{level:2,title:"12. 获取参数的平均值",slug:"_12-获取参数的平均值",normalizedTitle:"12. 获取参数的平均值",charIndex:835},{level:2,title:"13.转换华氏/摄氏",slug:"_13-转换华氏-摄氏",normalizedTitle:"13.转换华氏/摄氏",charIndex:892}],headersStr:"1. 获取一个随机布尔值 (true/false) 2. 检查提供的日期是否为工作日 3.反转字符串 4.检查当前选项卡是否在视图/焦点中 5.检查一个数字是偶数还是奇数 6. 从日期中获取时间 7.将数字截断为固定小数点 8.检查元素当前是否处于焦点 9. 检查当前用户是否支持触摸事件 10.检查当前用户是否在苹果设备上 11. 滚动到页面顶部 12. 获取参数的平均值 13.转换华氏/摄氏",content:"# 13个JS一行代码，它们会让你看起来像个大佬\n\n> 说明：本章内容译来源13-javascript，教程版权归原作者所有。\n\n\n# 1. 获取一个随机布尔值 (true/false)\n\n此函数将使用该Math.random()方法返回一个布尔值（真或假）。 Math.random将创建一个介于 0 和 1 之间的随机数，然后我们检查它是高于还是低于 0.5。这意味着有 50%/50% 的机会判断为真或假。\n\n\n\n\n# 2. 检查提供的日期是否为工作日\n\n使用此方法，您将能够检查您在函数中提供的日期是工作日还是周末。\n\n\n\n\n# 3.反转字符串\n\n有几种不同的方法可以反转字符串。split()这是使用、reverse()和方法的最简单的方法之一join()。\n\n\n\n\n# 4.检查当前选项卡是否在视图/焦点中\n\ndocument.hidden我们可以使用该属性检查当前选项卡是否在视图/焦点中。\n\n\n# 5.检查一个数字是偶数还是奇数\n\n\n\n\n# 6. 从日期中获取时间\n\n通过使用该.toTimeString()方法并在正确的位置对字符串进行切片，我们可以从我们提供的日期中获取时间，或者获取当前时间。\n\n\n# 7.将数字截断为固定小数点\n\n使用该Math.pow()方法，我们可以将数字截断到我们在函数中提供的某个小数点。\n\n\n# 8.检查元素当前是否处于焦点\n\ndocument.activeElement我们可以使用该属性检查元素当前是否处于焦点中。\n\n\n# 9. 检查当前用户是否支持触摸事件\n\n\n\n\n# 10.检查当前用户是否在苹果设备上\n\n我们可以navigator.platform用来检查当前用户是否在 Apple 设备上。\n\n\n# 11. 滚动到页面顶部\n\n该window.scrollTo()方法将采用 x 和 y 坐标滚动到。如果我们将它们设置为零和零，我们将滚动到页面顶部。 注意：IE 不支持 scrollTo() 方法。\n\n\n# 12. 获取参数的平均值\n\n我们可以使用 reduce 方法来获取我们在此函数中提供的参数的平均值。\n\n\n\n\n# 13.转换华氏/摄氏\n\n处理温度有时会令人困惑。这两个函数将帮助您将华氏温度转换为摄氏温度，反之亦然。",normalizedContent:"# 13个js一行代码，它们会让你看起来像个大佬\n\n> 说明：本章内容译来源13-javascript，教程版权归原作者所有。\n\n\n# 1. 获取一个随机布尔值 (true/false)\n\n此函数将使用该math.random()方法返回一个布尔值（真或假）。 math.random将创建一个介于 0 和 1 之间的随机数，然后我们检查它是高于还是低于 0.5。这意味着有 50%/50% 的机会判断为真或假。\n\n\n\n\n# 2. 检查提供的日期是否为工作日\n\n使用此方法，您将能够检查您在函数中提供的日期是工作日还是周末。\n\n\n\n\n# 3.反转字符串\n\n有几种不同的方法可以反转字符串。split()这是使用、reverse()和方法的最简单的方法之一join()。\n\n\n\n\n# 4.检查当前选项卡是否在视图/焦点中\n\ndocument.hidden我们可以使用该属性检查当前选项卡是否在视图/焦点中。\n\n\n# 5.检查一个数字是偶数还是奇数\n\n\n\n\n# 6. 从日期中获取时间\n\n通过使用该.totimestring()方法并在正确的位置对字符串进行切片，我们可以从我们提供的日期中获取时间，或者获取当前时间。\n\n\n# 7.将数字截断为固定小数点\n\n使用该math.pow()方法，我们可以将数字截断到我们在函数中提供的某个小数点。\n\n\n# 8.检查元素当前是否处于焦点\n\ndocument.activeelement我们可以使用该属性检查元素当前是否处于焦点中。\n\n\n# 9. 检查当前用户是否支持触摸事件\n\n\n\n\n# 10.检查当前用户是否在苹果设备上\n\n我们可以navigator.platform用来检查当前用户是否在 apple 设备上。\n\n\n# 11. 滚动到页面顶部\n\n该window.scrollto()方法将采用 x 和 y 坐标滚动到。如果我们将它们设置为零和零，我们将滚动到页面顶部。 注意：ie 不支持 scrollto() 方法。\n\n\n# 12. 获取参数的平均值\n\n我们可以使用 reduce 方法来获取我们在此函数中提供的参数的平均值。\n\n\n\n\n# 13.转换华氏/摄氏\n\n处理温度有时会令人困惑。这两个函数将帮助您将华氏温度转换为摄氏温度，反之亦然。",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"令人眼前一亮的Vue实战技巧",frontmatter:{title:"令人眼前一亮的Vue实战技巧",date:"2022-01-14T09:43:32.000Z",permalink:"/pages/8466b6/",categories:["Vue2"],tags:[null],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/07.Vue2/01.%E4%BB%A4%E4%BA%BA%E7%9C%BC%E5%89%8D%E4%B8%80%E4%BA%AE%E7%9A%84Vue%E5%AE%9E%E6%88%98%E6%8A%80%E5%B7%A7.html",relativePath:"02.开发/07.Vue2/01.令人眼前一亮的Vue实战技巧.md",key:"v-e6528c56",path:"/pages/8466b6/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:23},{level:2,title:"minxin 让组件复用灵活化",slug:"minxin-让组件复用灵活化",normalizedTitle:"minxin 让组件复用灵活化",charIndex:93},{level:2,title:"拯救繁乱的 template--render 函数",slug:"拯救繁乱的-template-render-函数",normalizedTitle:"拯救繁乱的 template--render 函数",charIndex:5328},{level:2,title:"一劳永逸的组件注册",slug:"一劳永逸的组件注册",normalizedTitle:"一劳永逸的组件注册",charIndex:6225},{level:2,title:"隐藏的大招--hook",slug:"隐藏的大招-hook",normalizedTitle:"隐藏的大招--hook",charIndex:7642},{level:2,title:"简单暴力的 router key",slug:"简单暴力的-router-key",normalizedTitle:"简单暴力的 router key",charIndex:8854},{level:2,title:"高精度权限控制--自定义指令 directive",slug:"高精度权限控制-自定义指令-directive",normalizedTitle:"高精度权限控制--自定义指令 directive",charIndex:9337},{level:2,title:"动态指令参数",slug:"动态指令参数",normalizedTitle:"动态指令参数",charIndex:10443},{level:2,title:"过滤器让数据处理更便利",slug:"过滤器让数据处理更便利",normalizedTitle:"过滤器让数据处理更便利",charIndex:11068},{level:3,title:"1.理解过滤器",slug:"_1-理解过滤器",normalizedTitle:"1.理解过滤器",charIndex:11136},{level:3,title:"2.定义过滤器",slug:"_2-定义过滤器",normalizedTitle:"2.定义过滤器",charIndex:11255},{level:3,title:"3.使用过滤器",slug:"_3-使用过滤器",normalizedTitle:"3.使用过滤器",charIndex:11635},{level:2,title:"参考文章与书籍",slug:"参考文章与书籍",normalizedTitle:"参考文章与书籍",charIndex:12418}],headersStr:"前言 minxin 让组件复用灵活化 拯救繁乱的 template--render 函数 一劳永逸的组件注册 隐藏的大招--hook 简单暴力的 router key 高精度权限控制--自定义指令 directive 动态指令参数 过滤器让数据处理更便利 1.理解过滤器 2.定义过滤器 3.使用过滤器 参考文章与书籍",content:'# 令人眼前一亮的 Vue 实战技巧\n\n\n# 前言\n\n本文主要介绍日常项目开发过程中的一些技巧，不仅可以帮助提升工作效率，还能提高应用的性能。以下是我总结一些平时工作中的经验。\n\n\n# minxin 让组件复用灵活化\n\nVue 提供了 minxin 这种在组件内插入组件属性的方法，个人建议这货能少用就少用，但是有个场景则非常建议使用 minxin：当某段代码重复出现在多个组件中，并且这个重复的代码块很大的时候，将其作为一个 minxin 常常能给后期的维护带来很大的方便。\n\n这是项目中封装一个列表功能，有下拉刷新，加载自动请求数据，上拉加载下一页数据等等，它是这样的\n\n看不懂没关系我只是开发中举了一个例子\n\nexport default {\n    data() {\n        return {\n            page: 1,\n            limit: 10,\n            busy: false, // 请求拦截，防止多次加载\n            finish: false, // 是否请求完成，用于页面展示效果\n            pageList: [], // 页面数据\n            reqParams: {}, // 页面请求参数，可被改变的\n            defaultParams: {}, // 页面请求参数，下拉刷新不会被重置的改变\n            routeName: \'\', // 特殊情况，页面需要复用别人的list的时候\n            autoReq: true, // onload是否自己去请求\n            lodingText: \'\', // 请求中底部显示的文案\n            noDataText: \'暂无数据\', // 自定义无数据文案\n            lastText: \'- 我是有底线的 -\',\n            noData: false, // 页面无数据\n            reqName: \'\'\n        }\n    },\n    created() {\n        this.autoReq && this.initPage(false, true)\n    },\n    onPullDownRefresh() {\n        this.pullDownRefreshFn()\n    },\n    onReachBottom() {\n        this.reachBottomFn()\n    },\n    methods: {\n        // 重置初始化数据\n        initPage(saveParams = true, refresh = false) {\n            // 初始化所有变量\n            this.page = 1\n            this.busy = false\n            this.finish = false\n            this.noData = false\n            this.lodingText = \'数据加载中\'\n            if (saveParams) {\n                const { page, limit } = this.reqParams\n                page ? (this.page = page) : \'\'\n                limit ? (this.limit = limit) : \'\'\n            } else {\n                this.reqParams = {}\n            }\n            this.getCommonList(refresh)\n        },\n        // 下拉刷新函数\n        pullDownRefreshFn() {\n            this.initData()\n            this.initPage(false, true)\n        },\n        // 上啦加载函数\n        reachBottomFn() {\n            this.getCommonList()\n        },\n        // 重置数据,方便调用（一般在外面自定义清空一些数据）\n        initData() {\n            // 重置data里面的变量，方便外面引用这个mixin的时候，下拉刷新重置变量\n        },\n        // 列表获取数据接口\n        async getCommonList(refresh) {\n            if (!this.reqName) return\n            if (this.busy) return\n            this.busy = true\n            this.finish = false\n            const httpFn = this.$http || getApp().globalData.$http // 兼容nvue\n            try {\n                const query = {\n                    ...this.defaultParams,\n                    ...this.reqParams,\n                    page: this.page,\n                    limit: this.limit\n                }\n                const { data } = await httpFn(this.reqName, query)\n                if (this.page === 1) this.pageList = []\n                /**\n                 * [Node.JS中用concat和push连接两个或多个数组的性能比较](http://ourjs.com/detail/5cb3fe1c44b4031138b4a1e2)\n                 * 那么两者在node.js的性能如何？ 我们做了一组测试数据，两种分别测试100万次。\n                 * push比concat方法快3倍左右。因为push只是在原数组的基础上进行修改，所以会快一点。\n                 * push返回的是数组的长度，所以没重新定义变量再判断了\n                 * [Array.prototype.push.apply(arr1, arr2)无法自动触发DOM更新](https://www.imooc.com/wenda/detail/494323)\n                 * 因为 this.pageList.push !== Array.prototype.push,，this.pageList.push指向的是vue重写过的方法\n                 */\n                this.finish = true\n                const resLen = data.list ? data.list.length : 0\n                if (resLen === 0) {\n                    this.resSuccess(data, refresh)\n                    return\n                }\n                const listLen = this.pageList.push.apply(this.pageList, data.list)\n                if (listLen < data.count && this.limit <= resLen) {\n                    // 说明还有数据\n                    this.busy = false\n                    this.page = Math.ceil(listLen / this.limit) + 1\n                }\n                this.resSuccess(data, refresh)\n            } catch (e) {\n                // 防止接口报错锁死\n                this.busy = false\n                this.finish = true\n            }\n        },\n        resSuccess(data, refresh) {\n            if (this.finish && this.busy) {\n                if (this.pageList.length > 0) {\n                    this.$nextTick(() => {\n                        setTimeout(() => {\n                            this.lodingText = this.lastText\n                        }, 100)\n                    })\n                } else {\n                    this.lodingText = this.noDataText\n                    this.noData = true\n                }\n            }\n            refresh && uni.stopPullDownRefresh()\n            this.finishInit(data)\n        },\n        // 请求完成做点什么（方便外面导入的文件自己引用）\n        finishInit(data) {\n            // 请求完成做点什么\n            // console.log(\'列表请求完成\');\n        }\n    }\n}\n\n\n很多人看到着应该很好奇为什么不封装成一个组件，但是由于很多列表样式不尽相同，所以封装成一个组件可扩展性不高。 现在我们可以这样使用。\n\n<template>\n    <view class="c-recommend-goods">\n        \x3c!-- 列表样式 --\x3e\n        <view class="" v-for="item in pageList" :key="item.id">{{ item }}</view>\n        \x3c!-- 空状态&& 加载中等小提示 --\x3e\n        <c-no-data v-if="lodingText" :show-img="noData" :text="lodingText"></c-no-data>\n    </view>\n</template>\n\n<script>\nimport listMixins from \'@/common/mixins/list.js\'\nexport default {\n    mixins: [listMixins],\n    data() {\n        return {\n            autoReq: false, // 进入页面自动请求数据\n            reqParams: {}, // 请求参数\n            reqName: \'userCompanyList\' // 请求地址\n        }\n    }\n}\n<\/script>\n\n<style></style>\n\n\n我们只要定义请求参数和请求的地址，还有列表的样式，就能实现一个不错的列表功能。\n\n\n# 拯救繁乱的 template--render 函数\n\n * template 里存在一值多判断\n * 代码冗亲，代码杂乱\n\n举一个官方文档的例子\n\n<template>\n  <div>\n    <h1 v-if="level === 1">\n      <slot></slot>\n    </h1>\n    <h2 v-else-if="level === 2">\n      <slot></slot>\n    </h2>\n    <h3 v-else-if="level === 3">\n      <slot></slot>\n    </h3>\n    <h4 v-else-if="level === 4">\n      <slot></slot>\n    </h4>\n    <h5 v-else-if="level === 5">\n      <slot></slot>\n    </h5>\n    <h6 v-else-if="level === 6">\n      <slot></slot>\n    </h6>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {}\n  },\n  props: {\n    level: {\n      type: Number,\n      required: true,\n    },\n  },\n}\n<\/script>\n\n\n现在使用 render 函数重写上面的例子：\n\n<script>\n  export default {\n    props: {\n      level: {\n        require: true,\n        type: Number,\n      }\n    },\n    render(createElement) {\n      return createElement(\'h\' + this.level, this.$slots.default);\n    }\n  };\n<\/script>\n\n\n\n# 一劳永逸的组件注册\n\n组件使用前，需要引入后再注册：\n\nimport BaseButton from \'./baseButton\'\nimport BaseIcon from \'./baseIcon\'\nimport BaseInput from \'./baseInput\'\n\nexport default {\n  components: {\n    BaseButton,\n    BaseIcon,\n    BaseInput\n  }\n}\n\n\n现在 BaseButton、 BaseIcon 和 BaseInput 都可以在模板中使用了：\n\n<BaseInput\n  v-model="searchText"\n  @keydown.enter="search"\n/>\n<BaseButton @click="search">\n  <BaseIcon name="search"/>\n</BaseButton>\n\n\n但如果组件多了后，每次都要先导入每个你想使用的组件，然后再注册组件，便会新增很多代码量！我们应该如何优化呢？\n\n这时，我们需要借助一下 webpack 的 require.context() 方法来创建自己的（模块）上下文，从而实现自动动态 require 组件。这个方法需要 3 个参数：要搜索的文件夹目录，是否还应该搜索它的子目录，以及一个匹配文件的正则表达式。\n\n我们先在 components 文件夹（这里面都是些高频组件）添加一个叫 global.js 的文件，在这个文件里使用 require.context 动态将需要的高频组件统统打包进来。然后在 main.js 文件中引入 global.js 的文件。\n\n//  global.js文件\nimport Vue from \'vue\'\nfunction changeStr (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\nconst requireComponent = require.context(\'./\', false, /\\.vue$/)\n// 查找同级目录下以vue结尾的组件\nconst install = () => {\n  requireComponent.keys().forEach(fileName => {\n    let config = requireComponent(fileName)\n    console.log(config) // ./child1.vue 然后用正则拿到child1\n    let componentName = changeStr(\n      fileName.replace(/^\\.\\//, \'\').replace(/\\.\\w+$/, \'\')\n    )\n    Vue.component(componentName, config.default || config)\n  })\n}\nexport default {\n  install // 对外暴露install方法\n}\n\n\n// main.js\nimport index from \'./components/global.js\'\nVue.use(index)\n\n\n最后我们就可以随时随地在页面中使用这些高频组件，无需再手动一个个引入了。\n\n\n# 隐藏的大招--hook\n\n开发过程中我们有时候要创建一个定时器，在组件被销毁之前，这个定时器也要销毁。代码如下：\n\nmounted() {\n  // 创建一个定时器\n    this.timer = setInterval(() => {\n      // ......\n    }, 500);\n  },\n  // 销毁这个定时器。\n  beforeDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = null;\n    }\n  }\n\n\n这种写法有个很明显的弊端：定时器 timer 的创建和清理并不是在一个地方，这样很容易导致忘记去清理！\n\n我们可以借助 hook 对代码整合，这样代码也更容易维护了：\n\nmounted() {\n    let timer = setInterval(() => {\n      // ......\n    }, 500);\n    this.$once("hook:beforeDestroy", function() {\n      if (timer) {\n        clearInterval(timer);\n        timer = null;\n      }\n    });\n  }\n\n\n在 Vue 组件中，可以用过$on,$once 去监听所有的生命周期钩子函数，如监听组件的 updated 钩子函数可以写成 this.$on(\'hook:updated\', () => {})。\n\nhook 除了上面的运用外，还可以外部监听组件的生命周期函数。在某些情况下，我们需要在父组件中了解一个子组件何时被创建、挂载或更新。\n\n比如，如果你要在第三方组件 CustomSelect 渲染时监听其 updated 钩子，可以通过@hook:updated来实现：\n\n<template>\n  \x3c!--通过@hook:updated监听组件的updated生命钩子函数--\x3e\n  \x3c!--组件的所有生命周期钩子都可以通过@hook:钩子函数名 来监听触发--\x3e\n  <custom-select @hook:updated="doSomething" />\n</template>\n<script>\nimport CustomSelect from "../components/custom-select";\nexport default {\n  components: {\n    CustomSelect\n  },\n  methods: {\n    doSomething() {\n      console.log("custom-select组件的updated钩子函数被触发");\n    }\n  }\n};\n<\/script>\n\n\n\n# 简单暴力的 router key\n\n我们在项目开发时，可能会遇到这样问题:当页面切换到同一个路由但不同参数地址时，比如/detail/1，跳转到/detail/2，页面跳转后数据竟然没更新？路由配置如下：\n\n {\n     path: "/detail/:id",\n     name:"detail",\n     component: Detail\n }\n\n\n这是因为 vue-router 会识别出两个路由使用的是同一个组件从而进行复用，并不会重新创建组件，而且组件的生命周期钩子自然也不会被触发，导致跳转后数据没有更新。那我们如何解决这个问题呢？ 我们可以为 router-view 组件添加属性 key,例子如下：\n\n<router-view :key="$route.fullpath"></router-view>\n\n\n这种办法主要是利用虚拟 DOM 在渲染时候通过 key 来对比两个节点是否相同，如果 key 不相同，就会判定 router-view 组件是一个新节点，从而先销毁组件，然后再重新创建新组件，这样组件内的生命周期会重新触发。\n\n\n# 高精度权限控制--自定义指令 directive\n\n我们通常给一个元素添加 v-if / v-show，来判断该用户是否有权限，但如果判断条件繁琐且多个地方需要判断，这种方式的代码不仅不优雅而且冗余。针对这种情况，我们可以封装了一个指令权限，能简单快速的实现按钮级别的权限判断。 我们先在新建个 array.js 文件，用于存放与权限相关的全局函数\n\n// array.js\nexport function checkArray(key) {\n    let arr = [\'admin\', \'editor\']\n    let index = arr.indexOf(key)\n    if (index > -1) {\n        return true // 有权限\n    } else {\n        return false // 无权限\n    }\n}\n\n\n然后在将 array 文件挂载到全局中\n\n// main.js\nimport { checkArray } from \'./common/array\'\nVue.config.productionTip = false\nVue.directive(\'permission\', {\n    inserted(el, binding) {\n        let permission = binding.value // 获取到 v-permission的值\n        if (permission) {\n            let hasPermission = checkArray(permission)\n            if (!hasPermission) {\n                // 没有权限 移除Dom元素\n                el.parentNode && el.parentNode.removeChild(el)\n            }\n        }\n    }\n})\n\n\n最后我们在页面中就可以通过自定义指令 v-permission 来判断：\n\n<div class="btns">\n    <button v-permission="\'admin\'">权限按钮1</button> // 会显示\n    <button v-permission="\'visitor\'">权限按钮2</button> //无显示\n    <button v-permission="\'editor\'">权限按钮3</button> // 会显示\n</div>\n\n\n\n\n\n# 动态指令参数\n\nVue 2.6 的最酷功能之一是可以将指令参数动态传递给组件。我们可以用方括号括起来的 JavaScript 表达式作为一个指令的参数：\n\n<a v-bind:[attributeName]="url"> 这是个链接 </a>\n\n\n这里的 attributeName 会被作为一个 JavaScript 表达式进行动态求值，求得的值将会作为最终的参数来使用。 同样地，你可以使用动态参数为一个动态的事件名绑定处理函数：\n\n<a v-on:[eventName]="doSomething"> 这是个链接 </a>\n\n\n接下来我们看个例子：假设你有一个按钮，在某些情况下想监听单击事件，在某些情况下想监听双击事件。这时动态指令参数派上用场：\n\n<template>\n  <div>\n    <aButton @[someEvent]="handleSomeEvent()" />\n  </div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      someEvent: someCondition ? "click" : "dbclick"\n    }\n  },\n  methods: {\n    handleSomeEvent () {\n      // handle some event\n    }\n  }\n}\n<\/script>\n\n\n\n# 过滤器让数据处理更便利\n\nVue.js 允许你自定义过滤器，它的用法其实是很简单，但是可能有些朋友没有用过，接下来我们介绍下：\n\n\n# 1.理解过滤器\n\n * 功能：对要显示的数据进行特定格式化后再显示。\n * 注意：过滤器并没有改变原本的数据，需要对展现的数据进行包装。\n * 使用场景：双花括号插值和 v-bind 表达式 (后者从 2.1.0+ 开始支持)。\n\n\n# 2.定义过滤器\n\n可以在一个组件的选项中定义本地的过滤器：\n\nfilters: {\n  capitalize: function (value) {\n    if (!value) return \'\'\n    value = value.toString()\n    return value.charAt(0).toUpperCase() + value.slice(1)\n  }\n}\n\n\n也可以在创建 Vue 实例之前全局定义过滤器：\n\nVue.filter(\'capitalize\', function (value) {\n  if (!value) return \'\'\n  value = value.toString()\n  return value.charAt(0).toUpperCase() + value.slice(1)\n})\n\n\n\n# 3.使用过滤器\n\n使用方法也简单，即在双花括号中使用管道符(pipeline) |隔开\n\n\x3c!-- 在双花括号中 --\x3e\n<div>{{ myData| filterName}}</div>\n<div>{{ myData| filterName(arg)}}</div>\n\x3c!-- 在 v-bind 中 --\x3e\n<div v-bind:id="rawId | formatId"></div>\n\n\n过滤器可以串联：\n\n{{ message | filterA | filterB }}\n\n\n在这个例子中，filterA 被定义为接收单个参数的过滤器函数，表达式 message 的值将作为参数传入到函数中。然后继续调用同样被定义为接收单个参数的过滤器函数 filterB，将 filterA 的结果传递到 filterB 中。 接下来我们看个如何使用过滤器格式化日期的例子：\n\n <div>\n    <h2>显示格式化的日期时间</h2>\n    <p>{{ date }}</p>\n    <p>{{ date | filterDate }}</p>\n    <p>年月日: {{ date | filterDate("YYYY-MM-DD") }}</p>\n </div>\n ......\n  filters: {\n    filterDate(value, format = "YYYY-MM-DD HH:mm:ss") {\n      console.log(this)//undefined 过滤器没有this指向的\n      return moment(value).format(format);\n    }\n  },\n  data() {\n    return {\n      date: new Date()\n    };\n  }\n\n\n\n\n\n# 参考文章与书籍\n\n * Vue 官方文档\n * Vue2.6 查漏补缺\n * Vue.js 最佳实践（五招让你成为 Vue.js 大师)\n * 实战技巧，Vue 原来还可以这样写\n * 使用 Vue.observable()进行状态管理\n * Vue 项目构建与开发入门\n * 2020 年的 12 个 Vue.js 开发技巧和窍门',normalizedContent:'# 令人眼前一亮的 vue 实战技巧\n\n\n# 前言\n\n本文主要介绍日常项目开发过程中的一些技巧，不仅可以帮助提升工作效率，还能提高应用的性能。以下是我总结一些平时工作中的经验。\n\n\n# minxin 让组件复用灵活化\n\nvue 提供了 minxin 这种在组件内插入组件属性的方法，个人建议这货能少用就少用，但是有个场景则非常建议使用 minxin：当某段代码重复出现在多个组件中，并且这个重复的代码块很大的时候，将其作为一个 minxin 常常能给后期的维护带来很大的方便。\n\n这是项目中封装一个列表功能，有下拉刷新，加载自动请求数据，上拉加载下一页数据等等，它是这样的\n\n看不懂没关系我只是开发中举了一个例子\n\nexport default {\n    data() {\n        return {\n            page: 1,\n            limit: 10,\n            busy: false, // 请求拦截，防止多次加载\n            finish: false, // 是否请求完成，用于页面展示效果\n            pagelist: [], // 页面数据\n            reqparams: {}, // 页面请求参数，可被改变的\n            defaultparams: {}, // 页面请求参数，下拉刷新不会被重置的改变\n            routename: \'\', // 特殊情况，页面需要复用别人的list的时候\n            autoreq: true, // onload是否自己去请求\n            lodingtext: \'\', // 请求中底部显示的文案\n            nodatatext: \'暂无数据\', // 自定义无数据文案\n            lasttext: \'- 我是有底线的 -\',\n            nodata: false, // 页面无数据\n            reqname: \'\'\n        }\n    },\n    created() {\n        this.autoreq && this.initpage(false, true)\n    },\n    onpulldownrefresh() {\n        this.pulldownrefreshfn()\n    },\n    onreachbottom() {\n        this.reachbottomfn()\n    },\n    methods: {\n        // 重置初始化数据\n        initpage(saveparams = true, refresh = false) {\n            // 初始化所有变量\n            this.page = 1\n            this.busy = false\n            this.finish = false\n            this.nodata = false\n            this.lodingtext = \'数据加载中\'\n            if (saveparams) {\n                const { page, limit } = this.reqparams\n                page ? (this.page = page) : \'\'\n                limit ? (this.limit = limit) : \'\'\n            } else {\n                this.reqparams = {}\n            }\n            this.getcommonlist(refresh)\n        },\n        // 下拉刷新函数\n        pulldownrefreshfn() {\n            this.initdata()\n            this.initpage(false, true)\n        },\n        // 上啦加载函数\n        reachbottomfn() {\n            this.getcommonlist()\n        },\n        // 重置数据,方便调用（一般在外面自定义清空一些数据）\n        initdata() {\n            // 重置data里面的变量，方便外面引用这个mixin的时候，下拉刷新重置变量\n        },\n        // 列表获取数据接口\n        async getcommonlist(refresh) {\n            if (!this.reqname) return\n            if (this.busy) return\n            this.busy = true\n            this.finish = false\n            const httpfn = this.$http || getapp().globaldata.$http // 兼容nvue\n            try {\n                const query = {\n                    ...this.defaultparams,\n                    ...this.reqparams,\n                    page: this.page,\n                    limit: this.limit\n                }\n                const { data } = await httpfn(this.reqname, query)\n                if (this.page === 1) this.pagelist = []\n                /**\n                 * [node.js中用concat和push连接两个或多个数组的性能比较](http://ourjs.com/detail/5cb3fe1c44b4031138b4a1e2)\n                 * 那么两者在node.js的性能如何？ 我们做了一组测试数据，两种分别测试100万次。\n                 * push比concat方法快3倍左右。因为push只是在原数组的基础上进行修改，所以会快一点。\n                 * push返回的是数组的长度，所以没重新定义变量再判断了\n                 * [array.prototype.push.apply(arr1, arr2)无法自动触发dom更新](https://www.imooc.com/wenda/detail/494323)\n                 * 因为 this.pagelist.push !== array.prototype.push,，this.pagelist.push指向的是vue重写过的方法\n                 */\n                this.finish = true\n                const reslen = data.list ? data.list.length : 0\n                if (reslen === 0) {\n                    this.ressuccess(data, refresh)\n                    return\n                }\n                const listlen = this.pagelist.push.apply(this.pagelist, data.list)\n                if (listlen < data.count && this.limit <= reslen) {\n                    // 说明还有数据\n                    this.busy = false\n                    this.page = math.ceil(listlen / this.limit) + 1\n                }\n                this.ressuccess(data, refresh)\n            } catch (e) {\n                // 防止接口报错锁死\n                this.busy = false\n                this.finish = true\n            }\n        },\n        ressuccess(data, refresh) {\n            if (this.finish && this.busy) {\n                if (this.pagelist.length > 0) {\n                    this.$nexttick(() => {\n                        settimeout(() => {\n                            this.lodingtext = this.lasttext\n                        }, 100)\n                    })\n                } else {\n                    this.lodingtext = this.nodatatext\n                    this.nodata = true\n                }\n            }\n            refresh && uni.stoppulldownrefresh()\n            this.finishinit(data)\n        },\n        // 请求完成做点什么（方便外面导入的文件自己引用）\n        finishinit(data) {\n            // 请求完成做点什么\n            // console.log(\'列表请求完成\');\n        }\n    }\n}\n\n\n很多人看到着应该很好奇为什么不封装成一个组件，但是由于很多列表样式不尽相同，所以封装成一个组件可扩展性不高。 现在我们可以这样使用。\n\n<template>\n    <view class="c-recommend-goods">\n        \x3c!-- 列表样式 --\x3e\n        <view class="" v-for="item in pagelist" :key="item.id">{{ item }}</view>\n        \x3c!-- 空状态&& 加载中等小提示 --\x3e\n        <c-no-data v-if="lodingtext" :show-img="nodata" :text="lodingtext"></c-no-data>\n    </view>\n</template>\n\n<script>\nimport listmixins from \'@/common/mixins/list.js\'\nexport default {\n    mixins: [listmixins],\n    data() {\n        return {\n            autoreq: false, // 进入页面自动请求数据\n            reqparams: {}, // 请求参数\n            reqname: \'usercompanylist\' // 请求地址\n        }\n    }\n}\n<\/script>\n\n<style></style>\n\n\n我们只要定义请求参数和请求的地址，还有列表的样式，就能实现一个不错的列表功能。\n\n\n# 拯救繁乱的 template--render 函数\n\n * template 里存在一值多判断\n * 代码冗亲，代码杂乱\n\n举一个官方文档的例子\n\n<template>\n  <div>\n    <h1 v-if="level === 1">\n      <slot></slot>\n    </h1>\n    <h2 v-else-if="level === 2">\n      <slot></slot>\n    </h2>\n    <h3 v-else-if="level === 3">\n      <slot></slot>\n    </h3>\n    <h4 v-else-if="level === 4">\n      <slot></slot>\n    </h4>\n    <h5 v-else-if="level === 5">\n      <slot></slot>\n    </h5>\n    <h6 v-else-if="level === 6">\n      <slot></slot>\n    </h6>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {}\n  },\n  props: {\n    level: {\n      type: number,\n      required: true,\n    },\n  },\n}\n<\/script>\n\n\n现在使用 render 函数重写上面的例子：\n\n<script>\n  export default {\n    props: {\n      level: {\n        require: true,\n        type: number,\n      }\n    },\n    render(createelement) {\n      return createelement(\'h\' + this.level, this.$slots.default);\n    }\n  };\n<\/script>\n\n\n\n# 一劳永逸的组件注册\n\n组件使用前，需要引入后再注册：\n\nimport basebutton from \'./basebutton\'\nimport baseicon from \'./baseicon\'\nimport baseinput from \'./baseinput\'\n\nexport default {\n  components: {\n    basebutton,\n    baseicon,\n    baseinput\n  }\n}\n\n\n现在 basebutton、 baseicon 和 baseinput 都可以在模板中使用了：\n\n<baseinput\n  v-model="searchtext"\n  @keydown.enter="search"\n/>\n<basebutton @click="search">\n  <baseicon name="search"/>\n</basebutton>\n\n\n但如果组件多了后，每次都要先导入每个你想使用的组件，然后再注册组件，便会新增很多代码量！我们应该如何优化呢？\n\n这时，我们需要借助一下 webpack 的 require.context() 方法来创建自己的（模块）上下文，从而实现自动动态 require 组件。这个方法需要 3 个参数：要搜索的文件夹目录，是否还应该搜索它的子目录，以及一个匹配文件的正则表达式。\n\n我们先在 components 文件夹（这里面都是些高频组件）添加一个叫 global.js 的文件，在这个文件里使用 require.context 动态将需要的高频组件统统打包进来。然后在 main.js 文件中引入 global.js 的文件。\n\n//  global.js文件\nimport vue from \'vue\'\nfunction changestr (str) {\n  return str.charat(0).touppercase() + str.slice(1)\n}\nconst requirecomponent = require.context(\'./\', false, /\\.vue$/)\n// 查找同级目录下以vue结尾的组件\nconst install = () => {\n  requirecomponent.keys().foreach(filename => {\n    let config = requirecomponent(filename)\n    console.log(config) // ./child1.vue 然后用正则拿到child1\n    let componentname = changestr(\n      filename.replace(/^\\.\\//, \'\').replace(/\\.\\w+$/, \'\')\n    )\n    vue.component(componentname, config.default || config)\n  })\n}\nexport default {\n  install // 对外暴露install方法\n}\n\n\n// main.js\nimport index from \'./components/global.js\'\nvue.use(index)\n\n\n最后我们就可以随时随地在页面中使用这些高频组件，无需再手动一个个引入了。\n\n\n# 隐藏的大招--hook\n\n开发过程中我们有时候要创建一个定时器，在组件被销毁之前，这个定时器也要销毁。代码如下：\n\nmounted() {\n  // 创建一个定时器\n    this.timer = setinterval(() => {\n      // ......\n    }, 500);\n  },\n  // 销毁这个定时器。\n  beforedestroy() {\n    if (this.timer) {\n      clearinterval(this.timer);\n      this.timer = null;\n    }\n  }\n\n\n这种写法有个很明显的弊端：定时器 timer 的创建和清理并不是在一个地方，这样很容易导致忘记去清理！\n\n我们可以借助 hook 对代码整合，这样代码也更容易维护了：\n\nmounted() {\n    let timer = setinterval(() => {\n      // ......\n    }, 500);\n    this.$once("hook:beforedestroy", function() {\n      if (timer) {\n        clearinterval(timer);\n        timer = null;\n      }\n    });\n  }\n\n\n在 vue 组件中，可以用过$on,$once 去监听所有的生命周期钩子函数，如监听组件的 updated 钩子函数可以写成 this.$on(\'hook:updated\', () => {})。\n\nhook 除了上面的运用外，还可以外部监听组件的生命周期函数。在某些情况下，我们需要在父组件中了解一个子组件何时被创建、挂载或更新。\n\n比如，如果你要在第三方组件 customselect 渲染时监听其 updated 钩子，可以通过@hook:updated来实现：\n\n<template>\n  \x3c!--通过@hook:updated监听组件的updated生命钩子函数--\x3e\n  \x3c!--组件的所有生命周期钩子都可以通过@hook:钩子函数名 来监听触发--\x3e\n  <custom-select @hook:updated="dosomething" />\n</template>\n<script>\nimport customselect from "../components/custom-select";\nexport default {\n  components: {\n    customselect\n  },\n  methods: {\n    dosomething() {\n      console.log("custom-select组件的updated钩子函数被触发");\n    }\n  }\n};\n<\/script>\n\n\n\n# 简单暴力的 router key\n\n我们在项目开发时，可能会遇到这样问题:当页面切换到同一个路由但不同参数地址时，比如/detail/1，跳转到/detail/2，页面跳转后数据竟然没更新？路由配置如下：\n\n {\n     path: "/detail/:id",\n     name:"detail",\n     component: detail\n }\n\n\n这是因为 vue-router 会识别出两个路由使用的是同一个组件从而进行复用，并不会重新创建组件，而且组件的生命周期钩子自然也不会被触发，导致跳转后数据没有更新。那我们如何解决这个问题呢？ 我们可以为 router-view 组件添加属性 key,例子如下：\n\n<router-view :key="$route.fullpath"></router-view>\n\n\n这种办法主要是利用虚拟 dom 在渲染时候通过 key 来对比两个节点是否相同，如果 key 不相同，就会判定 router-view 组件是一个新节点，从而先销毁组件，然后再重新创建新组件，这样组件内的生命周期会重新触发。\n\n\n# 高精度权限控制--自定义指令 directive\n\n我们通常给一个元素添加 v-if / v-show，来判断该用户是否有权限，但如果判断条件繁琐且多个地方需要判断，这种方式的代码不仅不优雅而且冗余。针对这种情况，我们可以封装了一个指令权限，能简单快速的实现按钮级别的权限判断。 我们先在新建个 array.js 文件，用于存放与权限相关的全局函数\n\n// array.js\nexport function checkarray(key) {\n    let arr = [\'admin\', \'editor\']\n    let index = arr.indexof(key)\n    if (index > -1) {\n        return true // 有权限\n    } else {\n        return false // 无权限\n    }\n}\n\n\n然后在将 array 文件挂载到全局中\n\n// main.js\nimport { checkarray } from \'./common/array\'\nvue.config.productiontip = false\nvue.directive(\'permission\', {\n    inserted(el, binding) {\n        let permission = binding.value // 获取到 v-permission的值\n        if (permission) {\n            let haspermission = checkarray(permission)\n            if (!haspermission) {\n                // 没有权限 移除dom元素\n                el.parentnode && el.parentnode.removechild(el)\n            }\n        }\n    }\n})\n\n\n最后我们在页面中就可以通过自定义指令 v-permission 来判断：\n\n<div class="btns">\n    <button v-permission="\'admin\'">权限按钮1</button> // 会显示\n    <button v-permission="\'visitor\'">权限按钮2</button> //无显示\n    <button v-permission="\'editor\'">权限按钮3</button> // 会显示\n</div>\n\n\n\n\n\n# 动态指令参数\n\nvue 2.6 的最酷功能之一是可以将指令参数动态传递给组件。我们可以用方括号括起来的 javascript 表达式作为一个指令的参数：\n\n<a v-bind:[attributename]="url"> 这是个链接 </a>\n\n\n这里的 attributename 会被作为一个 javascript 表达式进行动态求值，求得的值将会作为最终的参数来使用。 同样地，你可以使用动态参数为一个动态的事件名绑定处理函数：\n\n<a v-on:[eventname]="dosomething"> 这是个链接 </a>\n\n\n接下来我们看个例子：假设你有一个按钮，在某些情况下想监听单击事件，在某些情况下想监听双击事件。这时动态指令参数派上用场：\n\n<template>\n  <div>\n    <abutton @[someevent]="handlesomeevent()" />\n  </div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      someevent: somecondition ? "click" : "dbclick"\n    }\n  },\n  methods: {\n    handlesomeevent () {\n      // handle some event\n    }\n  }\n}\n<\/script>\n\n\n\n# 过滤器让数据处理更便利\n\nvue.js 允许你自定义过滤器，它的用法其实是很简单，但是可能有些朋友没有用过，接下来我们介绍下：\n\n\n# 1.理解过滤器\n\n * 功能：对要显示的数据进行特定格式化后再显示。\n * 注意：过滤器并没有改变原本的数据，需要对展现的数据进行包装。\n * 使用场景：双花括号插值和 v-bind 表达式 (后者从 2.1.0+ 开始支持)。\n\n\n# 2.定义过滤器\n\n可以在一个组件的选项中定义本地的过滤器：\n\nfilters: {\n  capitalize: function (value) {\n    if (!value) return \'\'\n    value = value.tostring()\n    return value.charat(0).touppercase() + value.slice(1)\n  }\n}\n\n\n也可以在创建 vue 实例之前全局定义过滤器：\n\nvue.filter(\'capitalize\', function (value) {\n  if (!value) return \'\'\n  value = value.tostring()\n  return value.charat(0).touppercase() + value.slice(1)\n})\n\n\n\n# 3.使用过滤器\n\n使用方法也简单，即在双花括号中使用管道符(pipeline) |隔开\n\n\x3c!-- 在双花括号中 --\x3e\n<div>{{ mydata| filtername}}</div>\n<div>{{ mydata| filtername(arg)}}</div>\n\x3c!-- 在 v-bind 中 --\x3e\n<div v-bind:id="rawid | formatid"></div>\n\n\n过滤器可以串联：\n\n{{ message | filtera | filterb }}\n\n\n在这个例子中，filtera 被定义为接收单个参数的过滤器函数，表达式 message 的值将作为参数传入到函数中。然后继续调用同样被定义为接收单个参数的过滤器函数 filterb，将 filtera 的结果传递到 filterb 中。 接下来我们看个如何使用过滤器格式化日期的例子：\n\n <div>\n    <h2>显示格式化的日期时间</h2>\n    <p>{{ date }}</p>\n    <p>{{ date | filterdate }}</p>\n    <p>年月日: {{ date | filterdate("yyyy-mm-dd") }}</p>\n </div>\n ......\n  filters: {\n    filterdate(value, format = "yyyy-mm-dd hh:mm:ss") {\n      console.log(this)//undefined 过滤器没有this指向的\n      return moment(value).format(format);\n    }\n  },\n  data() {\n    return {\n      date: new date()\n    };\n  }\n\n\n\n\n\n# 参考文章与书籍\n\n * vue 官方文档\n * vue2.6 查漏补缺\n * vue.js 最佳实践（五招让你成为 vue.js 大师)\n * 实战技巧，vue 原来还可以这样写\n * 使用 vue.observable()进行状态管理\n * vue 项目构建与开发入门\n * 2020 年的 12 个 vue.js 开发技巧和窍门',charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"慎用Number.toFixed()",frontmatter:{title:"慎用Number.toFixed()",date:"2021-7-28",tags:["JavaScript"],permalink:"/pages/db36f6/",categories:["前端","JavaScript"],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/06.JavaScript/02.%E6%85%8E%E7%94%A8NumbertoFixed.html",relativePath:"02.开发/06.JavaScript/02.慎用NumbertoFixed.md",key:"v-6e41c1cc",path:"/pages/db36f6/",headers:[{level:2,title:"引言",slug:"引言",normalizedTitle:"引言",charIndex:2},{level:2,title:"toFixed()的精度问题",slug:"tofixed-的精度问题",normalizedTitle:"tofixed()的精度问题",charIndex:184},{level:2,title:"解决方法",slug:"解决方法",normalizedTitle:"解决方法",charIndex:739},{level:2,title:"参考文章",slug:"参考文章",normalizedTitle:"参考文章",charIndex:748}],headersStr:"引言 toFixed()的精度问题 解决方法 参考文章",content:"# 引言\n\n最近在公司项目中碰到一个隐藏的 bug，调试许久才发现竟然是 toFixed 函数精度问题引起的，从而引发了我一系列的思考。\n\n我们都知道，计算机在二进制环境下，浮点数的计算精度会存在缺失问题，最经典的例子就是为什么 0.1+0.2 不等于 0.3？\n\n\n\n为了解决上述问题，我们自然而然会想到 toFixed 方法来四舍五入，可结果却不如人意！\n\n\n# toFixed()的精度问题\n\n我们来看一下 toFixed()在 chrome、火狐、IE 浏览器下的不同表现：\n\n\n\n可以看到 toFixed()的四舍五入在 chrome、火狐上并不准确。 而 toFixed()在 chrome、火狐上也并不是网上流传甚广的用银行家舍入法来进行四舍五入的。\n\n> 银行家舍入法的规则是“四舍六入五考虑，五后非零就进一，五后为零看奇偶，五前为偶应舍去，五前为奇要进一”。\n\n例如银行家舍入法在 (2.55).toFixed(1) = 2.5、(3.55).toFixed(1) = 3.5 上就不符合了。\n\n翻阅ecmascript 规范对 toFixed 的表述如下：\n\n\n\n上面规范这段大概意思就是如果 toFixed 的入参小于 10 的 21 次方，那么就取一个整数 n，让 n*10^f - x 的精确值尽可能的趋近于 0，如果存在两个这样的 n,取较大的 n。这段话可能有点晦涩难懂，我们举个例子比如 1.335.toFixed(2)\n\n\n\n上图例子中 1.335.toFixed(2)按照四舍六入五成双应该是 1.34，但是实际情况确实 1.33。这是因为 n=133 的时候让 n*10^f - x 更趋近于 0，所以最后得到的结果是 1.33。\n\n\n# 解决方法\n\n\n# 参考文章\n\n * toFixed 四舍五入的不准确性\n * JS toFixed 及其缺陷和解决方法\n * toFixed 计算错误解决方法\n * 那些年在 JS 中踩过 Number.toFixed(n)的坑\n * JS 四则运算与四舍五入精度问题及解决方案",normalizedContent:"# 引言\n\n最近在公司项目中碰到一个隐藏的 bug，调试许久才发现竟然是 tofixed 函数精度问题引起的，从而引发了我一系列的思考。\n\n我们都知道，计算机在二进制环境下，浮点数的计算精度会存在缺失问题，最经典的例子就是为什么 0.1+0.2 不等于 0.3？\n\n\n\n为了解决上述问题，我们自然而然会想到 tofixed 方法来四舍五入，可结果却不如人意！\n\n\n# tofixed()的精度问题\n\n我们来看一下 tofixed()在 chrome、火狐、ie 浏览器下的不同表现：\n\n\n\n可以看到 tofixed()的四舍五入在 chrome、火狐上并不准确。 而 tofixed()在 chrome、火狐上也并不是网上流传甚广的用银行家舍入法来进行四舍五入的。\n\n> 银行家舍入法的规则是“四舍六入五考虑，五后非零就进一，五后为零看奇偶，五前为偶应舍去，五前为奇要进一”。\n\n例如银行家舍入法在 (2.55).tofixed(1) = 2.5、(3.55).tofixed(1) = 3.5 上就不符合了。\n\n翻阅ecmascript 规范对 tofixed 的表述如下：\n\n\n\n上面规范这段大概意思就是如果 tofixed 的入参小于 10 的 21 次方，那么就取一个整数 n，让 n*10^f - x 的精确值尽可能的趋近于 0，如果存在两个这样的 n,取较大的 n。这段话可能有点晦涩难懂，我们举个例子比如 1.335.tofixed(2)\n\n\n\n上图例子中 1.335.tofixed(2)按照四舍六入五成双应该是 1.34，但是实际情况确实 1.33。这是因为 n=133 的时候让 n*10^f - x 更趋近于 0，所以最后得到的结果是 1.33。\n\n\n# 解决方法\n\n\n# 参考文章\n\n * tofixed 四舍五入的不准确性\n * js tofixed 及其缺陷和解决方法\n * tofixed 计算错误解决方法\n * 那些年在 js 中踩过 number.tofixed(n)的坑\n * js 四则运算与四舍五入精度问题及解决方案",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"助你开发更高效的10个Vue指令",frontmatter:{title:"助你开发更高效的10个Vue指令",date:"2022-01-08T19:41:00.000Z",permalink:"/pages/d765c6/",categories:["前端","Vue2"],tags:[null],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/07.Vue2/02.%E5%8A%A9%E4%BD%A0%E5%BC%80%E5%8F%91%E6%9B%B4%E9%AB%98%E6%95%88%E7%9A%8410%E4%B8%AAVue%E6%8C%87%E4%BB%A4.html",relativePath:"02.开发/07.Vue2/02.助你开发更高效的10个Vue指令.md",key:"v-24ab3da6",path:"/pages/d765c6/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:123},{level:3,title:"1.Vue-Lazyload",slug:"_1-vue-lazyload",normalizedTitle:"1.vue-lazyload",charIndex:314},{level:3,title:"2.Vue-Infinite-Scroll",slug:"_2-vue-infinite-scroll",normalizedTitle:"2.vue-infinite-scroll",charIndex:570},{level:3,title:"3.Vue-Focus",slug:"_3-vue-focus",normalizedTitle:"3.vue-focus",charIndex:1311},{level:3,title:"4.Vue-Blur",slug:"_4-vue-blur",normalizedTitle:"4.vue-blur",charIndex:1724},{level:3,title:"5.V-Clipboard",slug:"_5-v-clipboard",normalizedTitle:"5.v-clipboard",charIndex:2545},{level:3,title:"6.Vue-ScrollTo",slug:"_6-vue-scrollto",normalizedTitle:"6.vue-scrollto",charIndex:2988},{level:3,title:"7.V-Hotkey",slug:"_7-v-hotkey",normalizedTitle:"7.v-hotkey",charIndex:3303},{level:3,title:"8.V-Click-Outside",slug:"_8-v-click-outside",normalizedTitle:"8.v-click-outside",charIndex:3876},{level:3,title:"9.V-Scroll-Lock",slug:"_9-v-scroll-lock",normalizedTitle:"9.v-scroll-lock",charIndex:4394},{level:3,title:"10.V-Tooltip",slug:"_10-v-tooltip",normalizedTitle:"10.v-tooltip",charIndex:5040},{level:3,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:5378}],headersStr:"前言 1.Vue-Lazyload 2.Vue-Infinite-Scroll 3.Vue-Focus 4.Vue-Blur 5.V-Clipboard 6.Vue-ScrollTo 7.V-Hotkey 8.V-Click-Outside 9.V-Scroll-Lock 10.V-Tooltip 总结",content:'# 助你开发更高效的 10 个 Vue 指令\n\n> 说明：本章内容来源https://dev.to/simonholdorf/10-vue-directives-that-make-your-dev-lives-easier-5dm7/\n\n\n# 前言\n\nVue.js 最大的特点之一就是它有内置的指令，就像最初的 AngularJS 一样(这是人们认为 Vue 像 Angular 的原因之一)。 这些指令使开发更加容易，但更好的是，您可以编写自己的自定义指令。在本文中，我将向您展示由 Vue 社区制作 10 个很酷的指令，您可以立即在项目中使用它们，以节省您的时间和精力，并将您的 Vue 项目提升到一个新的水平。\n\n\n# 1.Vue-Lazyload\n\n这个项目在 Github 上有超过 5800 个 Star，Hilongjw 的 Vue-Lazyload 可让你无延迟地懒加载图片！\n\n项目地址：https://github.com/hilongjw/vue-lazyload\n\n安装方式：npm i vue-lazyload -S\n\n<template>\n  <img v-lazy="https://www.example.com/example-image.jpg">\n</template>\n\n\n效果演示：\n\n\n\n\n# 2.Vue-Infinite-Scroll\n\n如果您想在访问者到达底部时在网页上加载新元素，这会是一个很好且易于实现的指令。当滚动到页面底部时，将执行绑定到 v-infinite-scroll 的方法。\n\n项目地址：https://github.com/ElemeFE/vue-infinite-scroll\n\n安装方式：npm install vue-infinite-scroll --save\n\n<template>\n  /* your website code   */\n  <div\n    v-infinite-scroll="onLoadMore"\n    infinite-scroll-disabled="busy"\n    infinite-scroll-distance="10"\n  ></div>\n<template>\n\n<script>\nexport default {\n  data() {\n    return {\n      data [],\n      busy: false,\n      count: 0\n    }\n  },\n  methods: {\n    onLoadMore() {\n      this.busy = true;\n      setTimeout(() => {\n        for (var i = 0, j = 10; i < j; i++) {\n          this.data.push({ name: this.count++ });\n        }\n        this.busy = false;\n      }, 1000);\n    }\n  }\n}\n<\/script>\n\n\n\n# 3.Vue-Focus\n\n有时在 Web 开发中，管理输入焦点可能很棘手。Vue-Focus 可以帮助您直接从视图模型管理焦点。\n\n项目地址：https://github.com/simplesmiler/vue-focus\n\n安装方式：npm install vue-focus --save\n\n<template>\n  <button @click="focusedElement = true">Input gets Focus</button>\n  <input type="text" v-focus="focusedElement">\n</template>\n\n<script>\nexport default {\n  data: function() {\n    return {\n      focusedElement: false,\n    };\n  },\n};\n<\/script>\n\n\n效果演示：\n\n\n# 4.Vue-Blur\n\n如果你的页面在访客尚未注册的时候，有些部分需要加上半透明遮罩，那么 Vue-Blur 是一个不错的选择。它还带有用于自定义参数的选项，例如不透明度，过滤器和状态之间的转换。\n\n项目地址：https://github.com/ndelvalle/v-blur\n\n安装方式：npm install --save v-blur\n\n<template>\n  /* Use this with a boolean value (true/false) */\n  <div v-blur="isBlurred"></div>\n\n  /* Use this with an object that uses values from the config */\n  <div v-blur="blurConfig"></div>\n</template>\n\n<script>\n  export default {\n      data () {\n        return {\n          isBlurred: true, // activate and deactivate based on a boolean value\n          blurConfig: {\n            isBlurred: false, // activate and deactivate based on a boolean value and also provide a config\n            opacity: 0.3,\n            filter: \'blur(1.2px)\',\n            transition: \'all .3s linear\'\n          }\n        }\n      }\n    }\n  };\n<\/script>\n\n\n效果演示：\n\n\n\n\n# 5.V-Clipboard\n\n这是一个小巧而实用的包，您可以使用它将值从元素复制到用户的剪贴板，而不必实现大量的逻辑。它可以复制静态或动态值，当元素被点击时，指令的值会被复制到剪贴板上。用户需要复制代码片段的时候，这个就排上用场。\n\n项目地址：https://github.com/euvl/v-clipboard\n\n安装方式：npm install --save v-clipboard\n\n<template>\n  <button v-clipboard=\'valueToCopy\'>Copy to clipboard</button>\n  // 当单击包含v-clipboard指令的元素时，valueToCopy的值将被复制到剪贴板中\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      valueToCopy: "Some Text"\n    }\n  }\n};\n<\/script>\n\n\n\n# 6.Vue-ScrollTo\n\n滚动元素从未如此简单！ 你可以监听元素上的点击事件，让浏览器滚动到给定的标签，这对于处理文章目录跳转和导航跳转非常有用！\n\n项目地址：https://github.com/rigor789/vue-scrollTo\n\n安装方式：npm install --save vue-scrollto\n\n<template>\n  <button v-scroll-to="\'#element\'">Scroll to #element as the target</button>\n  <h1 id=\'element\'>Hi. I\'m element</h1>\n</template>\n\n\n效果演示：\n\n\n# 7.V-Hotkey\n\n这个自定义指令可以使您可以轻松地将快捷键绑定到组件,而且可以给组件绑定一个或多个快捷键。比如你想要通过按下 esc键后隐藏某个组件，按住ctrl+enter 再显示它,下面代码便可轻松实现：\n\n项目地址：https://github.com/Dafrok/v-hotkey\n\n安装方式：npm i --save v-hotkey\n\n<template>\n  <div v-show="show"\n       v-hotkey="{\n      \'esc\': onClose,\n      \'ctrl+enter\': onShow\n    }">\n    Hold `esc` to close me! Press `ctrl+enter` to open me!\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      show: true\n    }\n  },\n  methods: {\n    onClose () {\n      this.show = false\n    },\n    onShow () {\n      this.show = true\n    }\n  }\n}\n<\/script>\n\n\n\n# 8.V-Click-Outside\n\n这是一个很棒的指令，可以在不停止事件传播的情况下对单击元素上的事件做出反应。这对于关闭对话框、菜单等非常有用。\n\n项目地址：https://github.com/ndelvalle/v-click-outside\n\n安装方式：npm install --save v-click-outside\n\n<template>\n  <div v-show="show" v-click-outside="onClickOutside">\n    Hide the element if a click event outside is triggered\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      show: true\n    };\n  },\n  methods: {\n    onClickOutside() {\n      console.log(11111);\n      this.show = false;\n    }\n  }\n};\n<\/script>\n\n\n效果演示：\n\n\n\n\n# 9.V-Scroll-Lock\n\n这个指令的作用是在打开模态浮层的时候防止下层的元素滚动。在处理多个设备时，这尤其有用！\n\n项目地址：https://github.com/phegman/v-scroll-lock\n\n安装方式：npm install v-scroll-lock --save\n\n使用场景：https://v-scroll-lock.peterhegman.com/\n\n<template>\n  <div class="modal" v-if="open">\n    <button @click="closeModal">X</button>\n    <div class="modal-content" v-scroll-lock="open">\n      <p>A bunch of scrollable modal content</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \'Modal\',\n  data () {\n    return {\n      open: false\n    }\n  },\n  methods: {\n    openModal () {\n      this.open = true\n    },\n    closeModal () {\n      this.open = false\n    }\n  }\n}\n<\/script>\n\n\n\n# 10.V-Tooltip\n\nAkryum 的这个很酷的软件包为您提供了一个很棒的工具提示指令。只需将一些文本绑定到 v-tooltip，就可以了。\n\n项目地址：https://github.com/Akryum/v-tooltip\n\n安装方式：npm install --save v-tooltip\n\n<template>\n  <div>\n    <p>\n      <input v-model="message" placeholder="Message">\n    </p>\n    <p>\n      <span v-tooltip="message">{{ message }}</span>\n    </p>\n  </div>\n</template>\n\n\n\n# 总结\n\n在本文中，我收集了 10 个很棒的自定义 Vue 指令，您可以在未来的项目中使用这些指令，而不必每次都自己重新造轮子。',normalizedContent:'# 助你开发更高效的 10 个 vue 指令\n\n> 说明：本章内容来源https://dev.to/simonholdorf/10-vue-directives-that-make-your-dev-lives-easier-5dm7/\n\n\n# 前言\n\nvue.js 最大的特点之一就是它有内置的指令，就像最初的 angularjs 一样(这是人们认为 vue 像 angular 的原因之一)。 这些指令使开发更加容易，但更好的是，您可以编写自己的自定义指令。在本文中，我将向您展示由 vue 社区制作 10 个很酷的指令，您可以立即在项目中使用它们，以节省您的时间和精力，并将您的 vue 项目提升到一个新的水平。\n\n\n# 1.vue-lazyload\n\n这个项目在 github 上有超过 5800 个 star，hilongjw 的 vue-lazyload 可让你无延迟地懒加载图片！\n\n项目地址：https://github.com/hilongjw/vue-lazyload\n\n安装方式：npm i vue-lazyload -s\n\n<template>\n  <img v-lazy="https://www.example.com/example-image.jpg">\n</template>\n\n\n效果演示：\n\n\n\n\n# 2.vue-infinite-scroll\n\n如果您想在访问者到达底部时在网页上加载新元素，这会是一个很好且易于实现的指令。当滚动到页面底部时，将执行绑定到 v-infinite-scroll 的方法。\n\n项目地址：https://github.com/elemefe/vue-infinite-scroll\n\n安装方式：npm install vue-infinite-scroll --save\n\n<template>\n  /* your website code   */\n  <div\n    v-infinite-scroll="onloadmore"\n    infinite-scroll-disabled="busy"\n    infinite-scroll-distance="10"\n  ></div>\n<template>\n\n<script>\nexport default {\n  data() {\n    return {\n      data [],\n      busy: false,\n      count: 0\n    }\n  },\n  methods: {\n    onloadmore() {\n      this.busy = true;\n      settimeout(() => {\n        for (var i = 0, j = 10; i < j; i++) {\n          this.data.push({ name: this.count++ });\n        }\n        this.busy = false;\n      }, 1000);\n    }\n  }\n}\n<\/script>\n\n\n\n# 3.vue-focus\n\n有时在 web 开发中，管理输入焦点可能很棘手。vue-focus 可以帮助您直接从视图模型管理焦点。\n\n项目地址：https://github.com/simplesmiler/vue-focus\n\n安装方式：npm install vue-focus --save\n\n<template>\n  <button @click="focusedelement = true">input gets focus</button>\n  <input type="text" v-focus="focusedelement">\n</template>\n\n<script>\nexport default {\n  data: function() {\n    return {\n      focusedelement: false,\n    };\n  },\n};\n<\/script>\n\n\n效果演示：\n\n\n# 4.vue-blur\n\n如果你的页面在访客尚未注册的时候，有些部分需要加上半透明遮罩，那么 vue-blur 是一个不错的选择。它还带有用于自定义参数的选项，例如不透明度，过滤器和状态之间的转换。\n\n项目地址：https://github.com/ndelvalle/v-blur\n\n安装方式：npm install --save v-blur\n\n<template>\n  /* use this with a boolean value (true/false) */\n  <div v-blur="isblurred"></div>\n\n  /* use this with an object that uses values from the config */\n  <div v-blur="blurconfig"></div>\n</template>\n\n<script>\n  export default {\n      data () {\n        return {\n          isblurred: true, // activate and deactivate based on a boolean value\n          blurconfig: {\n            isblurred: false, // activate and deactivate based on a boolean value and also provide a config\n            opacity: 0.3,\n            filter: \'blur(1.2px)\',\n            transition: \'all .3s linear\'\n          }\n        }\n      }\n    }\n  };\n<\/script>\n\n\n效果演示：\n\n\n\n\n# 5.v-clipboard\n\n这是一个小巧而实用的包，您可以使用它将值从元素复制到用户的剪贴板，而不必实现大量的逻辑。它可以复制静态或动态值，当元素被点击时，指令的值会被复制到剪贴板上。用户需要复制代码片段的时候，这个就排上用场。\n\n项目地址：https://github.com/euvl/v-clipboard\n\n安装方式：npm install --save v-clipboard\n\n<template>\n  <button v-clipboard=\'valuetocopy\'>copy to clipboard</button>\n  // 当单击包含v-clipboard指令的元素时，valuetocopy的值将被复制到剪贴板中\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      valuetocopy: "some text"\n    }\n  }\n};\n<\/script>\n\n\n\n# 6.vue-scrollto\n\n滚动元素从未如此简单！ 你可以监听元素上的点击事件，让浏览器滚动到给定的标签，这对于处理文章目录跳转和导航跳转非常有用！\n\n项目地址：https://github.com/rigor789/vue-scrollto\n\n安装方式：npm install --save vue-scrollto\n\n<template>\n  <button v-scroll-to="\'#element\'">scroll to #element as the target</button>\n  <h1 id=\'element\'>hi. i\'m element</h1>\n</template>\n\n\n效果演示：\n\n\n# 7.v-hotkey\n\n这个自定义指令可以使您可以轻松地将快捷键绑定到组件,而且可以给组件绑定一个或多个快捷键。比如你想要通过按下 esc键后隐藏某个组件，按住ctrl+enter 再显示它,下面代码便可轻松实现：\n\n项目地址：https://github.com/dafrok/v-hotkey\n\n安装方式：npm i --save v-hotkey\n\n<template>\n  <div v-show="show"\n       v-hotkey="{\n      \'esc\': onclose,\n      \'ctrl+enter\': onshow\n    }">\n    hold `esc` to close me! press `ctrl+enter` to open me!\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      show: true\n    }\n  },\n  methods: {\n    onclose () {\n      this.show = false\n    },\n    onshow () {\n      this.show = true\n    }\n  }\n}\n<\/script>\n\n\n\n# 8.v-click-outside\n\n这是一个很棒的指令，可以在不停止事件传播的情况下对单击元素上的事件做出反应。这对于关闭对话框、菜单等非常有用。\n\n项目地址：https://github.com/ndelvalle/v-click-outside\n\n安装方式：npm install --save v-click-outside\n\n<template>\n  <div v-show="show" v-click-outside="onclickoutside">\n    hide the element if a click event outside is triggered\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      show: true\n    };\n  },\n  methods: {\n    onclickoutside() {\n      console.log(11111);\n      this.show = false;\n    }\n  }\n};\n<\/script>\n\n\n效果演示：\n\n\n\n\n# 9.v-scroll-lock\n\n这个指令的作用是在打开模态浮层的时候防止下层的元素滚动。在处理多个设备时，这尤其有用！\n\n项目地址：https://github.com/phegman/v-scroll-lock\n\n安装方式：npm install v-scroll-lock --save\n\n使用场景：https://v-scroll-lock.peterhegman.com/\n\n<template>\n  <div class="modal" v-if="open">\n    <button @click="closemodal">x</button>\n    <div class="modal-content" v-scroll-lock="open">\n      <p>a bunch of scrollable modal content</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \'modal\',\n  data () {\n    return {\n      open: false\n    }\n  },\n  methods: {\n    openmodal () {\n      this.open = true\n    },\n    closemodal () {\n      this.open = false\n    }\n  }\n}\n<\/script>\n\n\n\n# 10.v-tooltip\n\nakryum 的这个很酷的软件包为您提供了一个很棒的工具提示指令。只需将一些文本绑定到 v-tooltip，就可以了。\n\n项目地址：https://github.com/akryum/v-tooltip\n\n安装方式：npm install --save v-tooltip\n\n<template>\n  <div>\n    <p>\n      <input v-model="message" placeholder="message">\n    </p>\n    <p>\n      <span v-tooltip="message">{{ message }}</span>\n    </p>\n  </div>\n</template>\n\n\n\n# 总结\n\n在本文中，我收集了 10 个很棒的自定义 vue 指令，您可以在未来的项目中使用这些指令，而不必每次都自己重新造轮子。',charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"理解Vue响应式数据变化",frontmatter:{title:"理解Vue响应式数据变化",date:"2018-12-28T00:00:00.000Z",tags:[null],permalink:"/pages/4c7316/",categories:["Vue2"],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/07.Vue2/03.%E7%90%86%E8%A7%A3Vue%E5%93%8D%E5%BA%94%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%8F%98%E5%8C%96.html",relativePath:"02.开发/07.Vue2/03.理解Vue响应式数据变化.md",key:"v-f78f7d22",path:"/pages/4c7316/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:19},{level:3,title:"对于对象",slug:"对于对象",normalizedTitle:"对于对象",charIndex:191},{level:3,title:"对于数组",slug:"对于数组",normalizedTitle:"对于数组",charIndex:1309},{level:3,title:"响应式原理",slug:"响应式原理",normalizedTitle:"响应式原理",charIndex:2466},{level:3,title:"对于数组",slug:"对于数组-2",normalizedTitle:"对于数组",charIndex:1309}],headersStr:"前言 对于对象 对于数组 响应式原理 对于数组",content:"# 理解Vue响应式数据变化\n\n\n# 前言\n\n在JavaScript 中，数据分为两种类型：\n\n * 基本类型：undefined、null、string、number、boolean、symbol\n * 引用类型：Object、Array、RegExp、Date、Function\n\n基本类型的值是存放在栈区的，即内存中的栈内存。\n\n引用类型的值是则保存在栈内存和堆内存\n\n\n# 对于对象\n\n<template>\n  <div>\n    <h5>名称：{{obj.name}}</h5>\n    <button @click=\"handleA()\">A更新</button>\n    <button @click=\"handleB()\">b更新</button>\n    <button @click=\"handleForce()\">强制更新</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      obj: {}\n    }\n  },\n  methods: {\n    handleA(){\n      this.obj.name = 'A 星野'\n      console.log(this.obj);\n    },\n    handleB(){\n      this.$set(this.obj, 'name', 'B 星野')\n      console.log(this.obj);\n    },\n    handleForce(){\n      this.$forceUpdate()\n    }\n  }\n}\n<\/script>\n\n\n思考一下，点击handleA、handleB、handleForce方法后，视图会有什么效果。\n\n点击handleA 视图未变化，但打印数据输出name A星野 值。\n\n点击handleB视图更新成B 星野，打印数据输出name B星野 值。\n\n点击handleA后，在点击handleForce 后视图更新，但在修改name值并不会更新。\n\n其实新增属性name值属于非响应式值，所以当你点击handleA虽然属性值改了，但是并未通知视图更新。\n\nthis.$set(object, propertyName, value) API 向响应式对象中添加一个 属性，并确保这个新增的属性同样是响应式的，且触发视图更新。\n\nthis.$forceUpdate()迫使Vue实例重新渲染，但并为将name添加成响应式属性，所以在修改值视图并不会更新。\n\n假设我需要赋值多个新属性情况下，按照上面的写法是不是太冗余了，其实我们可以通过Object.assign() 或 _.extend() 来更新数据。\n\nthis.obj = Object.assign(this.obj, { a: 1, b: 2 })\n// 代替上面这种方法。\nthis.obj = Object.assign({}, this.obj, { a: 1, b: 2 })\n\n\n\n# 对于数组\n\n<template>\n  <div>\n    <h5>名称：{{arr}}</h5>\n    <button @click=\"handleA()\">A更新</button>\n    <button @click=\"handleB()\">b更新</button>\n    <button @click=\"handleSplice()\">splice更新</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      arr: ['a', 'b', 'c']\n    }\n  },\n  methods: {\n    handleA(){\n      this.arr[0] = 'A 星野'\n      console.log(this.arr);\n    },\n    handleB(){\n      this.$set(this.arr, 0, 'B 星野')\n      console.log(this.arr);\n    },\n    handleSplice(){\n      this.arr.splice(0, 1, 'splice 星野')\n      console.log(this.arr);\n    },\n  }\n}\n<\/script>\n\n\n思考一下，点击handleA、handleB、handleSplice方法后，视图会有什么效果。\n\n点击handleA 视图没有更新。\n\n点击handleB视图更新成B 星野\n\n点击handleSplice后，视图更新成splice 星野\n\n其实Vue不能检测以下数组的变动：\n\n * 当你利用索引直接设置一个数组项时，例如：this.arr[index] = newValue\n * 当你修改数组的长度时，例如：this.arr.length = newLength\n\n处理上面情况一的问题。通常可以通过Vue.set和splice方法就能够解决。\n\n// Vue.set \nthis.$set(this.arr, index, newValue)\n\n// Array.prototype.splice\nthis.splice(index, 1, newValue)\n\n\n情况二的话，也可以通过splice解决。\n\nthis.splice(newLength)\n\n\n显然大家会有很多疑惑，为什么Vue中Data为对象新增属性值需要通过$setAPI来更新，或者用$forceUpdate()更新（官网不推荐使用），为什么数组通过下标修改数组某个值，视图不更新，也需要$set和splice触发更新。带着疑问往下看\n\n\n# 响应式原理\n\n我们都知道 Vue.js 是一款 MVVM 框架，由三个重要部分构成\n\n * 数据层（Model）：数据及业务逻辑\n * 视图层（View）：展示数据渲染后的界面\n * 业务逻辑层（ViewModel）：负责将数据与视图关联起来\n\n理解ViewModel\n\n它的主要职责就是：\n\n * 数据变化后更新视图\n * 视图变化后更新数据\n\n当然，它还有两个主要部分组成\n\n监听器（Observer）：对所有数据的属性进行监听 解析器（Compiler）：对每个元素节点的指令进行扫描跟解析,根据指令模板替换数据,以及绑定相应的更新函数\n\n双向绑定原理\n\n 1. 首先组件创建时会实例化new Vue()，然后对data进行Object.defineProperty()，这个过程发生Observe中\n 2. 同时对模板执行编译，收集绑定的data数据，这个过程发生在Compile中\n 3. 然后定义⼀个更新函数和Watcher，将对应数据变化时Watcher会调用更新函数\n 4. 如果data中数据⼀旦发生变化，会首先找到对应的Dep，通知所有Watcher执行更新函数\n\n\n\nfunction render() {\n  console.log('模拟视图渲染')\n}\n// data数据 \nlet obj = { name: '星野', location: { x: 100, y: 10 }\n\n// 递归对象，因为对象里面可能包含对象\nfunction observer(obj) {\n  if (typeof obj == 'object') {\n    for (let key in obj) {\n      defineReactive(obj, key, obj[key])\n    }\n  }\n}\n// 第二步 给对象 添加 Object.defineProperty，当数据更新触发更新函数更新视图\nfunction defineReactive(obj, key, value) {\n  observer(value)\n  Object.defineProperty(obj, key, {\n    // 得到value值\n    get() { \n      return value\n    },\n    // 数据更新会触发set函数\n    set(newValue) {\n      // newValue 新的值有可能是个对象，对象有继续触发defineReactive 函数\n      observer(newValue) \n      if (value !== newValue) {\n        render() // 通知视图更新\n        value = newValue\n      }\n    },\n  })\n}\n\nfunction $set(obj, key, value) {\n  defineReactive(obj, key, value)\n}\n// 第一步，初始化data数据\nobserver(obj)\n\n// $set(obj, 'a', 5);\n// obj.a = 100;\n// console.log(obj.a);\n\n// obj.location= { x: 1000, y: 1000 }\n// console.log(obj.location);\n\n\n上面的代码简单的实现了如何监听数据的的事件，但在set定义的自定义的函数并不会主动触发执行，只有对模板执行编译后对绑定的data数据进行依赖收集，数据更新的时候触发自定义函数更新。\n\n<div>\n    {{obj.name}}\n</div>\n\n\n当对模版进行编译时，会对obj.name进行依赖收集。\n\nObject.defineProperty 的缺陷\n\n当我们给对象新增属性并不会触发组件的重新渲染，因为 Object.defineProperty 不能拦截到这些操作。也就为什么我们要通过$setAPI来对数据响应式处理，其实本质就是通过defineReactive函数对数据Object.defineProperty，这样数据通知视图更新了。\n\nfunction $set(obj, key, value) {\n  defineReactive(obj, key, value)\n}\n\n\n\n# 对于数组\n\n对于对象我们可以通过Object.defineProperty，但是数组并不支持这个方法，所以我们就要重写数组，在保留数组原有功能的同时又能对数组中数据更新触发视图更新。\n\nfunction render() {\n  console.log('模拟视图渲染')\n}\n\nlet arr = [1, 2, 4]\n\nlet methods = ['pop', 'push', 'shift', 'unshift', 'sort', 'reverve', 'splice']\nlet arrayProto = Array.prototype\nlet proto = Object.create(arrayProto)\nmethods.forEach(method => {\n  proto[method] = function() {\n    render()\n    arrayProto[method].call(this, ...arguments)\n  }\n})\n\nfunction observer(obj) {\n  if (Array.isArray(obj)) {\n    obj.__proto__ = proto\n    return\n  }\n}\n\nfunction defineReactive(obj, key, value) {\n  observer(value)\n  Object.defineProperty(obj, key, {\n    get() {\n      return value\n    },\n    set(newValue) {\n      observer(newValue)\n      if (value !== newValue) {\n        render()\n        value = newValue\n      }\n    },\n  })\n}\nobserver(obj)\nfunction $set(obj, key, value) {\n  defineReactive(obj, key, value)\n}\n\narr.push(123)\n\n\n我们需要理解一下面向切面编程概念（AOP），就能更好的理解上面的代码。\n\n> 面向切面编程（AOP是Aspect Oriented Program的首字母缩写） ，我们知道，面向对象的特点是继承、多态和封装。而封装就要求将功能分散到不同的对象中去，这在软件设计中往往称为职责分配。实际上也就是说，让不同的类设计不同的方法。这样代码就分散到一个个的类中去了。这样做的好处是降低了代码的复杂程度，使类可重用。\n> 但是人们也发现，在分散代码的同时，也增加了代码的重复性。什么意思呢？比如说，我们在两个类中，可能都需要在每个方法中做日志。按面向对象的设计方法，我们就必须在两个类的方法中都加入日志的内容。也许他们是完全相同的，但就是因为面向对象的设计让类与类之间无法联系，而不能将这些重复的代码统一起来。\n> 也许有人会说，那好办啊，我们可以将这段代码写在一个独立的类独立的方法里，然后再在这两个类中调用。但是，这样一来，这两个类跟我们上面提到的独立的类就有耦合了，它的改变会影响这两个类。那么，有没有什么办法，能让我们在需要的时候，随意地加入代码呢？这种在运行时，动态地将代码切入到类的指定方法、指定位置上的编程思想就是面向切面的编程。\n\nlet methods = ['pop', 'push', 'shift', 'unshift', 'sort', 'reverve', 'splice']\nlet arrayProto = Array.prototype\nlet proto = Object.create(arrayProto)\nmethods.forEach(method => {\n  proto[method] = function() {\n    render()\n    arrayProto[method].call(this, ...arguments)\n  }\n})\n\n\narrayProto 继承原有数组的原型，然后对数组原型中'pop', 'push', 'shift', 'unshift', 'sort', 'reverve', 'splice'添加自定义函数，当通过上面的方法更新数组时，会进行依赖收集，当必要的时候通知视图更新。\n\n虽然这样实现响应式更新，但也存在缺陷。\n\n * 当你利用索引直接设置一个数组项时，例如：this.arr[index] = newValue\n * 当你修改数组的长度时，例如：this.arr.length = newLength\n\n参考\n\n * Vue数据双向绑定\n * 什么是面向切面编程AOP",normalizedContent:"# 理解vue响应式数据变化\n\n\n# 前言\n\n在javascript 中，数据分为两种类型：\n\n * 基本类型：undefined、null、string、number、boolean、symbol\n * 引用类型：object、array、regexp、date、function\n\n基本类型的值是存放在栈区的，即内存中的栈内存。\n\n引用类型的值是则保存在栈内存和堆内存\n\n\n# 对于对象\n\n<template>\n  <div>\n    <h5>名称：{{obj.name}}</h5>\n    <button @click=\"handlea()\">a更新</button>\n    <button @click=\"handleb()\">b更新</button>\n    <button @click=\"handleforce()\">强制更新</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      obj: {}\n    }\n  },\n  methods: {\n    handlea(){\n      this.obj.name = 'a 星野'\n      console.log(this.obj);\n    },\n    handleb(){\n      this.$set(this.obj, 'name', 'b 星野')\n      console.log(this.obj);\n    },\n    handleforce(){\n      this.$forceupdate()\n    }\n  }\n}\n<\/script>\n\n\n思考一下，点击handlea、handleb、handleforce方法后，视图会有什么效果。\n\n点击handlea 视图未变化，但打印数据输出name a星野 值。\n\n点击handleb视图更新成b 星野，打印数据输出name b星野 值。\n\n点击handlea后，在点击handleforce 后视图更新，但在修改name值并不会更新。\n\n其实新增属性name值属于非响应式值，所以当你点击handlea虽然属性值改了，但是并未通知视图更新。\n\nthis.$set(object, propertyname, value) api 向响应式对象中添加一个 属性，并确保这个新增的属性同样是响应式的，且触发视图更新。\n\nthis.$forceupdate()迫使vue实例重新渲染，但并为将name添加成响应式属性，所以在修改值视图并不会更新。\n\n假设我需要赋值多个新属性情况下，按照上面的写法是不是太冗余了，其实我们可以通过object.assign() 或 _.extend() 来更新数据。\n\nthis.obj = object.assign(this.obj, { a: 1, b: 2 })\n// 代替上面这种方法。\nthis.obj = object.assign({}, this.obj, { a: 1, b: 2 })\n\n\n\n# 对于数组\n\n<template>\n  <div>\n    <h5>名称：{{arr}}</h5>\n    <button @click=\"handlea()\">a更新</button>\n    <button @click=\"handleb()\">b更新</button>\n    <button @click=\"handlesplice()\">splice更新</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      arr: ['a', 'b', 'c']\n    }\n  },\n  methods: {\n    handlea(){\n      this.arr[0] = 'a 星野'\n      console.log(this.arr);\n    },\n    handleb(){\n      this.$set(this.arr, 0, 'b 星野')\n      console.log(this.arr);\n    },\n    handlesplice(){\n      this.arr.splice(0, 1, 'splice 星野')\n      console.log(this.arr);\n    },\n  }\n}\n<\/script>\n\n\n思考一下，点击handlea、handleb、handlesplice方法后，视图会有什么效果。\n\n点击handlea 视图没有更新。\n\n点击handleb视图更新成b 星野\n\n点击handlesplice后，视图更新成splice 星野\n\n其实vue不能检测以下数组的变动：\n\n * 当你利用索引直接设置一个数组项时，例如：this.arr[index] = newvalue\n * 当你修改数组的长度时，例如：this.arr.length = newlength\n\n处理上面情况一的问题。通常可以通过vue.set和splice方法就能够解决。\n\n// vue.set \nthis.$set(this.arr, index, newvalue)\n\n// array.prototype.splice\nthis.splice(index, 1, newvalue)\n\n\n情况二的话，也可以通过splice解决。\n\nthis.splice(newlength)\n\n\n显然大家会有很多疑惑，为什么vue中data为对象新增属性值需要通过$setapi来更新，或者用$forceupdate()更新（官网不推荐使用），为什么数组通过下标修改数组某个值，视图不更新，也需要$set和splice触发更新。带着疑问往下看\n\n\n# 响应式原理\n\n我们都知道 vue.js 是一款 mvvm 框架，由三个重要部分构成\n\n * 数据层（model）：数据及业务逻辑\n * 视图层（view）：展示数据渲染后的界面\n * 业务逻辑层（viewmodel）：负责将数据与视图关联起来\n\n理解viewmodel\n\n它的主要职责就是：\n\n * 数据变化后更新视图\n * 视图变化后更新数据\n\n当然，它还有两个主要部分组成\n\n监听器（observer）：对所有数据的属性进行监听 解析器（compiler）：对每个元素节点的指令进行扫描跟解析,根据指令模板替换数据,以及绑定相应的更新函数\n\n双向绑定原理\n\n 1. 首先组件创建时会实例化new vue()，然后对data进行object.defineproperty()，这个过程发生observe中\n 2. 同时对模板执行编译，收集绑定的data数据，这个过程发生在compile中\n 3. 然后定义⼀个更新函数和watcher，将对应数据变化时watcher会调用更新函数\n 4. 如果data中数据⼀旦发生变化，会首先找到对应的dep，通知所有watcher执行更新函数\n\n\n\nfunction render() {\n  console.log('模拟视图渲染')\n}\n// data数据 \nlet obj = { name: '星野', location: { x: 100, y: 10 }\n\n// 递归对象，因为对象里面可能包含对象\nfunction observer(obj) {\n  if (typeof obj == 'object') {\n    for (let key in obj) {\n      definereactive(obj, key, obj[key])\n    }\n  }\n}\n// 第二步 给对象 添加 object.defineproperty，当数据更新触发更新函数更新视图\nfunction definereactive(obj, key, value) {\n  observer(value)\n  object.defineproperty(obj, key, {\n    // 得到value值\n    get() { \n      return value\n    },\n    // 数据更新会触发set函数\n    set(newvalue) {\n      // newvalue 新的值有可能是个对象，对象有继续触发definereactive 函数\n      observer(newvalue) \n      if (value !== newvalue) {\n        render() // 通知视图更新\n        value = newvalue\n      }\n    },\n  })\n}\n\nfunction $set(obj, key, value) {\n  definereactive(obj, key, value)\n}\n// 第一步，初始化data数据\nobserver(obj)\n\n// $set(obj, 'a', 5);\n// obj.a = 100;\n// console.log(obj.a);\n\n// obj.location= { x: 1000, y: 1000 }\n// console.log(obj.location);\n\n\n上面的代码简单的实现了如何监听数据的的事件，但在set定义的自定义的函数并不会主动触发执行，只有对模板执行编译后对绑定的data数据进行依赖收集，数据更新的时候触发自定义函数更新。\n\n<div>\n    {{obj.name}}\n</div>\n\n\n当对模版进行编译时，会对obj.name进行依赖收集。\n\nobject.defineproperty 的缺陷\n\n当我们给对象新增属性并不会触发组件的重新渲染，因为 object.defineproperty 不能拦截到这些操作。也就为什么我们要通过$setapi来对数据响应式处理，其实本质就是通过definereactive函数对数据object.defineproperty，这样数据通知视图更新了。\n\nfunction $set(obj, key, value) {\n  definereactive(obj, key, value)\n}\n\n\n\n# 对于数组\n\n对于对象我们可以通过object.defineproperty，但是数组并不支持这个方法，所以我们就要重写数组，在保留数组原有功能的同时又能对数组中数据更新触发视图更新。\n\nfunction render() {\n  console.log('模拟视图渲染')\n}\n\nlet arr = [1, 2, 4]\n\nlet methods = ['pop', 'push', 'shift', 'unshift', 'sort', 'reverve', 'splice']\nlet arrayproto = array.prototype\nlet proto = object.create(arrayproto)\nmethods.foreach(method => {\n  proto[method] = function() {\n    render()\n    arrayproto[method].call(this, ...arguments)\n  }\n})\n\nfunction observer(obj) {\n  if (array.isarray(obj)) {\n    obj.__proto__ = proto\n    return\n  }\n}\n\nfunction definereactive(obj, key, value) {\n  observer(value)\n  object.defineproperty(obj, key, {\n    get() {\n      return value\n    },\n    set(newvalue) {\n      observer(newvalue)\n      if (value !== newvalue) {\n        render()\n        value = newvalue\n      }\n    },\n  })\n}\nobserver(obj)\nfunction $set(obj, key, value) {\n  definereactive(obj, key, value)\n}\n\narr.push(123)\n\n\n我们需要理解一下面向切面编程概念（aop），就能更好的理解上面的代码。\n\n> 面向切面编程（aop是aspect oriented program的首字母缩写） ，我们知道，面向对象的特点是继承、多态和封装。而封装就要求将功能分散到不同的对象中去，这在软件设计中往往称为职责分配。实际上也就是说，让不同的类设计不同的方法。这样代码就分散到一个个的类中去了。这样做的好处是降低了代码的复杂程度，使类可重用。\n> 但是人们也发现，在分散代码的同时，也增加了代码的重复性。什么意思呢？比如说，我们在两个类中，可能都需要在每个方法中做日志。按面向对象的设计方法，我们就必须在两个类的方法中都加入日志的内容。也许他们是完全相同的，但就是因为面向对象的设计让类与类之间无法联系，而不能将这些重复的代码统一起来。\n> 也许有人会说，那好办啊，我们可以将这段代码写在一个独立的类独立的方法里，然后再在这两个类中调用。但是，这样一来，这两个类跟我们上面提到的独立的类就有耦合了，它的改变会影响这两个类。那么，有没有什么办法，能让我们在需要的时候，随意地加入代码呢？这种在运行时，动态地将代码切入到类的指定方法、指定位置上的编程思想就是面向切面的编程。\n\nlet methods = ['pop', 'push', 'shift', 'unshift', 'sort', 'reverve', 'splice']\nlet arrayproto = array.prototype\nlet proto = object.create(arrayproto)\nmethods.foreach(method => {\n  proto[method] = function() {\n    render()\n    arrayproto[method].call(this, ...arguments)\n  }\n})\n\n\narrayproto 继承原有数组的原型，然后对数组原型中'pop', 'push', 'shift', 'unshift', 'sort', 'reverve', 'splice'添加自定义函数，当通过上面的方法更新数组时，会进行依赖收集，当必要的时候通知视图更新。\n\n虽然这样实现响应式更新，但也存在缺陷。\n\n * 当你利用索引直接设置一个数组项时，例如：this.arr[index] = newvalue\n * 当你修改数组的长度时，例如：this.arr.length = newlength\n\n参考\n\n * vue数据双向绑定\n * 什么是面向切面编程aop",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"Vue父子组件的生命周期",frontmatter:{title:"Vue父子组件的生命周期",date:"2022-02-16T23:39:27.000Z",permalink:"/pages/40f989/",categories:["Vue2"],tags:[null],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/07.Vue2/04.Vue%E7%88%B6%E5%AD%90%E7%BB%84%E4%BB%B6%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",relativePath:"02.开发/07.Vue2/04.Vue父子组件的生命周期.md",key:"v-d2b3b206",path:"/pages/40f989/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:19},{level:3,title:"Vue生命周期做了什么以及能做什么",slug:"vue生命周期做了什么以及能做什么",normalizedTitle:"vue生命周期做了什么以及能做什么",charIndex:163}],headersStr:"前言 Vue生命周期做了什么以及能做什么",content:"# Vue父子组件的生命周期\n\n\n# 前言\n\n在单个组件中，钩子的执行顺序是beforeCreate-> created -> mounted->... ->destroyed， 但在多个组件嵌套时，父组件和子组件各拥有各自独立的钩子函数，他们的执行顺序有是怎么样？\n\n了解Vue生命周期钩子，就能更好理解这个问题。\n\n\n# Vue生命周期做了什么以及能做什么\n\n * beforeCreate执行时：data和el均未初始化，值为undefined。\n * created执行时：Vue 实例观察的数据对象data初始化，此时可以得到data的值，但Vue 实例使用的根 DOM 元素el还未初始化。\n * beforeMount 执行时：data和el均已经初始化，但此时el并没有渲染进数据，el的值为“虚拟”的元素节点。\n * mounted 执行时：此时el已经渲染完成并挂载到实例上\n * beforeUpdate和updated触发时，el中的数据都已经渲染完成，但只有updated钩子被调用时候，组件dom才被更新。\n * 在created钩子中可以对data数据进行操作，这个时候可以进行数据请求将返回的数据赋给data\n * 在mounted钩子对挂载的dom进行操作，此时，DOM已经被渲染到页面上。\n * 虽然updated函数会在数据变化时被触发，但却不能准确的判断是那个属性值被改变，所以在实际情况中用computed或watch函数来监听属性的变化，并做一些其他的操作。\n * 所有的生命周期钩子自动绑定 this 上下文到实例中，所以不能使用箭头函数来定义一个生命周期方法 (例如 created: () => this.- fetchTodos()),会导致this指向父级。\n * 父子组件的钩子并不会等待请求返回，请求是异步的，VUE设计也不能因为请求没有响应而不执行后面的钩子。所以，我们必须通过v-if来控制子组件钩子的执行时机。\n * 在使用vue-router时有时需要使用来缓存组件状态，这个时候created钩子就不会被重复调用了，如果我们的子组件需要在每次加载或切换状态的时候进行某些操作，可以使用activated钩子触发。\n\n> activated, deactivated 是组件keep-alive时独有的钩子\n\n所以父组件会先执行到beforeMount，接着会执行子组件钩子到挂载结束，再挂载父组件。\n\nVue父子组件渲染过程\n\n父beforeCreate -> 父created-> 父beforeMount -> \n子beforeCreate -> 子created -> 子beforeMount -> 子mounted->\n父mounted\n\n\n子组件更新过程\n\n父beforeUpdate -> 子beforeUpdate -> 子updated -> 父updated\n\n\n父组件更新过程\n\n父beforeUpdate -> 父updated\n\n\n销毁过程\n\n父beforeDestroy -> 子beforeDestroy -> 子destroyed -> 父destroyed\n",normalizedContent:"# vue父子组件的生命周期\n\n\n# 前言\n\n在单个组件中，钩子的执行顺序是beforecreate-> created -> mounted->... ->destroyed， 但在多个组件嵌套时，父组件和子组件各拥有各自独立的钩子函数，他们的执行顺序有是怎么样？\n\n了解vue生命周期钩子，就能更好理解这个问题。\n\n\n# vue生命周期做了什么以及能做什么\n\n * beforecreate执行时：data和el均未初始化，值为undefined。\n * created执行时：vue 实例观察的数据对象data初始化，此时可以得到data的值，但vue 实例使用的根 dom 元素el还未初始化。\n * beforemount 执行时：data和el均已经初始化，但此时el并没有渲染进数据，el的值为“虚拟”的元素节点。\n * mounted 执行时：此时el已经渲染完成并挂载到实例上\n * beforeupdate和updated触发时，el中的数据都已经渲染完成，但只有updated钩子被调用时候，组件dom才被更新。\n * 在created钩子中可以对data数据进行操作，这个时候可以进行数据请求将返回的数据赋给data\n * 在mounted钩子对挂载的dom进行操作，此时，dom已经被渲染到页面上。\n * 虽然updated函数会在数据变化时被触发，但却不能准确的判断是那个属性值被改变，所以在实际情况中用computed或watch函数来监听属性的变化，并做一些其他的操作。\n * 所有的生命周期钩子自动绑定 this 上下文到实例中，所以不能使用箭头函数来定义一个生命周期方法 (例如 created: () => this.- fetchtodos()),会导致this指向父级。\n * 父子组件的钩子并不会等待请求返回，请求是异步的，vue设计也不能因为请求没有响应而不执行后面的钩子。所以，我们必须通过v-if来控制子组件钩子的执行时机。\n * 在使用vue-router时有时需要使用来缓存组件状态，这个时候created钩子就不会被重复调用了，如果我们的子组件需要在每次加载或切换状态的时候进行某些操作，可以使用activated钩子触发。\n\n> activated, deactivated 是组件keep-alive时独有的钩子\n\n所以父组件会先执行到beforemount，接着会执行子组件钩子到挂载结束，再挂载父组件。\n\nvue父子组件渲染过程\n\n父beforecreate -> 父created-> 父beforemount -> \n子beforecreate -> 子created -> 子beforemount -> 子mounted->\n父mounted\n\n\n子组件更新过程\n\n父beforeupdate -> 子beforeupdate -> 子updated -> 父updated\n\n\n父组件更新过程\n\n父beforeupdate -> 父updated\n\n\n销毁过程\n\n父beforedestroy -> 子beforedestroy -> 子destroyed -> 父destroyed\n",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"Vue3开发知乎日报",frontmatter:{title:"Vue3开发知乎日报",date:"2022-01-14T09:43:32.000Z",permalink:"/pages/03d760/",categories:["前端","Vue3"],tags:[null],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/08.Vue3/01.Vue3%E5%BC%80%E5%8F%91%E7%9F%A5%E4%B9%8E%E6%97%A5%E6%8A%A5.html",relativePath:"02.开发/08.Vue3/01.Vue3开发知乎日报.md",key:"v-13a9aae9",path:"/pages/03d760/",headers:[{level:2,title:"项目界面",slug:"项目界面",normalizedTitle:"项目界面",charIndex:25},{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:99},{level:2,title:"个人建议",slug:"个人建议",normalizedTitle:"个人建议",charIndex:261},{level:2,title:"项目实战",slug:"项目实战",normalizedTitle:"项目实战",charIndex:640},{level:3,title:"初始化项目",slug:"初始化项目",normalizedTitle:"初始化项目",charIndex:691},{level:3,title:"静态页面",slug:"静态页面",normalizedTitle:"静态页面",charIndex:2101},{level:3,title:"项目结构",slug:"项目结构",normalizedTitle:"项目结构",charIndex:2124},{level:3,title:"项目 Vue3.0 API 知识点",slug:"项目-vue3-0-api-知识点",normalizedTitle:"项目 vue3.0 api 知识点",charIndex:2469},{level:2,title:"实战",slug:"实战",normalizedTitle:"实战",charIndex:642},{level:3,title:"时间处理",slug:"时间处理",normalizedTitle:"时间处理",charIndex:3444},{level:3,title:"请求接口",slug:"请求接口",normalizedTitle:"请求接口",charIndex:4426},{level:3,title:"初始化轮播图",slug:"初始化轮播图",normalizedTitle:"初始化轮播图",charIndex:5271},{level:3,title:"详情页的功能",slug:"详情页的功能",normalizedTitle:"详情页的功能",charIndex:5671},{level:2,title:"完整的项目",slug:"完整的项目",normalizedTitle:"完整的项目",charIndex:7062},{level:3,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:7078}],headersStr:"项目界面 前言 个人建议 项目实战 初始化项目 静态页面 项目结构 项目 Vue3.0 API 知识点 实战 时间处理 请求接口 初始化轮播图 详情页的功能 完整的项目 总结",content:'# Vue3 beta 开发知乎日报\n\n\n\n\n# 项目界面\n\n一个简单的小项目，基于Vue3.0 + axios + swiper实现。让大家对 Vue3.0 API 有一些新的认识。\n\n\n\n\n# 前言\n\nVue3.0 个人觉得学习挺容易的，Vue2.0 水平怎么样，Vue3.0 也就差不多那样，所以 Vue2.0 学的不太好的同学还是回去补一补，现阶段急于学习 Vue3.0 反而容易造成知识混淆。很多写法和 Vue2.0 相似，学习成本不高，但是很多底层东西进行的重构，所以目前不建议直接使用在公司项目上。\n\n\n# 个人建议\n\n目前 Vue3.0 开发版接近尾声，预计下个月就上线稳定版，存在以下问题，不建议在公司项目直接使用，估计还的等一段时间吧。\n\n * "vue-router": "^4.0.0-alpha.6" 还在开发中。这个阶段还未定型，今天解决的 BUG 可能明天就是另外的 Bug。\n * 第三方库还未兼容到 Vue3.0 意想不到的兼容性等问题。\n * Vue3.0 API 部分功能还未完善，Vue2.0 和 Vue3.0 去实现。\n * 遇到技术难点，需要花大把时间去琢磨。一些问题涉及基础的东西，底子不牢，也能难查出问题所在。\n\n综上所述，用在公司项目上，估计得折腾得够呛，或者未能按时间开发完成，产品问题多还会被扣奖金绩效等，吃力不讨好。\n\n但是做为先行者去学习和开发项目，收益颇丰，更加能体会 Vue 开发者如何去架构和设计思想所在。\n\n\n# 项目实战\n\nVue 3.0 在兼容 2.x 基础上做改进。且能使用 Vue 3.0 新特性。\n\n\n# 初始化项目\n\n1、安装 vue-cli3\n\nnpm install -g @vue/cli\n\n\n2、创建项目\n\nvue create zhihu\n\nVue CLI v4.4.6\n? Please pick a preset:\n  default (babel, eslint)\n> Manually select features\n\nbabel：javascript转译器，将最新版的js语法（es6、es7）转换为现阶段浏览器可以兼容的js代码\ntypescript：使用 TypeScript 书写源码\nPWA：渐进式WEB应用\nRouter：使用vue-router\nVuex：使用vuex\nCSS Pre-processors：css预处理器\nLinter / Formatter：代码规范标准\nUnit Testing：单元测试\nE2E Testing：e2e测试\n\n? Please pick a preset: Manually select features\n? Check the features needed for your project:\n (*) Babel\n ( ) TypeScript\n ( ) Progressive Web App (PWA) Support\n (*) Router\n ( ) Vuex\n>(*) CSS Pre-processors\n ( ) Linter / Formatter\n ( ) Unit Testing\n ( ) E2E Testing\n\n\n3、Vue 版本升级\n\nvue add vue-next\n// 将Vue 2.6.x版本升级到\n\n\n查看项目package.json\n\n  "dependencies": {\n     "vue": "^3.0.0-beta.1",\n     "vue-router": "^4.0.0-alpha.6"\n    },\n    "devDependencies": {\n    "@vue/cli-plugin-babel": "~4.4.0",\n    "@vue/cli-plugin-eslint": "~4.4.0",\n    "@vue/cli-plugin-router": "~4.4.0",\n    "@vue/cli-service": "~4.4.0",\n    "@vue/compiler-sfc": "^3.0.0-beta.1",\n    "@vue/eslint-config-prettier": "^6.0.0",\n    "babel-eslint": "^10.1.0",\n    "eslint": "^6.7.2",\n    "eslint-plugin-prettier": "^3.1.3",\n    "eslint-plugin-vue": "^7.0.0-alpha.0",\n    "less": "^3.0.4",\n    "less-loader": "^5.0.0",\n    "prettier": "^1.19.1",\n    "vue-cli-plugin-vue-next": "~0.1.3"\n  },\n\n\nvue-router 还在开发中，vue-cli-plugin-vue-next 用来处理 Vue3.0 编译相关语法。\n\n\n# 静态页面\n\n项目布局，静态页面，略过\n\n\n# 项目结构\n\n.\n├── src\n│   ├── api\n│   ├── assets\n│   ├── components\n│   ├── router\n│   ├── utils\n│   ├── views\n│   ├── App.vue\n│   └── main.js\n├── public\n├── vue.config.js\n└── package.json\n\n\n * src/api: 用于存放接口和管理。\n * src/assets: 静态资源目录。\n * src/components: 用于存放全局组件。\n * src/router: 用于存放路由相关的文件。\n * src/utils: 用于存放工具类相关的文件\n * src/views: 用于存放视图相关组件。\n\n\n# 项目 Vue3.0 API 知识点\n\n# setup\n\nsetup 函数是一个新的组件选项。作为在组件内使用 Composition API 的入口点。\n\n生命周期\n\n创建组件实例，然后初始化 props ，紧接着就调用 setup 函数。从生命周期钩子的视角来看，它会在 beforeCreate 钩子之前被调用。\n\n注意事项：\n\nthis 不能使用，了解 Vue2.0 的同学应该知道，在这生命周期之间。data()数据还未生成，所以 this.xx不能调用的。\n\n# 响应式数据\n\nVue2.0 存放在data() {return {} } 就可以直接调用，而 Vue3.0 则需要通过ref或者reactive 来声明响应式数据。\n\nref\n\n接受一个参数值并返回一个响应式且可改变的 ref 对象。ref 对象拥有一个指向内部值的单一属性 .value。\n\nconst count = ref(0)\nconsole.log(count.value) // 0\n\ncount.value++\nconsole.log(count.value) // 1\n\n\n如果传入 ref 的是一个对象，将调用 reactive 方法进行深层响应转换。\n\nreactive\n\n接收一个普通对象然后返回该普通对象的响应式代理。\n\nconst obj = reactive({ count: 0 })\n\n\n# 计算属性 computed\n\ncomputed 传入一个 getter 函数，返回一个默认不可手动修改的 ref 对象。\n\nconst count = ref(1)\nconst plusOne = computed(() => count.value + 1)\n\nconsole.log(plusOne.value) // 2\n\n\n# watch\n\nwatch 需要侦听特定的数据源，并在回调函数中执行副作用。\n\nconst count = ref(0)\nwatch(count, (count, prevCount) => {\n  /* ... */\n})\n\n\n以上教程皆来自 Vue 组合式 API\n\n\n# 实战\n\n项目如果太抠细节的去讲，不知道从何说起，以下主要分为几个功能阐述这个项目。想了解项目更多细节，可以克隆我的项目，运行调试。\n\n\n# 时间处理\n\nsrc/utils/index.js\n\nfunction formatTime(time) {\n  let arr = [];\n  time = time.toLocaleDateString();\n  time.replace(/\\d+/g, (val) => {\n    val = val < 2 ? `0${val}` : val;\n    arr.push(val);\n  });\n  return arr;\n}\nfunction convertTime(time) {\n  time = time.replace(/^(\\d{4})(\\d{2})(\\d{2})$/g,(_,g1,g2,g3)=>{\n    return `${g1}/${g2}/${g3}`\n  })\n  return new Date(time);\n}\n\nexport default {\n  formatTime,\n  convertTime,\n};\n\n\nformatTime()中的参数time为new Date()的标准日期格式，然后通过toLocaleDateString()转成2020/7/21，在依次添加到数组里面。\n\n在不同环境下，输出不同结果。`toLocaleDateString`\n // 浏览器\n["2020", "7", "21"]\n\n// [Running] node\n[ \'7\', \'21\', \'2020\']\n\n\nconvertTime方法：将格式20200721转成2020/07/21的正则表达式。\n\n应用\n\nimport utils from "../utils";\n\nconst state = reactive({\n  date: new Date(),\n  bannerData: [],\n  newsData: []\n});\n\nlet day = computed(() => utils.formatTime(state.date)[2]);\nlet month = computed(() => utils.formatTime(state.date)[1]);\n\nreturn {\n day,\n month\n};\n\n\n通过计算属性，计算出几月份和几日。写法不像 Vue2.0 直接包裹在computed里面。\n\n\n# 请求接口\n\nsrc/api/目录下的axios.js 对axios进行二次封装，zhihu.js相关的知乎日报接口。 index.js对多个接口进行整合。\n\n// zhihu.js\nimport axios from \'./axios\'\n\nfunction API_LATEST(){\n  return axios.get(\'/news/latest\')\n}\nfunction API_DETAIL(id){\n  return axios.get(`/news/${id}`)\n}\n\nexport default {\n  API_LATEST,\n  API_DETAIL\n}\n\n// index.js\nimport zhihu from \'./zhihu\'\nexport default { zhihu }\n\n\n应用\n\nimport API from "../api";\n\nexport default {\n  setup() {\n    const state = reactive({\n      bannerData: [],\n      newsData: []\n    });\n     // 在渲染组件前，异步加载数据\n    onBeforeMount(async () => {\n      const { date, stories, top_stories } = await API.zhihu.API_LATEST();\n      state.date = utils.convertTime(date);\n      state.newsData.push({\n        date: state.date,\n        stories\n      });\n      state.bannerData = top_stories;\n    });\n    return {\n      ...toRefs(state)\n    };\n  }\n\n\n\n# 初始化轮播图\n\nimport { watch } from "vue";\nfunction initSwiper() {\n  new Swiper(".swiper-container", {\n    loop: true,\n    pagination: {\n      el: ".swiper-pagination"\n    }\n  });\n}\nsetup(props) {\n watch(\n   () => props.bannerData,\n   () => initSwiper()\n );\n}\n\n\n注意点：当获取轮播图的数据赋值到state上，此时数据还未渲染到组件上。\n\n解决方法：\n\n * Vue2.0调用 Vue.nextTick API（在下次 DOM 更新循环结束之后执行延迟回调。）去执行初始化。\n * Vue3.0 通过watch 去监听数据改变，在执行初始化。\n\n\n# 详情页的功能\n\n点击列表详情页时候，需要携带一个文章的 ID 过去，去请求详情接口获取更多内容。 如果我上面说的setup()方法有印象的话，在setup()中不能调用this。 习惯了Vue2.0跳转方式this.$router.push({name: \'detail\',params:{id: xx}}) Vue3.0 突然不知如何下手，好在 Vue2.0 还提供组件式跳转。\n\n<router-link :to="{path:`/detail/${item.id}`}" </router-link>\n\n\n获取路由的参数\n\nVue3.0 路由还在开发中，暂时还未能获取路由的参数 API，只能先用 Vue2.0 写法先代替了。\n\n难点：如何在 Vue2.0 中修改 Vue3.0 的值，且还能被watch监听到。\n\n解决方法：\n\n直接用 Vue2.0 中实现功能。（嗯，我这是 Vue3.0 教程当然得用 Vue3.0 去实现咯）\n\n我在 Vue3.0 中，我先声明了响应式数据，通过 Vue2.0 获取路由参数后，尝试this.id = xx 打印下log，输出 this 对象如下，功能实现了。\n\n\n\n然而reactive的方式去声明响应式数据，其他不变，发现并能查到id。深入之后了解到ref和 Vue2.0 的data( return {} )底层原理都是基于Object.definedproperty实现，所以可以通过 this 去修改。reactive则式Prxoy实现的。还有 ref 中包裹是个对象话，也会通过Prxoy实现。\n\nimport { watch, toRefs, ref, reactive } from \'vue\'\nimport API from \'../api\'\nexport default {\n    setup() {\n        let id = ref(0)\n        let state = reactive({\n            image: \'\',\n            body: \'\',\n            title: \'\',\n            section: \'\'\n        })\n        watch(id, async () => {\n            let { image, body, title, section } = await API.zhihu.API_DETAIL(id.value)\n            state.image = image\n            state.body = body\n            ;(state.title = title), (state.section = section ? section.name : \'佚名\')\n        })\n        return {\n            id,\n            ...toRefs(state)\n        }\n    },\n    beforeMount() {\n        let { id } = this.$route.params\n        this.id = id\n    }\n}\n\n\n\n# 完整的项目\n\n知乎日报\n\n\n# 总结\n\nVue3.0 实现知乎日报个人感觉还是不错，新写法或多或少有些不习惯，比如有个toRef少写 s，调试了半天也没报错，好在后面注意到了。多写几次后就会习惯，对比 Vue3.0 的各方面提升，一些写法的变化，无可厚非。所以还是尽快去熟悉 Vue3.0 的知识，等 UI 库等兼容 Vue3.0 版本上线就正式使用了。相信这一天很快来临。\n\n参考链接：\n\n * http://www.javascriptpeixun.cn/course/1435/task/117818/show',normalizedContent:'# vue3 beta 开发知乎日报\n\n\n\n\n# 项目界面\n\n一个简单的小项目，基于vue3.0 + axios + swiper实现。让大家对 vue3.0 api 有一些新的认识。\n\n\n\n\n# 前言\n\nvue3.0 个人觉得学习挺容易的，vue2.0 水平怎么样，vue3.0 也就差不多那样，所以 vue2.0 学的不太好的同学还是回去补一补，现阶段急于学习 vue3.0 反而容易造成知识混淆。很多写法和 vue2.0 相似，学习成本不高，但是很多底层东西进行的重构，所以目前不建议直接使用在公司项目上。\n\n\n# 个人建议\n\n目前 vue3.0 开发版接近尾声，预计下个月就上线稳定版，存在以下问题，不建议在公司项目直接使用，估计还的等一段时间吧。\n\n * "vue-router": "^4.0.0-alpha.6" 还在开发中。这个阶段还未定型，今天解决的 bug 可能明天就是另外的 bug。\n * 第三方库还未兼容到 vue3.0 意想不到的兼容性等问题。\n * vue3.0 api 部分功能还未完善，vue2.0 和 vue3.0 去实现。\n * 遇到技术难点，需要花大把时间去琢磨。一些问题涉及基础的东西，底子不牢，也能难查出问题所在。\n\n综上所述，用在公司项目上，估计得折腾得够呛，或者未能按时间开发完成，产品问题多还会被扣奖金绩效等，吃力不讨好。\n\n但是做为先行者去学习和开发项目，收益颇丰，更加能体会 vue 开发者如何去架构和设计思想所在。\n\n\n# 项目实战\n\nvue 3.0 在兼容 2.x 基础上做改进。且能使用 vue 3.0 新特性。\n\n\n# 初始化项目\n\n1、安装 vue-cli3\n\nnpm install -g @vue/cli\n\n\n2、创建项目\n\nvue create zhihu\n\nvue cli v4.4.6\n? please pick a preset:\n  default (babel, eslint)\n> manually select features\n\nbabel：javascript转译器，将最新版的js语法（es6、es7）转换为现阶段浏览器可以兼容的js代码\ntypescript：使用 typescript 书写源码\npwa：渐进式web应用\nrouter：使用vue-router\nvuex：使用vuex\ncss pre-processors：css预处理器\nlinter / formatter：代码规范标准\nunit testing：单元测试\ne2e testing：e2e测试\n\n? please pick a preset: manually select features\n? check the features needed for your project:\n (*) babel\n ( ) typescript\n ( ) progressive web app (pwa) support\n (*) router\n ( ) vuex\n>(*) css pre-processors\n ( ) linter / formatter\n ( ) unit testing\n ( ) e2e testing\n\n\n3、vue 版本升级\n\nvue add vue-next\n// 将vue 2.6.x版本升级到\n\n\n查看项目package.json\n\n  "dependencies": {\n     "vue": "^3.0.0-beta.1",\n     "vue-router": "^4.0.0-alpha.6"\n    },\n    "devdependencies": {\n    "@vue/cli-plugin-babel": "~4.4.0",\n    "@vue/cli-plugin-eslint": "~4.4.0",\n    "@vue/cli-plugin-router": "~4.4.0",\n    "@vue/cli-service": "~4.4.0",\n    "@vue/compiler-sfc": "^3.0.0-beta.1",\n    "@vue/eslint-config-prettier": "^6.0.0",\n    "babel-eslint": "^10.1.0",\n    "eslint": "^6.7.2",\n    "eslint-plugin-prettier": "^3.1.3",\n    "eslint-plugin-vue": "^7.0.0-alpha.0",\n    "less": "^3.0.4",\n    "less-loader": "^5.0.0",\n    "prettier": "^1.19.1",\n    "vue-cli-plugin-vue-next": "~0.1.3"\n  },\n\n\nvue-router 还在开发中，vue-cli-plugin-vue-next 用来处理 vue3.0 编译相关语法。\n\n\n# 静态页面\n\n项目布局，静态页面，略过\n\n\n# 项目结构\n\n.\n├── src\n│   ├── api\n│   ├── assets\n│   ├── components\n│   ├── router\n│   ├── utils\n│   ├── views\n│   ├── app.vue\n│   └── main.js\n├── public\n├── vue.config.js\n└── package.json\n\n\n * src/api: 用于存放接口和管理。\n * src/assets: 静态资源目录。\n * src/components: 用于存放全局组件。\n * src/router: 用于存放路由相关的文件。\n * src/utils: 用于存放工具类相关的文件\n * src/views: 用于存放视图相关组件。\n\n\n# 项目 vue3.0 api 知识点\n\n# setup\n\nsetup 函数是一个新的组件选项。作为在组件内使用 composition api 的入口点。\n\n生命周期\n\n创建组件实例，然后初始化 props ，紧接着就调用 setup 函数。从生命周期钩子的视角来看，它会在 beforecreate 钩子之前被调用。\n\n注意事项：\n\nthis 不能使用，了解 vue2.0 的同学应该知道，在这生命周期之间。data()数据还未生成，所以 this.xx不能调用的。\n\n# 响应式数据\n\nvue2.0 存放在data() {return {} } 就可以直接调用，而 vue3.0 则需要通过ref或者reactive 来声明响应式数据。\n\nref\n\n接受一个参数值并返回一个响应式且可改变的 ref 对象。ref 对象拥有一个指向内部值的单一属性 .value。\n\nconst count = ref(0)\nconsole.log(count.value) // 0\n\ncount.value++\nconsole.log(count.value) // 1\n\n\n如果传入 ref 的是一个对象，将调用 reactive 方法进行深层响应转换。\n\nreactive\n\n接收一个普通对象然后返回该普通对象的响应式代理。\n\nconst obj = reactive({ count: 0 })\n\n\n# 计算属性 computed\n\ncomputed 传入一个 getter 函数，返回一个默认不可手动修改的 ref 对象。\n\nconst count = ref(1)\nconst plusone = computed(() => count.value + 1)\n\nconsole.log(plusone.value) // 2\n\n\n# watch\n\nwatch 需要侦听特定的数据源，并在回调函数中执行副作用。\n\nconst count = ref(0)\nwatch(count, (count, prevcount) => {\n  /* ... */\n})\n\n\n以上教程皆来自 vue 组合式 api\n\n\n# 实战\n\n项目如果太抠细节的去讲，不知道从何说起，以下主要分为几个功能阐述这个项目。想了解项目更多细节，可以克隆我的项目，运行调试。\n\n\n# 时间处理\n\nsrc/utils/index.js\n\nfunction formattime(time) {\n  let arr = [];\n  time = time.tolocaledatestring();\n  time.replace(/\\d+/g, (val) => {\n    val = val < 2 ? `0${val}` : val;\n    arr.push(val);\n  });\n  return arr;\n}\nfunction converttime(time) {\n  time = time.replace(/^(\\d{4})(\\d{2})(\\d{2})$/g,(_,g1,g2,g3)=>{\n    return `${g1}/${g2}/${g3}`\n  })\n  return new date(time);\n}\n\nexport default {\n  formattime,\n  converttime,\n};\n\n\nformattime()中的参数time为new date()的标准日期格式，然后通过tolocaledatestring()转成2020/7/21，在依次添加到数组里面。\n\n在不同环境下，输出不同结果。`tolocaledatestring`\n // 浏览器\n["2020", "7", "21"]\n\n// [running] node\n[ \'7\', \'21\', \'2020\']\n\n\nconverttime方法：将格式20200721转成2020/07/21的正则表达式。\n\n应用\n\nimport utils from "../utils";\n\nconst state = reactive({\n  date: new date(),\n  bannerdata: [],\n  newsdata: []\n});\n\nlet day = computed(() => utils.formattime(state.date)[2]);\nlet month = computed(() => utils.formattime(state.date)[1]);\n\nreturn {\n day,\n month\n};\n\n\n通过计算属性，计算出几月份和几日。写法不像 vue2.0 直接包裹在computed里面。\n\n\n# 请求接口\n\nsrc/api/目录下的axios.js 对axios进行二次封装，zhihu.js相关的知乎日报接口。 index.js对多个接口进行整合。\n\n// zhihu.js\nimport axios from \'./axios\'\n\nfunction api_latest(){\n  return axios.get(\'/news/latest\')\n}\nfunction api_detail(id){\n  return axios.get(`/news/${id}`)\n}\n\nexport default {\n  api_latest,\n  api_detail\n}\n\n// index.js\nimport zhihu from \'./zhihu\'\nexport default { zhihu }\n\n\n应用\n\nimport api from "../api";\n\nexport default {\n  setup() {\n    const state = reactive({\n      bannerdata: [],\n      newsdata: []\n    });\n     // 在渲染组件前，异步加载数据\n    onbeforemount(async () => {\n      const { date, stories, top_stories } = await api.zhihu.api_latest();\n      state.date = utils.converttime(date);\n      state.newsdata.push({\n        date: state.date,\n        stories\n      });\n      state.bannerdata = top_stories;\n    });\n    return {\n      ...torefs(state)\n    };\n  }\n\n\n\n# 初始化轮播图\n\nimport { watch } from "vue";\nfunction initswiper() {\n  new swiper(".swiper-container", {\n    loop: true,\n    pagination: {\n      el: ".swiper-pagination"\n    }\n  });\n}\nsetup(props) {\n watch(\n   () => props.bannerdata,\n   () => initswiper()\n );\n}\n\n\n注意点：当获取轮播图的数据赋值到state上，此时数据还未渲染到组件上。\n\n解决方法：\n\n * vue2.0调用 vue.nexttick api（在下次 dom 更新循环结束之后执行延迟回调。）去执行初始化。\n * vue3.0 通过watch 去监听数据改变，在执行初始化。\n\n\n# 详情页的功能\n\n点击列表详情页时候，需要携带一个文章的 id 过去，去请求详情接口获取更多内容。 如果我上面说的setup()方法有印象的话，在setup()中不能调用this。 习惯了vue2.0跳转方式this.$router.push({name: \'detail\',params:{id: xx}}) vue3.0 突然不知如何下手，好在 vue2.0 还提供组件式跳转。\n\n<router-link :to="{path:`/detail/${item.id}`}" </router-link>\n\n\n获取路由的参数\n\nvue3.0 路由还在开发中，暂时还未能获取路由的参数 api，只能先用 vue2.0 写法先代替了。\n\n难点：如何在 vue2.0 中修改 vue3.0 的值，且还能被watch监听到。\n\n解决方法：\n\n直接用 vue2.0 中实现功能。（嗯，我这是 vue3.0 教程当然得用 vue3.0 去实现咯）\n\n我在 vue3.0 中，我先声明了响应式数据，通过 vue2.0 获取路由参数后，尝试this.id = xx 打印下log，输出 this 对象如下，功能实现了。\n\n\n\n然而reactive的方式去声明响应式数据，其他不变，发现并能查到id。深入之后了解到ref和 vue2.0 的data( return {} )底层原理都是基于object.definedproperty实现，所以可以通过 this 去修改。reactive则式prxoy实现的。还有 ref 中包裹是个对象话，也会通过prxoy实现。\n\nimport { watch, torefs, ref, reactive } from \'vue\'\nimport api from \'../api\'\nexport default {\n    setup() {\n        let id = ref(0)\n        let state = reactive({\n            image: \'\',\n            body: \'\',\n            title: \'\',\n            section: \'\'\n        })\n        watch(id, async () => {\n            let { image, body, title, section } = await api.zhihu.api_detail(id.value)\n            state.image = image\n            state.body = body\n            ;(state.title = title), (state.section = section ? section.name : \'佚名\')\n        })\n        return {\n            id,\n            ...torefs(state)\n        }\n    },\n    beforemount() {\n        let { id } = this.$route.params\n        this.id = id\n    }\n}\n\n\n\n# 完整的项目\n\n知乎日报\n\n\n# 总结\n\nvue3.0 实现知乎日报个人感觉还是不错，新写法或多或少有些不习惯，比如有个toref少写 s，调试了半天也没报错，好在后面注意到了。多写几次后就会习惯，对比 vue3.0 的各方面提升，一些写法的变化，无可厚非。所以还是尽快去熟悉 vue3.0 的知识，等 ui 库等兼容 vue3.0 版本上线就正式使用了。相信这一天很快来临。\n\n参考链接：\n\n * http://www.javascriptpeixun.cn/course/1435/task/117818/show',charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"Vue3入门",frontmatter:{title:"Vue3入门",date:"2022-01-14T09:43:32.000Z",permalink:"/pages/1182d2/",categories:["前端","Vue3"],tags:[null],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/08.Vue3/02.Vue3%E5%85%A5%E9%97%A8.html",relativePath:"02.开发/08.Vue3/02.Vue3入门.md",key:"v-e01b4200",path:"/pages/1182d2/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:14},{level:3,title:"Vue3.0 几大优点",slug:"vue3-0-几大优点",normalizedTitle:"vue3.0 几大优点",charIndex:630},{level:3,title:"性能 Performance",slug:"性能-performance",normalizedTitle:"性能 performance",charIndex:936},{level:3,title:"如何学习 Vue3.0",slug:"如何学习-vue3-0",normalizedTitle:"如何学习 vue3.0",charIndex:1104},{level:3,title:"Composition API",slug:"composition-api",normalizedTitle:"composition api",charIndex:104},{level:3,title:"其他 API",slug:"其他-api",normalizedTitle:"其他 api",charIndex:5563},{level:3,title:"Vue3.0 小总结",slug:"vue3-0-小总结",normalizedTitle:"vue3.0 小总结",charIndex:6188}],headersStr:"前言 Vue3.0 几大优点 性能 Performance 如何学习 Vue3.0 Composition API 其他 API Vue3.0 小总结",content:"# Vue3 入门\n\n\n# 前言\n\n在一次意外看到Vue3.0课程打折，而且还是个大牛在教，我被贪图小利的驱使下，购买了这个课程，然后想着课程都买了不看浪费。图了让自己良心过意得去进去看看，经过大牛讲解，我被Composition API等新写法震撼到了。在未接触Vue3.0之前我听说Vue3.0模仿 React等其他语言，很多 API 进行重大重构，已经不像 Vue，我在想如果 Vue3.0 学习成本很高的话，不如去学学React看看。原因React用户基数多，大型项目完善，找工作也更容易等。在没规划的学习React一段时间后，感觉自己学到一些皮毛，而且学的很慢，可能方法没找对。\n\n被Vue3.0等新的语法震撼到后，我去看Composition API官网和相关学习资料后，决定认真去学Vue3.0，在学了一两个小时后，发现Vue3.0比想象中更加简单。网上这方面的教程估计也很少，很多是介绍Vue3.0新特性这类的吧（至少我看好几篇都是这样的）。Vue3.0 用法主要还是Composition API为主，学会了估计 Vue3.0 也就差不多了。（2020/7/21 补充，虽然用法简单，但是完整的 vue3.0 实战还是需要等待一段时间，毕竟生态圈还在开发中，比如 vue3.0 需要使用vue-router4.xx keep-alive等现阶段还在开发中，急于使用的话，一些功能实现的话需要 vue2.0vue3.0 混合使用吧。）\n\n\n# Vue3.0 几大优点\n\n * Performance：相对于 Vue2.0 性能显著提升。\n * Tree shaking support：可以将无用模块“剪辑”，仅打包需要的。\n * Composition API：组合 API\n * Fragment, Teleport, Suspense：Fragment\n * 不在限制模版中的单个根节点。Teleport 传送门。Suspense “悬念”。\n * Better TypeScript support：更友好的的 TypeScript 支持。 Custom Renderer API：暴露了自定义渲染 API——用在 WebGL 渲染器等。\n\n\n# 性能 Performance\n\n * 重写的虚拟 Dom 实现\n * 编译器获知的快速执行路径。\n * 更高效的组件初始化\n * update 1.3 ~ 2 倍 的性能提升\n * SSR 速度 2 ~ 3 倍\n\n> Vue 目前稳定版本 2.6.x，预计 8 月份上线 2.7.x 版本（增加 Vue3 相关 API 等）。\n\n\n# 如何学习 Vue3.0\n\n接下来，介绍 Vue3.0 和 Vue2.0 之间的差别和经验之谈，菜鸟一枚，大言不惭在各位面前献丑了。熟悉以下知识点估计面试、项目实战也木问题。\n\n * Composition API\n * Vue 3.0 相关的原理。\n\n\n# Composition API\n\n前往官网，Vue Composition API 预计 8 月份左右正式版发布了，Vue Composition API用法基本上是板上钉钉的事，几乎不会做太大的调整，现在先熟悉一下，等生态完善入手更快。\n\n废话不多说了，直接开始干。\n\n# Options API VS Composition API\n\nVue2.0 Options API左图，Vue3.0 Composition API右图\n\n\n\n如图所示，Vue2.0 Options API 转换成 Vue3.0 Composition API 的 setup() {}东西，然后抛出我们需要的属性名。\n\n总结：Composition API好处\n\n * 相关逻辑的代码组织起来，提高可维护性和可读性。\n * 更好重用逻辑代码。（哈哈哈，mixins 可以废用）\n\n# setup\n\nsetup 函数是一个新的组件选项。作为在组件内使用 Composition API 的入口点。\n\n生命周期\n\n初始化 props，在 beforeCreate 钩子之间调用。\n\n注意事项\n\n从上面生命周期可以得到，beforeCreate时候，data还未生成，this 在setup()中不可用。\n\nsetup 可以接受 props context 参数\n\n  setup(props) {\n    // 输出的值 Proxy类型\n    console.log(props);\n\n    如果父组件的props更新，console.log并不会再次输出的值。需要调用 watchEffect 函数.\n    watchEffect(()=>{\n        console.log(props);\n    })\n\n  }\n\n\nwatchEffect 立即执行传入的一个函数，并响应式追踪其依赖，并在其依赖变更时重新运行该函数。\n\n> 个人建议：不要将 Vue3.0 想成新东西，这样学习就有排斥心理。而应该想成换汤不换药的东西，像披着马甲的Vue。我想这样更加有助于学习吧。\n\n# 响应式数据 VS\n\nVue2.0 写在data里面属性名，在当前组件就可以直接引用，数据改变就会更新视图。\n\n  data() {\n    return {};\n  },\n\n\nVue3.0 需要通过 ref 或者 reactive 来声明响应式数据。\n\n> ref接受一个参数值并返回一个响应式且可改变的 ref 对象。 而不是 Vue2.0 ref 被用来给元素或子组件注册引用信息。在这说明此ref非彼ref不要混淆。\n\n进阶：\n\nVue2.0 的响应式原理基于 Object. defineproperty 实现。\n\nVue3.0 ref 响应式原理基于 Object. defineproperty，而 reactive 响应式原理则我们常说的 Proxy。\n\nref(0) 刚接触时候ref里面0是什么鬼，还以为 Vue2.0 某个 DOM 或组件，后来了解到 0 只是个响应式初始值，而且也可以是个对象。如 ref({ count: 1})等，因为基于Object. defineproperty 就有了给对象新增属性和修改数组数据缺陷。\n\n# 模板 Refs\n\n我上面说过 Vue3.0 全面兼容 Vue2.0，那么 Vue2.0 的 ref API，又该如何调用那。\n\n<template>\n    <div ref=\"root\"></div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\n\nexport default {\n    setup() {\n        const root = ref(null)\n\n        onMounted(() => {\n            // 在渲染完成后, 这个 div DOM 会被赋值给 root ref 对象\n            console.log(root.value) // <div/>\n        })\n\n        return {\n            root\n        }\n    }\n}\n<\/script>\n\n\n看到上面这段代码，真的佩服尤大大的脑洞，设计出 扩展ref，且和设计理念想符合，丝毫没有增加新的学习成本，也不用担心版本一样，混淆用法。\n\n# 函数调用\n\n写了一个例子来做对比，Vue2.0 和 Vue3.0 是如何调用的。\n\nvue2.0\n\n<template>\n    <div>\n        {{total}}\n        <div @click=\"handleClick(0)\">减</div>\n        <div @click=\"handleClick(1)\">加</div>\n    </div>\n</template>\n<script>\n    export default {\n        data() {\n            return { total: 0 }\n        },\n        methods: {\n            handleClick(type) {\n                type === 1 ? this.total++ : this.total--\n            }\n        }\n    }\n<\/script>\n\n\nVue3.0\n\n<template>\n    {{total}}\n    <div @click=\"handleClick(0)\">减</div>\n    <div @click=\"handleClick(1)\">加</div>\n</template>\n<script>\n    import { ref, reactive } from 'vue'\n\n    export default {\n        setup(props) {\n            let total = ref(0)\n            // reactive 基于Proxy对数据深度监听，声明响应式数据\n            let newTotal = reactive({\n                total: 0,\n                arr: [0]\n            })\n            function handleClick(type) {\n                type === 1 ? total.value++ : total.value--\n                // reactive 写法\n                type === 1 ? newTotal.total++ : newTotal.total--\n                newTotal.arr[0] = newTotal.arr[0] + 1\n            }\n            return {\n                total,\n                handleClick\n            }\n        }\n    }\n<\/script>\n\n\n细品上面的区别\n\n * ref 对象拥有一个指向内部值的单一属性 .value (需注意)，在模版中使用，无需 .value。\n * 模版中的不在限制单个根节点。\n * reactive 支持arr[0] = arr[0] + 1,不需要如 vue2.0 $set API 去更新其中的值。\n\n# computed\n\n简单来说，用法差不多。\n\n扩展\n\nVue3.0 中 computed 传入一个getter，函数，返回一个不可更改的 ref 对象。\n\nVue2.0\n\n  data: {\n    return { message: 'Hello' }\n  },\n  computed: {\n    // 计算属性的 getter\n    reversedMessage: function () {\n      // `this` 指向 vm 实例\n      return this.message.split('').reverse().join('')\n    }\n  }\n\n\nVue3.0\n\nimport { ref } from \"vue\";\n\nexport default {\n  setup(props) {\n    let message = ref('hello world');\n    const reversedMessage = computed(() => message.value.split('').reverse().join(''))\n\n    return {\n      reversedMessage\n    };\n  }\n};\n<\/script>\n\n\n# watch\n\nwatch API 完全等效于 2.x this.$watch （以及 watch 中相应的选项）。watch 需要侦听特定的数据源，并在回调函数中执行副作用。默认情况是懒执行的，也就是说仅在侦听的源变更时才执行回调。\n\n# 生命周期钩子函数\n\n与 2.x 版本生命周期相对应的组合式 API\n\n * beforeCreate -> 使用 setup()\n * created -> 使用 setup()\n * beforeMount -> onBeforeMount\n * mounted -> onMounted\n * beforeUpdate -> onBeforeUpdate\n * updated -> onUpdated\n * beforeDestroy -> onBeforeUnmount\n * destroyed -> onUnmounted\n * errorCaptured -> onErrorCaptured\n\n新增的钩子函数\n\n除了和 2.x 生命周期等效项之外，组合式 API 还提供了以下调试钩子函数：\n\n * onRenderTracked\n * onRenderTriggered\n\n这两个钩子我暂时还不太清楚，后面了解清楚再补上。\n\n\n# 其他 API\n\n以下这些 API 用法目测觉得很简单，如有不懂自行官网查阅。\n\nreadonly\n\n和Object.freeze() 方法相似，不能修改值，会提示报错。（哈哈，只能看不能摸）\n\n传入一个对象（响应式或普通）或 ref，返回一个原始对象的只读代理。一个只读的代理是“深层的”，对象内部任何嵌套的属性也都是只读的。\n\nunref\n\n如果参数是一个 ref 则返回它的 value，否则返回参数本身。它是 val = isRef(val) ? val.value : val 的语法糖。\n\ntoRef\n\ntoRef 可以用来为一个 reactive 对象的属性创建一个 ref。这个 ref 可以被传递并且能够保持响应性。\n\ntoRefs\n\n把一个响应式对象转换成普通对象，该普通对象的每个 property 都是一个 ref ，和响应式对象 property 一一对应。\n\nisRef\n\n检查一个值是否为一个 ref 对象。\n\nisProxy\n\n检查一个对象是否是由 reactive 或者 readonly 方法创建的代理。\n\nisReactive\n\n检查一个对象是否是由 reactive 创建的响应式代理。\n\n如果这个代理是由 readonly 创建的，但是又被 reactive 创建的另一个代理包裹了一层，那么同样也会返回 true。\n\nisReadonly\n\n检查一个对象是否是由 readonly 创建的只读代理。\n\n\n# Vue3.0 小总结\n\n * Vue 使用那些 API import 引入。\n * v-model API 使用反而复杂了。\n * 提高可维护性和可读性。\n * 入手简单，看了不到一小时，没有实战觉得什么都会。（吹牛）\n * 尤大大 写的vite非常不错。\n\n参考链接：\n\nVue 组合式 API\n\n抄笔记：尤雨溪在 Vue3.0 Beta 直播里聊到了这些…",normalizedContent:"# vue3 入门\n\n\n# 前言\n\n在一次意外看到vue3.0课程打折，而且还是个大牛在教，我被贪图小利的驱使下，购买了这个课程，然后想着课程都买了不看浪费。图了让自己良心过意得去进去看看，经过大牛讲解，我被composition api等新写法震撼到了。在未接触vue3.0之前我听说vue3.0模仿 react等其他语言，很多 api 进行重大重构，已经不像 vue，我在想如果 vue3.0 学习成本很高的话，不如去学学react看看。原因react用户基数多，大型项目完善，找工作也更容易等。在没规划的学习react一段时间后，感觉自己学到一些皮毛，而且学的很慢，可能方法没找对。\n\n被vue3.0等新的语法震撼到后，我去看composition api官网和相关学习资料后，决定认真去学vue3.0，在学了一两个小时后，发现vue3.0比想象中更加简单。网上这方面的教程估计也很少，很多是介绍vue3.0新特性这类的吧（至少我看好几篇都是这样的）。vue3.0 用法主要还是composition api为主，学会了估计 vue3.0 也就差不多了。（2020/7/21 补充，虽然用法简单，但是完整的 vue3.0 实战还是需要等待一段时间，毕竟生态圈还在开发中，比如 vue3.0 需要使用vue-router4.xx keep-alive等现阶段还在开发中，急于使用的话，一些功能实现的话需要 vue2.0vue3.0 混合使用吧。）\n\n\n# vue3.0 几大优点\n\n * performance：相对于 vue2.0 性能显著提升。\n * tree shaking support：可以将无用模块“剪辑”，仅打包需要的。\n * composition api：组合 api\n * fragment, teleport, suspense：fragment\n * 不在限制模版中的单个根节点。teleport 传送门。suspense “悬念”。\n * better typescript support：更友好的的 typescript 支持。 custom renderer api：暴露了自定义渲染 api——用在 webgl 渲染器等。\n\n\n# 性能 performance\n\n * 重写的虚拟 dom 实现\n * 编译器获知的快速执行路径。\n * 更高效的组件初始化\n * update 1.3 ~ 2 倍 的性能提升\n * ssr 速度 2 ~ 3 倍\n\n> vue 目前稳定版本 2.6.x，预计 8 月份上线 2.7.x 版本（增加 vue3 相关 api 等）。\n\n\n# 如何学习 vue3.0\n\n接下来，介绍 vue3.0 和 vue2.0 之间的差别和经验之谈，菜鸟一枚，大言不惭在各位面前献丑了。熟悉以下知识点估计面试、项目实战也木问题。\n\n * composition api\n * vue 3.0 相关的原理。\n\n\n# composition api\n\n前往官网，vue composition api 预计 8 月份左右正式版发布了，vue composition api用法基本上是板上钉钉的事，几乎不会做太大的调整，现在先熟悉一下，等生态完善入手更快。\n\n废话不多说了，直接开始干。\n\n# options api vs composition api\n\nvue2.0 options api左图，vue3.0 composition api右图\n\n\n\n如图所示，vue2.0 options api 转换成 vue3.0 composition api 的 setup() {}东西，然后抛出我们需要的属性名。\n\n总结：composition api好处\n\n * 相关逻辑的代码组织起来，提高可维护性和可读性。\n * 更好重用逻辑代码。（哈哈哈，mixins 可以废用）\n\n# setup\n\nsetup 函数是一个新的组件选项。作为在组件内使用 composition api 的入口点。\n\n生命周期\n\n初始化 props，在 beforecreate 钩子之间调用。\n\n注意事项\n\n从上面生命周期可以得到，beforecreate时候，data还未生成，this 在setup()中不可用。\n\nsetup 可以接受 props context 参数\n\n  setup(props) {\n    // 输出的值 proxy类型\n    console.log(props);\n\n    如果父组件的props更新，console.log并不会再次输出的值。需要调用 watcheffect 函数.\n    watcheffect(()=>{\n        console.log(props);\n    })\n\n  }\n\n\nwatcheffect 立即执行传入的一个函数，并响应式追踪其依赖，并在其依赖变更时重新运行该函数。\n\n> 个人建议：不要将 vue3.0 想成新东西，这样学习就有排斥心理。而应该想成换汤不换药的东西，像披着马甲的vue。我想这样更加有助于学习吧。\n\n# 响应式数据 vs\n\nvue2.0 写在data里面属性名，在当前组件就可以直接引用，数据改变就会更新视图。\n\n  data() {\n    return {};\n  },\n\n\nvue3.0 需要通过 ref 或者 reactive 来声明响应式数据。\n\n> ref接受一个参数值并返回一个响应式且可改变的 ref 对象。 而不是 vue2.0 ref 被用来给元素或子组件注册引用信息。在这说明此ref非彼ref不要混淆。\n\n进阶：\n\nvue2.0 的响应式原理基于 object. defineproperty 实现。\n\nvue3.0 ref 响应式原理基于 object. defineproperty，而 reactive 响应式原理则我们常说的 proxy。\n\nref(0) 刚接触时候ref里面0是什么鬼，还以为 vue2.0 某个 dom 或组件，后来了解到 0 只是个响应式初始值，而且也可以是个对象。如 ref({ count: 1})等，因为基于object. defineproperty 就有了给对象新增属性和修改数组数据缺陷。\n\n# 模板 refs\n\n我上面说过 vue3.0 全面兼容 vue2.0，那么 vue2.0 的 ref api，又该如何调用那。\n\n<template>\n    <div ref=\"root\"></div>\n</template>\n\n<script>\nimport { ref, onmounted } from 'vue'\n\nexport default {\n    setup() {\n        const root = ref(null)\n\n        onmounted(() => {\n            // 在渲染完成后, 这个 div dom 会被赋值给 root ref 对象\n            console.log(root.value) // <div/>\n        })\n\n        return {\n            root\n        }\n    }\n}\n<\/script>\n\n\n看到上面这段代码，真的佩服尤大大的脑洞，设计出 扩展ref，且和设计理念想符合，丝毫没有增加新的学习成本，也不用担心版本一样，混淆用法。\n\n# 函数调用\n\n写了一个例子来做对比，vue2.0 和 vue3.0 是如何调用的。\n\nvue2.0\n\n<template>\n    <div>\n        {{total}}\n        <div @click=\"handleclick(0)\">减</div>\n        <div @click=\"handleclick(1)\">加</div>\n    </div>\n</template>\n<script>\n    export default {\n        data() {\n            return { total: 0 }\n        },\n        methods: {\n            handleclick(type) {\n                type === 1 ? this.total++ : this.total--\n            }\n        }\n    }\n<\/script>\n\n\nvue3.0\n\n<template>\n    {{total}}\n    <div @click=\"handleclick(0)\">减</div>\n    <div @click=\"handleclick(1)\">加</div>\n</template>\n<script>\n    import { ref, reactive } from 'vue'\n\n    export default {\n        setup(props) {\n            let total = ref(0)\n            // reactive 基于proxy对数据深度监听，声明响应式数据\n            let newtotal = reactive({\n                total: 0,\n                arr: [0]\n            })\n            function handleclick(type) {\n                type === 1 ? total.value++ : total.value--\n                // reactive 写法\n                type === 1 ? newtotal.total++ : newtotal.total--\n                newtotal.arr[0] = newtotal.arr[0] + 1\n            }\n            return {\n                total,\n                handleclick\n            }\n        }\n    }\n<\/script>\n\n\n细品上面的区别\n\n * ref 对象拥有一个指向内部值的单一属性 .value (需注意)，在模版中使用，无需 .value。\n * 模版中的不在限制单个根节点。\n * reactive 支持arr[0] = arr[0] + 1,不需要如 vue2.0 $set api 去更新其中的值。\n\n# computed\n\n简单来说，用法差不多。\n\n扩展\n\nvue3.0 中 computed 传入一个getter，函数，返回一个不可更改的 ref 对象。\n\nvue2.0\n\n  data: {\n    return { message: 'hello' }\n  },\n  computed: {\n    // 计算属性的 getter\n    reversedmessage: function () {\n      // `this` 指向 vm 实例\n      return this.message.split('').reverse().join('')\n    }\n  }\n\n\nvue3.0\n\nimport { ref } from \"vue\";\n\nexport default {\n  setup(props) {\n    let message = ref('hello world');\n    const reversedmessage = computed(() => message.value.split('').reverse().join(''))\n\n    return {\n      reversedmessage\n    };\n  }\n};\n<\/script>\n\n\n# watch\n\nwatch api 完全等效于 2.x this.$watch （以及 watch 中相应的选项）。watch 需要侦听特定的数据源，并在回调函数中执行副作用。默认情况是懒执行的，也就是说仅在侦听的源变更时才执行回调。\n\n# 生命周期钩子函数\n\n与 2.x 版本生命周期相对应的组合式 api\n\n * beforecreate -> 使用 setup()\n * created -> 使用 setup()\n * beforemount -> onbeforemount\n * mounted -> onmounted\n * beforeupdate -> onbeforeupdate\n * updated -> onupdated\n * beforedestroy -> onbeforeunmount\n * destroyed -> onunmounted\n * errorcaptured -> onerrorcaptured\n\n新增的钩子函数\n\n除了和 2.x 生命周期等效项之外，组合式 api 还提供了以下调试钩子函数：\n\n * onrendertracked\n * onrendertriggered\n\n这两个钩子我暂时还不太清楚，后面了解清楚再补上。\n\n\n# 其他 api\n\n以下这些 api 用法目测觉得很简单，如有不懂自行官网查阅。\n\nreadonly\n\n和object.freeze() 方法相似，不能修改值，会提示报错。（哈哈，只能看不能摸）\n\n传入一个对象（响应式或普通）或 ref，返回一个原始对象的只读代理。一个只读的代理是“深层的”，对象内部任何嵌套的属性也都是只读的。\n\nunref\n\n如果参数是一个 ref 则返回它的 value，否则返回参数本身。它是 val = isref(val) ? val.value : val 的语法糖。\n\ntoref\n\ntoref 可以用来为一个 reactive 对象的属性创建一个 ref。这个 ref 可以被传递并且能够保持响应性。\n\ntorefs\n\n把一个响应式对象转换成普通对象，该普通对象的每个 property 都是一个 ref ，和响应式对象 property 一一对应。\n\nisref\n\n检查一个值是否为一个 ref 对象。\n\nisproxy\n\n检查一个对象是否是由 reactive 或者 readonly 方法创建的代理。\n\nisreactive\n\n检查一个对象是否是由 reactive 创建的响应式代理。\n\n如果这个代理是由 readonly 创建的，但是又被 reactive 创建的另一个代理包裹了一层，那么同样也会返回 true。\n\nisreadonly\n\n检查一个对象是否是由 readonly 创建的只读代理。\n\n\n# vue3.0 小总结\n\n * vue 使用那些 api import 引入。\n * v-model api 使用反而复杂了。\n * 提高可维护性和可读性。\n * 入手简单，看了不到一小时，没有实战觉得什么都会。（吹牛）\n * 尤大大 写的vite非常不错。\n\n参考链接：\n\nvue 组合式 api\n\n抄笔记：尤雨溪在 vue3.0 beta 直播里聊到了这些…",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"Webpack4入门",frontmatter:{title:"Webpack4入门",date:"2017-12-28T00:00:00.000Z",tags:["webpack"],permalink:"/pages/e8445a/",categories:["前端","Webpack"],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/09.webpack/01.Webpack4%E5%85%A5%E9%97%A8.html",relativePath:"02.开发/09.webpack/01.Webpack4入门.md",key:"v-073c676c",path:"/pages/e8445a/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"什么是 Webpack",slug:"什么是-webpack",normalizedTitle:"什么是 webpack",charIndex:120},{level:2,title:"webpack 构建",slug:"webpack-构建",normalizedTitle:"webpack 构建",charIndex:276},{level:2,title:"webpack 基础使用",slug:"webpack-基础使用",normalizedTitle:"webpack 基础使用",charIndex:725},{level:3,title:"初始化项目",slug:"初始化项目",normalizedTitle:"初始化项目",charIndex:742},{level:3,title:"安装和使用",slug:"安装和使用",normalizedTitle:"安装和使用",charIndex:1194},{level:3,title:"缺点：",slug:"缺点",normalizedTitle:"缺点：",charIndex:2135},{level:3,title:"了解 webpack 配置基本概念",slug:"了解-webpack-配置基本概念",normalizedTitle:"了解 webpack 配置基本概念",charIndex:65},{level:3,title:"入口",slug:"入口",normalizedTitle:"入口",charIndex:2707},{level:3,title:"出口(output)",slug:"出口-output",normalizedTitle:"出口(output)",charIndex:3513},{level:3,title:"loader",slug:"loader",normalizedTitle:"loader",charIndex:106},{level:3,title:"插件(plugin)",slug:"插件-plugin",normalizedTitle:"插件(plugin)",charIndex:4588},{level:3,title:"模式(mode)",slug:"模式-mode",normalizedTitle:"模式(mode)",charIndex:5049},{level:2,title:"了解常见一些插件和 loader 使用",slug:"了解常见一些插件和-loader-使用",normalizedTitle:"了解常见一些插件和 loader 使用",charIndex:96},{level:3,title:"关联 HTML",slug:"关联-html",normalizedTitle:"关联 html",charIndex:5874},{level:3,title:"配置开发服务器",slug:"配置开发服务器",normalizedTitle:"配置开发服务器",charIndex:7241},{level:3,title:"支持加载 css 文件",slug:"支持加载-css-文件",normalizedTitle:"支持加载 css 文件",charIndex:8176},{level:3,title:"分离 CSS",slug:"分离-css",normalizedTitle:"分离 css",charIndex:9099},{level:3,title:"自动添加 CSS3 属性前缀",slug:"自动添加-css3-属性前缀",normalizedTitle:"自动添加 css3 属性前缀",charIndex:10558},{level:3,title:"效果",slug:"效果",normalizedTitle:"效果",charIndex:11338},{level:3,title:"压缩 JS 和 CSS",slug:"压缩-js-和-css",normalizedTitle:"压缩 js 和 css",charIndex:11554},{level:3,title:"CSS 预处理器",slug:"css-预处理器",normalizedTitle:"css 预处理器",charIndex:13397},{level:3,title:"支持图片",slug:"支持图片",normalizedTitle:"支持图片",charIndex:14172},{level:3,title:"对图片进行压缩和优化",slug:"对图片进行压缩和优化",normalizedTitle:"对图片进行压缩和优化",charIndex:14838},{level:3,title:"转义",slug:"转义",normalizedTitle:"转义",charIndex:15538},{level:3,title:"参考文档",slug:"参考文档",normalizedTitle:"参考文档",charIndex:16750}],headersStr:"前言 什么是 Webpack webpack 构建 webpack 基础使用 初始化项目 安装和使用 缺点： 了解 webpack 配置基本概念 入口 出口(output) loader 插件(plugin) 模式(mode) 了解常见一些插件和 loader 使用 关联 HTML 配置开发服务器 支持加载 css 文件 分离 CSS 自动添加 CSS3 属性前缀 效果 压缩 JS 和 CSS CSS 预处理器 支持图片 对图片进行压缩和优化 转义 参考文档",content:'# 前言\n\n本文可以分为三个部分：\n\n * 第一部分：主要简述 了解 webpack 零配置 demo\n * 第二部分：主要简述 了解 webpack 配置基本概念\n * 第三部分：主要简述 了解常见一些插件和 loader 使用\n\n\n# 什么是 Webpack\n\nwebpack 是一个现代 JavaScript 应用程序的静态模块打包工具。可以看做是模块打包机。 例如上图所示，它做的事情是，分析你的项目结构，找到 JavaScript 模块以及解析其他拓展语言（Scss，TypeScript 等），并将其打包浏览器能够解析的语言使用。\n\n\n# webpack 构建\n\n构建就是把源代码转换成发布到线上的可执行 JavaScrip、CSS、HTML 代码，包括如下内容：\n\n * 代码转换：TypeScript 编译成 JavaScript、SCSS 编译成 CSS 等。\n * 文件优化：压缩 JavaScript、CSS、HTML 代码，压缩合并图片等。\n * 代码分割：提取多个页面的公共代码、提取首屏不需要执行部分的代码让其异步加载。\n * 模块合并：在采用模块化的项目里会有很多个模块和文件，需要构建功能把模块分类合并成一个文件。\n * 自动刷新：监听本地源代码的变化，自动重新构建、刷新浏览器。\n * 代码校验：在代码被提交到仓库前需要校验代码是否符合规范，以及单元测试是否通过。\n * 自动发布：更新完代码后，自动构建出线上发布代码并传输给发布系统。\n\n构建其实是工程化、自动化思想在前端开发中的体现，把一系列流程用代码去实现，让代码自动化地执行这一系列复杂的流程。 构建给前端开发注入了更大的活力，解放了我们的生产力。\n\n\n# webpack 基础使用\n\n\n# 初始化项目\n\nmkdir wp // 创建文件夹\ncd wp\nnpm init -y // 初始化项目\n\n\n初始化项目后会生成package.json文件，我们再里面添加一个scripts：[]语句，如下\n\n\n{\n  "name": "wp",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n  "scripts": {\n    "dev": "webpack-dev-server --inline --progress --config webpack.config.js",//运行到开发环境\n    "build": "webpack --mode production" //进行打包\n  },\n  "dependencies": {},\n  "devDependencies": {},\n  "keywords": [],\n  "author": "",\n  "license": "ISC"\n}\n\n\n\n# 安装和使用\n\nnpm install webpack webpack-cli -g\n// OR\nyarn global  add webpack webpack-cli\n\n\nwebpack-cli 是使用 webpack 的命令行工具，在 4.x 版本之后，webpack 启动命令行的代码放入了webpack-cli 中。如果只安装了 webpack，只能在 nodejs 环境中使用，就不能在命令行中使用。\n\n我们在 src 文件夹下创建 index.js和test.js 文件\n\n./src/test.js\n\nmodule.exports = \'我的wepback_module_test文件\'\n\n\n./src/index.js\n\nconst stra = require(\'./test.js\')\nconsole.log(stra)\n\n\n保存之后在命令行工具执行 npx webpack 或 npm run build 命令，你就会发现新增了一个 dist 目录，里边存放的是 webpack 构建好的 main.js 文件。\n\n此时 main.js 文件就是我们打包后的文件，我们创建一个 HTML 文件引入这个 main.js，然后在浏览器打开，就可以在控制台就能看到我的wepback_module_test文件被打印出来。\n\nnpx 说明\n\n1. npm 5.2.0 以上版本中内置的命令：npx，类似于 npm 简化了项目开发中的依赖安装与管理\n2. npx 会自动查找当前依赖包中的可执行文件\n\n@IF EXIST "%~dp0\\node.exe" (\n"%~dp0\\node.exe" "%~dp0\\..\\webpack-cli\\bin\\cli.js" %*\n) ELSE (\n@SETLOCAL\n@SET PATHEXT=%PATHEXT:;.JS;=;%\nnode "%~dp0\\..\\webpack-cli\\bin\\cli.js" %*\n)\n查看从上面的源码，得到npx webpack命令其实\n就是执行`node_modules\\.bin\\webpack-cli.cmd`路径下文件\n\n\n上述就是 webpack4.x 零配置简单 demo。\n\n\n# 缺点：\n\n零配置的 webpack 缺少很多实际项目需要的功能，所以你还是需要一个配置文件，来完善 webpack 功能。在当前目录下新建一个webpack.config.js的文件，webpack 运行时默认读取当前项目下的 webpack.config.js 文件作为配置。如果需要运行指定文件名称例：webpack.config.dev.js 需要在命令行运行以下代码来声明以此文件作为配置文件。\n\nnpx webpack --config webpack.config.dev.js\n\n\n\n# 了解 webpack 配置基本概念\n\nwebpack.config.js\n\nconst path=require(\'path\');\nmodule.exports={\n    entry: \'./src/index.js\',\n    output: {\n        path: path.resolve(__dirname,\'dist\'),\n        filename:\'bundle.js\'\n    },\n    module: {},\n    plugins: [],\n    devServer: {}\n}\n\n\n从上面的webpack.config.js配置文件看到，webpack 配置由以下几部分组成。\n\n * Entry：入口， webpack 会读取这个文件，解析其中依赖。\n * Module：模块，在 Webpack 里一切皆模块，一个模块对应着一个文件。\n * Chunk：代码块，用于代码合并与分割，常用在配置多入口页面使用。\n * Loader：模块转换器，解析拓展语言（less,TypeScript）转换成浏览器能解析语言。\n * Plugin：扩展插件，在 Webpack 构建流程中的特定时机注入扩展逻辑来改变构建结果。\n * Output：输出结果，在 Webpack 经过一系列打包处理并得出最终代码文件。\n\n我们可以把 wepback 看作成一个食品加工厂，Entry 就是食品原材料，Output 就是加工后的产品， Module 就是生产的流程图，Loader 就是识别原材料是什么，然后进行解析加工。Plugin 就是 Loader 增强版可以执行 Loader 不能实现复杂的操作。\n\n\n# 入口\n\nwebpack 构建时 会读取这个文件，并从它开始解析其中各种依赖，然后进行打包 bundle 的文件中。 可以通过在 webpack 配置中配置 entry 属性，来指定一个入口起点（或多个入口起点）。默认值为 ./src。\n\n接下来我们看一个 entry 配置的简单例子：\n\nwebpack.config.js\n\nmodule.exports = {\n  entry: \'./src/index.js\'\n};\n// 等同于\nmodule.exports = {\n  entry: {\n    index: \'./src/index.js\'\n  }\n}\n// 或者配置多个入口\nmodule.exports = {\n  entry: {\n    index: \'./src/index.js\',\n    login: \'./src/login.js\',\n    // ...\n  }\n}\n\n\n\n# 出口(output)\n\n告诉 webpack 在哪里输出打包后的 bundles，以及如何命名这些文件，默认值为 ./dist。 基本上，整个应用程序结构，都会被编译到你指定的输出路径的文件夹中。你可以通过在配置中指定一个 output 字段，来配置这些处理过程：\n\nwebpack.config.js\n\nconst path = require(\'path\');\n\nmodule.exports = {\n  entry: \'./src/index.js\',\n  output: {\n    path: path.resolve(__dirname, \'dist\'),\n    filename: \'bundle.js\'\n  }\n};\n// 或者多个入口生成不同文件\nmodule.exports = {\n  entry: {\n    index: \'./src/index.js\',\n    login: \'./src/login.js\',\n    // ...\n  },\n  output: {\n    filename: \'[name].[hash:8].js\', // filename 输出包的名称，hash 哈希值前8位\n    path: __dirname + \'/dist\', //__dirname当前目录下\n  },\n}\n\n\n\npath模块用于处理文件和目录路径，path模块可以将将绝对路径处理成相对路径。\n\n\n# loader\n\nwebpack 只能理解 JavaScript 和 JSON 文件。loader 让 webpack 能够去处理其他类型的文件，并将它们转换为有效 模块，以供应用程序使用，以及被添加到依赖图中。\n\n * test 属性，用于标识出应该被对应的 loader 进行转换的某个或某些文件。\n * use 属性，表示进行转换时，应该使用哪个 loader。\n\nmodule: {\n  rules: [\n    {\n      test: /\\.jsx?/, // 匹配文件路径的正则表达式\n      include: [    //include 手动指定必须处理的文件夹，相反exclude屏蔽不需要处理的文件夹\n        path.resolve(__dirname, \'src\') // 指定当前src路径下的文件需要经过 loader 处理\n      ],\n      use: \'babel-loader\', // 指定使用的 loader\n    },\n  ],\n}\n\n\n\n# 插件(plugin)\n\nloader 用于转换某些类型的模块，而插件则可以用于执行范围更广的任务。包括：打包优化，资源管理，注入环境变量。\n\n插件接口(plugin interface) 功能极其强大，可以用来处理各种各样的任务。\n\n    plugins: [\n        new htmlWebpackPlugin({\n            template: "index.html", // 把index文件作为模板\n            filename: "index.html", // 打包后的文件名称\n            hash: true,\n            minify: {\n                removeAttributeQuotes: true, //去除 html的双引号\n                collapseWhitespace: true //将html代码压缩成一行\n            }\n        })\n    ]\n\n\n\n# 模式(mode)\n\n通过选择 development, production 来设置 mode 参数，你可以启用 webpack 内置在相应环境下的优化。其默认值为 production。\n\nmodule.exports = {\n  mode: \'production\'\n};\n\n\nwebpack.config.js\n\nlet path = require(\'path\');\nlet htmlWebpackPlugin = require(\'html-webpack-plugin\')\nmodule.exports = {\n  mode: \'production\', //development 或 production\n  entry: {\n    index: \'./src/index.js\', //入口文件\n  },\n  output: {\n    filename: "[name].[hash:8].js", //出口文件\n    path: path.resolve(__dirname, \'dist\'), //__dirname当前目录, ,../,上级目录\n  },\n  plugins: [\n    new htmlWebpackPlugin({\n      template: \'index.html\', // 把index文件作为模板\n      filename: \'index.html\', //打包后的文件名\n      minify: {\n        removeAttributeQuotes: true, //去除 html的双引号\n        collapseWhitespace: true //压缩成一行\n      }\n    })\n  ]\n}\n\n\n\n上述我们对 webpack 配置有了一定了解，接下来我们来学习搭建基本的前端开发环境吧！\n\n\n# 了解常见一些插件和 loader 使用\n\n\n# 关联 HTML\n\nwebpack 默认从作为入口的 .js 文件进行构建，但通常一个前端项目都是从一个页面（即 HTML）出发的，最简单的方法是，创建一个 HTML 文件，使用 script 标签直接引用构建好的 JS 文件，如：\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="UTF-8">\n    <title>webpack App</title>\n  </head>\n  <body>\n    <script src="./dist/bundle.js"><\/script>\n  </body>\n</html>\n\n\n但是对于在文件名中包含每次会随着编译而发生变化哈希的 webpack bundle，我们可以用HtmlWebpackPlugin插件简化了 HTML 文件的创建，关联打包后的bundle.xxx.js。\n\n# 安装\n\nnpm install html-webpack-plugin -D\n// OR\nyarn add html-webpack-plugin -D\n\n\n# 基本用法\n\nwebpack.config.js\n\n将 html-webpack-plugin 添加到 plugins 列表中：\n\nconst HtmlWebpackPlugin = require(\'html-webpack-plugin\');\nconst path = require(\'path\');\nmodule.exports = {\n  // ...\n output: {\n    path: path.resolve(__dirname, \'./dist\'),\n    filename: \'bundle.[hash:8].js\'\n  },\n plugins: [\n        new HtmlWebpackPlugin({\n         minify: {\n            removeAttributeQuotes:true\n        },\n        template: \'./index.html\',\n        filename:\'index.html\'\n    })]\n}\n\n\n * minify 是对 html 文件进行压缩，removeAttrubuteQuotes是去掉属性的双引号\n * hash 引入产出资源的时候加上查询参数，值为哈希避免缓存\n * template 把当前目录下index.html作为模板\n * filename 打包后产出的文件名\n\n这将会产生一个包含以下内容的文件 dist/index.html：\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="UTF-8">\n    <title>webpack App</title>\n  </head>\n  <body>\n    <script src="src=index.7f7a3d17.js"><\/script>\n  </body>\n</html>\n\n\n这样配置好之后，通过 html-webpack-plugin 就可以将我们的页面和构建 JS 关联起来，从页面开始开发。\n\n\n# 配置开发服务器\n\nwebpack-dev-server 为你提供了一个简单的静态服务来进行开发。\n\n# 安装\n\nnpm install webpack-dev-server –D\n// OR\nyarn add webpack-dev-server –D\n\n\n# 基本用法\n\nwebpack.config.js\n\nmodule.exports = {\n    mode: "development", //development 或 production\n    devServer: {\n        contentBase: path.join("dist"), //告诉服务器从哪里提供内容\n        compress: true, //为所服务的一切启用gzip压缩\n        port: 9000  //本地服务器端口号\n    }\n\n\n然后我们可以在package.json添加直接运行 dev server 的 script：\n\npackage.json\n\n{\n  "name": "wp",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n  "scripts": {\n     "dev": "webpack-dev-server --inline --progress --config webpack.config.js",\n     "build": "webpack --mode production"\n  },\n  "dependencies": {},\n  "devDependencies": {},\n  "keywords": [],\n  "author": "",\n  "license": "ISC"\n}\n\n\n其实npm init -y时候，我就添加"scripts"中，在这顺便在提醒一下。\n\n接下来尝试着运行 npm run dev 或者 yarn dev，然后就可以访问 http://localhost:9000/ 来查看你的页面了。\n\n默认是访问 index.html，如果是其他页面要注意访问的 URL 是否正确。\n\n\n# 支持加载 css 文件\n\n上述说过 webpack 不支持 CSS 代码，所以我们需要 loader，让 webpack 能解析处理 CSS 代码。\n\nLoader\n\n通过使用不同的 Loader，Webpack 可以要把不同的文件都转成 JS 文件，比如 CSS、ES6/7、JSX 等\n\n * test：匹配处理文件的扩展名的正则表达式\n * use：loader 名称，就是你要使用模块的名称\n * include/exclude:手动指定必须处理的文件夹或屏蔽不需要处理的文件夹\n\n我们需要安装两个 loader\n\nnpm install css-loader style-loader –D\n// OR\nyarn add css-loader style-loader –D\n\n\n * css-loader 负责解析 CSS 代码，主要是为了处理 CSS 中的依赖，例如 @import 和 url() 等引用外部文件的声明；\n * style-loader 会将 css-loader 解析的结果转变成 JS 代码，运行时动态插入 style 标签来让 CSS 代码生效。\n\n接下来在webpack.config.js添加规则\n\nmodule: {\n        rules: [\n            {\n                test: /\\.css/,\n                include: path.resolve(__dirname,\'src\'),\n                exclude: /node_modules/,\n                use:[\'style-loader\',\'css-loader\']\n            }\n        ]\n    }\n\n\n我们在 src 下创建一个 index.css 文件，随便添加一些样式，并在 index.js 中引用它，然后进行打包。\n\nimport "./index.css";\nOR\nrequire("./index.css");\n\n\n打包后你会发现引入的 index.css 在浏览器中能正常使用了。\n\n\n# 分离 CSS\n\n先简单解释一下为何要把 CSS 文件分离出来，而不是直接一起打包在 JS 中。最主要的原因是我们希望更好地利用缓存。\n\n假设我们原本页面的静态资源都打包成一个 JS 文件，加载页面时虽然只需要加载一个 JS 文件，但是我们的代码一旦改变了，用户访问新的页面时就需要重新加载一个新的 JS 文件。有些情况下，我们只是单独修改了样式，这样也要重新加载整个应用的 JS 文件，相当不划算。\n\n还有一种情况是我们有多个页面，它们都可以共用一部分样式（这是很常见的，CSS Reset、基础组件样式等基本都是跨页面通用），如果每个页面都单独打包一个 JS 文件，那么每次访问页面都会重复加载原本可以共享的那些 CSS 代码。如果分离开来，第二个页面就有了 CSS 文件的缓存，访问速度自然会加快。虽然对第一个页面来说多了一个请求，但是对随后的页面来说，缓存带来的速度提升相对更加可观。\n\n因此当我们考虑更好地利用缓存来加速静态资源访问时，会尝试把一些公共资源单独分离开来，利用缓存加速，以避免重复的加载。除了公共的 CSS 文件或者图片资源等，当我们的 JS 代码文件过大的时候，也可以用代码文件拆分的办法来进行优化。\n\n因为 CSS 的下载和 JS 可以并行，当一个 HTML 文件很大的时候，我们可以把 CSS 单独提取出来加载。这时我们就需要MiniCssExtractPlugin插件来实现这功能。\n\n# 兼容性\n\nMiniCssExtractPlugin建立在新的 webpack 4x 功能（模块类型）之上，并且需要 webpack 4 才能工作。\n\n好在 webpack 5 已经内置了CSS minimizer 和 JS minimizer\n\n安装依赖模块\n\nnpm install  mini-css-extract-plugin --save-dev\nOR\nyarn add mini-css-extract-plugin --save-dev\n\n\n# 基本用法\n\nwebpack.config.js\n\nlet MiniCssExtractPlugin = require("mini-css-extract-plugin");\nmodule.exports = {\n  // ...\n   module: {\n   rules: [\n            {\n                test: /\\.css$/,\n                include: path.resolve(__dirname,\'src\'),\n                exclude: /node_modules/,\n                use: [\'style-loader\',{ loader: MiniCssExtractPlugin.loader },\'css-loader\']\n            }\n        ]\n----\n    plugins: [\n        new MiniCssExtractPlugin({\n            filename: "css/style.css"\n        })\n    ]\n\n\n这样配置好之后，通过 MiniCssExtractPlugin会自动 将引入 js 的 CSS 代码分离生成 css/style.css 的文件，然后link标签的形式自动引入到构建index.html中。\n\n\n# 自动添加 CSS3 属性前缀\n\n为了浏览器的兼容性，有时候我们必须加入-webkit,-ms,-o,-moz这些前缀\n\n * Trident内核：主要代表为 IE 浏览器, 前缀为-ms\n * Gecko内核：主要代表为 Firefox, 前缀为-moz\n * Presto内核：主要代表为 Opera, 前缀为-o\n * Webkit内核：产要代表为 Chrome 和 Safari, 前缀为-webkit\n\n安装依赖模块\n\n npm install postcss-loader autoprefixer --save-dev\n OR\n yarn add postcss-loader autoprefixer --save-dev\n\n\n在webpack.config.js同级目录下新建postcss.config.js文件\n\nmodule.exports={\n    plugins:[require(\'autoprefixer\')]\n}\n\n\nwebpack.config.js\n\nmodule.exports = {\n  // ...\n   module: {\n   rules: [\n            {\n                test: /\\.css$/,\n                include: path.resolve(__dirname,\'src\'),\n                exclude: /node_modules/,\n                use: [\'style-loader\',{ loader: MiniCssExtractPlugin.loader },\'css-loader\',\'postcss-loader\']\n            }\n          ]\n\n\n\n# 效果\n\n初始 CSS\n\nbody {\n  transform: rotateY(180deg);\n  background-color: antiquewhite;\n}\n\n\n转换后\n\nbody {\n  -webkit-transform: rotateY(180deg);\n          transform: rotateY(180deg);\n  background-color: antiquewhite;\n}\n\n\n\n# 压缩 JS 和 CSS\n\n安装依赖模块\n\nnpm install uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin --save\nOR\nyarn add uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin --save\n\n\n配置 webpack.config.js\n\nlet UglifyJsPlugin = require("uglifyjs-webpack-plugin");\nlet OptimizeCSSAssetsPlugin = require("optimize-css-assets-webpack-plugin");\nmodule.exports = {\n    mode: \'production\',\n    optimization: {\n        minimizer: [\n            new UglifyJsPlugin({\n                cache: true,//启动缓存\n                parallel: true//启动并行压缩\n            }),\n            //压缩css资源的\n            new OptimizeCSSAssetsPlugin({})\n        ]\n    },\n\n\n转换后效果\n\nbody{-webkit-transform:rotateY(180deg);transform:rotateY(180deg);background-color:#faebd7}body h3{color:#bdb76b}\n!function(t){var r={};function o(e){if(r[e])return r[e].exports;var n=r[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=t,o.c=r,o.d=function(e,n,t){o.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)o.d(t,r,function(e){return n[e]}.bind(null,r));return t},o.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(n,"a",n),n},o.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},o.p="",o(o.s=0)}([function(e,n,t){new function e(){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),alert("class")};t(1)},function(e,n,t){}]);\n\n\n\n# CSS 预处理器\n\n安装依赖模块\n\nnpm isntall less less-loader --save-dev //less\nnpm isntall node-sass sass-loader --save-dev //sass\nnpm isntall stylus stylus-loader --save-dev //stylus\nOR\nyarn add less less-loader --save-dev //less\nyarn add node-sass sass-loader --save-dev //sass\nyarn add stylus stylus-loader --save-dev //stylus\n\n\n配置 webpack.config.js\n\n以less为例：\n\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n       {\n        test: /\\.less/,\n        include: path.resolve(__dirname,\'src\'),\n        exclude: /node_modules/,\n        use: [{\n            loader: MiniCssExtractPlugin.loader,\n        },\'css-loader\',\'less-loader\']\n    }],\n  }\n}\n\n\n初始 Less\n\n@nice-blue: #5B83AD;\n@light-blue: @nice-blue + #111;\n\n#header {\n  color: @light-blue;\n}\n\n\n\n输出\n\n#header {\n  color: #6c94be;\n}\n\n\n\n# 支持图片\n\n安装依赖模块\n\nnpm isntall file-loader url-loader -D\nOR\nyarn add file-loader url-loader -D\n\n\n说明\n\n * file-loader 解决 CSS 等文件中的引入图片路径问题\n * url-loader 当图片小于 limit 的时候会把图片 BASE64 编码，大于 limit 参数的时候还是使用 file-loader 进行拷贝\n\n情况一：JS 中引入图片\n\nlet logo=require(\'./images/logo.png\');\nlet img=new Image();\nimg.src=logo;\ndocument.body.appendChild(img);\n\n\nwebpack.config.js\n\n{\n  test:/\\.(jpg|png|bmp|gif|svg|ttf|woff|woff2|eot)/,\n    use:[\n    {\n       loader:\'url-loader\',\n       options:{limit:4096}\n    }\n  ]\n}\n\n\n情况二：CSS 中引入图片\n\n.logo{\n    width:355px;\n    height:133px;\n    background-image: url(./images/logo.png);\n    background-size: cover;\n}\n\n\nHTML\n\n<div class="logo"></div>\n\n\n\n# 对图片进行压缩和优化\n\n安装依赖模块\n\nnpm install image-webpack-loader --save-dev\nOR\nyarn add image-webpack-loader --save-dev\n\n\n基本用法\n\nrules: [{\n  test: /\\.(gif|png|jpe?g|svg)$/i,\n  use: [\n    \'file-loader\',\n    {\n      loader: \'image-webpack-loader\',\n      options: {\n        mozjpeg: {\n          progressive: true,\n          quality: 65\n        },\n        // optipng.enabled: false will disable optipng\n        optipng: {\n          enabled: false,\n        },\n        pngquant: {\n          quality: \'65-90\',\n          speed: 4\n        },\n        gifsicle: {\n          interlaced: false,\n        },\n        // the webp option will enable WEBP\n        webp: {\n          quality: 75\n        }\n      }\n    },\n  ],\n}]\n\n\n\n# 转义\n\nBabel 主要用于将 ES6/ES7/JSX 的代码转换为向后兼容的 JavaScript 语法，以便能够运行在当前和旧版本的浏览器或其他环境中。 安装依赖模块\n\nnpm isntall babel-loader @babel/core @babel/preset-env  --save-dev\nOR\nyarn add babel-loader @babel/core @babel/preset-env --save-dev\n\n\n在webpack.config.js目录下新建.babelrc文件\n\n{\n  "presets": [\n    "@babel/preset-env"\n  ]\n}\n\n\nwebpack.config.js\n\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n      {\n        test: /\\.js?$/,\n        include: [\n          path.resolve(__dirname, \'src\'), // src 目录下的才需要经过 babel-loader 处理\n        ],\n        loader: \'babel-loader\',\n      },\n    ],\n  },\n}\n\n\n在index.js入口文件添加以下代码\n\nclass My {\n    constructor() {\n    console.log("class my");\n    }\n}\nlet my = new My();\n\n\n\n命令行输入npm run dev 或 yarn dev，在浏览器打开，可见控制台class my被打印出来。\n\nbabel-loader 缺陷\n\nBabel 对一些公共方法使用了非常小的辅助代码，比如 _extend。默认情况下会被添加到每一个需要它的文件中 你可以引入 Babel runtime 作为一个独立模块，来避免重复引入。 安装依赖模块\n\nnpm install  @babel/plugin-transform-runtime --save-dev\nnpm install  @babel/runtime --save\nOR\nyarn add  @babel/plugin-transform-runtime --save-dev\nyarn add install  @babel/runtime --save\n\n\n修改.babelrc文件\n\n{\n  "presets": ["@babel/preset-env"],\n  "plugins": [\n   [\n         "@babel/plugin-transform-runtime"\n    ]\n  ]\n}\n\n\nwebpack打包的时候，会自动优化重复引入公共方法的问题。\n\n\n# 参考文档\n\n * webpack 官网\n * 用 webpack 定制前端开发环境',normalizedContent:'# 前言\n\n本文可以分为三个部分：\n\n * 第一部分：主要简述 了解 webpack 零配置 demo\n * 第二部分：主要简述 了解 webpack 配置基本概念\n * 第三部分：主要简述 了解常见一些插件和 loader 使用\n\n\n# 什么是 webpack\n\nwebpack 是一个现代 javascript 应用程序的静态模块打包工具。可以看做是模块打包机。 例如上图所示，它做的事情是，分析你的项目结构，找到 javascript 模块以及解析其他拓展语言（scss，typescript 等），并将其打包浏览器能够解析的语言使用。\n\n\n# webpack 构建\n\n构建就是把源代码转换成发布到线上的可执行 javascrip、css、html 代码，包括如下内容：\n\n * 代码转换：typescript 编译成 javascript、scss 编译成 css 等。\n * 文件优化：压缩 javascript、css、html 代码，压缩合并图片等。\n * 代码分割：提取多个页面的公共代码、提取首屏不需要执行部分的代码让其异步加载。\n * 模块合并：在采用模块化的项目里会有很多个模块和文件，需要构建功能把模块分类合并成一个文件。\n * 自动刷新：监听本地源代码的变化，自动重新构建、刷新浏览器。\n * 代码校验：在代码被提交到仓库前需要校验代码是否符合规范，以及单元测试是否通过。\n * 自动发布：更新完代码后，自动构建出线上发布代码并传输给发布系统。\n\n构建其实是工程化、自动化思想在前端开发中的体现，把一系列流程用代码去实现，让代码自动化地执行这一系列复杂的流程。 构建给前端开发注入了更大的活力，解放了我们的生产力。\n\n\n# webpack 基础使用\n\n\n# 初始化项目\n\nmkdir wp // 创建文件夹\ncd wp\nnpm init -y // 初始化项目\n\n\n初始化项目后会生成package.json文件，我们再里面添加一个scripts：[]语句，如下\n\n\n{\n  "name": "wp",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n  "scripts": {\n    "dev": "webpack-dev-server --inline --progress --config webpack.config.js",//运行到开发环境\n    "build": "webpack --mode production" //进行打包\n  },\n  "dependencies": {},\n  "devdependencies": {},\n  "keywords": [],\n  "author": "",\n  "license": "isc"\n}\n\n\n\n# 安装和使用\n\nnpm install webpack webpack-cli -g\n// or\nyarn global  add webpack webpack-cli\n\n\nwebpack-cli 是使用 webpack 的命令行工具，在 4.x 版本之后，webpack 启动命令行的代码放入了webpack-cli 中。如果只安装了 webpack，只能在 nodejs 环境中使用，就不能在命令行中使用。\n\n我们在 src 文件夹下创建 index.js和test.js 文件\n\n./src/test.js\n\nmodule.exports = \'我的wepback_module_test文件\'\n\n\n./src/index.js\n\nconst stra = require(\'./test.js\')\nconsole.log(stra)\n\n\n保存之后在命令行工具执行 npx webpack 或 npm run build 命令，你就会发现新增了一个 dist 目录，里边存放的是 webpack 构建好的 main.js 文件。\n\n此时 main.js 文件就是我们打包后的文件，我们创建一个 html 文件引入这个 main.js，然后在浏览器打开，就可以在控制台就能看到我的wepback_module_test文件被打印出来。\n\nnpx 说明\n\n1. npm 5.2.0 以上版本中内置的命令：npx，类似于 npm 简化了项目开发中的依赖安装与管理\n2. npx 会自动查找当前依赖包中的可执行文件\n\n@if exist "%~dp0\\node.exe" (\n"%~dp0\\node.exe" "%~dp0\\..\\webpack-cli\\bin\\cli.js" %*\n) else (\n@setlocal\n@set pathext=%pathext:;.js;=;%\nnode "%~dp0\\..\\webpack-cli\\bin\\cli.js" %*\n)\n查看从上面的源码，得到npx webpack命令其实\n就是执行`node_modules\\.bin\\webpack-cli.cmd`路径下文件\n\n\n上述就是 webpack4.x 零配置简单 demo。\n\n\n# 缺点：\n\n零配置的 webpack 缺少很多实际项目需要的功能，所以你还是需要一个配置文件，来完善 webpack 功能。在当前目录下新建一个webpack.config.js的文件，webpack 运行时默认读取当前项目下的 webpack.config.js 文件作为配置。如果需要运行指定文件名称例：webpack.config.dev.js 需要在命令行运行以下代码来声明以此文件作为配置文件。\n\nnpx webpack --config webpack.config.dev.js\n\n\n\n# 了解 webpack 配置基本概念\n\nwebpack.config.js\n\nconst path=require(\'path\');\nmodule.exports={\n    entry: \'./src/index.js\',\n    output: {\n        path: path.resolve(__dirname,\'dist\'),\n        filename:\'bundle.js\'\n    },\n    module: {},\n    plugins: [],\n    devserver: {}\n}\n\n\n从上面的webpack.config.js配置文件看到，webpack 配置由以下几部分组成。\n\n * entry：入口， webpack 会读取这个文件，解析其中依赖。\n * module：模块，在 webpack 里一切皆模块，一个模块对应着一个文件。\n * chunk：代码块，用于代码合并与分割，常用在配置多入口页面使用。\n * loader：模块转换器，解析拓展语言（less,typescript）转换成浏览器能解析语言。\n * plugin：扩展插件，在 webpack 构建流程中的特定时机注入扩展逻辑来改变构建结果。\n * output：输出结果，在 webpack 经过一系列打包处理并得出最终代码文件。\n\n我们可以把 wepback 看作成一个食品加工厂，entry 就是食品原材料，output 就是加工后的产品， module 就是生产的流程图，loader 就是识别原材料是什么，然后进行解析加工。plugin 就是 loader 增强版可以执行 loader 不能实现复杂的操作。\n\n\n# 入口\n\nwebpack 构建时 会读取这个文件，并从它开始解析其中各种依赖，然后进行打包 bundle 的文件中。 可以通过在 webpack 配置中配置 entry 属性，来指定一个入口起点（或多个入口起点）。默认值为 ./src。\n\n接下来我们看一个 entry 配置的简单例子：\n\nwebpack.config.js\n\nmodule.exports = {\n  entry: \'./src/index.js\'\n};\n// 等同于\nmodule.exports = {\n  entry: {\n    index: \'./src/index.js\'\n  }\n}\n// 或者配置多个入口\nmodule.exports = {\n  entry: {\n    index: \'./src/index.js\',\n    login: \'./src/login.js\',\n    // ...\n  }\n}\n\n\n\n# 出口(output)\n\n告诉 webpack 在哪里输出打包后的 bundles，以及如何命名这些文件，默认值为 ./dist。 基本上，整个应用程序结构，都会被编译到你指定的输出路径的文件夹中。你可以通过在配置中指定一个 output 字段，来配置这些处理过程：\n\nwebpack.config.js\n\nconst path = require(\'path\');\n\nmodule.exports = {\n  entry: \'./src/index.js\',\n  output: {\n    path: path.resolve(__dirname, \'dist\'),\n    filename: \'bundle.js\'\n  }\n};\n// 或者多个入口生成不同文件\nmodule.exports = {\n  entry: {\n    index: \'./src/index.js\',\n    login: \'./src/login.js\',\n    // ...\n  },\n  output: {\n    filename: \'[name].[hash:8].js\', // filename 输出包的名称，hash 哈希值前8位\n    path: __dirname + \'/dist\', //__dirname当前目录下\n  },\n}\n\n\n\npath模块用于处理文件和目录路径，path模块可以将将绝对路径处理成相对路径。\n\n\n# loader\n\nwebpack 只能理解 javascript 和 json 文件。loader 让 webpack 能够去处理其他类型的文件，并将它们转换为有效 模块，以供应用程序使用，以及被添加到依赖图中。\n\n * test 属性，用于标识出应该被对应的 loader 进行转换的某个或某些文件。\n * use 属性，表示进行转换时，应该使用哪个 loader。\n\nmodule: {\n  rules: [\n    {\n      test: /\\.jsx?/, // 匹配文件路径的正则表达式\n      include: [    //include 手动指定必须处理的文件夹，相反exclude屏蔽不需要处理的文件夹\n        path.resolve(__dirname, \'src\') // 指定当前src路径下的文件需要经过 loader 处理\n      ],\n      use: \'babel-loader\', // 指定使用的 loader\n    },\n  ],\n}\n\n\n\n# 插件(plugin)\n\nloader 用于转换某些类型的模块，而插件则可以用于执行范围更广的任务。包括：打包优化，资源管理，注入环境变量。\n\n插件接口(plugin interface) 功能极其强大，可以用来处理各种各样的任务。\n\n    plugins: [\n        new htmlwebpackplugin({\n            template: "index.html", // 把index文件作为模板\n            filename: "index.html", // 打包后的文件名称\n            hash: true,\n            minify: {\n                removeattributequotes: true, //去除 html的双引号\n                collapsewhitespace: true //将html代码压缩成一行\n            }\n        })\n    ]\n\n\n\n# 模式(mode)\n\n通过选择 development, production 来设置 mode 参数，你可以启用 webpack 内置在相应环境下的优化。其默认值为 production。\n\nmodule.exports = {\n  mode: \'production\'\n};\n\n\nwebpack.config.js\n\nlet path = require(\'path\');\nlet htmlwebpackplugin = require(\'html-webpack-plugin\')\nmodule.exports = {\n  mode: \'production\', //development 或 production\n  entry: {\n    index: \'./src/index.js\', //入口文件\n  },\n  output: {\n    filename: "[name].[hash:8].js", //出口文件\n    path: path.resolve(__dirname, \'dist\'), //__dirname当前目录, ,../,上级目录\n  },\n  plugins: [\n    new htmlwebpackplugin({\n      template: \'index.html\', // 把index文件作为模板\n      filename: \'index.html\', //打包后的文件名\n      minify: {\n        removeattributequotes: true, //去除 html的双引号\n        collapsewhitespace: true //压缩成一行\n      }\n    })\n  ]\n}\n\n\n\n上述我们对 webpack 配置有了一定了解，接下来我们来学习搭建基本的前端开发环境吧！\n\n\n# 了解常见一些插件和 loader 使用\n\n\n# 关联 html\n\nwebpack 默认从作为入口的 .js 文件进行构建，但通常一个前端项目都是从一个页面（即 html）出发的，最简单的方法是，创建一个 html 文件，使用 script 标签直接引用构建好的 js 文件，如：\n\n<!doctype html>\n<html>\n  <head>\n    <meta charset="utf-8">\n    <title>webpack app</title>\n  </head>\n  <body>\n    <script src="./dist/bundle.js"><\/script>\n  </body>\n</html>\n\n\n但是对于在文件名中包含每次会随着编译而发生变化哈希的 webpack bundle，我们可以用htmlwebpackplugin插件简化了 html 文件的创建，关联打包后的bundle.xxx.js。\n\n# 安装\n\nnpm install html-webpack-plugin -d\n// or\nyarn add html-webpack-plugin -d\n\n\n# 基本用法\n\nwebpack.config.js\n\n将 html-webpack-plugin 添加到 plugins 列表中：\n\nconst htmlwebpackplugin = require(\'html-webpack-plugin\');\nconst path = require(\'path\');\nmodule.exports = {\n  // ...\n output: {\n    path: path.resolve(__dirname, \'./dist\'),\n    filename: \'bundle.[hash:8].js\'\n  },\n plugins: [\n        new htmlwebpackplugin({\n         minify: {\n            removeattributequotes:true\n        },\n        template: \'./index.html\',\n        filename:\'index.html\'\n    })]\n}\n\n\n * minify 是对 html 文件进行压缩，removeattrubutequotes是去掉属性的双引号\n * hash 引入产出资源的时候加上查询参数，值为哈希避免缓存\n * template 把当前目录下index.html作为模板\n * filename 打包后产出的文件名\n\n这将会产生一个包含以下内容的文件 dist/index.html：\n\n<!doctype html>\n<html>\n  <head>\n    <meta charset="utf-8">\n    <title>webpack app</title>\n  </head>\n  <body>\n    <script src="src=index.7f7a3d17.js"><\/script>\n  </body>\n</html>\n\n\n这样配置好之后，通过 html-webpack-plugin 就可以将我们的页面和构建 js 关联起来，从页面开始开发。\n\n\n# 配置开发服务器\n\nwebpack-dev-server 为你提供了一个简单的静态服务来进行开发。\n\n# 安装\n\nnpm install webpack-dev-server –d\n// or\nyarn add webpack-dev-server –d\n\n\n# 基本用法\n\nwebpack.config.js\n\nmodule.exports = {\n    mode: "development", //development 或 production\n    devserver: {\n        contentbase: path.join("dist"), //告诉服务器从哪里提供内容\n        compress: true, //为所服务的一切启用gzip压缩\n        port: 9000  //本地服务器端口号\n    }\n\n\n然后我们可以在package.json添加直接运行 dev server 的 script：\n\npackage.json\n\n{\n  "name": "wp",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n  "scripts": {\n     "dev": "webpack-dev-server --inline --progress --config webpack.config.js",\n     "build": "webpack --mode production"\n  },\n  "dependencies": {},\n  "devdependencies": {},\n  "keywords": [],\n  "author": "",\n  "license": "isc"\n}\n\n\n其实npm init -y时候，我就添加"scripts"中，在这顺便在提醒一下。\n\n接下来尝试着运行 npm run dev 或者 yarn dev，然后就可以访问 http://localhost:9000/ 来查看你的页面了。\n\n默认是访问 index.html，如果是其他页面要注意访问的 url 是否正确。\n\n\n# 支持加载 css 文件\n\n上述说过 webpack 不支持 css 代码，所以我们需要 loader，让 webpack 能解析处理 css 代码。\n\nloader\n\n通过使用不同的 loader，webpack 可以要把不同的文件都转成 js 文件，比如 css、es6/7、jsx 等\n\n * test：匹配处理文件的扩展名的正则表达式\n * use：loader 名称，就是你要使用模块的名称\n * include/exclude:手动指定必须处理的文件夹或屏蔽不需要处理的文件夹\n\n我们需要安装两个 loader\n\nnpm install css-loader style-loader –d\n// or\nyarn add css-loader style-loader –d\n\n\n * css-loader 负责解析 css 代码，主要是为了处理 css 中的依赖，例如 @import 和 url() 等引用外部文件的声明；\n * style-loader 会将 css-loader 解析的结果转变成 js 代码，运行时动态插入 style 标签来让 css 代码生效。\n\n接下来在webpack.config.js添加规则\n\nmodule: {\n        rules: [\n            {\n                test: /\\.css/,\n                include: path.resolve(__dirname,\'src\'),\n                exclude: /node_modules/,\n                use:[\'style-loader\',\'css-loader\']\n            }\n        ]\n    }\n\n\n我们在 src 下创建一个 index.css 文件，随便添加一些样式，并在 index.js 中引用它，然后进行打包。\n\nimport "./index.css";\nor\nrequire("./index.css");\n\n\n打包后你会发现引入的 index.css 在浏览器中能正常使用了。\n\n\n# 分离 css\n\n先简单解释一下为何要把 css 文件分离出来，而不是直接一起打包在 js 中。最主要的原因是我们希望更好地利用缓存。\n\n假设我们原本页面的静态资源都打包成一个 js 文件，加载页面时虽然只需要加载一个 js 文件，但是我们的代码一旦改变了，用户访问新的页面时就需要重新加载一个新的 js 文件。有些情况下，我们只是单独修改了样式，这样也要重新加载整个应用的 js 文件，相当不划算。\n\n还有一种情况是我们有多个页面，它们都可以共用一部分样式（这是很常见的，css reset、基础组件样式等基本都是跨页面通用），如果每个页面都单独打包一个 js 文件，那么每次访问页面都会重复加载原本可以共享的那些 css 代码。如果分离开来，第二个页面就有了 css 文件的缓存，访问速度自然会加快。虽然对第一个页面来说多了一个请求，但是对随后的页面来说，缓存带来的速度提升相对更加可观。\n\n因此当我们考虑更好地利用缓存来加速静态资源访问时，会尝试把一些公共资源单独分离开来，利用缓存加速，以避免重复的加载。除了公共的 css 文件或者图片资源等，当我们的 js 代码文件过大的时候，也可以用代码文件拆分的办法来进行优化。\n\n因为 css 的下载和 js 可以并行，当一个 html 文件很大的时候，我们可以把 css 单独提取出来加载。这时我们就需要minicssextractplugin插件来实现这功能。\n\n# 兼容性\n\nminicssextractplugin建立在新的 webpack 4x 功能（模块类型）之上，并且需要 webpack 4 才能工作。\n\n好在 webpack 5 已经内置了css minimizer 和 js minimizer\n\n安装依赖模块\n\nnpm install  mini-css-extract-plugin --save-dev\nor\nyarn add mini-css-extract-plugin --save-dev\n\n\n# 基本用法\n\nwebpack.config.js\n\nlet minicssextractplugin = require("mini-css-extract-plugin");\nmodule.exports = {\n  // ...\n   module: {\n   rules: [\n            {\n                test: /\\.css$/,\n                include: path.resolve(__dirname,\'src\'),\n                exclude: /node_modules/,\n                use: [\'style-loader\',{ loader: minicssextractplugin.loader },\'css-loader\']\n            }\n        ]\n----\n    plugins: [\n        new minicssextractplugin({\n            filename: "css/style.css"\n        })\n    ]\n\n\n这样配置好之后，通过 minicssextractplugin会自动 将引入 js 的 css 代码分离生成 css/style.css 的文件，然后link标签的形式自动引入到构建index.html中。\n\n\n# 自动添加 css3 属性前缀\n\n为了浏览器的兼容性，有时候我们必须加入-webkit,-ms,-o,-moz这些前缀\n\n * trident内核：主要代表为 ie 浏览器, 前缀为-ms\n * gecko内核：主要代表为 firefox, 前缀为-moz\n * presto内核：主要代表为 opera, 前缀为-o\n * webkit内核：产要代表为 chrome 和 safari, 前缀为-webkit\n\n安装依赖模块\n\n npm install postcss-loader autoprefixer --save-dev\n or\n yarn add postcss-loader autoprefixer --save-dev\n\n\n在webpack.config.js同级目录下新建postcss.config.js文件\n\nmodule.exports={\n    plugins:[require(\'autoprefixer\')]\n}\n\n\nwebpack.config.js\n\nmodule.exports = {\n  // ...\n   module: {\n   rules: [\n            {\n                test: /\\.css$/,\n                include: path.resolve(__dirname,\'src\'),\n                exclude: /node_modules/,\n                use: [\'style-loader\',{ loader: minicssextractplugin.loader },\'css-loader\',\'postcss-loader\']\n            }\n          ]\n\n\n\n# 效果\n\n初始 css\n\nbody {\n  transform: rotatey(180deg);\n  background-color: antiquewhite;\n}\n\n\n转换后\n\nbody {\n  -webkit-transform: rotatey(180deg);\n          transform: rotatey(180deg);\n  background-color: antiquewhite;\n}\n\n\n\n# 压缩 js 和 css\n\n安装依赖模块\n\nnpm install uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin --save\nor\nyarn add uglifyjs-webpack-plugin optimize-css-assets-webpack-plugin --save\n\n\n配置 webpack.config.js\n\nlet uglifyjsplugin = require("uglifyjs-webpack-plugin");\nlet optimizecssassetsplugin = require("optimize-css-assets-webpack-plugin");\nmodule.exports = {\n    mode: \'production\',\n    optimization: {\n        minimizer: [\n            new uglifyjsplugin({\n                cache: true,//启动缓存\n                parallel: true//启动并行压缩\n            }),\n            //压缩css资源的\n            new optimizecssassetsplugin({})\n        ]\n    },\n\n\n转换后效果\n\nbody{-webkit-transform:rotatey(180deg);transform:rotatey(180deg);background-color:#faebd7}body h3{color:#bdb76b}\n!function(t){var r={};function o(e){if(r[e])return r[e].exports;var n=r[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=t,o.c=r,o.d=function(e,n,t){o.o(e,n)||object.defineproperty(e,n,{enumerable:!0,get:t})},o.r=function(e){"undefined"!=typeof symbol&&symbol.tostringtag&&object.defineproperty(e,symbol.tostringtag,{value:"module"}),object.defineproperty(e,"__esmodule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esmodule)return n;var t=object.create(null);if(o.r(t),object.defineproperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)o.d(t,r,function(e){return n[e]}.bind(null,r));return t},o.n=function(e){var n=e&&e.__esmodule?function(){return e.default}:function(){return e};return o.d(n,"a",n),n},o.o=function(e,n){return object.prototype.hasownproperty.call(e,n)},o.p="",o(o.s=0)}([function(e,n,t){new function e(){!function(e,n){if(!(e instanceof n))throw new typeerror("cannot call a class as a function")}(this,e),alert("class")};t(1)},function(e,n,t){}]);\n\n\n\n# css 预处理器\n\n安装依赖模块\n\nnpm isntall less less-loader --save-dev //less\nnpm isntall node-sass sass-loader --save-dev //sass\nnpm isntall stylus stylus-loader --save-dev //stylus\nor\nyarn add less less-loader --save-dev //less\nyarn add node-sass sass-loader --save-dev //sass\nyarn add stylus stylus-loader --save-dev //stylus\n\n\n配置 webpack.config.js\n\n以less为例：\n\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n       {\n        test: /\\.less/,\n        include: path.resolve(__dirname,\'src\'),\n        exclude: /node_modules/,\n        use: [{\n            loader: minicssextractplugin.loader,\n        },\'css-loader\',\'less-loader\']\n    }],\n  }\n}\n\n\n初始 less\n\n@nice-blue: #5b83ad;\n@light-blue: @nice-blue + #111;\n\n#header {\n  color: @light-blue;\n}\n\n\n\n输出\n\n#header {\n  color: #6c94be;\n}\n\n\n\n# 支持图片\n\n安装依赖模块\n\nnpm isntall file-loader url-loader -d\nor\nyarn add file-loader url-loader -d\n\n\n说明\n\n * file-loader 解决 css 等文件中的引入图片路径问题\n * url-loader 当图片小于 limit 的时候会把图片 base64 编码，大于 limit 参数的时候还是使用 file-loader 进行拷贝\n\n情况一：js 中引入图片\n\nlet logo=require(\'./images/logo.png\');\nlet img=new image();\nimg.src=logo;\ndocument.body.appendchild(img);\n\n\nwebpack.config.js\n\n{\n  test:/\\.(jpg|png|bmp|gif|svg|ttf|woff|woff2|eot)/,\n    use:[\n    {\n       loader:\'url-loader\',\n       options:{limit:4096}\n    }\n  ]\n}\n\n\n情况二：css 中引入图片\n\n.logo{\n    width:355px;\n    height:133px;\n    background-image: url(./images/logo.png);\n    background-size: cover;\n}\n\n\nhtml\n\n<div class="logo"></div>\n\n\n\n# 对图片进行压缩和优化\n\n安装依赖模块\n\nnpm install image-webpack-loader --save-dev\nor\nyarn add image-webpack-loader --save-dev\n\n\n基本用法\n\nrules: [{\n  test: /\\.(gif|png|jpe?g|svg)$/i,\n  use: [\n    \'file-loader\',\n    {\n      loader: \'image-webpack-loader\',\n      options: {\n        mozjpeg: {\n          progressive: true,\n          quality: 65\n        },\n        // optipng.enabled: false will disable optipng\n        optipng: {\n          enabled: false,\n        },\n        pngquant: {\n          quality: \'65-90\',\n          speed: 4\n        },\n        gifsicle: {\n          interlaced: false,\n        },\n        // the webp option will enable webp\n        webp: {\n          quality: 75\n        }\n      }\n    },\n  ],\n}]\n\n\n\n# 转义\n\nbabel 主要用于将 es6/es7/jsx 的代码转换为向后兼容的 javascript 语法，以便能够运行在当前和旧版本的浏览器或其他环境中。 安装依赖模块\n\nnpm isntall babel-loader @babel/core @babel/preset-env  --save-dev\nor\nyarn add babel-loader @babel/core @babel/preset-env --save-dev\n\n\n在webpack.config.js目录下新建.babelrc文件\n\n{\n  "presets": [\n    "@babel/preset-env"\n  ]\n}\n\n\nwebpack.config.js\n\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n      {\n        test: /\\.js?$/,\n        include: [\n          path.resolve(__dirname, \'src\'), // src 目录下的才需要经过 babel-loader 处理\n        ],\n        loader: \'babel-loader\',\n      },\n    ],\n  },\n}\n\n\n在index.js入口文件添加以下代码\n\nclass my {\n    constructor() {\n    console.log("class my");\n    }\n}\nlet my = new my();\n\n\n\n命令行输入npm run dev 或 yarn dev，在浏览器打开，可见控制台class my被打印出来。\n\nbabel-loader 缺陷\n\nbabel 对一些公共方法使用了非常小的辅助代码，比如 _extend。默认情况下会被添加到每一个需要它的文件中 你可以引入 babel runtime 作为一个独立模块，来避免重复引入。 安装依赖模块\n\nnpm install  @babel/plugin-transform-runtime --save-dev\nnpm install  @babel/runtime --save\nor\nyarn add  @babel/plugin-transform-runtime --save-dev\nyarn add install  @babel/runtime --save\n\n\n修改.babelrc文件\n\n{\n  "presets": ["@babel/preset-env"],\n  "plugins": [\n   [\n         "@babel/plugin-transform-runtime"\n    ]\n  ]\n}\n\n\nwebpack打包的时候，会自动优化重复引入公共方法的问题。\n\n\n# 参考文档\n\n * webpack 官网\n * 用 webpack 定制前端开发环境',charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"浏览器存储那些事",frontmatter:{title:"浏览器存储那些事",date:"2021-05-28T00:00:00.000Z",tags:["浏览器"],permalink:"/pages/647c21/",categories:["前端","浏览器"],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/10.%E6%B5%8F%E8%A7%88%E5%99%A8/01.%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AD%98%E5%82%A8%E9%82%A3%E4%BA%9B%E4%BA%8B.html",relativePath:"02.开发/10.浏览器/01.浏览器存储那些事.md",key:"v-6f9e2efd",path:"/pages/647c21/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"一、cookie",slug:"一、cookie",normalizedTitle:"一、cookie",charIndex:212},{level:3,title:"1.cookie 的来源",slug:"_1-cookie-的来源",normalizedTitle:"1.cookie 的来源",charIndex:225},{level:3,title:"2.什么是 cookie",slug:"_2-什么是-cookie",normalizedTitle:"2.什么是 cookie",charIndex:693},{level:3,title:"3.cookie 的原理及其构成",slug:"_3-cookie-的原理及其构成",normalizedTitle:"3.cookie 的原理及其构成",charIndex:1092},{level:3,title:"4.Javascript 中的 cookie",slug:"_4-javascript-中的-cookie",normalizedTitle:"4.javascript 中的 cookie",charIndex:2889},{level:3,title:"5.cookie 的缺陷",slug:"_5-cookie-的缺陷",normalizedTitle:"5.cookie 的缺陷",charIndex:3559},{level:3,title:"6.cookie 与安全",slug:"_6-cookie-与安全",normalizedTitle:"6.cookie 与安全",charIndex:4121},{level:2,title:"二、Web Storage",slug:"二、web-storage",normalizedTitle:"二、web storage",charIndex:4861},{level:3,title:"1、Storage 对象",slug:"_1、storage-对象",normalizedTitle:"1、storage 对象",charIndex:5092},{level:3,title:"2、sessionStorage",slug:"_2、sessionstorage",normalizedTitle:"2、sessionstorage",charIndex:5561},{level:3,title:"3、localStorage",slug:"_3、localstorage",normalizedTitle:"3、localstorage",charIndex:6955},{level:3,title:"4、Web Storage 与 cookie 之间的区别",slug:"_4、web-storage-与-cookie-之间的区别",normalizedTitle:"4、web storage 与 cookie 之间的区别",charIndex:7267},{level:2,title:"四、IndexedDB",slug:"四、indexeddb",normalizedTitle:"四、indexeddb",charIndex:7760},{level:3,title:"1.IndexedDB 的特点",slug:"_1-indexeddb-的特点",normalizedTitle:"1.indexeddb 的特点",charIndex:8095},{level:3,title:"2.IndexedDB 使用流程",slug:"_2-indexeddb-使用流程",normalizedTitle:"2.indexeddb 使用流程",charIndex:8781},{level:3,title:"3.Web Storage、cookie 和 IndexedDB 之间的区别",slug:"_3-web-storage、cookie-和-indexeddb-之间的区别",normalizedTitle:"3.web storage、cookie 和 indexeddb 之间的区别",charIndex:10059},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:10175},{level:2,title:"参考文章",slug:"参考文章",normalizedTitle:"参考文章",charIndex:10492}],headersStr:"前言 一、cookie 1.cookie 的来源 2.什么是 cookie 3.cookie 的原理及其构成 4.Javascript 中的 cookie 5.cookie 的缺陷 6.cookie 与安全 二、Web Storage 1、Storage 对象 2、sessionStorage 3、localStorage 4、Web Storage 与 cookie 之间的区别 四、IndexedDB 1.IndexedDB 的特点 2.IndexedDB 使用流程 3.Web Storage、cookie 和 IndexedDB 之间的区别 总结 参考文章",content:"# 前言\n\n随着移动网络的发展与演化，我们手机上现在除了有原生 App，还能跑“WebApp”——它即开即用，用完即走。一个优秀的 WebApp 甚至可以拥有和原生 App 媲美的功能和体验。WebApp 优异的性能表现，有一部分原因要归功于浏览器存储技术的提升。cookie 存储数据的功能已经很难满足开发所需，逐渐被 Web Storage、IndexedDB 所取代，本文将介绍这几种存储方式的差异和优缺点。\n\n\n# 一、cookie\n\n\n# 1.cookie 的来源\n\ncookie 的本职工作并非本地存储，而是“维持状态”。因为 HTTP 协议是无状态的，HTTP 协议自身不对请求和响应之间的通信状态进行保存，通俗来说，服务器不知道用户上一次做了什么，这严重阻碍了交互式 Web 应用程序的实现。在典型的网上购物场景中，用户浏览了几个页面，买了一盒饼干和两瓶饮料。最后结帐时，由于 HTTP 的无状态性，不通过额外的手段，服务器并不知道用户到底买了什么，于是就诞生了 cookie。它就是用来绕开 HTTP 的无状态性的“额外手段”之一。服务器可以设置或读取 cookie 中包含信息，借此维护用户跟服务器会话中的状态。\n\n在刚才的购物场景中，当用户选购了第一项商品，服务器在向用户发送网页的同时，还发送了一段 cookie，记录着那项商品的信息。当用户访问另一个页面，浏览器会把 cookie 发送给服务器，于是服务器知道他之前选购了什么。用户继续选购饮料，服务器就在原来那段 Cookie 里追加新的商品信息。结帐时，服务器读取发送来的 cookie 就行了。\n\n\n# 2.什么是 cookie\n\ncookie 指某些网站为了辨别用户身份而储存在用户本地终端上的数据(通常经过加密)。 cookie 是服务端生成，客户端进行维护和存储，存储在内存或者磁盘中。通过 cookie,可以让服务器知道请求是来源哪个客户端，就可以进行客户端状态的维护，比如登陆后刷新，请求头就会携带登陆时 response header 中的 Set-Cookie,Web 服务器接到请求时也能读出 cookie 的值，根据 cookie 值的内容就可以判断和恢复一些用户的信息状态。\n\n简而言之，cookie 使基于无状态的 HTTP 协议记录稳定的状态信息成为了可能。\n\ncookie 主要用于以下三个方面：\n\n * 会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息）\n * 个性化设置（如用户自定义设置、主题等）\n * 浏览器行为跟踪（如跟踪分析用户行为等）\n\n\n# 3.cookie 的原理及其构成\n\n\n\n第一次访问网站的时候，浏览器发出请求，服务器端生成 cookie 在响应中通过 Set-Cookie 头部告知客户端(允许多个 Set-Cookie 头部传递多个值)，客户端得到 cookie 后,后续请求都会自动将 cookie 头部携带至请求中发送给服务器（见下面例子），另外，cookie 的过期时间、域、路径、有效期、适用站点都可以根据需要来指定。\n\n// 一个HTTP响应：\nHTTP/1.1 200 OK\nContent-type: text/html\nSet-Cookie: name=value\nOther-header: other-header-value\n\n\n这个 HTTP 响应会设置一个名为\"name\"，值为\"value\"的 cookie。名和值在发送时都会经过 URL 编码。浏览器会存储这些会话信息，并在之后的每个请求中都会通过 HTTP 头部 cookie 再将它们发回服务器，比如：\n\nGET /index.jsl HTTP/1.1\nCookie: name=value\nOther-header: other-header-value\n\n\ncookie 在浏览器中是由以下参数构成的：\n\n * name：唯一标识 cookie 的名称。cookie 名不区分大小写，因此 myCookie 和 MyCookie 是同一个名称。不过，实践中最好将 cookie 名当成区分大小写来对待，因为一些服务器软件可能这样对待它们。cookie 名必须经过 URL 编码。\n * value：存储在 cookie 里的字符串值。这个值必须经过 URL 编码。\n * Domain：cookie 有效的域。发送到这个域的所有请求都会包含对应的 cookie。如果不指定，默认为文档来源（由协议、域名和端口共同定义），不包含子域名。如果指定了Domain，则一般包含子域名。因此，指定  Domain  比省略它的限制要少。但是，当子域需要共享有关用户的信息时，这可能会有所帮助。例如，如果设置 Domain=mozilla.org，则 Cookie 也包含在子域名中（如 developer.mozilla.org）。\n * Path：请求 URL 中包含这个路径才会把 cookie 发送到服务器。\n\n// 例如，设置 Path=/docs，则以下地址都会匹配：\n/docs\n/docs/Web/\n/docs/Web/HTTP\n\n\n * Expires/Max-Age：设置 cookie 过期时间（Expires）或有效期（Max-Age）（即什么时间之后就不发送到服务器了）。简单名/值对形式的 cookie 只在当前会话期间存在，用户关闭浏览器就会丢失。如果想让 cookie 的生命周期超过单个浏览对话，那就指定 Expires/Max-Age，max-age 优先级高于 expires。\n * Secure：设置之后，只在使用 SSL 安全连接的情况下才会把 cookie 发送到服务器。例如，请求https://www.wrox.com会发送 cookie，而请求http://www.wrox.com则不会。\n * HttpOnly：设置了 HttpOnly 属性的 cookie 不能使用 JavaScript 经由 Document.cookie 属性、XMLHttpRequest 和 Request APIs 进行访问，以防范跨站脚本攻击（XSS）。\n\nHTTP/1.1 200 OK\nContent-type: text/html\nSet-Cookie: name=value; domain=.wrox.com; path=/; secure\nOther-header: other-header-value\n\n\n这里创建的 cookie 对所有 wrox.com 的子域及该域中的所有页面有效（通过 path=/指定）。不过，这个 cookie 只能在 SSL 连接上发送，因为设置了 secure 标志。\n\n要知道，域、路径、过期时间和 secure 标志用于告诉浏览器什么情况下应该在请求中包含 cookie。这些参数并不会随请求发送给服务器，实际发送的只有 cookie 的名/值对。\n\n\n# 4.Javascript 中的 cookie\n\n一般说来，cookie 的生成方式主要有两种，一种是上文提到的在响应中通过 Set-Cookie 头部告知客户端；另外一种就是在 JavaScript 中可以通过 document.cookie 可以读写 cookie，如下：\n\n//读取浏览器中的cookie\nconsole.log(document.cookie)\n//写入cookie\ndocument.cookie = 'myname=langlixingzhou;path=/;domain=.baidu.com'\n\n\n在 JavaScript 中处理 cookie 比较麻烦，因为接口过于简单，只有 BOM 的 document.cookie 属性。在设置值时，可以通过 document.cookie 属性设置新的 cookie 字符串。这个字符串在被解析后会添加到原有 cookie 中。设置 document.cookie 不会覆盖之前存在的任何 cookie，除非设置了已有的 cookie。要为创建的 cookie 指定额外的信息，只要像 Set-Cookie 头部一样直接在后面追加相同格式的字符串即可：\n\ndocument.cookie = encodeURIComponent('name') + '=' + encodeURIComponent('Nicholas') + '; domain=.wrox.com; path=/'\n// 使用encodeURIComponent()对名称和值进行编码\n\n\n\n# 5.cookie 的缺陷\n\n * cookie 不够大\n\n每个 cookie 的大小为 4KB（名字和值都包含在这 4KB 之内），对于复杂的存储需求来说是不够用的。当 cookie 超过 4KB 时，它将面临被裁切的命运。这样看来，cookie 只能用来存取少量的信息。此外很多浏览器对一个站点的 cookie 个数也是有限制的（一般来说不超过 300 个 cookie）。\n\n * 过多的 cookie 会带来巨大的性能浪费\n\ncookie 是与特定域绑定的。同一个域名下的所有请求，都会携带 cookie。大家试想，如果我们此刻仅仅是请求一张图片或者一个 CSS 文件，我们也要携带一个 cookie 跑来跑去（关键是 cookie 里存储的信息并不需要），这是一件多么劳民伤财的事情。cookie 虽然小，但随着请求的叠加，这样的不必要的 cookie 带来的开销将是无法想象的。\n\ncookie 是用来维护用户信息的，而域名(domain)下所有请求都会携带 cookie，但对于静态文件的请求，携带 cookie 信息根本没有用，此时可以通过 CDN（存储静态文件的）的域名和主站的域名分开来解决。\n\n * 由于在 HTTP 请求中的 cookie 是明文传递的，所以安全性成问题，除非用 HTTPS。\n\n\n# 6.cookie 与安全\n\n\n\n有两种方法可以确保  cookie  被安全发送，并且不会被意外的参与者或脚本访问：Secure  属性和HttpOnly  属性。\n\n标记为  Secure  的 cookie 只应通过被 HTTPS 协议加密过的请求发送给服务端，因此可以预防中间人攻击。但即便设置了  Secure  标记，敏感信息也不应该通过 cookie 传输，因为 cookie 有其固有的不安全性，Secure  标记也无法提供确实的安全保障, 例如，可以访问客户端硬盘的人可以读取它。\n\n从 Chrome 52 和 Firefox 52 开始，不安全的站点（http:）无法使用 cookie 的  Secure  标记。\n\nJavaScript  Document.cookie API 无法访问带有  HttpOnly  属性的 cookie；此类 cookie 仅作用于服务器。例如，持久化服务器端会话的 cookie 不需要对 JavaScript 可用，而应具有  HttpOnly  属性。此预防措施有助于缓解跨站点脚本（XSS）攻击。\n\nSet-Cookie: id=a3fWa; Expires=Wed, 21 Oct 2019 07:28:00 GMT; Secure; HttpOnly\n\n\n对 cookie 的限制及其特性决定了 cookie 并不是存储大量数据的理想方式，让“专业的人做专业的事情”，Web Storage 出现了。\n\nHTML5 中新增了本地存储的解决方案----Web Storage，这样有了 Web Storage 后，cookie 能只做它应该做的事情了—— 作为客户端与服务器交互的通道，保持客户端状态。\n\n\n# 二、Web Storage\n\nWeb Storage 的目的是解决通过客户端存储不需要频繁发送回服务器的数据时使用 cookie 的问题。Web Storage API 包含了两个对象：localStorage 和 sessionStorage，本质上是映射字符串键和值的对象化。localStorage 是永久存储机制，sessionStorage 是跨会话的存储机制。这两种浏览器存储 API 提供了在浏览器中不受页面刷新影响而存储数据的两种方式。\n\n\n# 1、Storage 对象\n\nWindow 对象的 localStorage 和 sessionStorage 属性引用的是 Storage 对象。Storage 对象用于保存名/值对数据，直至存储空间上限（由浏览器决定）。一般来说，客户端数据的大小限制是按照每个源（协议、域和端口）来设置的，因此每个源有固定大小的数据存储空间。不同浏览器给 localStorage 和 sessionStorage 设置了不同的空间限制，但大多数会限制为每个源 5MB。\n\nStorage 对象定义了如下方法：\n\n * clear()：删除所有值；不在 Firefox 中实现。\n * getItem(name)：取得给定 name 的值。\n * key(index)：取得给定数值位置的名称。\n * removeItem(name)：删除给定 name 的名/值对。\n * setItem(name, value)：设置给定 name 的值。\n\nStorage 对象中的键值对总是以字符串的形式存储，这意味着数值类型会自动转化为字符串类型。\n\n\n# 2、sessionStorage\n\nsessionStorage 对象只存储会话数据，这意味着数据只会存储到浏览器关闭。这跟浏览器关闭时会消失的会话 cookie 类似。存储在 sessionStorage 中的数据不受页面刷新影响，可以在浏览器崩溃并重启后恢复（取决于浏览器，Firefox 和 WebKit 支持，IE 不支持）。\n\nsessionStorage 特别应该注意一点就是，即便是相同域名下的两个页面，只要它们不在同一个浏览器窗口中打开，那么它们的 sessionStorage 数据便无法共享。\n\nlocalStorage 与 sessionStorage 在 API 方面无异，这里我们以 sessionStorage 为例：\n\n * 存储数据：setItem()\n\nsessionStorage.setItem('user_name', 'juejin')\n\n\n * 读取数据： getItem()\n\nsessionStorage.getItem('user_name')\n\n\n * 删除某一键名对应的数据： removeItem()\n\nsessionStorage.removeItem('user_name')\n\n\n * 清空数据记录：clear()\n\nsessionStorage.clear()\n\n\n虽然 Web Storage 存储数据会带来诸多便利，但实际开发中 \b 使用它也有不便之处：\n\n * sessionStorage 本身有 API,但是只是简单的 key/value 形式\n * sessionStorage 只存储字符串,需要转换成 json 对象\n\n基于上面两点，开发过程中会对它进行封装后再调用：\n\n // 碍于文章篇幅，并未将完整代码展示出来\n // 想要获取完整的代码，可以加wx:qqlcx55\n // 将属性存储在某一模块下\n  setItem(key,value,module_name){\n    if (module_name){\n      let val = this.getItem(module_name);\n      val[key] = value;\n      this.setItem(module_name, val);\n    }else{\n      let val = this.getStorage();\n      val[key] = value;\n      window.sessionStorage.setItem(STORAGE_KEY, JSON.stringify(val));\n    }\n  },\n  // 获取某一个模块下面的属性\n  getItem(key,module_name){\n    if (module_name){\n      let val = this.getItem(module_name);\n      if(val) return val[key];\n    }\n    return this.getStorage()[key];\n  },\n  getStorage(){\n    return JSON.parse(window.sessionStorage.getItem(STORAGE_KEY) || '{}');\n  }\n\n\n\n# 3、localStorage\n\nlocalStorage 类似 sessionStorage，但其区别在于：存储在 localStorage 的数据可以长期保留；而当页面会话结束（即当页面被关闭时），存储在 sessionStorage 的数据会被清除 。要访问同一个 localStorage 对象，页面必须来自同一个域（子域不可以）、在相同的端口上使用相同的协议。\n\n考虑到 localStorage 的特点之一是持久，有时我们更倾向于用它来存储一些内容稳定的资源。比如图片内容丰富的电商网站会用它来存储 Base64 格式的图片字符串：\n\n\n\n有的网站还会用它存储一些不经常更新的 CSS、JS 等静态资源。\n\n\n# 4、Web Storage 与 cookie 之间的区别\n\n我们先来说说两者的共同点，然后再细说下哪些地方有区别：\n\n * 共同点：都是保存在浏览器端，且都遵循同源策略。\n * 不同点：在于生命周期与作用域的不同\n\n作用域：localStorage 只要在相同的协议、相同的主机名、相同的端口下，就能读取/修改到同一份 localStorage 数据。不过 sessionStorage 比 localStorage 更严苛一点，除了协议、主机名、端口外，还要求在同一窗口（也就是浏览器的标签页）下\n\n生命周期：localStorage 是持久化的本地存储，存储在其中的数据是永远不会过期的，使其消失的唯一办法是手动删除；而 sessionStorage 是临时性的本地存储，它是会话级别的存储，当会话结束（页面被关闭）时，存储内容也随之被释放。\n\n说到底，Web Storage 是对 Cookie 的拓展，它只能用于存储少量的简单数据。当遇到大规模的、结构复杂的数据时，Web Storage 也爱莫能助了。这时候我们就要清楚我们的终极大 boss——IndexedDB！\n\n\n# 四、IndexedDB\n\nIndexed Database API 简称 IndexedDB，是浏览器中存储结构化数据的一个方案。IndexedDB 背后的思想是创造一套 API，方便 JavaScript 对象的存储和获取，同时也支持查询和搜索。\n\nIndexedDB 是类似于 MySQL 或 Web SQL Database 的数据库。与传统数据库最大的区别在于，IndexedDB 使用对象存储而不是表格保存数据。IndexedDB 数据库就是在一个公共命名空间下的一组对象存储，类似于 NoSQL 风格的实现。既然是数据库了，那就不是 5M、10M 这样小打小闹级别了。理论上来说，IndexedDB 是没有存储上限的（一般来说不会小于 250M）。\n\n\n# 1.IndexedDB 的特点\n\n * 键值对储存。\n\nIndexedDB 内部采用对象仓库（object store）存放数据。所有类型的数据都可以直接存入，包括 JavaScript 对象。对象仓库中，数据以\"键值对\"的形式保存，每一个数据记录都有对应的主键，主键是独一无二的，不能有重复，否则会抛出一个错误。\n\n * 异步\n\nIndexedDB 的设计几乎完全是异步的。为此，大多数操作以请求的形式执行，这些请求会异步执行，产生成功的结果或错误。绝大多数 IndexedDB 操作要求添加 onerror 和 onsuccess 事件处理程序来确定输出。IndexedDB 操作时不会锁死浏览器，用户依然可以进行其他操作，这与 localStorage 形成对比，后者的操作是同步的。异步设计是为了防止大量数据的读写，拖慢网页的表现。\n\n * 支持事务。\n\nIndexedDB 支持事务（transaction），这意味着一系列操作步骤之中，只要有一步失败，整个事务就都取消，数据库回滚到事务发生之前的状态，不存在只改写一部分数据的情况。\n\n * 同源限制\n\nIndexedDB 受到同源限制，每一个数据库对应创建它的域名。网页只能访问自身域名下的数据库，而不能访问跨域的数据库。\n\n * 储存空间大\n\nIndexedDB 的储存空间比 localStorage 大得多，一般来说不少于 250MB，甚至没有上限。\n\n * 支持二进制储存。\n\nIndexedDB 不仅可以储存字符串，还可以储存二进制数据（ArrayBuffer 对象和 Blob 对象）。\n\n\n# 2.IndexedDB 使用流程\n\n在 IndexedDB 大部分操作并不是我们常用的调用方法，返回结果的模式，而是请求——响应的模式。\n\n接下来，通过一个基本的 IndexedDB 使用流程，旨在对 IndexedDB 形成一个感性的认知：\n\n * 打开/创建一个 IndexedDB 数据库（当该数据库不存在时，open 方法会直接创建一个名为 admin 新数据库）\n\n// 后面的回调中，我们可以通过event.target.result拿到数据库实例\nlet db\n// 参数1位数据库名，参数2为版本号\nconst request = window.indexedDB.open('admin', 1)\n// 使用IndexedDB失败时的监听函数\nrequest.onerror = function(event) {\n  console.log('无法使用IndexedDB')\n}\n// 成功\nrequest.onsuccess = function(event) {\n  // 此处就可以获取到db实例\n  db = event.target.result\n  console.log('你打开了IndexedDB')\n}\n\n\n * 创建一个 object store（object store 对标到数据库中的“表”单位）\n\n// onupgradeneeded事件会在初始化数据库/版本发生更新时被调用，我们在它的监听函数中创建object store\nrequest.onupgradeneeded = function(event) {\n  let objectStore\n  // 如果同名表未被创建过，则新建test表\n  if (!db.objectStoreNames.contains('test')) {\n    objectStore = db.createObjectStore('test', { keyPath: 'id' })\n  }\n}\n\n\n * 构建一个事务来执行一些数据库操作，像增加或提取数据等\n\n// 创建事务，指定表格名称和读写权限\nconst transaction = db.transaction(['test'], 'readwrite')\n// 拿到Object Store对象\nconst objectStore = transaction.objectStore('test')\n// 向表格写入数据\nobjectStore.add({ id: 1, name: 'juejin' })\n\n\n * 通过监听正确类型的事件以等待操作完成。\n\n// 操作成功时的监听函数\ntransaction.oncomplete = function(event) {\n  console.log('操作成功')\n}\n// 操作失败时的监听函数\ntransaction.onerror = function(event) {\n  console.log('这里有一个Error')\n}\n\n\n\n# 3.Web Storage、cookie 和 IndexedDB 之间的区别\n\n\n\n有了这些存储手段，就可以在客户端通过使用 JavaScript 存储可观的数据。因为这些数据没有加密，所以要注意不能使用它们存储敏感信息。\n\n\n# 总结\n\n正是浏览器存储、缓存技术的出现和发展，为我们的前端应用带来了无限的转机。近年来基于存储、缓存技术的第三方库层出不绝，此外还衍生出了 PWA 这样优秀的 Web 应用模型。总结下本文几个核心观点：\n\n * Cookie 的本职工作并非本地存储，而是“维持状态”。\n * Web Storage 定义了两个对象用于存储数据：sessionStorage 和 localStorage。前者用于严格保存浏览器一次会话期间的数据，因为数据会在浏览器关闭时被删除。后者用于会话之外持久保存数据。\n * IndexedDB 是类似于 SQL 数据库的结构化数据存储机制。不同的是，IndexedDB 存储的是对象，而不是数据表。\n\n\n# 参考文章\n\n * JavaScript 高级程序设计(第 4 版)\n * JavaScript 权威指南(第 7 版)\n * HTTP cookies\n * 前端性能优化原理与实践\n * localstorage 必知必会",normalizedContent:"# 前言\n\n随着移动网络的发展与演化，我们手机上现在除了有原生 app，还能跑“webapp”——它即开即用，用完即走。一个优秀的 webapp 甚至可以拥有和原生 app 媲美的功能和体验。webapp 优异的性能表现，有一部分原因要归功于浏览器存储技术的提升。cookie 存储数据的功能已经很难满足开发所需，逐渐被 web storage、indexeddb 所取代，本文将介绍这几种存储方式的差异和优缺点。\n\n\n# 一、cookie\n\n\n# 1.cookie 的来源\n\ncookie 的本职工作并非本地存储，而是“维持状态”。因为 http 协议是无状态的，http 协议自身不对请求和响应之间的通信状态进行保存，通俗来说，服务器不知道用户上一次做了什么，这严重阻碍了交互式 web 应用程序的实现。在典型的网上购物场景中，用户浏览了几个页面，买了一盒饼干和两瓶饮料。最后结帐时，由于 http 的无状态性，不通过额外的手段，服务器并不知道用户到底买了什么，于是就诞生了 cookie。它就是用来绕开 http 的无状态性的“额外手段”之一。服务器可以设置或读取 cookie 中包含信息，借此维护用户跟服务器会话中的状态。\n\n在刚才的购物场景中，当用户选购了第一项商品，服务器在向用户发送网页的同时，还发送了一段 cookie，记录着那项商品的信息。当用户访问另一个页面，浏览器会把 cookie 发送给服务器，于是服务器知道他之前选购了什么。用户继续选购饮料，服务器就在原来那段 cookie 里追加新的商品信息。结帐时，服务器读取发送来的 cookie 就行了。\n\n\n# 2.什么是 cookie\n\ncookie 指某些网站为了辨别用户身份而储存在用户本地终端上的数据(通常经过加密)。 cookie 是服务端生成，客户端进行维护和存储，存储在内存或者磁盘中。通过 cookie,可以让服务器知道请求是来源哪个客户端，就可以进行客户端状态的维护，比如登陆后刷新，请求头就会携带登陆时 response header 中的 set-cookie,web 服务器接到请求时也能读出 cookie 的值，根据 cookie 值的内容就可以判断和恢复一些用户的信息状态。\n\n简而言之，cookie 使基于无状态的 http 协议记录稳定的状态信息成为了可能。\n\ncookie 主要用于以下三个方面：\n\n * 会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息）\n * 个性化设置（如用户自定义设置、主题等）\n * 浏览器行为跟踪（如跟踪分析用户行为等）\n\n\n# 3.cookie 的原理及其构成\n\n\n\n第一次访问网站的时候，浏览器发出请求，服务器端生成 cookie 在响应中通过 set-cookie 头部告知客户端(允许多个 set-cookie 头部传递多个值)，客户端得到 cookie 后,后续请求都会自动将 cookie 头部携带至请求中发送给服务器（见下面例子），另外，cookie 的过期时间、域、路径、有效期、适用站点都可以根据需要来指定。\n\n// 一个http响应：\nhttp/1.1 200 ok\ncontent-type: text/html\nset-cookie: name=value\nother-header: other-header-value\n\n\n这个 http 响应会设置一个名为\"name\"，值为\"value\"的 cookie。名和值在发送时都会经过 url 编码。浏览器会存储这些会话信息，并在之后的每个请求中都会通过 http 头部 cookie 再将它们发回服务器，比如：\n\nget /index.jsl http/1.1\ncookie: name=value\nother-header: other-header-value\n\n\ncookie 在浏览器中是由以下参数构成的：\n\n * name：唯一标识 cookie 的名称。cookie 名不区分大小写，因此 mycookie 和 mycookie 是同一个名称。不过，实践中最好将 cookie 名当成区分大小写来对待，因为一些服务器软件可能这样对待它们。cookie 名必须经过 url 编码。\n * value：存储在 cookie 里的字符串值。这个值必须经过 url 编码。\n * domain：cookie 有效的域。发送到这个域的所有请求都会包含对应的 cookie。如果不指定，默认为文档来源（由协议、域名和端口共同定义），不包含子域名。如果指定了domain，则一般包含子域名。因此，指定  domain  比省略它的限制要少。但是，当子域需要共享有关用户的信息时，这可能会有所帮助。例如，如果设置 domain=mozilla.org，则 cookie 也包含在子域名中（如 developer.mozilla.org）。\n * path：请求 url 中包含这个路径才会把 cookie 发送到服务器。\n\n// 例如，设置 path=/docs，则以下地址都会匹配：\n/docs\n/docs/web/\n/docs/web/http\n\n\n * expires/max-age：设置 cookie 过期时间（expires）或有效期（max-age）（即什么时间之后就不发送到服务器了）。简单名/值对形式的 cookie 只在当前会话期间存在，用户关闭浏览器就会丢失。如果想让 cookie 的生命周期超过单个浏览对话，那就指定 expires/max-age，max-age 优先级高于 expires。\n * secure：设置之后，只在使用 ssl 安全连接的情况下才会把 cookie 发送到服务器。例如，请求https://www.wrox.com会发送 cookie，而请求http://www.wrox.com则不会。\n * httponly：设置了 httponly 属性的 cookie 不能使用 javascript 经由 document.cookie 属性、xmlhttprequest 和 request apis 进行访问，以防范跨站脚本攻击（xss）。\n\nhttp/1.1 200 ok\ncontent-type: text/html\nset-cookie: name=value; domain=.wrox.com; path=/; secure\nother-header: other-header-value\n\n\n这里创建的 cookie 对所有 wrox.com 的子域及该域中的所有页面有效（通过 path=/指定）。不过，这个 cookie 只能在 ssl 连接上发送，因为设置了 secure 标志。\n\n要知道，域、路径、过期时间和 secure 标志用于告诉浏览器什么情况下应该在请求中包含 cookie。这些参数并不会随请求发送给服务器，实际发送的只有 cookie 的名/值对。\n\n\n# 4.javascript 中的 cookie\n\n一般说来，cookie 的生成方式主要有两种，一种是上文提到的在响应中通过 set-cookie 头部告知客户端；另外一种就是在 javascript 中可以通过 document.cookie 可以读写 cookie，如下：\n\n//读取浏览器中的cookie\nconsole.log(document.cookie)\n//写入cookie\ndocument.cookie = 'myname=langlixingzhou;path=/;domain=.baidu.com'\n\n\n在 javascript 中处理 cookie 比较麻烦，因为接口过于简单，只有 bom 的 document.cookie 属性。在设置值时，可以通过 document.cookie 属性设置新的 cookie 字符串。这个字符串在被解析后会添加到原有 cookie 中。设置 document.cookie 不会覆盖之前存在的任何 cookie，除非设置了已有的 cookie。要为创建的 cookie 指定额外的信息，只要像 set-cookie 头部一样直接在后面追加相同格式的字符串即可：\n\ndocument.cookie = encodeuricomponent('name') + '=' + encodeuricomponent('nicholas') + '; domain=.wrox.com; path=/'\n// 使用encodeuricomponent()对名称和值进行编码\n\n\n\n# 5.cookie 的缺陷\n\n * cookie 不够大\n\n每个 cookie 的大小为 4kb（名字和值都包含在这 4kb 之内），对于复杂的存储需求来说是不够用的。当 cookie 超过 4kb 时，它将面临被裁切的命运。这样看来，cookie 只能用来存取少量的信息。此外很多浏览器对一个站点的 cookie 个数也是有限制的（一般来说不超过 300 个 cookie）。\n\n * 过多的 cookie 会带来巨大的性能浪费\n\ncookie 是与特定域绑定的。同一个域名下的所有请求，都会携带 cookie。大家试想，如果我们此刻仅仅是请求一张图片或者一个 css 文件，我们也要携带一个 cookie 跑来跑去（关键是 cookie 里存储的信息并不需要），这是一件多么劳民伤财的事情。cookie 虽然小，但随着请求的叠加，这样的不必要的 cookie 带来的开销将是无法想象的。\n\ncookie 是用来维护用户信息的，而域名(domain)下所有请求都会携带 cookie，但对于静态文件的请求，携带 cookie 信息根本没有用，此时可以通过 cdn（存储静态文件的）的域名和主站的域名分开来解决。\n\n * 由于在 http 请求中的 cookie 是明文传递的，所以安全性成问题，除非用 https。\n\n\n# 6.cookie 与安全\n\n\n\n有两种方法可以确保  cookie  被安全发送，并且不会被意外的参与者或脚本访问：secure  属性和httponly  属性。\n\n标记为  secure  的 cookie 只应通过被 https 协议加密过的请求发送给服务端，因此可以预防中间人攻击。但即便设置了  secure  标记，敏感信息也不应该通过 cookie 传输，因为 cookie 有其固有的不安全性，secure  标记也无法提供确实的安全保障, 例如，可以访问客户端硬盘的人可以读取它。\n\n从 chrome 52 和 firefox 52 开始，不安全的站点（http:）无法使用 cookie 的  secure  标记。\n\njavascript  document.cookie api 无法访问带有  httponly  属性的 cookie；此类 cookie 仅作用于服务器。例如，持久化服务器端会话的 cookie 不需要对 javascript 可用，而应具有  httponly  属性。此预防措施有助于缓解跨站点脚本（xss）攻击。\n\nset-cookie: id=a3fwa; expires=wed, 21 oct 2019 07:28:00 gmt; secure; httponly\n\n\n对 cookie 的限制及其特性决定了 cookie 并不是存储大量数据的理想方式，让“专业的人做专业的事情”，web storage 出现了。\n\nhtml5 中新增了本地存储的解决方案----web storage，这样有了 web storage 后，cookie 能只做它应该做的事情了—— 作为客户端与服务器交互的通道，保持客户端状态。\n\n\n# 二、web storage\n\nweb storage 的目的是解决通过客户端存储不需要频繁发送回服务器的数据时使用 cookie 的问题。web storage api 包含了两个对象：localstorage 和 sessionstorage，本质上是映射字符串键和值的对象化。localstorage 是永久存储机制，sessionstorage 是跨会话的存储机制。这两种浏览器存储 api 提供了在浏览器中不受页面刷新影响而存储数据的两种方式。\n\n\n# 1、storage 对象\n\nwindow 对象的 localstorage 和 sessionstorage 属性引用的是 storage 对象。storage 对象用于保存名/值对数据，直至存储空间上限（由浏览器决定）。一般来说，客户端数据的大小限制是按照每个源（协议、域和端口）来设置的，因此每个源有固定大小的数据存储空间。不同浏览器给 localstorage 和 sessionstorage 设置了不同的空间限制，但大多数会限制为每个源 5mb。\n\nstorage 对象定义了如下方法：\n\n * clear()：删除所有值；不在 firefox 中实现。\n * getitem(name)：取得给定 name 的值。\n * key(index)：取得给定数值位置的名称。\n * removeitem(name)：删除给定 name 的名/值对。\n * setitem(name, value)：设置给定 name 的值。\n\nstorage 对象中的键值对总是以字符串的形式存储，这意味着数值类型会自动转化为字符串类型。\n\n\n# 2、sessionstorage\n\nsessionstorage 对象只存储会话数据，这意味着数据只会存储到浏览器关闭。这跟浏览器关闭时会消失的会话 cookie 类似。存储在 sessionstorage 中的数据不受页面刷新影响，可以在浏览器崩溃并重启后恢复（取决于浏览器，firefox 和 webkit 支持，ie 不支持）。\n\nsessionstorage 特别应该注意一点就是，即便是相同域名下的两个页面，只要它们不在同一个浏览器窗口中打开，那么它们的 sessionstorage 数据便无法共享。\n\nlocalstorage 与 sessionstorage 在 api 方面无异，这里我们以 sessionstorage 为例：\n\n * 存储数据：setitem()\n\nsessionstorage.setitem('user_name', 'juejin')\n\n\n * 读取数据： getitem()\n\nsessionstorage.getitem('user_name')\n\n\n * 删除某一键名对应的数据： removeitem()\n\nsessionstorage.removeitem('user_name')\n\n\n * 清空数据记录：clear()\n\nsessionstorage.clear()\n\n\n虽然 web storage 存储数据会带来诸多便利，但实际开发中 \b 使用它也有不便之处：\n\n * sessionstorage 本身有 api,但是只是简单的 key/value 形式\n * sessionstorage 只存储字符串,需要转换成 json 对象\n\n基于上面两点，开发过程中会对它进行封装后再调用：\n\n // 碍于文章篇幅，并未将完整代码展示出来\n // 想要获取完整的代码，可以加wx:qqlcx55\n // 将属性存储在某一模块下\n  setitem(key,value,module_name){\n    if (module_name){\n      let val = this.getitem(module_name);\n      val[key] = value;\n      this.setitem(module_name, val);\n    }else{\n      let val = this.getstorage();\n      val[key] = value;\n      window.sessionstorage.setitem(storage_key, json.stringify(val));\n    }\n  },\n  // 获取某一个模块下面的属性\n  getitem(key,module_name){\n    if (module_name){\n      let val = this.getitem(module_name);\n      if(val) return val[key];\n    }\n    return this.getstorage()[key];\n  },\n  getstorage(){\n    return json.parse(window.sessionstorage.getitem(storage_key) || '{}');\n  }\n\n\n\n# 3、localstorage\n\nlocalstorage 类似 sessionstorage，但其区别在于：存储在 localstorage 的数据可以长期保留；而当页面会话结束（即当页面被关闭时），存储在 sessionstorage 的数据会被清除 。要访问同一个 localstorage 对象，页面必须来自同一个域（子域不可以）、在相同的端口上使用相同的协议。\n\n考虑到 localstorage 的特点之一是持久，有时我们更倾向于用它来存储一些内容稳定的资源。比如图片内容丰富的电商网站会用它来存储 base64 格式的图片字符串：\n\n\n\n有的网站还会用它存储一些不经常更新的 css、js 等静态资源。\n\n\n# 4、web storage 与 cookie 之间的区别\n\n我们先来说说两者的共同点，然后再细说下哪些地方有区别：\n\n * 共同点：都是保存在浏览器端，且都遵循同源策略。\n * 不同点：在于生命周期与作用域的不同\n\n作用域：localstorage 只要在相同的协议、相同的主机名、相同的端口下，就能读取/修改到同一份 localstorage 数据。不过 sessionstorage 比 localstorage 更严苛一点，除了协议、主机名、端口外，还要求在同一窗口（也就是浏览器的标签页）下\n\n生命周期：localstorage 是持久化的本地存储，存储在其中的数据是永远不会过期的，使其消失的唯一办法是手动删除；而 sessionstorage 是临时性的本地存储，它是会话级别的存储，当会话结束（页面被关闭）时，存储内容也随之被释放。\n\n说到底，web storage 是对 cookie 的拓展，它只能用于存储少量的简单数据。当遇到大规模的、结构复杂的数据时，web storage 也爱莫能助了。这时候我们就要清楚我们的终极大 boss——indexeddb！\n\n\n# 四、indexeddb\n\nindexed database api 简称 indexeddb，是浏览器中存储结构化数据的一个方案。indexeddb 背后的思想是创造一套 api，方便 javascript 对象的存储和获取，同时也支持查询和搜索。\n\nindexeddb 是类似于 mysql 或 web sql database 的数据库。与传统数据库最大的区别在于，indexeddb 使用对象存储而不是表格保存数据。indexeddb 数据库就是在一个公共命名空间下的一组对象存储，类似于 nosql 风格的实现。既然是数据库了，那就不是 5m、10m 这样小打小闹级别了。理论上来说，indexeddb 是没有存储上限的（一般来说不会小于 250m）。\n\n\n# 1.indexeddb 的特点\n\n * 键值对储存。\n\nindexeddb 内部采用对象仓库（object store）存放数据。所有类型的数据都可以直接存入，包括 javascript 对象。对象仓库中，数据以\"键值对\"的形式保存，每一个数据记录都有对应的主键，主键是独一无二的，不能有重复，否则会抛出一个错误。\n\n * 异步\n\nindexeddb 的设计几乎完全是异步的。为此，大多数操作以请求的形式执行，这些请求会异步执行，产生成功的结果或错误。绝大多数 indexeddb 操作要求添加 onerror 和 onsuccess 事件处理程序来确定输出。indexeddb 操作时不会锁死浏览器，用户依然可以进行其他操作，这与 localstorage 形成对比，后者的操作是同步的。异步设计是为了防止大量数据的读写，拖慢网页的表现。\n\n * 支持事务。\n\nindexeddb 支持事务（transaction），这意味着一系列操作步骤之中，只要有一步失败，整个事务就都取消，数据库回滚到事务发生之前的状态，不存在只改写一部分数据的情况。\n\n * 同源限制\n\nindexeddb 受到同源限制，每一个数据库对应创建它的域名。网页只能访问自身域名下的数据库，而不能访问跨域的数据库。\n\n * 储存空间大\n\nindexeddb 的储存空间比 localstorage 大得多，一般来说不少于 250mb，甚至没有上限。\n\n * 支持二进制储存。\n\nindexeddb 不仅可以储存字符串，还可以储存二进制数据（arraybuffer 对象和 blob 对象）。\n\n\n# 2.indexeddb 使用流程\n\n在 indexeddb 大部分操作并不是我们常用的调用方法，返回结果的模式，而是请求——响应的模式。\n\n接下来，通过一个基本的 indexeddb 使用流程，旨在对 indexeddb 形成一个感性的认知：\n\n * 打开/创建一个 indexeddb 数据库（当该数据库不存在时，open 方法会直接创建一个名为 admin 新数据库）\n\n// 后面的回调中，我们可以通过event.target.result拿到数据库实例\nlet db\n// 参数1位数据库名，参数2为版本号\nconst request = window.indexeddb.open('admin', 1)\n// 使用indexeddb失败时的监听函数\nrequest.onerror = function(event) {\n  console.log('无法使用indexeddb')\n}\n// 成功\nrequest.onsuccess = function(event) {\n  // 此处就可以获取到db实例\n  db = event.target.result\n  console.log('你打开了indexeddb')\n}\n\n\n * 创建一个 object store（object store 对标到数据库中的“表”单位）\n\n// onupgradeneeded事件会在初始化数据库/版本发生更新时被调用，我们在它的监听函数中创建object store\nrequest.onupgradeneeded = function(event) {\n  let objectstore\n  // 如果同名表未被创建过，则新建test表\n  if (!db.objectstorenames.contains('test')) {\n    objectstore = db.createobjectstore('test', { keypath: 'id' })\n  }\n}\n\n\n * 构建一个事务来执行一些数据库操作，像增加或提取数据等\n\n// 创建事务，指定表格名称和读写权限\nconst transaction = db.transaction(['test'], 'readwrite')\n// 拿到object store对象\nconst objectstore = transaction.objectstore('test')\n// 向表格写入数据\nobjectstore.add({ id: 1, name: 'juejin' })\n\n\n * 通过监听正确类型的事件以等待操作完成。\n\n// 操作成功时的监听函数\ntransaction.oncomplete = function(event) {\n  console.log('操作成功')\n}\n// 操作失败时的监听函数\ntransaction.onerror = function(event) {\n  console.log('这里有一个error')\n}\n\n\n\n# 3.web storage、cookie 和 indexeddb 之间的区别\n\n\n\n有了这些存储手段，就可以在客户端通过使用 javascript 存储可观的数据。因为这些数据没有加密，所以要注意不能使用它们存储敏感信息。\n\n\n# 总结\n\n正是浏览器存储、缓存技术的出现和发展，为我们的前端应用带来了无限的转机。近年来基于存储、缓存技术的第三方库层出不绝，此外还衍生出了 pwa 这样优秀的 web 应用模型。总结下本文几个核心观点：\n\n * cookie 的本职工作并非本地存储，而是“维持状态”。\n * web storage 定义了两个对象用于存储数据：sessionstorage 和 localstorage。前者用于严格保存浏览器一次会话期间的数据，因为数据会在浏览器关闭时被删除。后者用于会话之外持久保存数据。\n * indexeddb 是类似于 sql 数据库的结构化数据存储机制。不同的是，indexeddb 存储的是对象，而不是数据表。\n\n\n# 参考文章\n\n * javascript 高级程序设计(第 4 版)\n * javascript 权威指南(第 7 版)\n * http cookies\n * 前端性能优化原理与实践\n * localstorage 必知必会",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"如何使console更具可读性",frontmatter:{title:"如何使console更具可读性",date:"2020-05-28T00:00:00.000Z",tags:["浏览器"],permalink:"/pages/22d46a/",categories:["前端","浏览器"],readingShow:"top"},regularPath:"/02.%E5%BC%80%E5%8F%91/10.%E6%B5%8F%E8%A7%88%E5%99%A8/02.%E5%A6%82%E4%BD%95%E4%BD%BFconsole%E6%9B%B4%E5%85%B7%E5%8F%AF%E8%AF%BB%E6%80%A7.html",relativePath:"02.开发/10.浏览器/02.如何使console更具可读性.md",key:"v-948bf2dc",path:"/pages/22d46a/",headers:[{level:2,title:"标准的特性",slug:"标准的特性",normalizedTitle:"标准的特性",charIndex:146},{level:3,title:"一、显示信息",slug:"一、显示信息",normalizedTitle:"一、显示信息",charIndex:234},{level:3,title:"二、占位符",slug:"二、占位符",normalizedTitle:"二、占位符",charIndex:394},{level:3,title:"三、分组",slug:"三、分组",normalizedTitle:"三、分组",charIndex:682},{level:3,title:"四、表格",slug:"四、表格",normalizedTitle:"四、表格",charIndex:969},{level:3,title:"五、计时功能",slug:"五、计时功能",normalizedTitle:"五、计时功能",charIndex:1123},{level:3,title:"六、断言",slug:"六、断言",normalizedTitle:"六、断言",charIndex:1188},{level:2,title:"非标准的特性",slug:"非标准的特性",normalizedTitle:"非标准的特性",charIndex:155},{level:3,title:"一、性能分析",slug:"一、性能分析",normalizedTitle:"一、性能分析",charIndex:1301},{level:3,title:"二、 console.dir()",slug:"二、-console-dir",normalizedTitle:"二、 console.dir()",charIndex:1646},{level:3,title:"三、计数器",slug:"三、计数器",normalizedTitle:"三、计数器",charIndex:1701},{level:3,title:"参考文献",slug:"参考文献",normalizedTitle:"参考文献",charIndex:1746}],headersStr:"标准的特性 一、显示信息 二、占位符 三、分组 四、表格 五、计时功能 六、断言 非标准的特性 一、性能分析 二、 console.dir() 三、计数器 参考文献",content:"作为Web开发人员，用console.log调试代码应该已经是习以为常的事。但是控制台提供了许多其他方法，可以帮助您更好地进行调试。\n\n如图所示，console还有以下这些方法。\n\n16217771251356/16217771368828.jpg)\n\n以上这些方法，可以分为两类：\n\n * 标准的特性\n * 非标准的特性\n\n\n# 标准的特性\n\n以下七种方法，可用生产环境。\n\n * 显示信息\n * 占位符\n * 分组\n * 表格\n * 计时功能\n * 断言\n\n\n# 一、显示信息\n\n 1. console.log(\"这是log\") 输出普通信息\n 2. console.info(\"这是info\") 输出提示性信息\n 3. console.warn(\"这是warn\") 输出警示信息\n 4. console.error(\"这是error\") 输出错误信息\n\n控制台显示如下\n\n\n\n\n# 二、占位符\n\n上面4种显示信息方法都可以使用printf风格的占位符，占位符的种类比较少，只支以下这四种。\n\n * %s 字符串\n * %d %i 整数\n * %f 浮点数\n * %o 对象\n\n示例\n\nconsole.log('this color is %s', \"red\");\nconsole.log(\"%d年%d月%i日\",2021,5,25)\nconsole.log(\"圆周率是%f\",3.1415926)\nlet dog = { name: \"小白\", color: \"white\" }\nconsole.log(\"%o\",dog);\n\n\n控制台显示如下\n\n\n\n\n# 三、分组\n\n如果信息太多，可以将其分组显示。\n\nconsole.group('用户信息');\nconsole.log('名字: 李白');\nconsole.log('工作: Acmen');\n// 嵌套\nconsole.group('地址');\nconsole.log('福建省');\nconsole.log('厦门市');\nconsole.log('思明区');\nconsole.groupEnd();\nconsole.groupEnd();\n\n\n\n\n如果要默认折叠组，也可以使用console.groupCollapsed()代替console.group()\n\n\n# 四、表格\n\n将数据以表格的形式显示。\n\nconsole.table([\n    { id: 12987122, name: '蛋糕', time: '2016-05-02' },\n    { id: 12987125, name: '冰淇淋', time: '2016-05-09' }\n])\n\n\n\n\n\n# 五、计时功能\n\nconsole.time()和console.timeEnd()，用来运行某串代码的需要花费的时间。\n\n\n\n\n# 六、断言\n\nconsole.assert()用来判断一个表达式或变量是否为真。如果结果为否，则在控制台输出一条相应信息，并且抛出一个异常。\n\n\n\n\n# 非标准的特性\n\n该特性是非标准的，请尽量不要在生产环境中使用它！\n\n\n# 一、性能分析\n\n分析程序各个部分的运行时间，找出问题所在。\n\n假设有一个函数Foo()，里面调用了另外两个函数funcA()和funcB()，其中funcA()调用10次，funcB()调用1次。\n\nfunction Foo() {\n    for (let i = 0; i < 10; i++) { funcA(1000); }\n    funcB(10000);\n}\n\nfunction funcA(count) {\n    for (let i = 0; i < count; i++) { }\n}\n\nfunction funcB(count) {\n    for (let i = 0; i < count; i++) { }\n}\n\n\n\n\n新的浏览器这个方法已无效。\n\n\n\n\n# 二、 console.dir()\n\nconsole.dir()可以显示一个对象所有的属性和方法。\n\n\n\n\n# 三、计数器\n\nconsole.count()用于计数，输出它被调用了多少次。\n\n\n\n\n# 参考文献\n\n * MDN console\n * console的正确打开方式\n * Chrome DevTools之console篇和命令菜单篇\n * How to use the JavaScript console: going beyond console.log()",normalizedContent:"作为web开发人员，用console.log调试代码应该已经是习以为常的事。但是控制台提供了许多其他方法，可以帮助您更好地进行调试。\n\n如图所示，console还有以下这些方法。\n\n16217771251356/16217771368828.jpg)\n\n以上这些方法，可以分为两类：\n\n * 标准的特性\n * 非标准的特性\n\n\n# 标准的特性\n\n以下七种方法，可用生产环境。\n\n * 显示信息\n * 占位符\n * 分组\n * 表格\n * 计时功能\n * 断言\n\n\n# 一、显示信息\n\n 1. console.log(\"这是log\") 输出普通信息\n 2. console.info(\"这是info\") 输出提示性信息\n 3. console.warn(\"这是warn\") 输出警示信息\n 4. console.error(\"这是error\") 输出错误信息\n\n控制台显示如下\n\n\n\n\n# 二、占位符\n\n上面4种显示信息方法都可以使用printf风格的占位符，占位符的种类比较少，只支以下这四种。\n\n * %s 字符串\n * %d %i 整数\n * %f 浮点数\n * %o 对象\n\n示例\n\nconsole.log('this color is %s', \"red\");\nconsole.log(\"%d年%d月%i日\",2021,5,25)\nconsole.log(\"圆周率是%f\",3.1415926)\nlet dog = { name: \"小白\", color: \"white\" }\nconsole.log(\"%o\",dog);\n\n\n控制台显示如下\n\n\n\n\n# 三、分组\n\n如果信息太多，可以将其分组显示。\n\nconsole.group('用户信息');\nconsole.log('名字: 李白');\nconsole.log('工作: acmen');\n// 嵌套\nconsole.group('地址');\nconsole.log('福建省');\nconsole.log('厦门市');\nconsole.log('思明区');\nconsole.groupend();\nconsole.groupend();\n\n\n\n\n如果要默认折叠组，也可以使用console.groupcollapsed()代替console.group()\n\n\n# 四、表格\n\n将数据以表格的形式显示。\n\nconsole.table([\n    { id: 12987122, name: '蛋糕', time: '2016-05-02' },\n    { id: 12987125, name: '冰淇淋', time: '2016-05-09' }\n])\n\n\n\n\n\n# 五、计时功能\n\nconsole.time()和console.timeend()，用来运行某串代码的需要花费的时间。\n\n\n\n\n# 六、断言\n\nconsole.assert()用来判断一个表达式或变量是否为真。如果结果为否，则在控制台输出一条相应信息，并且抛出一个异常。\n\n\n\n\n# 非标准的特性\n\n该特性是非标准的，请尽量不要在生产环境中使用它！\n\n\n# 一、性能分析\n\n分析程序各个部分的运行时间，找出问题所在。\n\n假设有一个函数foo()，里面调用了另外两个函数funca()和funcb()，其中funca()调用10次，funcb()调用1次。\n\nfunction foo() {\n    for (let i = 0; i < 10; i++) { funca(1000); }\n    funcb(10000);\n}\n\nfunction funca(count) {\n    for (let i = 0; i < count; i++) { }\n}\n\nfunction funcb(count) {\n    for (let i = 0; i < count; i++) { }\n}\n\n\n\n\n新的浏览器这个方法已无效。\n\n\n\n\n# 二、 console.dir()\n\nconsole.dir()可以显示一个对象所有的属性和方法。\n\n\n\n\n# 三、计数器\n\nconsole.count()用于计数，输出它被调用了多少次。\n\n\n\n\n# 参考文献\n\n * mdn console\n * console的正确打开方式\n * chrome devtools之console篇和命令菜单篇\n * how to use the javascript console: going beyond console.log()",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"两数之和",frontmatter:{title:"两数之和",date:"2022-03-23T21:05:34.000Z",permalink:"/pages/6dc9e7/",categories:["算法","数组"],tags:["算法","哈希表"],readingShow:"top"},regularPath:"/03.%E7%AE%97%E6%B3%95/02.%E6%95%B0%E7%BB%84/01.%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C.html",relativePath:"03.算法/02.数组/01.两数之和.md",key:"v-38c440dc",path:"/pages/6dc9e7/",headers:[{level:2,title:"题解",slug:"题解",normalizedTitle:"题解",charIndex:545},{level:2,title:"题解2",slug:"题解2",normalizedTitle:"题解2",charIndex:994}],headersStr:"题解 题解2",content:"# 两数之和\n\nCategory Difficulty Likes Dislikes algorithms Easy (52.39%) 13829 - Tags\n\n * array | hash-table\n\n给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那 两个 整数，并返回它们的数组下标。\n\n你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。\n\n你可以按任意顺序返回答案。\n\n示例 1：\n\n输入：nums = [2,7,11,15], target = 9\n输出：[0,1]\n解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。\n\n\n示例 2：\n\n输入：nums = [3,2,4], target = 6\n输出：[1,2]\n\n\n示例 3：\n\n输入：nums = [3,3], target = 6\n输出：[0,1]\n\n\n提示：\n\n2 <= nums.length <= 104\n-109 <= nums[i] <= 109\n-109 <= target <= 109\n只会存在一个有效答案\n进阶：你可以想出一个时间复杂度小于 O(n2) 的算法吗？\n\n\n\n# 题解\n\n/*\n * @lc app=leetcode.cn id=1 lang=javascript\n *\n * [1] 两数之和\n */\n\n// @lc code=start\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function (nums, target) {\n    const len = nums.length\n    for (let x = 0; x < len; x++) {\n        for (let y = x + 1; y < len; y++) {\n            if (nums[x] + nums[y] === target) {\n                return [x, y]\n            }\n        }\n    }\n}\n// @lc code=end\n\n\n\n# 题解2\n\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    const map = new Map()\n    for(let i = 0; i < nums.length; i++) {\n        const d = target - nums[i]\n        if(map.has(d)) {\n            return [map.get(d), i]\n        }\n        map.set(nums[i], i)\n    }\n};\n",normalizedContent:"# 两数之和\n\ncategory difficulty likes dislikes algorithms easy (52.39%) 13829 - tags\n\n * array | hash-table\n\n给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那 两个 整数，并返回它们的数组下标。\n\n你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。\n\n你可以按任意顺序返回答案。\n\n示例 1：\n\n输入：nums = [2,7,11,15], target = 9\n输出：[0,1]\n解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。\n\n\n示例 2：\n\n输入：nums = [3,2,4], target = 6\n输出：[1,2]\n\n\n示例 3：\n\n输入：nums = [3,3], target = 6\n输出：[0,1]\n\n\n提示：\n\n2 <= nums.length <= 104\n-109 <= nums[i] <= 109\n-109 <= target <= 109\n只会存在一个有效答案\n进阶：你可以想出一个时间复杂度小于 o(n2) 的算法吗？\n\n\n\n# 题解\n\n/*\n * @lc app=leetcode.cn id=1 lang=javascript\n *\n * [1] 两数之和\n */\n\n// @lc code=start\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twosum = function (nums, target) {\n    const len = nums.length\n    for (let x = 0; x < len; x++) {\n        for (let y = x + 1; y < len; y++) {\n            if (nums[x] + nums[y] === target) {\n                return [x, y]\n            }\n        }\n    }\n}\n// @lc code=end\n\n\n\n# 题解2\n\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twosum = function(nums, target) {\n    const map = new map()\n    for(let i = 0; i < nums.length; i++) {\n        const d = target - nums[i]\n        if(map.has(d)) {\n            return [map.get(d), i]\n        }\n        map.set(nums[i], i)\n    }\n};\n",charsets:{cjk:!0},lastUpdated:"2022/03/23, 13:19:07",lastUpdatedTimestamp:1648041547e3},{title:"二叉树的中序遍历 - 简单",frontmatter:{title:"二叉树的中序遍历 - 简单",date:"2022-03-09T10:07:40.000Z",permalink:"/pages/27447f/",categories:["算法","二叉树"],tags:[null],readingShow:"top"},regularPath:"/03.%E7%AE%97%E6%B3%95/01.%E4%BA%8C%E5%8F%89%E6%A0%91/94.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86.html",relativePath:"03.算法/01.二叉树/94. 二叉树的中序遍历.md",key:"v-5cfdc0cd",path:"/pages/27447f/",headers:[{level:2,title:"题解",slug:"题解",normalizedTitle:"题解",charIndex:294}],headersStr:"题解",content:"# 94. 二叉树的中序遍历\n\n给定一个二叉树的根节点 root ，返回它的 中序 遍历。\n\n> 题目：https://leetcode-cn.com/problems/binary-tree-inorder-traversal/\n\n示例 1：\n\n输入：root = [1,null,2,3]\n输出：[1,3,2]\n\n\n示例 2：\n\n输入：root = []\n输出：[]\n\n\n示例 3：\n\n输入：root = [1]\n输出：[1]\n\n\n示例 4：\n\n输入：root = [1,2]\n输出：[2,1]\n\n\n示例 5：\n\n输入：root = [1,null,2]\n输出：[1,2]\n\n\n\n# 题解\n\n/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     val: number\n *     left: TreeNode | null\n *     right: TreeNode | null\n *     constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {\n *         this.val = (val===undefined ? 0 : val)\n *         this.left = (left===undefined ? null : left)\n *         this.right = (right===undefined ? null : right)\n *     }\n * }\n */\n\nfunction inorderTraversal(root: TreeNode | null): number[] {\n    const res:number[] = []\n    const walk = (root: TreeNode | null) => {\n        if(!root) return \n        walk(root.left)\n        res.push(root.val)\n        walk(root.right)\n    }\n    walk(root)\n    return res\n};\n",normalizedContent:"# 94. 二叉树的中序遍历\n\n给定一个二叉树的根节点 root ，返回它的 中序 遍历。\n\n> 题目：https://leetcode-cn.com/problems/binary-tree-inorder-traversal/\n\n示例 1：\n\n输入：root = [1,null,2,3]\n输出：[1,3,2]\n\n\n示例 2：\n\n输入：root = []\n输出：[]\n\n\n示例 3：\n\n输入：root = [1]\n输出：[1]\n\n\n示例 4：\n\n输入：root = [1,2]\n输出：[2,1]\n\n\n示例 5：\n\n输入：root = [1,null,2]\n输出：[1,2]\n\n\n\n# 题解\n\n/**\n * definition for a binary tree node.\n * class treenode {\n *     val: number\n *     left: treenode | null\n *     right: treenode | null\n *     constructor(val?: number, left?: treenode | null, right?: treenode | null) {\n *         this.val = (val===undefined ? 0 : val)\n *         this.left = (left===undefined ? null : left)\n *         this.right = (right===undefined ? null : right)\n *     }\n * }\n */\n\nfunction inordertraversal(root: treenode | null): number[] {\n    const res:number[] = []\n    const walk = (root: treenode | null) => {\n        if(!root) return \n        walk(root.left)\n        res.push(root.val)\n        walk(root.right)\n    }\n    walk(root)\n    return res\n};\n",charsets:{cjk:!0},lastUpdated:"2022/05/09, 06:48:29",lastUpdatedTimestamp:1652078909e3},{title:"Chrome插件推荐",frontmatter:{title:"Chrome插件推荐",permalink:"/pages/b08cab/",date:"2022-01-14T09:43:32.000Z",categories:["浏览器"],tags:["Chrome"],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/01.%E6%B5%8F%E8%A7%88%E5%99%A8/01.Chrome%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90.html",relativePath:"06.工具/01.浏览器/01.Chrome插件推荐.md",key:"v-65e01590",path:"/pages/b08cab/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:3,title:"Tampermonkey（油猴）",slug:"tampermonkey-油猴",normalizedTitle:"tampermonkey（油猴）",charIndex:256},{level:3,title:"Wappalyzer",slug:"wappalyzer",normalizedTitle:"wappalyzer",charIndex:579},{level:3,title:"FeHelper Web 前端助手",slug:"fehelper-web-前端助手",normalizedTitle:"fehelper web 前端助手",charIndex:675},{level:3,title:"Vue.js devtools",slug:"vue-js-devtools",normalizedTitle:"vue.js devtools",charIndex:837},{level:3,title:"掘金",slug:"掘金",normalizedTitle:"掘金",charIndex:875},{level:3,title:"uBlock Origin",slug:"ublock-origin",normalizedTitle:"ublock origin",charIndex:964},{level:3,title:"Stylish",slug:"stylish",normalizedTitle:"stylish",charIndex:1031},{level:3,title:"Infinity 新标签页",slug:"infinity-新标签页",normalizedTitle:"infinity 新标签页",charIndex:1121},{level:3,title:"OneTab",slug:"onetab",normalizedTitle:"onetab",charIndex:1185},{level:3,title:"扩展管理器",slug:"扩展管理器",normalizedTitle:"扩展管理器",charIndex:1338},{level:3,title:"Extension Manager 扩展管理器",slug:"extension-manager-扩展管理器",normalizedTitle:"extension manager 扩展管理器",charIndex:1348},{level:3,title:"下载管理器",slug:"下载管理器",normalizedTitle:"下载管理器",charIndex:1451},{level:3,title:"Chrono 下载管理器",slug:"chrono-下载管理器",normalizedTitle:"chrono 下载管理器",charIndex:1461},{level:3,title:"鼠标操作",slug:"鼠标操作",normalizedTitle:"鼠标操作",charIndex:1529},{level:3,title:"crxMouse 手势操作",slug:"crxmouse-手势操作",normalizedTitle:"crxmouse 手势操作",charIndex:1538},{level:3,title:"哔哩哔哩助手",slug:"哔哩哔哩助手",normalizedTitle:"哔哩哔哩助手",charIndex:1585},{level:3,title:"Video Speed Controller 视频速度调节",slug:"video-speed-controller-视频速度调节",normalizedTitle:"video speed controller 视频速度调节",charIndex:1646},{level:3,title:"LastPass",slug:"lastpass",normalizedTitle:"lastpass",charIndex:1769},{level:3,title:"Evernote",slug:"evernote",normalizedTitle:"evernote",charIndex:1836},{level:3,title:"Office",slug:"office",normalizedTitle:"office",charIndex:1888},{level:3,title:"Google 文档、表格及幻灯片",slug:"google-文档、表格及幻灯片",normalizedTitle:"google 文档、表格及幻灯片",charIndex:1899}],headersStr:"前言 Tampermonkey（油猴） Wappalyzer FeHelper Web 前端助手 Vue.js devtools 掘金 uBlock Origin Stylish Infinity 新标签页 OneTab 扩展管理器 Extension Manager 扩展管理器 下载管理器 Chrono 下载管理器 鼠标操作 crxMouse 手势操作 哔哩哔哩助手 Video Speed Controller 视频速度调节 LastPass Evernote Office Google 文档、表格及幻灯片",content:"# 前言\n\n访问不了谷歌应用商店，可以通过下面的插件市场下载。\n\n插件市场\n\n一个优质Chrome插件扩展收录下载网站\n\n- name: 插件市场\n  desc: 一个优质Chrome插件扩展收录下载网站\n  link: https://chrome.zzzmh.cn/index#/index\n  bgColor: '#CBEAFA' # 可选，默认var(--bodyBg)。颜色值有#号时请添加单引号\n  textColor: '#6854A1' # 可选，默认var(--textColor)\n\n\n\n# Tampermonkey（油猴）\n\n必备神器。里面脚本可以实现非常多的功能，例如以下推荐的。\n\nGreasy Fork 为油猴提供用户脚本的网站\n\n推荐的脚本\n\n 1. AC-baidu:重定向优化百度搜狗谷歌必应搜索favicon双列\n 2. CSDN 自动展开+去广告+净化剪贴板+免登陆\n 3. 百度贴吧全能助手 - 贴吧美化\n 4. 网盘助手 - 自动输入网盘密码非常便捷\n 5. 优酷、爱奇艺、腾讯等全网 VIP 视频免费看\n 6. 隐藏高(捆)速(绑)下载入口。\n 7. 跳过网站等待、验证码及登录脚本\n 8. 视频网 HTML5 播放小工具\n 9. 购物党比价工具 - 淘宝/京东/亚马逊/当当/苏宁/等百家商城的商品比价\n\n\n# Wappalyzer\n\nWappalyzer 是一款强大的网站技术栈嗅探工具。可以快速识别一个网站用到的前后端技术框架、运行容器、脚本库等。是开发者用于学习先进的网站架构的不二之选。\n\n\n# FeHelper Web 前端助手\n\nFE 助手：包括 JSON 格式化、二维码生成与解码、信息编解码、代码压缩、美化、页面取色、Markdown 与 HTML 互转、网页滚动截屏、正则表达式、时间转换工具、编码规范检测、页面性能检测、Ajax 接口调试、密码生成器、JSON 比对工具、网页编码设置、便签笔记等。\n\n\n# Vue.js devtools\n\n用来调试 Vue.js应用程序。\n\n\n# 掘金\n\n为程序员、设计师、产品经理每日发现优质内容。 在新标签页展示聚合内容，包含前端、Android、iOS、后端、产品、设计六大频道，每个频道内都有一到多个内容源。\n\n\n# uBlock Origin\n\n一款高效的网络请求过滤工具，能去除网页的大部分广告包括视频的广告而且占用极低的内存和 CPU。\n\n\n# Stylish\n\nStylish 为网站安装主题和皮肤。目前主流的网站例如 Google、百度、微博、bilibli、github、优酷，都有大量的皮肤主题可以一键更换。\n\n\n# Infinity 新标签页\n\n自由添加网站图标，云端高清壁纸，快速访问书签、天气、笔记、待办事项、扩展管理与历史记录。\n\n\n# OneTab\n\n当您发现自己有太多的标签页时，单击 OneTab 图标，将所有标签页转换成一个列表。当您需要再次访问这些标签页时，可以单独或全部恢复它们。\n\n当您的标签页位于 OneTab 列表时，您将节省高达 95％的内存，因为你将减少 Google Chrome 浏览器中打开的标签页的数量。\n\n\n# 扩展管理器\n\n\n# Extension Manager 扩展管理器\n\n插件管理必备神器。一键管理所有扩展，快速开启/禁用、批量闪电管理，智能排序，右键卸载、锁定、选项配置，角标提醒，大小布局随心配。快捷、简单、安全。\n\n\n# 下载管理器\n\n\n# Chrono 下载管理器\n\n管理下载，搜索和保存视频、图像、mp3 文件。使用在线下载管理器，加强 Chrome 浏览器功能。\n\n\n# 鼠标操作\n\n\n# crxMouse 手势操作\n\n自定义的鼠标手势、击键和鼠标快捷键来提高您的工作效率。\n\n\n# 哔哩哔哩助手\n\n哔哩哔哩弹幕网辅助扩展，可以替换 HTML5 播放器、绕过区域限制、推送通知并进行一些快捷操作。\n\n\n# Video Speed Controller 视频速度调节\n\nVideo Speed Controller 视频速度调节，是一款可以将视频播放速度提高到最多 16 倍速的开源浏览器插件，目前只支持 html5 播放器的在线视频调速播放。\n\n\n# LastPass\n\n将您的所有用户名和密码保存到 LastPass，它将自动登录到您的站点并在您需要的任何地方同步您的密码。\n\n\n# Evernote\n\n一键保存网页到印象笔记，即时同步到你的手机和电脑，不用复制粘贴编辑再整理。\n\n\n# Office\n\n\n# Google 文档、表格及幻灯片\n\n使用 Google 文档、表格和幻灯片来查看和编辑 Microsoft Word、Excel 和 PowerPoint 文件。查看和编辑 Microsoft Word、Excel 和 PowerPoint 文件 - 无需在您的计算机上安装 Office。",normalizedContent:"# 前言\n\n访问不了谷歌应用商店，可以通过下面的插件市场下载。\n\n插件市场\n\n一个优质chrome插件扩展收录下载网站\n\n- name: 插件市场\n  desc: 一个优质chrome插件扩展收录下载网站\n  link: https://chrome.zzzmh.cn/index#/index\n  bgcolor: '#cbeafa' # 可选，默认var(--bodybg)。颜色值有#号时请添加单引号\n  textcolor: '#6854a1' # 可选，默认var(--textcolor)\n\n\n\n# tampermonkey（油猴）\n\n必备神器。里面脚本可以实现非常多的功能，例如以下推荐的。\n\ngreasy fork 为油猴提供用户脚本的网站\n\n推荐的脚本\n\n 1. ac-baidu:重定向优化百度搜狗谷歌必应搜索favicon双列\n 2. csdn 自动展开+去广告+净化剪贴板+免登陆\n 3. 百度贴吧全能助手 - 贴吧美化\n 4. 网盘助手 - 自动输入网盘密码非常便捷\n 5. 优酷、爱奇艺、腾讯等全网 vip 视频免费看\n 6. 隐藏高(捆)速(绑)下载入口。\n 7. 跳过网站等待、验证码及登录脚本\n 8. 视频网 html5 播放小工具\n 9. 购物党比价工具 - 淘宝/京东/亚马逊/当当/苏宁/等百家商城的商品比价\n\n\n# wappalyzer\n\nwappalyzer 是一款强大的网站技术栈嗅探工具。可以快速识别一个网站用到的前后端技术框架、运行容器、脚本库等。是开发者用于学习先进的网站架构的不二之选。\n\n\n# fehelper web 前端助手\n\nfe 助手：包括 json 格式化、二维码生成与解码、信息编解码、代码压缩、美化、页面取色、markdown 与 html 互转、网页滚动截屏、正则表达式、时间转换工具、编码规范检测、页面性能检测、ajax 接口调试、密码生成器、json 比对工具、网页编码设置、便签笔记等。\n\n\n# vue.js devtools\n\n用来调试 vue.js应用程序。\n\n\n# 掘金\n\n为程序员、设计师、产品经理每日发现优质内容。 在新标签页展示聚合内容，包含前端、android、ios、后端、产品、设计六大频道，每个频道内都有一到多个内容源。\n\n\n# ublock origin\n\n一款高效的网络请求过滤工具，能去除网页的大部分广告包括视频的广告而且占用极低的内存和 cpu。\n\n\n# stylish\n\nstylish 为网站安装主题和皮肤。目前主流的网站例如 google、百度、微博、bilibli、github、优酷，都有大量的皮肤主题可以一键更换。\n\n\n# infinity 新标签页\n\n自由添加网站图标，云端高清壁纸，快速访问书签、天气、笔记、待办事项、扩展管理与历史记录。\n\n\n# onetab\n\n当您发现自己有太多的标签页时，单击 onetab 图标，将所有标签页转换成一个列表。当您需要再次访问这些标签页时，可以单独或全部恢复它们。\n\n当您的标签页位于 onetab 列表时，您将节省高达 95％的内存，因为你将减少 google chrome 浏览器中打开的标签页的数量。\n\n\n# 扩展管理器\n\n\n# extension manager 扩展管理器\n\n插件管理必备神器。一键管理所有扩展，快速开启/禁用、批量闪电管理，智能排序，右键卸载、锁定、选项配置，角标提醒，大小布局随心配。快捷、简单、安全。\n\n\n# 下载管理器\n\n\n# chrono 下载管理器\n\n管理下载，搜索和保存视频、图像、mp3 文件。使用在线下载管理器，加强 chrome 浏览器功能。\n\n\n# 鼠标操作\n\n\n# crxmouse 手势操作\n\n自定义的鼠标手势、击键和鼠标快捷键来提高您的工作效率。\n\n\n# 哔哩哔哩助手\n\n哔哩哔哩弹幕网辅助扩展，可以替换 html5 播放器、绕过区域限制、推送通知并进行一些快捷操作。\n\n\n# video speed controller 视频速度调节\n\nvideo speed controller 视频速度调节，是一款可以将视频播放速度提高到最多 16 倍速的开源浏览器插件，目前只支持 html5 播放器的在线视频调速播放。\n\n\n# lastpass\n\n将您的所有用户名和密码保存到 lastpass，它将自动登录到您的站点并在您需要的任何地方同步您的密码。\n\n\n# evernote\n\n一键保存网页到印象笔记，即时同步到你的手机和电脑，不用复制粘贴编辑再整理。\n\n\n# office\n\n\n# google 文档、表格及幻灯片\n\n使用 google 文档、表格和幻灯片来查看和编辑 microsoft word、excel 和 powerpoint 文件。查看和编辑 microsoft word、excel 和 powerpoint 文件 - 无需在您的计算机上安装 office。",charsets:{cjk:!0},lastUpdated:"2022/05/11, 01:14:41",lastUpdatedTimestamp:1652231681e3},{title:"Git导读",frontmatter:{title:"Git导读",date:"2022-05-10T11:32:30.000Z",permalink:"/pages/af5021/",categories:[null],tags:["Git"],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/02.Git/01.Git%E5%AF%BC%E8%AF%BB.html",relativePath:"06.工具/02.Git/01.Git导读.md",key:"v-d73d2c4a",path:"/pages/af5021/",headers:[{level:2,title:"必读",slug:"必读",normalizedTitle:"必读",charIndex:2}],headersStr:"必读",content:"# 必读\n\n> 如果要问一本就可以学习Git的书籍，那么这本书就是Pro2 Git。\n\n * Pro2 Git\n\n在线学习\n\n有个很好的在线学习网站，推荐给大家： https://learngitbranching.js.org/\n\n",normalizedContent:"# 必读\n\n> 如果要问一本就可以学习git的书籍，那么这本书就是pro2 git。\n\n * pro2 git\n\n在线学习\n\n有个很好的在线学习网站，推荐给大家： https://learngitbranching.js.org/\n\n",charsets:{cjk:!0},lastUpdated:"2022/05/10, 16:56:01",lastUpdatedTimestamp:1652201761e3},{title:"常用Git命令清单",frontmatter:{title:"常用Git命令清单",date:"2022-05-10T11:28:55.000Z",permalink:"/pages/9d41b5/",categories:[null],tags:["Git"],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/02.Git/02.Git%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4.html",relativePath:"06.工具/02.Git/02.Git常用操作命令.md",key:"v-7b95e10a",path:"/pages/9d41b5/",headers:[{level:2,title:"一、新建代码库",slug:"一、新建代码库",normalizedTitle:"一、新建代码库",charIndex:195},{level:2,title:"二、配置",slug:"二、配置",normalizedTitle:"二、配置",charIndex:324},{level:2,title:"三、增加/删除文件",slug:"三、增加-删除文件",normalizedTitle:"三、增加/删除文件",charIndex:576},{level:2,title:"四、代码提交",slug:"四、代码提交",normalizedTitle:"四、代码提交",charIndex:920},{level:2,title:"五、分支",slug:"五、分支",normalizedTitle:"五、分支",charIndex:1274},{level:2,title:"六、标签",slug:"六、标签",normalizedTitle:"六、标签",charIndex:1948},{level:2,title:"七、查看信息",slug:"七、查看信息",normalizedTitle:"七、查看信息",charIndex:2294},{level:2,title:"八、远程同步",slug:"八、远程同步",normalizedTitle:"八、远程同步",charIndex:3230},{level:2,title:"九、撤销",slug:"九、撤销",normalizedTitle:"九、撤销",charIndex:3590},{level:2,title:"十、常用操作组合",slug:"十、常用操作组合",normalizedTitle:"十、常用操作组合",charIndex:4156},{level:3,title:"1. 修改本地分支名和远程分支名",slug:"_1-修改本地分支名和远程分支名",normalizedTitle:"1. 修改本地分支名和远程分支名",charIndex:4169}],headersStr:"一、新建代码库 二、配置 三、增加/删除文件 四、代码提交 五、分支 六、标签 七、查看信息 八、远程同步 九、撤销 十、常用操作组合 1. 修改本地分支名和远程分支名",content:'# 常用 Git 命令清单\n\n一般来说，日常使用只要记住下图 6 个命令，就可以了。但是熟练使用，恐怕要记住 60 ～ 100 个命令。\n\n\n\n下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。\n\n>  * Workspace：工作区\n>  * Index / Stage：暂存区\n>  * Repository：仓库区（或本地仓库）\n>  * Remote：远程仓库\n\n\n# 一、新建代码库\n\n# 在当前目录新建一个Git代码库\n$ git init\n\n# 新建一个目录，将其初始化为Git代码库\n$ git init [project-name]\n\n# 下载一个项目和它的整个代码历史\n$ git clone [url]\n\n\n\n# 二、配置\n\nGit 的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。\n\n# 显示当前的Git配置\n$ git config --list\n\n# 编辑Git配置文件\n$ git config -e [--global]\n\n# 设置提交代码时的用户信息\n$ git config [--global] user.name "[name]"\n$ git config [--global] user.email "[email address]"\n\n\n\n# 三、增加/删除文件\n\n# 添加指定文件到暂存区\n$ git add [file1] [file2] ...\n\n# 添加指定目录到暂存区，包括子目录\n$ git add [dir]\n\n# 添加当前目录的所有文件到暂存区\n$ git add .\n\n# 添加每个变化前，都会要求确认\n# 对于同一个文件的多处变化，可以实现分次提交\n$ git add -p\n\n# 删除工作区文件，并且将这次删除放入暂存区\n$ git rm [file1] [file2] ...\n\n# 停止追踪指定文件，但该文件会保留在工作区\n$ git rm --cached [file]\n\n# 改名文件，并且将这个改名放入暂存区\n$ git mv [file-original] [file-renamed]\n\n\n\n# 四、代码提交\n\n# 提交暂存区到仓库区\n$ git commit -m [message]\n\n# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]\n\n# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n\n# 提交时显示所有diff信息\n$ git commit -v\n\n# 使用一次新的commit，替代上一次提交\n# 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n\n# 重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1] [file2] ...\n\n\n\n# 五、分支\n\n# 列出所有本地分支\n$ git branch\n\n# 列出所有远程分支\n$ git branch -r\n\n# 列出所有本地分支和远程分支\n$ git branch -a\n\n# 新建一个分支，但依然停留在当前分支\n$ git branch [branch-name]\n\n# 新建一个分支，并切换到该分支\n$ git checkout -b [branch]\n\n# 新建一个分支，指向指定commit\n$ git branch [branch] [commit]\n\n# 新建一个分支，与指定的远程分支建立追踪关系\n$ git branch --track [branch] [remote-branch]\n\n# 切换到指定分支，并更新工作区\n$ git checkout [branch-name]\n\n# 切换到上一个分支\n$ git checkout -\n\n# 建立追踪关系，在现有分支与指定的远程分支之间\n$ git branch --set-upstream [branch] [remote-branch]\n\n# 合并指定分支到当前分支\n$ git merge [branch]\n\n# 选择一个commit，合并进当前分支\n$ git cherry-pick [commit]\n\n# 删除分支\n$ git branch -d [branch-name]\n\n# 删除远程分支\n$ git push origin --delete [branch-name]\n$ git branch -dr [remote/branch]\n\n\n\n# 六、标签\n\n# 列出所有tag\n$ git tag\n\n# 新建一个tag在当前commit\n$ git tag [tag]\n\n# 新建一个tag在指定commit\n$ git tag [tag] [commit]\n\n# 删除本地tag\n$ git tag -d [tag]\n\n# 删除远程tag\n$ git push origin :refs/tags/[tagName]\n\n# 查看tag信息\n$ git show [tag]\n\n# 提交指定tag\n$ git push [remote] [tag]\n\n# 提交所有tag\n$ git push [remote] --tags\n\n# 新建一个分支，指向某个tag\n$ git checkout -b [branch] [tag]\n\n\n\n# 七、查看信息\n\n# 显示有变更的文件\n$ git status\n\n# 显示当前分支的版本历史\n$ git log\n\n# 显示commit历史，以及每次commit发生变更的文件\n$ git log --stat\n\n# 搜索提交历史，根据关键词\n$ git log -S [keyword]\n\n# 显示某个commit之后的所有变动，每个commit占据一行\n$ git log [tag] HEAD --pretty=format:%s\n\n# 显示某个commit之后的所有变动，其"提交说明"必须符合搜索条件\n$ git log [tag] HEAD --grep feature\n\n# 显示某个文件的版本历史，包括文件改名\n$ git log --follow [file]\n$ git whatchanged [file]\n\n# 显示指定文件相关的每一次diff\n$ git log -p [file]\n\n# 显示过去5次提交\n$ git log -5 --pretty --oneline\n\n# 显示所有提交过的用户，按提交次数排序\n$ git shortlog -sn\n\n# 显示指定文件是什么人在什么时间修改过\n$ git blame [file]\n\n# 显示暂存区和工作区的差异\n$ git diff\n\n# 显示暂存区和上一个commit的差异\n$ git diff --cached [file]\n\n# 显示工作区与当前分支最新commit之间的差异\n$ git diff HEAD\n\n# 显示两次提交之间的差异\n$ git diff [first-branch]...[second-branch]\n\n# 显示今天你写了多少行代码\n$ git diff --shortstat "@{0 day ago}"\n\n# 显示某次提交的元数据和内容变化\n$ git show [commit]\n\n# 显示某次提交发生变化的文件\n$ git show --name-only [commit]\n\n# 显示某次提交时，某个文件的内容\n$ git show [commit]:[filename]\n\n# 显示当前分支的最近几次提交\n$ git reflog\n\n\n\n# 八、远程同步\n\n# 下载远程仓库的所有变动\n$ git fetch [remote]\n\n# 显示所有远程仓库\n$ git remote -v\n\n# 显示某个远程仓库的信息\n$ git remote show [remote]\n\n# 增加一个新的远程仓库，并命名\n$ git remote add [shortname] [url]\n\n# 取回远程仓库的变化，并与本地分支合并\n$ git pull [remote] [branch]\n\n# 上传本地指定分支到远程仓库\n$ git push [remote] [branch]\n\n# 强行推送当前分支到远程仓库，即使有冲突\n$ git push [remote] --force\n\n# 推送所有分支到远程仓库\n$ git push [remote] --all\n\n\n\n# 九、撤销\n\n# 恢复暂存区的指定文件到工作区\n$ git checkout [file]\n\n# 恢复某个commit的指定文件到暂存区和工作区\n$ git checkout [commit] [file]\n\n# 恢复暂存区的所有文件到工作区\n$ git checkout .\n\n# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n$ git reset [file]\n\n# 重置暂存区与工作区，与上一次commit保持一致\n$ git reset --hard\n\n# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n$ git reset [commit]\n\n# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n$ git reset --hard [commit]\n\n# 重置当前HEAD为指定commit，但保持暂存区和工作区不变\n$ git reset --keep [commit]\n\n# 新建一个commit，用来撤销指定commit\n# 后者的所有变化都将被前者抵消，并且应用到当前分支\n$ git revert [commit]\n\n# 暂时将未提交的变化移除，稍后再移入\n$ git stash\n$ git stash pop\n\n\n\n# 十、常用操作组合\n\n\n# 1. 修改本地分支名和远程分支名\n\ngit branch -m old_branch new_branch # 重命名本地分支\ngit push origin :old_branch # 删除远程旧分支（分支名前有冒号）\ngit push --set-upstream origin new_branch # 推送新的分支，并设置本地分支跟踪新的远程分支\n\n\n> 来源：https://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html\n\n相关文章：\n\n《如何撤销 Git 操作？》\n\n《git cherry-pick 教程》 复制某分支上的部分提交到另一个分支上（相对于可以选择指定提交的 rebase 操作）。',normalizedContent:'# 常用 git 命令清单\n\n一般来说，日常使用只要记住下图 6 个命令，就可以了。但是熟练使用，恐怕要记住 60 ～ 100 个命令。\n\n\n\n下面是我整理的常用 git 命令清单。几个专用名词的译名如下。\n\n>  * workspace：工作区\n>  * index / stage：暂存区\n>  * repository：仓库区（或本地仓库）\n>  * remote：远程仓库\n\n\n# 一、新建代码库\n\n# 在当前目录新建一个git代码库\n$ git init\n\n# 新建一个目录，将其初始化为git代码库\n$ git init [project-name]\n\n# 下载一个项目和它的整个代码历史\n$ git clone [url]\n\n\n\n# 二、配置\n\ngit 的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。\n\n# 显示当前的git配置\n$ git config --list\n\n# 编辑git配置文件\n$ git config -e [--global]\n\n# 设置提交代码时的用户信息\n$ git config [--global] user.name "[name]"\n$ git config [--global] user.email "[email address]"\n\n\n\n# 三、增加/删除文件\n\n# 添加指定文件到暂存区\n$ git add [file1] [file2] ...\n\n# 添加指定目录到暂存区，包括子目录\n$ git add [dir]\n\n# 添加当前目录的所有文件到暂存区\n$ git add .\n\n# 添加每个变化前，都会要求确认\n# 对于同一个文件的多处变化，可以实现分次提交\n$ git add -p\n\n# 删除工作区文件，并且将这次删除放入暂存区\n$ git rm [file1] [file2] ...\n\n# 停止追踪指定文件，但该文件会保留在工作区\n$ git rm --cached [file]\n\n# 改名文件，并且将这个改名放入暂存区\n$ git mv [file-original] [file-renamed]\n\n\n\n# 四、代码提交\n\n# 提交暂存区到仓库区\n$ git commit -m [message]\n\n# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]\n\n# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n\n# 提交时显示所有diff信息\n$ git commit -v\n\n# 使用一次新的commit，替代上一次提交\n# 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n\n# 重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1] [file2] ...\n\n\n\n# 五、分支\n\n# 列出所有本地分支\n$ git branch\n\n# 列出所有远程分支\n$ git branch -r\n\n# 列出所有本地分支和远程分支\n$ git branch -a\n\n# 新建一个分支，但依然停留在当前分支\n$ git branch [branch-name]\n\n# 新建一个分支，并切换到该分支\n$ git checkout -b [branch]\n\n# 新建一个分支，指向指定commit\n$ git branch [branch] [commit]\n\n# 新建一个分支，与指定的远程分支建立追踪关系\n$ git branch --track [branch] [remote-branch]\n\n# 切换到指定分支，并更新工作区\n$ git checkout [branch-name]\n\n# 切换到上一个分支\n$ git checkout -\n\n# 建立追踪关系，在现有分支与指定的远程分支之间\n$ git branch --set-upstream [branch] [remote-branch]\n\n# 合并指定分支到当前分支\n$ git merge [branch]\n\n# 选择一个commit，合并进当前分支\n$ git cherry-pick [commit]\n\n# 删除分支\n$ git branch -d [branch-name]\n\n# 删除远程分支\n$ git push origin --delete [branch-name]\n$ git branch -dr [remote/branch]\n\n\n\n# 六、标签\n\n# 列出所有tag\n$ git tag\n\n# 新建一个tag在当前commit\n$ git tag [tag]\n\n# 新建一个tag在指定commit\n$ git tag [tag] [commit]\n\n# 删除本地tag\n$ git tag -d [tag]\n\n# 删除远程tag\n$ git push origin :refs/tags/[tagname]\n\n# 查看tag信息\n$ git show [tag]\n\n# 提交指定tag\n$ git push [remote] [tag]\n\n# 提交所有tag\n$ git push [remote] --tags\n\n# 新建一个分支，指向某个tag\n$ git checkout -b [branch] [tag]\n\n\n\n# 七、查看信息\n\n# 显示有变更的文件\n$ git status\n\n# 显示当前分支的版本历史\n$ git log\n\n# 显示commit历史，以及每次commit发生变更的文件\n$ git log --stat\n\n# 搜索提交历史，根据关键词\n$ git log -s [keyword]\n\n# 显示某个commit之后的所有变动，每个commit占据一行\n$ git log [tag] head --pretty=format:%s\n\n# 显示某个commit之后的所有变动，其"提交说明"必须符合搜索条件\n$ git log [tag] head --grep feature\n\n# 显示某个文件的版本历史，包括文件改名\n$ git log --follow [file]\n$ git whatchanged [file]\n\n# 显示指定文件相关的每一次diff\n$ git log -p [file]\n\n# 显示过去5次提交\n$ git log -5 --pretty --oneline\n\n# 显示所有提交过的用户，按提交次数排序\n$ git shortlog -sn\n\n# 显示指定文件是什么人在什么时间修改过\n$ git blame [file]\n\n# 显示暂存区和工作区的差异\n$ git diff\n\n# 显示暂存区和上一个commit的差异\n$ git diff --cached [file]\n\n# 显示工作区与当前分支最新commit之间的差异\n$ git diff head\n\n# 显示两次提交之间的差异\n$ git diff [first-branch]...[second-branch]\n\n# 显示今天你写了多少行代码\n$ git diff --shortstat "@{0 day ago}"\n\n# 显示某次提交的元数据和内容变化\n$ git show [commit]\n\n# 显示某次提交发生变化的文件\n$ git show --name-only [commit]\n\n# 显示某次提交时，某个文件的内容\n$ git show [commit]:[filename]\n\n# 显示当前分支的最近几次提交\n$ git reflog\n\n\n\n# 八、远程同步\n\n# 下载远程仓库的所有变动\n$ git fetch [remote]\n\n# 显示所有远程仓库\n$ git remote -v\n\n# 显示某个远程仓库的信息\n$ git remote show [remote]\n\n# 增加一个新的远程仓库，并命名\n$ git remote add [shortname] [url]\n\n# 取回远程仓库的变化，并与本地分支合并\n$ git pull [remote] [branch]\n\n# 上传本地指定分支到远程仓库\n$ git push [remote] [branch]\n\n# 强行推送当前分支到远程仓库，即使有冲突\n$ git push [remote] --force\n\n# 推送所有分支到远程仓库\n$ git push [remote] --all\n\n\n\n# 九、撤销\n\n# 恢复暂存区的指定文件到工作区\n$ git checkout [file]\n\n# 恢复某个commit的指定文件到暂存区和工作区\n$ git checkout [commit] [file]\n\n# 恢复暂存区的所有文件到工作区\n$ git checkout .\n\n# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n$ git reset [file]\n\n# 重置暂存区与工作区，与上一次commit保持一致\n$ git reset --hard\n\n# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n$ git reset [commit]\n\n# 重置当前分支的head为指定commit，同时重置暂存区和工作区，与指定commit一致\n$ git reset --hard [commit]\n\n# 重置当前head为指定commit，但保持暂存区和工作区不变\n$ git reset --keep [commit]\n\n# 新建一个commit，用来撤销指定commit\n# 后者的所有变化都将被前者抵消，并且应用到当前分支\n$ git revert [commit]\n\n# 暂时将未提交的变化移除，稍后再移入\n$ git stash\n$ git stash pop\n\n\n\n# 十、常用操作组合\n\n\n# 1. 修改本地分支名和远程分支名\n\ngit branch -m old_branch new_branch # 重命名本地分支\ngit push origin :old_branch # 删除远程旧分支（分支名前有冒号）\ngit push --set-upstream origin new_branch # 推送新的分支，并设置本地分支跟踪新的远程分支\n\n\n> 来源：https://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html\n\n相关文章：\n\n《如何撤销 git 操作？》\n\n《git cherry-pick 教程》 复制某分支上的部分提交到另一个分支上（相对于可以选择指定提交的 rebase 操作）。',charsets:{cjk:!0},lastUpdated:"2022/05/10, 16:56:01",lastUpdatedTimestamp:1652201761e3},{title:"Git思维导图",frontmatter:{title:"Git思维导图",date:"2022-05-10T11:32:30.000Z",permalink:"/pages/afbd7c/",categories:[null],tags:["Git"],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/02.Git/03.Git%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.html",relativePath:"06.工具/02.Git/03.Git思维导图.md",key:"v-0af603b9",path:"/pages/afbd7c/",headers:[{level:2,title:"Git思维导图",slug:"git思维导图",normalizedTitle:"git思维导图",charIndex:2}],headersStr:"Git思维导图",content:"# Git思维导图\n\n看不清楚，可以右键点击图片保存到本地查看。",normalizedContent:"# git思维导图\n\n看不清楚，可以右键点击图片保存到本地查看。",charsets:{cjk:!0},lastUpdated:"2022/05/11, 14:04:49",lastUpdatedTimestamp:1652277889e3},{title:"Git分支开发模型规范",frontmatter:{title:"Git分支开发模型规范",date:"2022-05-10T11:32:30.000Z",categories:[null],tags:["Git"],author:"七寸知架构",link:"https://www.jianshu.com/p/cbd8cf5e232d",permalink:"/pages/c5d2f8/",readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/02.Git/04.Git%E5%88%86%E6%94%AF%E5%BC%80%E5%8F%91%E6%A8%A1%E5%9E%8B%E8%A7%84%E8%8C%83.html",relativePath:"06.工具/02.Git/04.Git分支开发模型规范.md",key:"v-f39ea65a",path:"/pages/c5d2f8/",headersStr:null,content:" 1. 最稳定的代码放在 master 分支上（相当于 SVN 的 trunk 分支），我们不要直接在 master 分支上提交代码，只能在该分支上进行代码合并操作，例如将其它分支的代码合并到 master 分支上。\n 2. 我们日常开发中的 代码需要从 master 分支拉一条 develop 分支出来，该分支所有人都能访问，但一般情况下，我们也不会直接在该分支上提交代码，代码同样是从其它分支合并到 develop 分支上去。\n 3. 当我们需要开发某个特性时，需要 从 develop 分支拉出一条 feature 分支，例如 feature-name1 与 feature-name2，在这些分支上并行地开发具体特性。\n 4. 当特性开发完毕后，我们决定需要发布某个版本了，此时需要从 develop 分支上拉出一条 qa 分支，例如 qa-name1-name2，并将需要发布的特性从相关 feature 分支一同合并到 qa 分支上，随后将针对 qa 分支部署测试环境，测试工程师在该分支上做功能测试，开发工程师在该分支上修改 bug。\n 5. 待测试工程师无法找到任何 bug 时，我们可继续从 master 分支拉出一条 release 分支，此时release的版本号必须根据master的tag版本号来递增，递增规则参见下面版本号规范，例如 release1.0.0，并将qa-name1-name2分支合并到release1.0.0，并部署到预发环境，再次验证以后，均无任何 bug，此时可将 release 分支部署到生产环境。\n 6. 待上线完成后，将 release 分支上的代码同时合并到 develop 分支与 master 分支，并在 master 分支上打一个 tag，例如 v1.0.0。\n 7. 当生产环境发现 bug 时，我们需要从对应的 tag 上（例如 v1.0.0）拉出一条 hotfix 分支（例如 hotfix1.0.1），并在该分支上做 bug 修复。待 bug 完全修复后，需将 hotfix 分支上的代码同时合并到 develop 分支与 master 分支。最后，在 master 分支打tag（例如 v1.0.1）。\n\n> 对于版本号规范：\n> 格式为：x.y.z，其中，x 用于有重大重构时才会升级，y 用于有新的特性发布时才会升级，z 用于修改了某个 bug 后才会升级。\n\n使用 GIT 管理代码应该遵循以下规范：\n\n 1. 上传内容：保证GIT上保存的是“干净”的代码，不得有编译后再次生成的代码，如 Java 字节码文件和 JSP 生成文件，也不能有 IDE 生成文件；\n\n 2. 上传注释：必须加简要的注释，注释的内容应包含开发的模块名称以及功能描述；\n    \n    > 功能提交：[模块名称]功能描述，如：[用户模块]用户列表增加手机号字段显示；\n    > Bug Fix：[模块名称]Bug-编号：Bug 描述，如：[用户模块]Bug-1203：用户创建保存失败已修复；\n\n 3. 上传质量：提交和合并到分支上的代码尽量保证是自己测试通过的代码，以免影响别的项目/同事；",normalizedContent:" 1. 最稳定的代码放在 master 分支上（相当于 svn 的 trunk 分支），我们不要直接在 master 分支上提交代码，只能在该分支上进行代码合并操作，例如将其它分支的代码合并到 master 分支上。\n 2. 我们日常开发中的 代码需要从 master 分支拉一条 develop 分支出来，该分支所有人都能访问，但一般情况下，我们也不会直接在该分支上提交代码，代码同样是从其它分支合并到 develop 分支上去。\n 3. 当我们需要开发某个特性时，需要 从 develop 分支拉出一条 feature 分支，例如 feature-name1 与 feature-name2，在这些分支上并行地开发具体特性。\n 4. 当特性开发完毕后，我们决定需要发布某个版本了，此时需要从 develop 分支上拉出一条 qa 分支，例如 qa-name1-name2，并将需要发布的特性从相关 feature 分支一同合并到 qa 分支上，随后将针对 qa 分支部署测试环境，测试工程师在该分支上做功能测试，开发工程师在该分支上修改 bug。\n 5. 待测试工程师无法找到任何 bug 时，我们可继续从 master 分支拉出一条 release 分支，此时release的版本号必须根据master的tag版本号来递增，递增规则参见下面版本号规范，例如 release1.0.0，并将qa-name1-name2分支合并到release1.0.0，并部署到预发环境，再次验证以后，均无任何 bug，此时可将 release 分支部署到生产环境。\n 6. 待上线完成后，将 release 分支上的代码同时合并到 develop 分支与 master 分支，并在 master 分支上打一个 tag，例如 v1.0.0。\n 7. 当生产环境发现 bug 时，我们需要从对应的 tag 上（例如 v1.0.0）拉出一条 hotfix 分支（例如 hotfix1.0.1），并在该分支上做 bug 修复。待 bug 完全修复后，需将 hotfix 分支上的代码同时合并到 develop 分支与 master 分支。最后，在 master 分支打tag（例如 v1.0.1）。\n\n> 对于版本号规范：\n> 格式为：x.y.z，其中，x 用于有重大重构时才会升级，y 用于有新的特性发布时才会升级，z 用于修改了某个 bug 后才会升级。\n\n使用 git 管理代码应该遵循以下规范：\n\n 1. 上传内容：保证git上保存的是“干净”的代码，不得有编译后再次生成的代码，如 java 字节码文件和 jsp 生成文件，也不能有 ide 生成文件；\n\n 2. 上传注释：必须加简要的注释，注释的内容应包含开发的模块名称以及功能描述；\n    \n    > 功能提交：[模块名称]功能描述，如：[用户模块]用户列表增加手机号字段显示；\n    > bug fix：[模块名称]bug-编号：bug 描述，如：[用户模块]bug-1203：用户创建保存失败已修复；\n\n 3. 上传质量：提交和合并到分支上的代码尽量保证是自己测试通过的代码，以免影响别的项目/同事；",charsets:{cjk:!0},lastUpdated:"2022/05/10, 16:56:01",lastUpdatedTimestamp:1652201761e3},{title:"图解Git",frontmatter:{title:"图解Git",date:"2022-05-10T23:30:59.000Z",permalink:"/pages/20730e/",categories:[null],tags:["Git"],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/02.Git/05.%E5%9B%BE%E8%A7%A3Git.html",relativePath:"06.工具/02.Git/05.图解Git.md",key:"v-3b391dc4",path:"/pages/20730e/",headers:[{level:2,title:"基本用法",slug:"基本用法",normalizedTitle:"基本用法",charIndex:71},{level:2,title:"约定",slug:"约定",normalizedTitle:"约定",charIndex:569},{level:2,title:"命令详解",slug:"命令详解",normalizedTitle:"命令详解",charIndex:722},{level:3,title:"Diff",slug:"diff",normalizedTitle:"diff",charIndex:731},{level:3,title:"Commit",slug:"commit",normalizedTitle:"commit",charIndex:770},{level:3,title:"Checkout",slug:"checkout",normalizedTitle:"checkout",charIndex:1133},{level:3,title:"HEAD标识处于分离状态时的提交操作",slug:"head标识处于分离状态时的提交操作",normalizedTitle:"head标识处于分离状态时的提交操作",charIndex:1822},{level:3,title:"Reset",slug:"reset",normalizedTitle:"reset",charIndex:2056},{level:3,title:"Merge",slug:"merge",normalizedTitle:"merge",charIndex:2324},{level:3,title:"Cherry Pick",slug:"cherry-pick",normalizedTitle:"cherry pick",charIndex:2579},{level:3,title:"Rebase",slug:"rebase",normalizedTitle:"rebase",charIndex:2640},{level:2,title:"技术说明",slug:"技术说明",normalizedTitle:"技术说明",charIndex:2984}],headersStr:"基本用法 约定 命令详解 Diff Commit Checkout HEAD标识处于分离状态时的提交操作 Reset Merge Cherry Pick Rebase 技术说明",content:'> 来源：http://marklodato.github.io/visual-git-guide/index-zh-cn.html\n\n\n# 基本用法\n\n\n\n上面的四条命令在工作目录、暂存目录(也叫做索引)和仓库之间复制文件。\n\n * git add _files_ 把当前文件放入暂存区域。\n * git commit 给暂存区域生成快照并提交。\n * git reset -- _files_ 用来撤销最后一次git add _files_，你也可以用git reset 撤销所有暂存区域文件。\n * git checkout -- _files_ 把文件从暂存区域复制到工作目录，用来丢弃本地修改。\n\n你可以用 git reset -p, git checkout -p, or git add -p进入交互模式。\n\n也可以跳过暂存区域直接从仓库取出文件或者直接提交代码。\n\n\n\n * git commit -a 相当于运行 git add 把所有当前目录下的文件加入暂存区域再运行。git commit.\n * git commit _files_ 进行一次包含最后一次提交加上工作目录中文件快照的提交。并且文件被添加到暂存区域。\n * git checkout HEAD -- _files_ 回滚到复制最后一次提交。\n\n\n# 约定\n\n后文中以下面的形式使用图片。\n\n\n\n绿色的5位字符表示提交的ID，分别指向父节点。分支用橘色显示，分别指向特定的提交。当前分支由附在其上的_HEAD_标识。 这张图片里显示最后5次提交，_ed489_是最新提交。 _main_分支指向此次提交，另一个_stable_分支指向祖父提交节点。\n\n\n# 命令详解\n\n\n# Diff\n\n有许多种方法查看两次提交之间的变动。下面是一些示例。\n\n\n\n\n# Commit\n\n提交时，git用暂存区域的文件创建一个新的提交，并把此时的节点设为父节点。然后把当前分支指向新的提交节点。下图中，当前分支是_main_。 在运行命令之前，main_指向_ed489，提交后，_main_指向新的节点_f0cec_并以_ed489_作为父节点。\n\n\n\n即便当前分支是某次提交的祖父节点，git会同样操作。下图中，在_main_分支的祖父节点_stable_分支进行一次提交，生成了_1800b_。 这样，_stable_分支就不再是_main_分支的祖父节点。此时，合并 (或者 衍合) 是必须的。\n\n\n\n如果想更改一次提交，使用 git commit --amend。git会使用与当前提交相同的父节点进行一次新提交，旧的提交会被取消。\n\n\n\n另一个例子是分离HEAD提交,后文讲。\n\n\n# Checkout\n\ncheckout命令用于从历史提交（或者暂存区域）中拷贝文件到工作目录，也可用于切换分支。\n\n当给定某个文件名（或者打开-p选项，或者文件名和-p选项同时打开）时，git会从指定的提交中拷贝文件到暂存区域和工作目录。比如，git checkout HEAD~ foo.c会将提交节点_HEAD~_(即当前提交节点的父节点)中的foo.c复制到工作目录并且加到暂存区域中。（如果命令中没有指定提交节点，则会从暂存区域中拷贝内容。）注意当前分支不会发生变化。\n\n\n\n当不指定文件名，而是给出一个（本地）分支时，那么_HEAD_标识会移动到那个分支（也就是说，我们“切换”到那个分支了），然后暂存区域和工作目录中的内容会和_HEAD_对应的提交节点一致。新提交节点（下图中的a47c3）中的所有文件都会被复制（到暂存区域和工作目录中）；只存在于老的提交节点（ed489）中的文件会被删除；不属于上述两者的文件会被忽略，不受影响。\n\n\n\n如果既没有指定文件名，也没有指定分支名，而是一个标签、远程分支、SHA-1值或者是像_main~3_类似的东西，就得到一个匿名分支，称作_detached HEAD_（被分离的_HEAD_标识）。这样可以很方便地在历史版本之间互相切换。比如说你想要编译1.6.6.1版本的git，你可以运行git checkout v1.6.6.1（这是一个标签，而非分支名），编译，安装，然后切换回另一个分支，比如说git checkout main。然而，当提交操作涉及到“分离的HEAD”时，其行为会略有不同，详情见在下面。\n\n\n\n\n# HEAD标识处于分离状态时的提交操作\n\n当_HEAD_处于分离状态（不依附于任一分支）时，提交操作可以正常进行，但是不会更新任何已命名的分支。(你可以认为这是在更新一个匿名分支。)\n\n\n\n一旦此后你切换到别的分支，比如说_main_，那么这个提交节点（可能）再也不会被引用到，然后就会被丢弃掉了。注意这个命令之后就不会有东西引用_2eecb_。\n\n\n\n但是，如果你想保存这个状态，可以用命令git checkout -b _name_来创建一个新的分支。\n\n\n\n\n# Reset\n\nreset命令把当前分支指向另一个位置，并且有选择的变动工作目录和索引。也用来在从历史仓库中复制文件到索引，而不动工作目录。\n\n如果不给选项，那么当前分支指向到那个提交。如果用--hard选项，那么工作目录也更新，如果用--soft选项，那么都不变。\n\n\n\n如果没有给出提交点的版本号，那么默认用_HEAD_。这样，分支指向不变，但是索引会回滚到最后一次提交，如果用--hard选项，工作目录也同样。\n\n\n\n如果给了文件名(或者 -p选项), 那么工作效果和带文件名的checkout差不多，除了索引被更新。\n\n\n\n\n# Merge\n\nmerge 命令把不同分支合并起来。合并前，索引必须和当前提交相同。如果另一个分支是当前提交的祖父节点，那么合并命令将什么也不做。 另一种情况是如果当前提交是另一个分支的祖父节点，就导致_fast-forward_合并。指向只是简单的移动，并生成一个新的提交。\n\n\n\n否则就是一次真正的合并。默认把当前提交(ed489 如下所示)和另一个提交(33104)以及他们的共同祖父节点(b325c)进行一次三方合并。结果是先保存当前目录和索引，然后和父节点_33104_一起做一次新提交。\n\n\n\n\n# Cherry Pick\n\ncherry-pick命令"复制"一个提交节点并在当前分支做一次完全一样的新提交。\n\n\n\n\n# Rebase\n\n衍合是合并命令的另一种选择。合并把两个父分支合并进行一次提交，提交历史不是线性的。衍合在当前分支上重演另一个分支的历史，提交历史是线性的。 本质上，这是线性化的自动的 cherry-pick\n\n\n\n上面的命令都在_topic_分支中进行，而不是_main_分支，在_main_分支上重演，并且把分支指向新的节点。注意旧提交没有被引用，将被回收。\n\n要限制回滚范围，使用--onto选项。下面的命令在_main_分支上重演当前分支从_169a6_以来的最近几个提交，即_2c33a_。\n\n\n\n同样有git rebase --interactive让你更方便的完成一些复杂操作，比如丢弃、重排、修改、合并提交。没有图片体现这些，细节看这里:git-rebase(1)\n\n\n# 技术说明\n\n文件内容并没有真正存储在索引(.git/index)或者提交对象中，而是以blob的形式分别存储在数据库中(.git/objects)，并用SHA-1值来校验。 索引文件用识别码列出相关的blob文件以及别的数据。对于提交来说，以树(tree)的形式存储，同样用对于的哈希值识别。树对应着工作目录中的文件夹，树中包含的 树或者blob对象对应着相应的子目录和文件。每次提交都存储下它的上一级树的识别码。\n\n如果用detached HEAD提交，那么最后一次提交会被the reflog for HEAD引用。但是过一段时间就失效，最终被回收，与git commit --amend或者git rebase很像。',normalizedContent:'> 来源：http://marklodato.github.io/visual-git-guide/index-zh-cn.html\n\n\n# 基本用法\n\n\n\n上面的四条命令在工作目录、暂存目录(也叫做索引)和仓库之间复制文件。\n\n * git add _files_ 把当前文件放入暂存区域。\n * git commit 给暂存区域生成快照并提交。\n * git reset -- _files_ 用来撤销最后一次git add _files_，你也可以用git reset 撤销所有暂存区域文件。\n * git checkout -- _files_ 把文件从暂存区域复制到工作目录，用来丢弃本地修改。\n\n你可以用 git reset -p, git checkout -p, or git add -p进入交互模式。\n\n也可以跳过暂存区域直接从仓库取出文件或者直接提交代码。\n\n\n\n * git commit -a 相当于运行 git add 把所有当前目录下的文件加入暂存区域再运行。git commit.\n * git commit _files_ 进行一次包含最后一次提交加上工作目录中文件快照的提交。并且文件被添加到暂存区域。\n * git checkout head -- _files_ 回滚到复制最后一次提交。\n\n\n# 约定\n\n后文中以下面的形式使用图片。\n\n\n\n绿色的5位字符表示提交的id，分别指向父节点。分支用橘色显示，分别指向特定的提交。当前分支由附在其上的_head_标识。 这张图片里显示最后5次提交，_ed489_是最新提交。 _main_分支指向此次提交，另一个_stable_分支指向祖父提交节点。\n\n\n# 命令详解\n\n\n# diff\n\n有许多种方法查看两次提交之间的变动。下面是一些示例。\n\n\n\n\n# commit\n\n提交时，git用暂存区域的文件创建一个新的提交，并把此时的节点设为父节点。然后把当前分支指向新的提交节点。下图中，当前分支是_main_。 在运行命令之前，main_指向_ed489，提交后，_main_指向新的节点_f0cec_并以_ed489_作为父节点。\n\n\n\n即便当前分支是某次提交的祖父节点，git会同样操作。下图中，在_main_分支的祖父节点_stable_分支进行一次提交，生成了_1800b_。 这样，_stable_分支就不再是_main_分支的祖父节点。此时，合并 (或者 衍合) 是必须的。\n\n\n\n如果想更改一次提交，使用 git commit --amend。git会使用与当前提交相同的父节点进行一次新提交，旧的提交会被取消。\n\n\n\n另一个例子是分离head提交,后文讲。\n\n\n# checkout\n\ncheckout命令用于从历史提交（或者暂存区域）中拷贝文件到工作目录，也可用于切换分支。\n\n当给定某个文件名（或者打开-p选项，或者文件名和-p选项同时打开）时，git会从指定的提交中拷贝文件到暂存区域和工作目录。比如，git checkout head~ foo.c会将提交节点_head~_(即当前提交节点的父节点)中的foo.c复制到工作目录并且加到暂存区域中。（如果命令中没有指定提交节点，则会从暂存区域中拷贝内容。）注意当前分支不会发生变化。\n\n\n\n当不指定文件名，而是给出一个（本地）分支时，那么_head_标识会移动到那个分支（也就是说，我们“切换”到那个分支了），然后暂存区域和工作目录中的内容会和_head_对应的提交节点一致。新提交节点（下图中的a47c3）中的所有文件都会被复制（到暂存区域和工作目录中）；只存在于老的提交节点（ed489）中的文件会被删除；不属于上述两者的文件会被忽略，不受影响。\n\n\n\n如果既没有指定文件名，也没有指定分支名，而是一个标签、远程分支、sha-1值或者是像_main~3_类似的东西，就得到一个匿名分支，称作_detached head_（被分离的_head_标识）。这样可以很方便地在历史版本之间互相切换。比如说你想要编译1.6.6.1版本的git，你可以运行git checkout v1.6.6.1（这是一个标签，而非分支名），编译，安装，然后切换回另一个分支，比如说git checkout main。然而，当提交操作涉及到“分离的head”时，其行为会略有不同，详情见在下面。\n\n\n\n\n# head标识处于分离状态时的提交操作\n\n当_head_处于分离状态（不依附于任一分支）时，提交操作可以正常进行，但是不会更新任何已命名的分支。(你可以认为这是在更新一个匿名分支。)\n\n\n\n一旦此后你切换到别的分支，比如说_main_，那么这个提交节点（可能）再也不会被引用到，然后就会被丢弃掉了。注意这个命令之后就不会有东西引用_2eecb_。\n\n\n\n但是，如果你想保存这个状态，可以用命令git checkout -b _name_来创建一个新的分支。\n\n\n\n\n# reset\n\nreset命令把当前分支指向另一个位置，并且有选择的变动工作目录和索引。也用来在从历史仓库中复制文件到索引，而不动工作目录。\n\n如果不给选项，那么当前分支指向到那个提交。如果用--hard选项，那么工作目录也更新，如果用--soft选项，那么都不变。\n\n\n\n如果没有给出提交点的版本号，那么默认用_head_。这样，分支指向不变，但是索引会回滚到最后一次提交，如果用--hard选项，工作目录也同样。\n\n\n\n如果给了文件名(或者 -p选项), 那么工作效果和带文件名的checkout差不多，除了索引被更新。\n\n\n\n\n# merge\n\nmerge 命令把不同分支合并起来。合并前，索引必须和当前提交相同。如果另一个分支是当前提交的祖父节点，那么合并命令将什么也不做。 另一种情况是如果当前提交是另一个分支的祖父节点，就导致_fast-forward_合并。指向只是简单的移动，并生成一个新的提交。\n\n\n\n否则就是一次真正的合并。默认把当前提交(ed489 如下所示)和另一个提交(33104)以及他们的共同祖父节点(b325c)进行一次三方合并。结果是先保存当前目录和索引，然后和父节点_33104_一起做一次新提交。\n\n\n\n\n# cherry pick\n\ncherry-pick命令"复制"一个提交节点并在当前分支做一次完全一样的新提交。\n\n\n\n\n# rebase\n\n衍合是合并命令的另一种选择。合并把两个父分支合并进行一次提交，提交历史不是线性的。衍合在当前分支上重演另一个分支的历史，提交历史是线性的。 本质上，这是线性化的自动的 cherry-pick\n\n\n\n上面的命令都在_topic_分支中进行，而不是_main_分支，在_main_分支上重演，并且把分支指向新的节点。注意旧提交没有被引用，将被回收。\n\n要限制回滚范围，使用--onto选项。下面的命令在_main_分支上重演当前分支从_169a6_以来的最近几个提交，即_2c33a_。\n\n\n\n同样有git rebase --interactive让你更方便的完成一些复杂操作，比如丢弃、重排、修改、合并提交。没有图片体现这些，细节看这里:git-rebase(1)\n\n\n# 技术说明\n\n文件内容并没有真正存储在索引(.git/index)或者提交对象中，而是以blob的形式分别存储在数据库中(.git/objects)，并用sha-1值来校验。 索引文件用识别码列出相关的blob文件以及别的数据。对于提交来说，以树(tree)的形式存储，同样用对于的哈希值识别。树对应着工作目录中的文件夹，树中包含的 树或者blob对象对应着相应的子目录和文件。每次提交都存储下它的上一级树的识别码。\n\n如果用detached head提交，那么最后一次提交会被the reflog for head引用。但是过一段时间就失效，最终被回收，与git commit --amend或者git rebase很像。',charsets:{cjk:!0},lastUpdated:"2022/05/11, 01:42:50",lastUpdatedTimestamp:165223337e4},{title:"Git 在 macOS 中忽略所有 .DS_Store 文件",frontmatter:{title:"Git 在 macOS 中忽略所有 .DS_Store 文件",date:"2022-02-18T14:13:04.000Z",permalink:"/pages/9f8029/",categories:["Git"],tags:[null],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/02.Git/100.Git%E5%9C%A8macOS%E4%B8%AD%E5%BF%BD%E7%95%A5%E6%89%80%E6%9C%89DS_Store%E6%96%87%E4%BB%B6.html",relativePath:"06.工具/02.Git/100.Git在macOS中忽略所有DS_Store文件.md",key:"v-302408e4",path:"/pages/9f8029/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:37},{level:3,title:"项目中",slug:"项目中",normalizedTitle:"项目中",charIndex:291},{level:3,title:"全局忽略",slug:"全局忽略",normalizedTitle:"全局忽略",charIndex:617},{level:3,title:"针对网络磁盘",slug:"针对网络磁盘",normalizedTitle:"针对网络磁盘",charIndex:1342}],headersStr:"前言 项目中 全局忽略 针对网络磁盘",content:"# Git 在 macOS 中忽略所有 .DS_Store 文件\n\n\n# 前言\n\n * macOS 每个文件夹都存放着一个 .DS_Store 文件，是用于存放目录自定义属性（如图表、位置属性）等元数据信息的系统文件，由 Finder 自动创建。\n\n虽然所有 . 开头的文件/文件夹默认隐藏（可以使用 Command + Shift+。 显示所有隐藏文件），.DS_Store却并不展示，需要通过终端ls -la命令列出，但是 Git 仍会将其记录下来，即便我只是在同目录下移动文件。为了避免 .DS_Store等文件提交到仓库中，通常选择忽略 .DS_Store 文件。\n\n\n# 项目中\n\n.gitignore 是 Git 提供的一个让用户控制 Git 忽略某些文件的文件。所有被 .gitignore 匹配的文件都不会被 Git 记录。\n\n在仓库的根目录下创建一个 .gitignore 文件，添加以下内容\n\n这样依赖这个仓库就不会再记录 .DS_Store 文件了。\n\n如果远程仓库已经存在.DS_Store话，可以通过以下命令删除。\n\ngit rm --cached  */.DS_Store\n\n// 或者\nfind . -name .DS_Store -print0 | xargs -0 git rm -f --ignore-unmatch\n\n\n这样就删除了所有该仓库的 .DS_Store 。重新提交推送即可。\n\n\n# 全局忽略\n\n虽说可以使用上面的方法来忽略 .DS_Store ，但是每个仓库都要配置一遍，不如全局忽略来得方便。\n\n 1. Finder根目录下打开终端，运行以下命令创建.gitignore_global文件\n\ntouch ~/.gitignore_global\n\n\n 2. 通过编辑器修改该文件，添加以下内容。\n\n*~\n*.DS_Store\n.DS_Store\n.DS_Store?\n**/.DS_Store\nnode_modules\n**/node_modules\nehthumbs.db\nThumbs.db\n \n# local env files\npackage-lock.json\npackage-lock.json?\n.env.local\n.env.*.local\n\n# Log files\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# Editor directories and files\n.idea\n.vscode\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n*.sw?\n\n\n 3. 使.gitignore_global生效\n\ngit config --global core.excludesfile ~/.gitignore_global\n\n\n 4. 验证配置是否生效\n\ngit config --list\n\n\n或者查看根目录下.gitignore文件\n\n[core]\n\texcludesfile = /Users/[username]/.gitignore_global\n\n\n就说明已经添加成功了，以后 Git 就不会再记录 .DS_Store。\n\n\n# 针对网络磁盘\n\n禁止生成 .DS_store\n\n打开 “终端” ，复制黏贴下面的命令，回车执行，然后退出登录 macOS 账户并重新登录。\n\ndefaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE\n\n\n恢复生成.DS_store\n\ndefaults delete com.apple.desktopservices DSDontWriteNetworkStores\n\n\n以上命令只是针对网络磁盘，想要阻止本地磁盘中 DS_Store 文件的自动生成，唯一的方式就是停止使用「访达」，我觉得没必要有点以小失大。\n\n参考链接：\n\n * https://stackoverflow.com/questions/18393498/gitignore-all-the-ds-store-files-in-every-folder-and-subfolder\n * https://blog.ichr.me/post/git-ignore-all-ds-store-on-mac/",normalizedContent:"# git 在 macos 中忽略所有 .ds_store 文件\n\n\n# 前言\n\n * macos 每个文件夹都存放着一个 .ds_store 文件，是用于存放目录自定义属性（如图表、位置属性）等元数据信息的系统文件，由 finder 自动创建。\n\n虽然所有 . 开头的文件/文件夹默认隐藏（可以使用 command + shift+。 显示所有隐藏文件），.ds_store却并不展示，需要通过终端ls -la命令列出，但是 git 仍会将其记录下来，即便我只是在同目录下移动文件。为了避免 .ds_store等文件提交到仓库中，通常选择忽略 .ds_store 文件。\n\n\n# 项目中\n\n.gitignore 是 git 提供的一个让用户控制 git 忽略某些文件的文件。所有被 .gitignore 匹配的文件都不会被 git 记录。\n\n在仓库的根目录下创建一个 .gitignore 文件，添加以下内容\n\n这样依赖这个仓库就不会再记录 .ds_store 文件了。\n\n如果远程仓库已经存在.ds_store话，可以通过以下命令删除。\n\ngit rm --cached  */.ds_store\n\n// 或者\nfind . -name .ds_store -print0 | xargs -0 git rm -f --ignore-unmatch\n\n\n这样就删除了所有该仓库的 .ds_store 。重新提交推送即可。\n\n\n# 全局忽略\n\n虽说可以使用上面的方法来忽略 .ds_store ，但是每个仓库都要配置一遍，不如全局忽略来得方便。\n\n 1. finder根目录下打开终端，运行以下命令创建.gitignore_global文件\n\ntouch ~/.gitignore_global\n\n\n 2. 通过编辑器修改该文件，添加以下内容。\n\n*~\n*.ds_store\n.ds_store\n.ds_store?\n**/.ds_store\nnode_modules\n**/node_modules\nehthumbs.db\nthumbs.db\n \n# local env files\npackage-lock.json\npackage-lock.json?\n.env.local\n.env.*.local\n\n# log files\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# editor directories and files\n.idea\n.vscode\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n*.sw?\n\n\n 3. 使.gitignore_global生效\n\ngit config --global core.excludesfile ~/.gitignore_global\n\n\n 4. 验证配置是否生效\n\ngit config --list\n\n\n或者查看根目录下.gitignore文件\n\n[core]\n\texcludesfile = /users/[username]/.gitignore_global\n\n\n就说明已经添加成功了，以后 git 就不会再记录 .ds_store。\n\n\n# 针对网络磁盘\n\n禁止生成 .ds_store\n\n打开 “终端” ，复制黏贴下面的命令，回车执行，然后退出登录 macos 账户并重新登录。\n\ndefaults write com.apple.desktopservices dsdontwritenetworkstores -bool true\n\n\n恢复生成.ds_store\n\ndefaults delete com.apple.desktopservices dsdontwritenetworkstores\n\n\n以上命令只是针对网络磁盘，想要阻止本地磁盘中 ds_store 文件的自动生成，唯一的方式就是停止使用「访达」，我觉得没必要有点以小失大。\n\n参考链接：\n\n * https://stackoverflow.com/questions/18393498/gitignore-all-the-ds-store-files-in-every-folder-and-subfolder\n * https://blog.ichr.me/post/git-ignore-all-ds-store-on-mac/",charsets:{cjk:!0},lastUpdated:"2022/05/10, 16:56:01",lastUpdatedTimestamp:1652201761e3},{title:"Git本地仓库关联多个远程仓库",frontmatter:{title:"Git本地仓库关联多个远程仓库",date:"2021-7-28",tags:["Git"],permalink:"/pages/1115dc/",categories:[null],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/02.Git/101.Git%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E5%85%B3%E8%81%94%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.html",relativePath:"06.工具/02.Git/101.Git本地仓库关联多个远程仓库.md",key:"v-08693ea0",path:"/pages/1115dc/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:3,title:"set-url命令",slug:"set-url命令",normalizedTitle:"set-url命令",charIndex:183},{level:3,title:"修改.git文件",slug:"修改-git文件",normalizedTitle:"修改.git文件",charIndex:389}],headersStr:"前言 set-url命令 修改.git文件",content:'# 前言\n\n有一个公司的项目，可能是通过公司的内网搭建的GitLab，但是自己又想偷偷保存到自己私密仓库上，以备不时之需，这时我们只需要这样做就行。\n\n例如我们两个仓库：\n\nhttps://gitee.com/qqlcx5/frontend.git // 仓库一\nhttps://github.com/qqlcx5/frontend.git // 仓库二\n\n\n\n# set-url命令\n\n关联第一个仓库：\n\ngit remote add origin https://gitee.com/qqlcx5/frontend.git\n\n\n关联多个远程仓库：\n\ngit remote set-url --add origin https://github.com/qqlcx5/frontend.git\n\n\n推送到多个远程仓库：\n\ngit push origin --all\n\n\n\n# 修改.git文件\n\n在项目中，git初始化后都有一个.git文件夹的隐藏文件，通过编辑器打开.git/config文件后\n\n可以看到这样的配置：\n\n[remote "origin"]\nurl = https://gitee.com/qqlcx5/frontend.git\nfetch = +refs/heads/*:refs/remotes/origin/*\nurl = https://github.com/qqlcx5/frontend.git // 新增远程仓库\n\n\n大功告成。',normalizedContent:'# 前言\n\n有一个公司的项目，可能是通过公司的内网搭建的gitlab，但是自己又想偷偷保存到自己私密仓库上，以备不时之需，这时我们只需要这样做就行。\n\n例如我们两个仓库：\n\nhttps://gitee.com/qqlcx5/frontend.git // 仓库一\nhttps://github.com/qqlcx5/frontend.git // 仓库二\n\n\n\n# set-url命令\n\n关联第一个仓库：\n\ngit remote add origin https://gitee.com/qqlcx5/frontend.git\n\n\n关联多个远程仓库：\n\ngit remote set-url --add origin https://github.com/qqlcx5/frontend.git\n\n\n推送到多个远程仓库：\n\ngit push origin --all\n\n\n\n# 修改.git文件\n\n在项目中，git初始化后都有一个.git文件夹的隐藏文件，通过编辑器打开.git/config文件后\n\n可以看到这样的配置：\n\n[remote "origin"]\nurl = https://gitee.com/qqlcx5/frontend.git\nfetch = +refs/heads/*:refs/remotes/origin/*\nurl = https://github.com/qqlcx5/frontend.git // 新增远程仓库\n\n\n大功告成。',charsets:{cjk:!0},lastUpdated:"2022/05/10, 16:56:01",lastUpdatedTimestamp:1652201761e3},{title:"Git Commit表情大全",frontmatter:{title:"Git Commit表情大全",date:"2021-7-28",tags:[null],permalink:"/pages/0eff1a/",categories:["emoji"],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/02.Git/102.Git%20Commit%E8%A1%A8%E6%83%85%E5%A4%A7%E5%85%A8.html",relativePath:"06.工具/02.Git/102.Git Commit表情大全.md",key:"v-0a9a5969",path:"/pages/0eff1a/",headers:[{level:2,title:"介绍",slug:"介绍",normalizedTitle:"介绍",charIndex:2},{level:3,title:"常用",slug:"常用",normalizedTitle:"常用",charIndex:78},{level:3,title:"代码优化/升级",slug:"代码优化-升级",normalizedTitle:"代码优化/升级",charIndex:214},{level:3,title:"代码修改",slug:"代码修改",normalizedTitle:"代码修改",charIndex:705},{level:3,title:"项目依赖",slug:"项目依赖",normalizedTitle:"项目依赖",charIndex:1093},{level:3,title:"代码修复",slug:"代码修复",normalizedTitle:"代码修复",charIndex:1286},{level:3,title:"文档&说明",slug:"文档-说明",normalizedTitle:"文档&amp;说明",charIndex:null},{level:3,title:"上线&部署",slug:"上线-部署",normalizedTitle:"上线&amp;部署",charIndex:null},{level:3,title:"前端 / 后端",slug:"前端-后端",normalizedTitle:"前端 / 后端",charIndex:1957},{level:3,title:"版本控制",slug:"版本控制",normalizedTitle:"版本控制",charIndex:2159},{level:3,title:"其他",slug:"其他",normalizedTitle:"其他",charIndex:2321}],headersStr:"介绍 常用 代码优化/升级 代码修改 项目依赖 代码修复 文档&说明 上线&部署 前端 / 后端 版本控制 其他",content:"# 介绍\n\n如果我们的项目是用Git来管理的，我们每一次的提交信息想让消息更加醒目的话可以加上小表情。\n\n例如： 🎉🎉🎉 看着还不错的样子。\n\n\n# 常用\n\nTAG             TAG                TAG\n🎉:tada:首次提交    ✨:sparkles:添加新功能   🔥:fire:删除文件/删除代码\n🐛:bug:bug 修复   🔧:wrench:修改配置文件   \n\n\n# 代码优化/升级\n\nTAG                        TAG                               TAG\n🎨:art:改进代码结构/格式           ⚡️:zap:提高性能                       🥅:goal_net:捕获异常/捕获错误\n🗑:wastebasket:需要清理的废弃代码   🗑:wastebasket:需要清理的废弃代码          🚸:children_crossing:提升用户体验\n♻️:recycle:重构代码            🥚:egg:添加彩蛋                       💥:boom:重大重构/代码改革\n♿️:wheelchair:提高可访问性       📦:package:更新已编译的文件或 package 包    ⚗:alembic:尝试新事物\n🔍:mag:SEO 优化              🌐:globe_with_meridians:国际化/本地化   💩:poop:编写了待优化/待改进的糟糕代码\n\n\n# 代码修改\n\nTAG                          TAG                                      TAG\n🚧:construction:工作进行中        🚚:truck:移动/重命名文件                        📸:camera_flash:添加/更新快照\n👌:ok_hand:因为代码规范/代码审查变更代码   👽:alien:因为外部/第三方 API 的更改而更新代码           🏗:building_construction:修改架构\n🌱 :seedling:添加/更新种子文件       🏷️:label:添加/更新数据类型(Flow、TypeScript 等)   🚩:triangular_flag_on_post:添加、更新或删除功能标记\n\n\n# 项目依赖\n\nTAG                       TAG                        TAG\n➕:heavy_plus_sign:添加依赖项   ➖:heavy_minus_sign:移除依赖项   ⬇️:arrow_down:依赖降级\n⬆️:arrow_up:依赖升级          📌:arrow_up:固定依赖版本         \n\n\n# 代码修复\n\nTAG                                    TAG                             TAG\n✏️:pencil2:修复拼写错误                      🔒:lock:修复安全问题                  ✅✅更新测试\n🚑:ambulance:修复关键代码错误                  🍎:apple:MacOS 上修复问题/处理内容       🐧:penguin:Linux 上修复问题/处理内容\n🏁:checkered_flag:Windows 上修复问题/处理内容   🤖:robot:Android 安卓上修复问题/处理内容   🍏:green_apple:IOS 上修复问题/处理内容\n\n\n# 文档&说明\n\nTAG              TAG             TAG\n📝:pencil:撰写文档   💡:bulb:记录源代码   💬:speech_balloon:更新文本/修改文字\n\n\n# 上线&部署\n\nTAG                                  TAG              TAG\n🔖:bookmark:上线版本/制定版本号/版本标记          🚀:rocket:部署内容   🐳:whale:docker 相关操作\n☸️:wheel_of_dharma:Kubernetes 相关操作                    \n\n\n# 前端 / 后端\n\nTAG                          TAG                       TAG\n🍱:bento:添加/更新资源文件           💄:lipstick:更新 UI 和样式文件   📱:iphone:致力于响应式设计\n🗃:card_file_box:执行数据库相关变更                             \n\n\n# 版本控制\n\nTAG                                 TAG                  TAG\n🙈:see_no_evil:添加/更新.gitignore 文件   ⏪:rewind:还原更改/回退版本   🔀:twisted_rightwards_arrows:合并分支\n\n\n# 其他\n\nTAG                           TAG                                        TAG\n📄:page_facing_up:添加/更新许可证    🚨:rotating_light:去除 linter 警告(IDE 警告信息)   👷:construction_worker:添加 CI(持续集成)系统\n💚:green_heart:CI(持续集成)构建修复   📈:chart_with_upwards_trend:添加分析/统计代码      🔊:loud_sound:添加日志\n🔇:mute:删除日志                  👥:busts_in_silhouette:添加参与者/合作者/伙伴        🍻:beers:酒后写码\n🤡:clown_face:模仿事物                                                       ",normalizedContent:"# 介绍\n\n如果我们的项目是用git来管理的，我们每一次的提交信息想让消息更加醒目的话可以加上小表情。\n\n例如： 🎉🎉🎉 看着还不错的样子。\n\n\n# 常用\n\ntag             tag                tag\n🎉:tada:首次提交    ✨:sparkles:添加新功能   🔥:fire:删除文件/删除代码\n🐛:bug:bug 修复   🔧:wrench:修改配置文件   \n\n\n# 代码优化/升级\n\ntag                        tag                               tag\n🎨:art:改进代码结构/格式           ⚡️:zap:提高性能                       🥅:goal_net:捕获异常/捕获错误\n🗑:wastebasket:需要清理的废弃代码   🗑:wastebasket:需要清理的废弃代码          🚸:children_crossing:提升用户体验\n♻️:recycle:重构代码            🥚:egg:添加彩蛋                       💥:boom:重大重构/代码改革\n♿️:wheelchair:提高可访问性       📦:package:更新已编译的文件或 package 包    ⚗:alembic:尝试新事物\n🔍:mag:seo 优化              🌐:globe_with_meridians:国际化/本地化   💩:poop:编写了待优化/待改进的糟糕代码\n\n\n# 代码修改\n\ntag                          tag                                      tag\n🚧:construction:工作进行中        🚚:truck:移动/重命名文件                        📸:camera_flash:添加/更新快照\n👌:ok_hand:因为代码规范/代码审查变更代码   👽:alien:因为外部/第三方 api 的更改而更新代码           🏗:building_construction:修改架构\n🌱 :seedling:添加/更新种子文件       🏷️:label:添加/更新数据类型(flow、typescript 等)   🚩:triangular_flag_on_post:添加、更新或删除功能标记\n\n\n# 项目依赖\n\ntag                       tag                        tag\n➕:heavy_plus_sign:添加依赖项   ➖:heavy_minus_sign:移除依赖项   ⬇️:arrow_down:依赖降级\n⬆️:arrow_up:依赖升级          📌:arrow_up:固定依赖版本         \n\n\n# 代码修复\n\ntag                                    tag                             tag\n✏️:pencil2:修复拼写错误                      🔒:lock:修复安全问题                  ✅✅更新测试\n🚑:ambulance:修复关键代码错误                  🍎:apple:macos 上修复问题/处理内容       🐧:penguin:linux 上修复问题/处理内容\n🏁:checkered_flag:windows 上修复问题/处理内容   🤖:robot:android 安卓上修复问题/处理内容   🍏:green_apple:ios 上修复问题/处理内容\n\n\n# 文档&说明\n\ntag              tag             tag\n📝:pencil:撰写文档   💡:bulb:记录源代码   💬:speech_balloon:更新文本/修改文字\n\n\n# 上线&部署\n\ntag                                  tag              tag\n🔖:bookmark:上线版本/制定版本号/版本标记          🚀:rocket:部署内容   🐳:whale:docker 相关操作\n☸️:wheel_of_dharma:kubernetes 相关操作                    \n\n\n# 前端 / 后端\n\ntag                          tag                       tag\n🍱:bento:添加/更新资源文件           💄:lipstick:更新 ui 和样式文件   📱:iphone:致力于响应式设计\n🗃:card_file_box:执行数据库相关变更                             \n\n\n# 版本控制\n\ntag                                 tag                  tag\n🙈:see_no_evil:添加/更新.gitignore 文件   ⏪:rewind:还原更改/回退版本   🔀:twisted_rightwards_arrows:合并分支\n\n\n# 其他\n\ntag                           tag                                        tag\n📄:page_facing_up:添加/更新许可证    🚨:rotating_light:去除 linter 警告(ide 警告信息)   👷:construction_worker:添加 ci(持续集成)系统\n💚:green_heart:ci(持续集成)构建修复   📈:chart_with_upwards_trend:添加分析/统计代码      🔊:loud_sound:添加日志\n🔇:mute:删除日志                  👥:busts_in_silhouette:添加参与者/合作者/伙伴        🍻:beers:酒后写码\n🤡:clown_face:模仿事物                                                       ",charsets:{cjk:!0},lastUpdated:"2022/05/10, 16:56:01",lastUpdatedTimestamp:1652201761e3},{title:"permissions 0755 问题解决",frontmatter:{title:"permissions 0755 问题解决",date:"2019-03-18T11:55:23.000Z",permalink:"/pages/86465f/",categories:[null],tags:[null],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/02.Git/103.Git%20Permissions%200755%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3.html",relativePath:"06.工具/02.Git/103.Git Permissions 0755问题解决.md",key:"v-1ea2bb96",path:"/pages/86465f/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:28},{level:3,title:"报错分析🔍",slug:"报错分析🔍",normalizedTitle:"报错分析🔍",charIndex:90},{level:3,title:"解决方案",slug:"解决方案",normalizedTitle:"解决方案",charIndex:323}],headersStr:"前言 报错分析🔍 解决方案",content:"# permissions 0755 问题解决\n\n\n# 前言\n\n我最近京东买了电脑配置搞了一台黑苹果，成本4k左右配置，可以媲美满配置的苹果笔记本，苹果的硬件利润真的多。\n\n\n# 报错分析🔍\n\n我在这台黑电脑上安装git后，发现克隆不了仓库，如图下问题。\n\n\n\n简单翻译一下这句报错信息：\n\n“/Users/another/.ssh/id_rsa”的权限0755太开放。\n要求您的私钥文件不能被其他人访问。\n此私钥将被忽略。\nLoad key“/Users/another/.ssh/id_rsa”：权限错误\ngit@github.com：权限被拒绝（公钥）。\n致命：无法从远程存储库读取。\n请确保您具有正确的访问权限\n存储库存在。\n\n\n\n# 解决方案\n\n出现该问题主要是因为你的ssh中的私钥权限导致的。\n\nchmod -R 700 ~/.ssh/*\n\n\n参数\n\n * 700 只有拥有者有读、写、执行权限。\n * -R 递归改文件内的权限。",normalizedContent:"# permissions 0755 问题解决\n\n\n# 前言\n\n我最近京东买了电脑配置搞了一台黑苹果，成本4k左右配置，可以媲美满配置的苹果笔记本，苹果的硬件利润真的多。\n\n\n# 报错分析🔍\n\n我在这台黑电脑上安装git后，发现克隆不了仓库，如图下问题。\n\n\n\n简单翻译一下这句报错信息：\n\n“/users/another/.ssh/id_rsa”的权限0755太开放。\n要求您的私钥文件不能被其他人访问。\n此私钥将被忽略。\nload key“/users/another/.ssh/id_rsa”：权限错误\ngit@github.com：权限被拒绝（公钥）。\n致命：无法从远程存储库读取。\n请确保您具有正确的访问权限\n存储库存在。\n\n\n\n# 解决方案\n\n出现该问题主要是因为你的ssh中的私钥权限导致的。\n\nchmod -r 700 ~/.ssh/*\n\n\n参数\n\n * 700 只有拥有者有读、写、执行权限。\n * -r 递归改文件内的权限。",charsets:{cjk:!0},lastUpdated:"2022/05/11, 15:37:12",lastUpdatedTimestamp:1652283432e3},{title:"Git变基合并",frontmatter:{title:"Git变基合并",date:"2022-05-10T11:30:35.000Z",permalink:"/pages/e223b5/",categories:[null],tags:["Git"],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/02.Git/50.Git%E5%8F%98%E5%9F%BA%E5%90%88%E5%B9%B6.html",relativePath:"06.工具/02.Git/50.Git变基合并.md",key:"v-33d1e0b9",path:"/pages/e223b5/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:17},{level:3,title:"变基要遵守的准则",slug:"变基要遵守的准则",normalizedTitle:"变基要遵守的准则",charIndex:673},{level:3,title:"变基的实质",slug:"变基的实质",normalizedTitle:"变基的实质",charIndex:738},{level:2,title:"后悔药",slug:"后悔药",normalizedTitle:"后悔药",charIndex:531},{level:2,title:"开发期间的rebase操作",slug:"开发期间的rebase操作",normalizedTitle:"开发期间的rebase操作",charIndex:1757},{level:3,title:"背景",slug:"背景",normalizedTitle:"背景",charIndex:1775},{level:3,title:"操作步骤",slug:"操作步骤",normalizedTitle:"操作步骤",charIndex:2005},{level:3,title:"git cherry-pick",slug:"git-cherry-pick",normalizedTitle:"git cherry-pick",charIndex:2326}],headersStr:"说明 变基要遵守的准则 变基的实质 后悔药 开发期间的rebase操作 背景 操作步骤 git cherry-pick",content:"# rebase分支合并\n\n\n# 说明\n\n以下 v2 是某个需求的开发分支， dev是总的开发分支，v2 是基于dev分支签出的。\n\n当完成v2的开发后，需要把代码合并到dev，我们可以使用rebase进行合并：\n\n# 首先将 v2 push到远程仓库\ngit add .\ngit commit -m 'xxx'\ngit push origin v2\n\n# 切换到 dev 拉取最新代码\ngit checkout dev\ngit pull origin dev\n\n# 切换到 v2\ngit checkout v2\ngit rebase dev # 将 v2 的所有[commit] 变基到(应用到) dev\n\n# 切换到 dev\ngit checkout dev\ngit merge v2  # 将 dev分支 快进合并 （此时 (HEAD -> dev, v2) [commit] 两个分支指向同一个提交）\n\n# 查看 原v2的[commit]记录 是否在dev分支的最前面（变基成功会把v2的提交记录应用到dev分支的最前面）\ngit log\n\n\t# 如果到这一步发现有问题，尝试使用 git --abort中止变基，如果还是有问题的可以在dev分支上使用《后悔药》操作， 再到v2分支上使用《后悔药》操作，即可使两个分支都回退到 rebase变基 之前的状态\n\n# 试运行项目是否有问题\nyarn start\n\ngit status # 查看状态是否有问题\ngit push origin dev # 推送到远程仓库的 dev\n\n\n\n\n# 变基要遵守的准则\n\n几个人同时在一个分支上进行开发和提交时，你不要中途执行变基，只有在大家都完成工作之后才可以执行变基。\n\n\n# 变基的实质\n\n变基操作的实质是丢弃一些现有的提交，然后相应地新建一些内容一样但实际上不同的提交。 因此，变基操作过后的分支将不要再使用。\n\n\n# 后悔药\n\n# 查看HEAD指针变动记录\ngit reflog\n# 记录示例(当前分支是v2):\n07c398f (HEAD -> v2, master) HEAD@{0}: checkout: moving from master to v2\n07c398f (HEAD -> v2, master) HEAD@{1}: rebase (finish): returning to refs/heads/master\n07c398f (HEAD -> v2, master) HEAD@{2}: rebase (start): checkout v2\n15a97d8 HEAD@{3}: reset: moving to 15a97d8\n07c398f (HEAD -> v2, master) HEAD@{4}: merge v2: Fast-forward\n15a97d8 HEAD@{5}: checkout: moving from v2 to master\n07c398f (HEAD -> v2, master) HEAD@{6}: rebase (finish): returning to refs/heads/v2\n07c398f (HEAD -> v2, master) HEAD@{7}: rebase (pick): C\n15a97d8 HEAD@{8}: rebase (start): checkout master # 首次rebase\nd278ecd HEAD@{9}: checkout: moving from master to v2 # rebase前的状态\n15a97d8 HEAD@{10}: commit: D\n\n# 可见，示例中最初的 rebase 操作是 HEAD@{8}，想回退到变基前的状态需让指针指向 HEAD@{9}\ngit reset --hard d278ecd  # 重置当前分支的HEAD为指定[commit]，同时重置暂存区和工作区，与指定[commit]一致\n\n# 此时打印 log 查看是否回到之前的状态\ngit log\n\n\n注意：此操作只能回退当前的分支，如其他分支也要回退，需要切换到该分支并执行上面操作。\n\n\n# 开发期间的rebase操作\n\n\n# 背景\n\n有两个分支：\n\ndev\n*v2\n\n\n2.4-dev 是基于dev切出来的。\n\n提交记录如下：\n\n\t\tdev\na - b - c\n\t\tv2\n\n\n开发期间，两个分支同时有新的commit ：\n\n\t\t\t\tdev\na - b - c - d - e\n\t\t\\ - f - g\n\t\t\t\tv2\n\n\n当前你正在v2进行开发，dev也同时进行开发，并有重大的改变，你需要把dev的提交同步到v2。\n\n需求： 把dev中新的提交同步到v2，且不能影响dev分支。\n\n\n# 操作步骤\n\n 1. 基于最新的 dev 切一个新的分支 dev-copy\n    \n    > dev-copy 和 dev 两者的 commit ID 一致。\n\n 2. 在dev-copy中执行rebase，将 dev-copy 的提交变基到 v2\n    \n    git rebase v2 # 将 dev-copy 的提交[commit] 变基到(应用到) v2\n    \n\n 3. 删除原v2分支，将dev-copy分支名改为v2\n    \n    # 当前在 dev-copy 分支\n    git branch -d v2 # 删除分支\n    git branch -m dev-copy v2 # 重命名\n    \n\n\n# git cherry-pick\n\n来源：《git cherry-pick 教程》\n\n用于将单个或几个[commit]复制到另一个分支。\n\n# 基本应用\n\ngit cherry-pick <commitHash> # 将commitHash应用于当前分支\n\n\n上面命令就会将指定的提交commitHash，应用于当前分支。这会在当前分支产生一个新的提交，当然它们的哈希值会不一样。\n\ngit cherry-pick命令的参数，不一定是提交的哈希值，分支名也是可以的，表示转移该分支的最新提交。\n\n# 转移多个提交\n\nCherry pick 支持一次转移多个提交。\n\ngit cherry-pick <HashA> <HashB> # A和B提交\n\n\n上面的命令将 A 和 B 两个提交应用到当前分支。这会在当前分支生成两个对应的新提交。\n\n如果想要转移一系列的连续提交，可以使用下面的简便语法。\n\ngit cherry-pick A..B # A到B提交，不包含A\n\n\n上面的命令可以转移从 A 到 B 的所有提交。它们必须按照正确的顺序放置：提交 A 必须早于提交 B，否则命令将失败，但不会报错。\n\n注意，使用上面的命令，提交 A 将不会包含在 Cherry pick 中。如果要包含提交 A，可以使用下面的语法。\n\ngit cherry-pick A^..B # A到B提交，包含A\n",normalizedContent:"# rebase分支合并\n\n\n# 说明\n\n以下 v2 是某个需求的开发分支， dev是总的开发分支，v2 是基于dev分支签出的。\n\n当完成v2的开发后，需要把代码合并到dev，我们可以使用rebase进行合并：\n\n# 首先将 v2 push到远程仓库\ngit add .\ngit commit -m 'xxx'\ngit push origin v2\n\n# 切换到 dev 拉取最新代码\ngit checkout dev\ngit pull origin dev\n\n# 切换到 v2\ngit checkout v2\ngit rebase dev # 将 v2 的所有[commit] 变基到(应用到) dev\n\n# 切换到 dev\ngit checkout dev\ngit merge v2  # 将 dev分支 快进合并 （此时 (head -> dev, v2) [commit] 两个分支指向同一个提交）\n\n# 查看 原v2的[commit]记录 是否在dev分支的最前面（变基成功会把v2的提交记录应用到dev分支的最前面）\ngit log\n\n\t# 如果到这一步发现有问题，尝试使用 git --abort中止变基，如果还是有问题的可以在dev分支上使用《后悔药》操作， 再到v2分支上使用《后悔药》操作，即可使两个分支都回退到 rebase变基 之前的状态\n\n# 试运行项目是否有问题\nyarn start\n\ngit status # 查看状态是否有问题\ngit push origin dev # 推送到远程仓库的 dev\n\n\n\n\n# 变基要遵守的准则\n\n几个人同时在一个分支上进行开发和提交时，你不要中途执行变基，只有在大家都完成工作之后才可以执行变基。\n\n\n# 变基的实质\n\n变基操作的实质是丢弃一些现有的提交，然后相应地新建一些内容一样但实际上不同的提交。 因此，变基操作过后的分支将不要再使用。\n\n\n# 后悔药\n\n# 查看head指针变动记录\ngit reflog\n# 记录示例(当前分支是v2):\n07c398f (head -> v2, master) head@{0}: checkout: moving from master to v2\n07c398f (head -> v2, master) head@{1}: rebase (finish): returning to refs/heads/master\n07c398f (head -> v2, master) head@{2}: rebase (start): checkout v2\n15a97d8 head@{3}: reset: moving to 15a97d8\n07c398f (head -> v2, master) head@{4}: merge v2: fast-forward\n15a97d8 head@{5}: checkout: moving from v2 to master\n07c398f (head -> v2, master) head@{6}: rebase (finish): returning to refs/heads/v2\n07c398f (head -> v2, master) head@{7}: rebase (pick): c\n15a97d8 head@{8}: rebase (start): checkout master # 首次rebase\nd278ecd head@{9}: checkout: moving from master to v2 # rebase前的状态\n15a97d8 head@{10}: commit: d\n\n# 可见，示例中最初的 rebase 操作是 head@{8}，想回退到变基前的状态需让指针指向 head@{9}\ngit reset --hard d278ecd  # 重置当前分支的head为指定[commit]，同时重置暂存区和工作区，与指定[commit]一致\n\n# 此时打印 log 查看是否回到之前的状态\ngit log\n\n\n注意：此操作只能回退当前的分支，如其他分支也要回退，需要切换到该分支并执行上面操作。\n\n\n# 开发期间的rebase操作\n\n\n# 背景\n\n有两个分支：\n\ndev\n*v2\n\n\n2.4-dev 是基于dev切出来的。\n\n提交记录如下：\n\n\t\tdev\na - b - c\n\t\tv2\n\n\n开发期间，两个分支同时有新的commit ：\n\n\t\t\t\tdev\na - b - c - d - e\n\t\t\\ - f - g\n\t\t\t\tv2\n\n\n当前你正在v2进行开发，dev也同时进行开发，并有重大的改变，你需要把dev的提交同步到v2。\n\n需求： 把dev中新的提交同步到v2，且不能影响dev分支。\n\n\n# 操作步骤\n\n 1. 基于最新的 dev 切一个新的分支 dev-copy\n    \n    > dev-copy 和 dev 两者的 commit id 一致。\n\n 2. 在dev-copy中执行rebase，将 dev-copy 的提交变基到 v2\n    \n    git rebase v2 # 将 dev-copy 的提交[commit] 变基到(应用到) v2\n    \n\n 3. 删除原v2分支，将dev-copy分支名改为v2\n    \n    # 当前在 dev-copy 分支\n    git branch -d v2 # 删除分支\n    git branch -m dev-copy v2 # 重命名\n    \n\n\n# git cherry-pick\n\n来源：《git cherry-pick 教程》\n\n用于将单个或几个[commit]复制到另一个分支。\n\n# 基本应用\n\ngit cherry-pick <commithash> # 将commithash应用于当前分支\n\n\n上面命令就会将指定的提交commithash，应用于当前分支。这会在当前分支产生一个新的提交，当然它们的哈希值会不一样。\n\ngit cherry-pick命令的参数，不一定是提交的哈希值，分支名也是可以的，表示转移该分支的最新提交。\n\n# 转移多个提交\n\ncherry pick 支持一次转移多个提交。\n\ngit cherry-pick <hasha> <hashb> # a和b提交\n\n\n上面的命令将 a 和 b 两个提交应用到当前分支。这会在当前分支生成两个对应的新提交。\n\n如果想要转移一系列的连续提交，可以使用下面的简便语法。\n\ngit cherry-pick a..b # a到b提交，不包含a\n\n\n上面的命令可以转移从 a 到 b 的所有提交。它们必须按照正确的顺序放置：提交 a 必须早于提交 b，否则命令将失败，但不会报错。\n\n注意，使用上面的命令，提交 a 将不会包含在 cherry pick 中。如果要包含提交 a，可以使用下面的语法。\n\ngit cherry-pick a^..b # a到b提交，包含a\n",charsets:{cjk:!0},lastUpdated:"2022/05/10, 16:56:01",lastUpdatedTimestamp:1652201761e3},{title:"Mac常用软件推荐",frontmatter:{title:"Mac常用软件推荐",date:"2018-12-28T00:00:00.000Z",tags:["Mac"],permalink:"/pages/4eec3f/",categories:[null],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/03.Mac/01.Mac%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90.html",relativePath:"06.工具/03.Mac/01.Mac常用软件推荐.md",key:"v-7739008f",path:"/pages/4eec3f/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:19},{level:3,title:"uTools 效率神器",slug:"utools-效率神器",normalizedTitle:"utools 效率神器",charIndex:55},{level:3,title:"Alfred 效率神器",slug:"alfred-效率神器",normalizedTitle:"alfred 效率神器",charIndex:352},{level:3,title:"Quiver 程序猿使用的笔记本",slug:"quiver-程序猿使用的笔记本",normalizedTitle:"quiver 程序猿使用的笔记本",charIndex:515},{level:3,title:"MWeb Markdown 写作",slug:"mweb-markdown-写作",normalizedTitle:"mweb markdown 写作",charIndex:632},{level:3,title:"Evernote 印象笔记",slug:"evernote-印象笔记",normalizedTitle:"evernote 印象笔记",charIndex:686},{level:3,title:"Magnet 快捷操作窗口(收费)",slug:"magnet-快捷操作窗口-收费",normalizedTitle:"magnet 快捷操作窗口(收费)",charIndex:797},{level:3,title:"Spectacle 快捷操作窗口(免费)",slug:"spectacle-快捷操作窗口-免费",normalizedTitle:"spectacle 快捷操作窗口(免费)",charIndex:880},{level:3,title:"腾讯柠檬",slug:"腾讯柠檬",normalizedTitle:"腾讯柠檬",charIndex:990},{level:3,title:"Keka 压缩/解压",slug:"keka-压缩-解压",normalizedTitle:"keka 压缩/解压",charIndex:1077},{level:3,title:"Itycal 日历",slug:"itycal-日历",normalizedTitle:"itycal 日历",charIndex:1180},{level:3,title:"iTerm2 终端工具",slug:"iterm2-终端工具",normalizedTitle:"iterm2 终端工具",charIndex:1303},{level:3,title:"iStat Menus 系统监控",slug:"istat-menus-系统监控",normalizedTitle:"istat menus 系统监控",charIndex:1508},{level:3,title:"IINA 视频播放器",slug:"iina-视频播放器",normalizedTitle:"iina 视频播放器",charIndex:1625},{level:3,title:"PopClip 复制功能扩展",slug:"popclip-复制功能扩展",normalizedTitle:"popclip 复制功能扩展",charIndex:1729},{level:3,title:"Snipaste 截图工具",slug:"snipaste-截图工具",normalizedTitle:"snipaste 截图工具",charIndex:1851},{level:3,title:"pap.er 壁纸",slug:"pap-er-壁纸",normalizedTitle:"pap.er 壁纸",charIndex:1897},{level:3,title:"Fliqlo屏保",slug:"fliqlo屏保",normalizedTitle:"fliqlo屏保",charIndex:1940},{level:3,title:"Aerial 屏保",slug:"aerial-屏保",normalizedTitle:"aerial 屏保",charIndex:1995}],headersStr:"前言 uTools 效率神器 Alfred 效率神器 Quiver 程序猿使用的笔记本 MWeb Markdown 写作 Evernote 印象笔记 Magnet 快捷操作窗口(收费) Spectacle 快捷操作窗口(免费) 腾讯柠檬 Keka 压缩/解压 Itycal 日历 iTerm2 终端工具 iStat Menus 系统监控 IINA 视频播放器 PopClip 复制功能扩展 Snipaste 截图工具 pap.er 壁纸 Fliqlo屏保 Aerial 屏保",content:"# Mac 开发常用软件推荐\n\n\n# 前言\n\n记录入手第一台 Mac，熟悉 Mac 及前端开发历程。\n\n\n# uTools 效率神器\n\nuTools 是一个极简、插件化、跨平台的现代桌面软件。通过自由选配丰富的插件，打造你得心应手的工具集合。 这款软件机缘巧合看到用过几天，里面很多小工具确实不错。有取代 Alfred 的趋势。\n\n\n\nuTools 官网\n\n特性\n\n * 插件化： 优秀的插件化设计，自取所需。每个插件解决一个具体场景的问题，简洁易用、随用随走。\n\n * 多功能输入框： 支持文本、截图、图片、文件、文件夹\n\n * 自动识别： 自动识别文本类型（json、base64、时间戳等）\n\n * 自动粘贴： 呼出 uTools 时，如果剪切板中 5 秒内有新的内容，将自动粘贴到输入框\n\n\n# Alfred 效率神器\n\nAlfred 这是一款被称之为 Mac 效率神器的 App，有了 Alfred 你甚至无需鼠标就可以实现各种操作，包括出发各种文件、网络操作，其 UI 界面使用方便，而且不是通过命令来实现，是开发者们和键盘童鞋们的神器，比之此前类似的软件——Pack 和 Power 来说完全是秒杀的节奏。\n\n\n# Quiver 程序猿使用的笔记本\n\nQuiver 程序猿使用的笔记本，支持混合书写文本、代码、Markdown 标记等，方便程序员记录笔记和代码片段，并提供全文搜索功能，类似印象笔记的左中右三栏布局，是一款程序猿必备的利器。\n\n\n# MWeb Markdown 写作\n\nMWeb 使用教程\n\n * 可用于搭建个人 Wiki 知识库。\n\n\n# Evernote 印象笔记\n\n * 随时随地获取、整理、分享笔记，让灵感时刻与你同行。\n * 让生活更有序，让工作更高效，让协作更便捷\n\nEvernote 官网 https://www.yinxiang.com/\n\n\n# Magnet 快捷操作窗口(收费)\n\nMagnet是一款窗口速调辅助工具，拖拽窗口到屏幕边缘可以自动半屏， 全屏或者四分之一屏幕，还可以设定快捷键完成分屏。\n\n\n# Spectacle 快捷操作窗口(免费)\n\n免费开源的 App，如果不要求太多的自定义功能，它能够满足绝大部分人的需求了。\n\nSpectacle 官网 https://www.spectacleapp.com/\n\n\n# 腾讯柠檬\n\n * 定制化清理方案 强大清理能力\n * 极简状态栏 实时了解 Mac 系统状况\n * 清理小工具 软件卸载、相似图片清理、磁盘清理等\n\n腾讯柠檬 官网\n\n\n# Keka 压缩/解压\n\n满足 mac os 平台的日常解压缩需求，体积小，简单易用，速度较快。\n\nKeka 官网\n\n下载的入口 Assets``=>``Keka-1.1.26.dmg 下载就对了。\n\n\n# Itycal 日历\n\nItycal是一个很小的菜单栏日历。\n\n\n\n如果想实现上图的效果，在输入框填入E h:mm，然后将系统默认时间关闭即可。这样看上去挺美观的。\n\n官网 https://www.mowglii.com/itsycal/\n\n\n# iTerm2 终端工具\n\nMac OS 自带的终端，用起来虽然有些不太方便，界面也不够友好,iTerm2 是一款相对比较好用的终端工具.iTerm2 常用操作包括主题选择、声明高亮、自动填充建议、隐藏用户名和主机名、分屏效果等。\n\niTerm2 官网 https://www.iterm2.com/\n\nitem2 使用教程 https://www.jianshu.com/p/ba08713c2b19\n\n\n# iStat Menus 系统监控\n\niStat Menus 是 Mac 上最优秀的系统监控工具，能够在系统菜单栏实时监控 CPU、GPU、内存、硬盘、网络、温度、电池以及系统时间等，稳定且占用资源少，可以说是装机必备的软件。\n\n\n# IINA 视频播放器\n\nIINA 基于 mpv，为最新 Mac 系统而生，支持 Touch Bar、兼容 MPV 脚本、几乎支持所有格式、网络播放，是一款拥有优雅外观的视频播放器。\n\nIINA 官网\n\n\n# PopClip 复制功能扩展\n\nPopClip 最基本的功能就是复制粘贴的使用，除此之外，再无拓展支持的情况下，根据鼠标选中的内容，PopClip 还自身支持链接的跳转打开、自带词典的翻译、邮件地址跳转、搜索引擎搜索、单词纠正等功能。\n\n\n# Snipaste 截图工具\n\n一个简单但强大的截图工具。\n\nSnipaste 官网\n\n\n# pap.er 壁纸\n\n每天享受来自全球新鲜精美的壁纸。\n\npap.er 官网\n\n\n# Fliqlo屏保\n\nFliqlo 是一款非常简洁的 Mac OS 设备时钟屏保应用程序。\n\n\n\n官网\n\n\n# Aerial 屏保\n\n显示 Apple 在纽约，旧金山，夏威夷，中国等地拍摄的空中电影。\n\nAerial 官网",normalizedContent:"# mac 开发常用软件推荐\n\n\n# 前言\n\n记录入手第一台 mac，熟悉 mac 及前端开发历程。\n\n\n# utools 效率神器\n\nutools 是一个极简、插件化、跨平台的现代桌面软件。通过自由选配丰富的插件，打造你得心应手的工具集合。 这款软件机缘巧合看到用过几天，里面很多小工具确实不错。有取代 alfred 的趋势。\n\n\n\nutools 官网\n\n特性\n\n * 插件化： 优秀的插件化设计，自取所需。每个插件解决一个具体场景的问题，简洁易用、随用随走。\n\n * 多功能输入框： 支持文本、截图、图片、文件、文件夹\n\n * 自动识别： 自动识别文本类型（json、base64、时间戳等）\n\n * 自动粘贴： 呼出 utools 时，如果剪切板中 5 秒内有新的内容，将自动粘贴到输入框\n\n\n# alfred 效率神器\n\nalfred 这是一款被称之为 mac 效率神器的 app，有了 alfred 你甚至无需鼠标就可以实现各种操作，包括出发各种文件、网络操作，其 ui 界面使用方便，而且不是通过命令来实现，是开发者们和键盘童鞋们的神器，比之此前类似的软件——pack 和 power 来说完全是秒杀的节奏。\n\n\n# quiver 程序猿使用的笔记本\n\nquiver 程序猿使用的笔记本，支持混合书写文本、代码、markdown 标记等，方便程序员记录笔记和代码片段，并提供全文搜索功能，类似印象笔记的左中右三栏布局，是一款程序猿必备的利器。\n\n\n# mweb markdown 写作\n\nmweb 使用教程\n\n * 可用于搭建个人 wiki 知识库。\n\n\n# evernote 印象笔记\n\n * 随时随地获取、整理、分享笔记，让灵感时刻与你同行。\n * 让生活更有序，让工作更高效，让协作更便捷\n\nevernote 官网 https://www.yinxiang.com/\n\n\n# magnet 快捷操作窗口(收费)\n\nmagnet是一款窗口速调辅助工具，拖拽窗口到屏幕边缘可以自动半屏， 全屏或者四分之一屏幕，还可以设定快捷键完成分屏。\n\n\n# spectacle 快捷操作窗口(免费)\n\n免费开源的 app，如果不要求太多的自定义功能，它能够满足绝大部分人的需求了。\n\nspectacle 官网 https://www.spectacleapp.com/\n\n\n# 腾讯柠檬\n\n * 定制化清理方案 强大清理能力\n * 极简状态栏 实时了解 mac 系统状况\n * 清理小工具 软件卸载、相似图片清理、磁盘清理等\n\n腾讯柠檬 官网\n\n\n# keka 压缩/解压\n\n满足 mac os 平台的日常解压缩需求，体积小，简单易用，速度较快。\n\nkeka 官网\n\n下载的入口 assets``=>``keka-1.1.26.dmg 下载就对了。\n\n\n# itycal 日历\n\nitycal是一个很小的菜单栏日历。\n\n\n\n如果想实现上图的效果，在输入框填入e h:mm，然后将系统默认时间关闭即可。这样看上去挺美观的。\n\n官网 https://www.mowglii.com/itsycal/\n\n\n# iterm2 终端工具\n\nmac os 自带的终端，用起来虽然有些不太方便，界面也不够友好,iterm2 是一款相对比较好用的终端工具.iterm2 常用操作包括主题选择、声明高亮、自动填充建议、隐藏用户名和主机名、分屏效果等。\n\niterm2 官网 https://www.iterm2.com/\n\nitem2 使用教程 https://www.jianshu.com/p/ba08713c2b19\n\n\n# istat menus 系统监控\n\nistat menus 是 mac 上最优秀的系统监控工具，能够在系统菜单栏实时监控 cpu、gpu、内存、硬盘、网络、温度、电池以及系统时间等，稳定且占用资源少，可以说是装机必备的软件。\n\n\n# iina 视频播放器\n\niina 基于 mpv，为最新 mac 系统而生，支持 touch bar、兼容 mpv 脚本、几乎支持所有格式、网络播放，是一款拥有优雅外观的视频播放器。\n\niina 官网\n\n\n# popclip 复制功能扩展\n\npopclip 最基本的功能就是复制粘贴的使用，除此之外，再无拓展支持的情况下，根据鼠标选中的内容，popclip 还自身支持链接的跳转打开、自带词典的翻译、邮件地址跳转、搜索引擎搜索、单词纠正等功能。\n\n\n# snipaste 截图工具\n\n一个简单但强大的截图工具。\n\nsnipaste 官网\n\n\n# pap.er 壁纸\n\n每天享受来自全球新鲜精美的壁纸。\n\npap.er 官网\n\n\n# fliqlo屏保\n\nfliqlo 是一款非常简洁的 mac os 设备时钟屏保应用程序。\n\n\n\n官网\n\n\n# aerial 屏保\n\n显示 apple 在纽约，旧金山，夏威夷，中国等地拍摄的空中电影。\n\naerial 官网",charsets:{cjk:!0},lastUpdated:"2022/05/11, 01:14:41",lastUpdatedTimestamp:1652231681e3},{title:"Mac终端替代工具iTerm2",frontmatter:{title:"Mac终端替代工具iTerm2",date:"2018-12-28T00:00:00.000Z",tags:["Mac"],permalink:"/pages/46ba7f/",categories:[null],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/03.Mac/03.Mac%E7%BB%88%E7%AB%AF%E6%9B%BF%E4%BB%A3%E5%B7%A5%E5%85%B7iTerm2.html",relativePath:"06.工具/03.Mac/03.Mac终端替代工具iTerm2.md",key:"v-1a56a289",path:"/pages/46ba7f/",headers:[{level:2,title:"什么是iTerm2？",slug:"什么是iterm2",normalizedTitle:"什么是iterm2？",charIndex:2},{level:3,title:"一、item2软件下载",slug:"一、item2软件下载",normalizedTitle:"一、item2软件下载",charIndex:117},{level:3,title:"配置 Oh My Zsh",slug:"配置-oh-my-zsh",normalizedTitle:"配置 oh my zsh",charIndex:210},{level:3,title:"配置 Meslo 字体",slug:"配置-meslo-字体",normalizedTitle:"配置 meslo 字体",charIndex:763},{level:3,title:"iTerm2 快捷命令",slug:"iterm2-快捷命令",normalizedTitle:"iterm2 快捷命令",charIndex:973},{level:2,title:"以下按需加载",slug:"以下按需加载",normalizedTitle:"以下按需加载",charIndex:1363},{level:3,title:"配置 iTerm2 主题",slug:"配置-iterm2-主题",normalizedTitle:"配置 iterm2 主题",charIndex:1374},{level:2,title:"推荐插件",slug:"推荐插件",normalizedTitle:"推荐插件",charIndex:1490},{level:3,title:"zsh-autosuggestions",slug:"zsh-autosuggestions",normalizedTitle:"zsh-autosuggestions",charIndex:1499},{level:3,title:"zsh-syntax-highlighting",slug:"zsh-syntax-highlighting",normalizedTitle:"zsh-syntax-highlighting",charIndex:1699},{level:3,title:"iTerm2 隐藏用户名和主机名",slug:"iterm2-隐藏用户名和主机名",normalizedTitle:"iterm2 隐藏用户名和主机名",charIndex:1991}],headersStr:"什么是iTerm2？ 一、item2软件下载 配置 Oh My Zsh 配置 Meslo 字体 iTerm2 快捷命令 以下按需加载 配置 iTerm2 主题 推荐插件 zsh-autosuggestions zsh-syntax-highlighting iTerm2 隐藏用户名和主机名",content:'# 什么是iTerm2？\n\niTerm2是Terminal的替代品，是iTerm的后继产品。它适用于MacOS 10.12或更高版本的Mac。iTerm2将终端带入了您从未想过一直想要的功能，使其进入了现代时代。\n\n效果\n\n\n\n\n# 一、item2软件下载\n\nitem2官网\n\n我上传到蓝奏云，下载速度还不错。前往蓝奏云下载\n\n> 如果下载以下资源下不下来，可以尝试梯子配Proxifier就可以走VPS通道。\n\n\n# 配置 Oh My Zsh\n\nOh My Zsh 是一款社区驱动的命令行工具，正如它的主页上说的，Oh My Zsh 是一种生活方式。它基于zsh命令行，提供了主题配置，插件机制，已经内置的便捷操作。给我们一种全新的方式使用命令行。\n\n安装\n\n 1. 官网推荐安装方式：\n\n第一种 curl:\n\n$ sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"\n\n第二种 wget:\n\n$ sh -c "$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)"\n\n\n安装好之后，需要把 Zsh 设置为当前用户的默认 Shell\n\n$ chsh -s /bin/zsh\n\n\n然后，将主题修改为ZSH_THEME="agnoster"\n\n$ vim ~/.zshrc\n输入i进入编辑模式,将ZSH_THEME=""编辑为ZSH_THEME="agnoster"\n按下esc键,退出编辑,\n:wq保存退出\n修改成功!\n\n\n\n\n上面效果主题为agnoster，不喜欢可以选择其他主题 Oh My Zsh\n\n\n# 配置 Meslo 字体\n\n 1. 字体文件下载 蓝奏云\n\n 2. 然后打开安装后，选中item2软件，按Command + ,键，打开 Preferences 配置界面，然后Profiles -> Text -> Font -> Chanage Font，选择 Meslo LG M Regular for Powerline 字体。\n\n 3. 小提示，字体必须安装，不然一些特殊字符会出现乱码\n\n如图所示\n\n\n\n\n# iTerm2 快捷命令\n\ncommand + t 新建标签\ncommand + w 关闭标签\ncommand + 数字 command + 左右方向键    切换标签\ncommand + enter 切换全屏\ncommand + f 查找\ncommand + d 水平分屏\ncommand + shift + d 垂直分屏\ncommand + option + 方向键 command + [ 或 command + ]    切换屏幕\ncommand + ; 查看历史命令\ncommand + shift + h 查看剪贴板历史\nctrl + u    清除当前行\nctrl + l    清屏\nctrl + a    到行首\nctrl + e    到行尾\nctrl + f/b  前进后退\nctrl + p    上一条命令\nctrl + r    搜索命令历史\n\n\n\n# 以下按需加载\n\n\n# 配置 iTerm2 主题\n\n选中item2软件，按Command + ,键，打开 Preferences 配置界面，然后Profiles -> Colors 选择 Solarized Dark 主题。\n\n按图中所示操作\n\n\n\n\n# 推荐插件\n\n\n# zsh-autosuggestions\n\n它是Oh-myszh的一个插件，作用基本上是根据历史输入指令的记录即时的提示，能够很大的提高效率。\n\n1.克隆到插件目录:\n\ngit clone git://github.com/zsh-users/zsh-autosuggestions\n\n\n2.vim ~/.zshrc\n\nplugins=(git zsh-autosuggestions)\n\n\n\n\n\n# zsh-syntax-highlighting\n\n这是一个命令高亮插件，输入为绿色时表示可用命令，路径带有下划线时表示可用路径\n\n1.克隆到插件目录：\n\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git\n\n\n2.复制到终端回车键\n\necho "source ${(q-)PWD}/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ${ZDOTDIR:-$HOME}/.zshrc\n\n\n3.配置生效\n\nsource .zshrc\n\n\n\n# iTerm2 隐藏用户名和主机名\n\n 1. vim ~/.zshrc\n 2. 在底部新增 DEFAULT_USER="电脑用户名"\n\n不知道自己电脑用户名的,在终端输入whoami，输出用户名\n\n$ whoami\n',normalizedContent:'# 什么是iterm2？\n\niterm2是terminal的替代品，是iterm的后继产品。它适用于macos 10.12或更高版本的mac。iterm2将终端带入了您从未想过一直想要的功能，使其进入了现代时代。\n\n效果\n\n\n\n\n# 一、item2软件下载\n\nitem2官网\n\n我上传到蓝奏云，下载速度还不错。前往蓝奏云下载\n\n> 如果下载以下资源下不下来，可以尝试梯子配proxifier就可以走vps通道。\n\n\n# 配置 oh my zsh\n\noh my zsh 是一款社区驱动的命令行工具，正如它的主页上说的，oh my zsh 是一种生活方式。它基于zsh命令行，提供了主题配置，插件机制，已经内置的便捷操作。给我们一种全新的方式使用命令行。\n\n安装\n\n 1. 官网推荐安装方式：\n\n第一种 curl:\n\n$ sh -c "$(curl -fssl https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"\n\n第二种 wget:\n\n$ sh -c "$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -o -)"\n\n\n安装好之后，需要把 zsh 设置为当前用户的默认 shell\n\n$ chsh -s /bin/zsh\n\n\n然后，将主题修改为zsh_theme="agnoster"\n\n$ vim ~/.zshrc\n输入i进入编辑模式,将zsh_theme=""编辑为zsh_theme="agnoster"\n按下esc键,退出编辑,\n:wq保存退出\n修改成功!\n\n\n\n\n上面效果主题为agnoster，不喜欢可以选择其他主题 oh my zsh\n\n\n# 配置 meslo 字体\n\n 1. 字体文件下载 蓝奏云\n\n 2. 然后打开安装后，选中item2软件，按command + ,键，打开 preferences 配置界面，然后profiles -> text -> font -> chanage font，选择 meslo lg m regular for powerline 字体。\n\n 3. 小提示，字体必须安装，不然一些特殊字符会出现乱码\n\n如图所示\n\n\n\n\n# iterm2 快捷命令\n\ncommand + t 新建标签\ncommand + w 关闭标签\ncommand + 数字 command + 左右方向键    切换标签\ncommand + enter 切换全屏\ncommand + f 查找\ncommand + d 水平分屏\ncommand + shift + d 垂直分屏\ncommand + option + 方向键 command + [ 或 command + ]    切换屏幕\ncommand + ; 查看历史命令\ncommand + shift + h 查看剪贴板历史\nctrl + u    清除当前行\nctrl + l    清屏\nctrl + a    到行首\nctrl + e    到行尾\nctrl + f/b  前进后退\nctrl + p    上一条命令\nctrl + r    搜索命令历史\n\n\n\n# 以下按需加载\n\n\n# 配置 iterm2 主题\n\n选中item2软件，按command + ,键，打开 preferences 配置界面，然后profiles -> colors 选择 solarized dark 主题。\n\n按图中所示操作\n\n\n\n\n# 推荐插件\n\n\n# zsh-autosuggestions\n\n它是oh-myszh的一个插件，作用基本上是根据历史输入指令的记录即时的提示，能够很大的提高效率。\n\n1.克隆到插件目录:\n\ngit clone git://github.com/zsh-users/zsh-autosuggestions\n\n\n2.vim ~/.zshrc\n\nplugins=(git zsh-autosuggestions)\n\n\n\n\n\n# zsh-syntax-highlighting\n\n这是一个命令高亮插件，输入为绿色时表示可用命令，路径带有下划线时表示可用路径\n\n1.克隆到插件目录：\n\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git\n\n\n2.复制到终端回车键\n\necho "source ${(q-)pwd}/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ${zdotdir:-$home}/.zshrc\n\n\n3.配置生效\n\nsource .zshrc\n\n\n\n# iterm2 隐藏用户名和主机名\n\n 1. vim ~/.zshrc\n 2. 在底部新增 default_user="电脑用户名"\n\n不知道自己电脑用户名的,在终端输入whoami，输出用户名\n\n$ whoami\n',charsets:{cjk:!0},lastUpdated:"2022/05/11, 01:14:41",lastUpdatedTimestamp:1652231681e3},{title:"MacOS Catalina 已损坏无法打开",frontmatter:{title:"MacOS Catalina 已损坏无法打开",date:"2018-12-28T00:00:00.000Z",permalink:"/pages/224796/",categories:[null],tags:["Mac"],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/03.Mac/04.macOS%20Catalina%20%E5%B7%B2%E6%8D%9F%E5%9D%8F%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80.html",relativePath:"06.工具/03.Mac/04.macOS Catalina 已损坏无法打开.md",key:"v-2951adf4",path:"/pages/224796/",headers:[{level:3,title:"软件已损坏无法打开",slug:"软件已损坏无法打开",normalizedTitle:"软件已损坏无法打开",charIndex:28}],headersStr:"软件已损坏无法打开",content:"macOS Catalina 10.15 版本\n\n\n# 软件已损坏无法打开\n\n 1. 打开终端；\n 2. 输入以下命令，回车；sudo xattr -d com.apple.quarantine /Applications/xxxx.app注意：/Applications/xxxx.app 换成你的App路径，或在输入 sudo xattr -d com.apple.quarantine 后将软件拖进去，然后再回车。\n\n如果提示”No such file”为文件路径有误，重命名一下软件名称，再重试即可。 3. 重启App即可。\n\n10.15以下版本\n\n任何来源\n\n 1. 打开终端；\n 2. 输入 sudo spctl –master-disable\n 3. 重新打开「系统偏好设置-安全与隐私-通用」即可看到「任何来源」选项。\n\n不知道自己系统版本的，点击左上角小苹果=>关于本机",normalizedContent:"macos catalina 10.15 版本\n\n\n# 软件已损坏无法打开\n\n 1. 打开终端；\n 2. 输入以下命令，回车；sudo xattr -d com.apple.quarantine /applications/xxxx.app注意：/applications/xxxx.app 换成你的app路径，或在输入 sudo xattr -d com.apple.quarantine 后将软件拖进去，然后再回车。\n\n如果提示”no such file”为文件路径有误，重命名一下软件名称，再重试即可。 3. 重启app即可。\n\n10.15以下版本\n\n任何来源\n\n 1. 打开终端；\n 2. 输入 sudo spctl –master-disable\n 3. 重新打开「系统偏好设置-安全与隐私-通用」即可看到「任何来源」选项。\n\n不知道自己系统版本的，点击左上角小苹果=>关于本机",charsets:{cjk:!0},lastUpdated:"2022/05/11, 01:14:41",lastUpdatedTimestamp:1652231681e3},{title:"hosts默认信息",frontmatter:{title:"hosts默认信息",date:"2022-01-15T11:12:53.000Z",permalink:"/pages/d5393d/",categories:[null],tags:[null],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/03.Mac/50.hosts%E9%BB%98%E8%AE%A4%E4%BF%A1%E6%81%AF.html",relativePath:"06.工具/03.Mac/50.hosts默认信息.md",key:"v-05af6767",path:"/pages/d5393d/",headers:[{level:2,title:"macos",slug:"macos",normalizedTitle:"macos",charIndex:106},{level:2,title:"el6",slug:"el6",normalizedTitle:"el6",charIndex:332},{level:2,title:"el7",slug:"el7",normalizedTitle:"el7",charIndex:500},{level:2,title:"ubuntu1604",slug:"ubuntu1604",normalizedTitle:"ubuntu1604",charIndex:668},{level:2,title:"ubuntu1404",slug:"ubuntu1404",normalizedTitle:"ubuntu1404",charIndex:944},{level:2,title:"amazon201703",slug:"amazon201703",normalizedTitle:"amazon201703",charIndex:1182},{level:2,title:"debian7",slug:"debian7",normalizedTitle:"debian7",charIndex:1327},{level:2,title:"debian8",slug:"debian8",normalizedTitle:"debian8",charIndex:1538},{level:2,title:"debian9",slug:"debian9",normalizedTitle:"debian9",charIndex:1759}],headersStr:"macos el6 el7 ubuntu1604 ubuntu1404 amazon201703 debian7 debian8 debian9",content:"# hosts默认信息\n\n推荐一个修改hosts的工具。适合平时工作中经常修改hosts的开发测试。\n\n下载地址：https://github.com/oldj/SwitchHosts/releases\n\n\n# macos\n\n##\n# Host Database\n#\n# localhost is used to configure the loopback interface\n# when the system is booting.  Do not change this entry.\n##\n127.0.0.1\tlocalhost\n255.255.255.255\tbroadcasthost\n::1             localhost \n\n\n\n# el6\n\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n\n\n\n# el7\n\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n\n\n\n# ubuntu1604\n\n127.0.0.1\tlocalhost\n\n# The following lines are desirable for IPv6 capable hosts\n::1\tip6-localhost\tip6-loopback\nfe00::0\tip6-localnet\nff00::0\tip6-mcastprefix\nff02::1\tip6-allnodes\nff02::2\tip6-allrouters\nff02::3\tip6-allhosts\n127.0.1.1\tubuntu-xenial\tubuntu-xenial\n\n\n\n# ubuntu1404\n\n127.0.0.1 localhost\n\n# The following lines are desirable for IPv6 capable hosts\n::1 ip6-localhost ip6-loopback\nfe00::0 ip6-localnet\nff00::0 ip6-mcastprefix\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\nff02::3 ip6-allhosts\n\n\n\n# amazon201703\n\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost6 localhost6.localdomain6\n\n\n\n# debian7\n\n127.0.0.1\tlocalhost\n127.0.1.1\twheezy.raw\twheezy\n\n# The following lines are desirable for IPv6 capable hosts\n::1     localhost ip6-localhost ip6-loopback\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n\n\n\n# debian8\n\n127.0.0.1\tlocalhost\n127.0.1.1\tjessie.vagrantup.com\tjessie\n\n# The following lines are desirable for IPv6 capable hosts\n::1     localhost ip6-localhost ip6-loopback\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n\n\n\n# debian9\n\n127.0.0.1\tlocalhost\n127.0.1.1\tstretch.localdomain\tstretch\n\n# The following lines are desirable for IPv6 capable hosts\n::1     localhost ip6-localhost ip6-loopback\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n",normalizedContent:"# hosts默认信息\n\n推荐一个修改hosts的工具。适合平时工作中经常修改hosts的开发测试。\n\n下载地址：https://github.com/oldj/switchhosts/releases\n\n\n# macos\n\n##\n# host database\n#\n# localhost is used to configure the loopback interface\n# when the system is booting.  do not change this entry.\n##\n127.0.0.1\tlocalhost\n255.255.255.255\tbroadcasthost\n::1             localhost \n\n\n\n# el6\n\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n\n\n\n# el7\n\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n\n\n\n# ubuntu1604\n\n127.0.0.1\tlocalhost\n\n# the following lines are desirable for ipv6 capable hosts\n::1\tip6-localhost\tip6-loopback\nfe00::0\tip6-localnet\nff00::0\tip6-mcastprefix\nff02::1\tip6-allnodes\nff02::2\tip6-allrouters\nff02::3\tip6-allhosts\n127.0.1.1\tubuntu-xenial\tubuntu-xenial\n\n\n\n# ubuntu1404\n\n127.0.0.1 localhost\n\n# the following lines are desirable for ipv6 capable hosts\n::1 ip6-localhost ip6-loopback\nfe00::0 ip6-localnet\nff00::0 ip6-mcastprefix\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\nff02::3 ip6-allhosts\n\n\n\n# amazon201703\n\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost6 localhost6.localdomain6\n\n\n\n# debian7\n\n127.0.0.1\tlocalhost\n127.0.1.1\twheezy.raw\twheezy\n\n# the following lines are desirable for ipv6 capable hosts\n::1     localhost ip6-localhost ip6-loopback\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n\n\n\n# debian8\n\n127.0.0.1\tlocalhost\n127.0.1.1\tjessie.vagrantup.com\tjessie\n\n# the following lines are desirable for ipv6 capable hosts\n::1     localhost ip6-localhost ip6-loopback\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n\n\n\n# debian9\n\n127.0.0.1\tlocalhost\n127.0.1.1\tstretch.localdomain\tstretch\n\n# the following lines are desirable for ipv6 capable hosts\n::1     localhost ip6-localhost ip6-loopback\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n",charsets:{cjk:!0},lastUpdated:"2022/05/11, 01:36:55",lastUpdatedTimestamp:1652233015e3},{title:"使开发如鱼得水的VSCode插件",frontmatter:{title:"使开发如鱼得水的VSCode插件",date:"2018-12-28T00:00:00.000Z",tags:["VSCode"],permalink:"/pages/cda20f/",categories:["VSCode"],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/04.VSCode/01.%E4%BD%BF%E5%BC%80%E5%8F%91%E5%A6%82%E9%B1%BC%E5%BE%97%E6%B0%B4%E7%9A%84VSCode%E6%8F%92%E4%BB%B6.html",relativePath:"06.工具/04.VSCode/01.使开发如鱼得水的VSCode插件.md",key:"v-08a512d1",path:"/pages/cda20f/",headers:[{level:2,title:"目录",slug:"目录",normalizedTitle:"目录",charIndex:50},{level:3,title:"Vetur",slug:"vetur",normalizedTitle:"vetur",charIndex:57},{level:3,title:"Volar（Vue3.0开发）",slug:"volar-vue3-0开发",normalizedTitle:"volar（vue3.0开发）",charIndex:590},{level:3,title:"Chinese (Simplified) Language Pack for Visual Studio Code",slug:"chinese-simplified-language-pack-for-visual-studio-code",normalizedTitle:"chinese (simplified) language pack for visual studio code",charIndex:809},{level:3,title:"翻译(英汉词典) 代码翻译",slug:"翻译-英汉词典-代码翻译",normalizedTitle:"翻译(英汉词典) 代码翻译",charIndex:1035},{level:3,title:"Material Icon Theme",slug:"material-icon-theme",normalizedTitle:"material icon theme",charIndex:149},{level:3,title:"vscode-icons",slug:"vscode-icons",normalizedTitle:"vscode-icons",charIndex:1397},{level:3,title:"Bracket Pair Colorizer",slug:"bracket-pair-colorizer",normalizedTitle:"bracket pair colorizer",charIndex:198},{level:3,title:"GitLens",slug:"gitlens",normalizedTitle:"gitlens",charIndex:230},{level:2,title:"Git History",slug:"git-history",normalizedTitle:"git history",charIndex:249},{level:3,title:"Path Intellisense 路径智能提示",slug:"path-intellisense-路径智能提示",normalizedTitle:"path intellisense 路径智能提示",charIndex:264},{level:3,title:"Auto Rename Tag",slug:"auto-rename-tag",normalizedTitle:"auto rename tag",charIndex:292},{level:3,title:"Auto Close Tag",slug:"auto-close-tag",normalizedTitle:"auto close tag",charIndex:318},{level:3,title:"Code Runner",slug:"code-runner",normalizedTitle:"code runner",charIndex:344},{level:3,title:"Live Server",slug:"live-server",normalizedTitle:"live server",charIndex:364},{level:3,title:"Prettier - Code formatter",slug:"prettier-code-formatter",normalizedTitle:"prettier - code formatter",charIndex:392},{level:3,title:"ESlint",slug:"eslint",normalizedTitle:"eslint",charIndex:427}],headersStr:"目录 Vetur Volar（Vue3.0开发） Chinese (Simplified) Language Pack for Visual Studio Code 翻译(英汉词典) 代码翻译 Material Icon Theme vscode-icons Bracket Pair Colorizer GitLens Git History Path Intellisense 路径智能提示 Auto Rename Tag Auto Close Tag Code Runner Live Server Prettier - Code formatter ESlint",content:"作为一个工作4年的小码农，为方便快捷开发Vue项目当然得寻找合适的 VS Code 扩展。\n\n\n# 目录\n\n * Vetur 开发Vue的童鞋必装插件之一\n * Volar 开发Vue3.0的童鞋必装插件之一\n * Simplified Language 简体语言包\n * 翻译(英汉词典)\n * Material Icon Theme 图标主题\n * VSCode Icons 图标主题\n * Bracket Pair Colorizer 彩色的括号\n * GitLens 增强Git工具\n * Git History\n * Path Intellisense 路径智能提示\n * Auto Rename Tag 自动关闭标签\n * Auto Close Tag 自动修改标签名\n * Code Runner 运行代码\n * Live Server 搭建本地服务器的静态页面\n * Prettier - Code formatter 代码格式化\n * ESlint 代码检测\n\n\n# Vetur\n\n这款插件相信不用我多说，想必大家都知道或者用过，它提供了 Vue 特定的语法语义突出显示、代码片段和API语法以错误检查调试等。\n\n官方地址：https://marketplace.visualstudio.com/items?itemName=octref.vetur\n\n\n# Volar（Vue3.0开发）\n\n如果你的项目Vue3.0推荐用这款插件，体验上会更好。\n\nVolar 是一个专为 Vue 3 构建的语言支持插件，它基于@vue/reactivity按需计算 TypeScript 来优化类似于原生 TypeScript 语言服务的性能。\n\n官方地址：https://marketplace.visualstudio.com/items?itemName=johnsoncodehk.volar\n\n\n# Chinese (Simplified) Language Pack for Visual Studio Code\n\n这款插件把VSCode的英文转换成中文。对我我这种英语渣渣特别刚需。而且这个是官方汉化包，理解没毛病。 每当VS code软件更新后，有变会英文，只需要关闭软件重启就行，或者重新安装一下这款插件。\n\n官方地址：Chinese (Simplified) Language Pack for Visual Studio Code\n\n\n# 翻译(英汉词典) 代码翻译\n\n在线翻译，翻译出来的结果真慢，吐槽。这款本地77万词条英汉词典，不依赖任何在线翻译API，无查询次数限制，秒输出结果。\n\n这款插件支持驼峰、小驼峰、下划线等等写法来写变量名、属性名、类名和方法名的。\n\n\n\n官方地址：https://marketplace.visualstudio.com/items?itemName=CodeInChinese.EnglishChineseDictionary\n\n\n# Material Icon Theme\n\n非常齐全的图标，可以说你想要包含在这里面，只截了其中一小部分图。\n\n\n\n官方地址：https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme\n\n\n# vscode-icons\n\n这一款是VSCode官方的图标主题包，看个人喜好选择图标库。效果如下\n\n\n\n官方地址：https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons\n\n\n# Bracket Pair Colorizer\n\n这个插件使用颜色来标识匹配的括号。代码非常多的情况，括号也就变的非常多，如果删除某个属性名对象，没有颜色区分可以就会误删。\n\n不过正常来说不推荐括号写的很多，推荐用扁平化写法，虽然颜色区分代码过长，看的也是脑壳疼。\n\n官方地址：https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer\n\n\n# GitLens\n\n增强Git功能构建到Visual Studio代码可视化代码作者一眼就通过Git指责注释和代码镜头,无缝导航和探索Git存储库。\n\n官方地址：https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens\n\n\n# Git History\n\n查看git日志、文件历史、比较分支或提交。\n\n当我们需要查看文件的历史，可能会借助另外一个Git UI工具查看，耶，只要点击文件的右上角图标就能看到历史代码还有代码差异性。\n\n官方地址：https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory\n\n\n# Path Intellisense 路径智能提示\n\n当我们需要引入某个文件或者图片，文件夹层级可能很多，我们可以通过这款插件来提示我们当前下的文件有哪些。\n\n\n\n官方地址：https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense\n\n\n# Auto Rename Tag\n\n自动重命名成对的HTML/XML标签。\n\n当我们修改<a-button></c-button>的标签时就会生成<a-button></a-button>。\n\n官方地址：https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag\n\n\n# Auto Close Tag\n\n自动添加HTML/XML关闭标签。\n\n当我们写下<c-button>时就会生成<c-button></c-button>。\n\n官方地址：https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag\n\n\n# Code Runner\n\n运行代码片段或多种语言的代码文件，支持C、Java、JavaScript、PHP、Python等\n\n只需要点击鼠标右键，选择 Run Code 就能得到结果。\n\n官方地址：https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner\n\n\n# Live Server\n\n在本地服务器搭建自动重新加载静态特性HTML页面。\n\nhtml页面中鼠标右键选择 open with Live Server\n\n\n\n官方地址：https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer\n\n\n# Prettier - Code formatter\n\nPrettier是一个代码格式化程序。它通过解析代码并使用它自己的规则重新打印代码来强制实现一致的样式，这些规则考虑到最大行长度，在必要时格式化代码。\n\n// vscode setting.json\n{\n  \"editor.formatOnSave\": false, // 在保存时格式化文件\n  \"editor.defaultFormatter\": \"esbenp.prettier-vscode\",\n  \"[javascript]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[vue]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  }\n}\n\n\n官方地址：https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode\n\n\n# ESlint\n\n在一个多人协同开发的团队中，统一的代码编写规范非常重要。一套规范可以让我们编写的代码达到一致的风格，提高代码的可读性和统一性。自然维护性也会有所提高。\n\n以下eslint规范代码依托于 vue 官方的 eslint 规则 eslint-config-vue 做了少许的修改。大家可以按照自己的需求进行定制化配置。\n\n// .eslintrc.js\nmodule.exports = {\n  root: true,\n  parserOptions: {\n    parser: 'babel-eslint',\n    sourceType: 'module'\n  },\n  env: {\n    browser: true,\n    node: true,\n    es6: true,\n  },\n  extends: ['plugin:vue/recommended', 'eslint:recommended'],\n\n  // add your custom rules here\n  //it is base on https://github.com/vuejs/eslint-config-vue\n  rules: {\n    \"vue/max-attributes-per-line\": [2, {\n      \"singleline\": 10,\n      \"multiline\": {\n        \"max\": 1,\n        \"allowFirstLine\": false\n      }\n    }],\n    \"vue/singleline-html-element-content-newline\": \"off\",\n    \"vue/multiline-html-element-content-newline\":\"off\",\n    \"vue/name-property-casing\": [\"error\", \"PascalCase\"],\n    \"vue/no-v-html\": \"off\",\n    'accessor-pairs': 2,\n    'arrow-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'block-spacing': [2, 'always'],\n    'brace-style': [2, '1tbs', {\n      'allowSingleLine': true\n    }],\n    'camelcase': [0, {\n      'properties': 'always'\n    }],\n    'comma-dangle': [2, 'never'],\n    'comma-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'comma-style': [2, 'last'],\n    'constructor-super': 2,\n    'curly': [2, 'multi-line'],\n    'dot-location': [2, 'property'],\n    'eol-last': 2,\n    'eqeqeq': [\"error\", \"always\", {\"null\": \"ignore\"}],\n    'generator-star-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'handle-callback-err': [2, '^(err|error)$'],\n    'indent': [2, 2, {\n      'SwitchCase': 1\n    }],\n    'jsx-quotes': [2, 'prefer-single'],\n    'key-spacing': [2, {\n      'beforeColon': false,\n      'afterColon': true\n    }],\n    'keyword-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'new-cap': [2, {\n      'newIsCap': true,\n      'capIsNew': false\n    }],\n    'new-parens': 2,\n    'no-array-constructor': 2,\n    'no-caller': 2,\n    'no-console': 'off',\n    'no-class-assign': 2,\n    'no-cond-assign': 2,\n    'no-const-assign': 2,\n    'no-control-regex': 0,\n    'no-delete-var': 2,\n    'no-dupe-args': 2,\n    'no-dupe-class-members': 2,\n    'no-dupe-keys': 2,\n    'no-duplicate-case': 2,\n    'no-empty-character-class': 2,\n    'no-empty-pattern': 2,\n    'no-eval': 2,\n    'no-ex-assign': 2,\n    'no-extend-native': 2,\n    'no-extra-bind': 2,\n    'no-extra-boolean-cast': 2,\n    'no-extra-parens': [2, 'functions'],\n    'no-fallthrough': 2,\n    'no-floating-decimal': 2,\n    'no-func-assign': 2,\n    'no-implied-eval': 2,\n    'no-inner-declarations': [2, 'functions'],\n    'no-invalid-regexp': 2,\n    'no-irregular-whitespace': 2,\n    'no-iterator': 2,\n    'no-label-var': 2,\n    'no-labels': [2, {\n      'allowLoop': false,\n      'allowSwitch': false\n    }],\n    'no-lone-blocks': 2,\n    'no-mixed-spaces-and-tabs': 2,\n    'no-multi-spaces': 2,\n    'no-multi-str': 2,\n    'no-multiple-empty-lines': [2, {\n      'max': 1\n    }],\n    'no-native-reassign': 2,\n    'no-negated-in-lhs': 2,\n    'no-new-object': 2,\n    'no-new-require': 2,\n    'no-new-symbol': 2,\n    'no-new-wrappers': 2,\n    'no-obj-calls': 2,\n    'no-octal': 2,\n    'no-octal-escape': 2,\n    'no-path-concat': 2,\n    'no-proto': 2,\n    'no-redeclare': 2,\n    'no-regex-spaces': 2,\n    'no-return-assign': [2, 'except-parens'],\n    'no-self-assign': 2,\n    'no-self-compare': 2,\n    'no-sequences': 2,\n    'no-shadow-restricted-names': 2,\n    'no-spaced-func': 2,\n    'no-sparse-arrays': 2,\n    'no-this-before-super': 2,\n    'no-throw-literal': 2,\n    'no-trailing-spaces': 2,\n    'no-undef': 2,\n    'no-undef-init': 2,\n    'no-unexpected-multiline': 2,\n    'no-unmodified-loop-condition': 2,\n    'no-unneeded-ternary': [2, {\n      'defaultAssignment': false\n    }],\n    'no-unreachable': 2,\n    'no-unsafe-finally': 2,\n    'no-unused-vars': [2, {\n      'vars': 'all',\n      'args': 'none'\n    }],\n    'no-useless-call': 2,\n    'no-useless-computed-key': 2,\n    'no-useless-constructor': 2,\n    'no-useless-escape': 0,\n    'no-whitespace-before-property': 2,\n    'no-with': 2,\n    'one-var': [2, {\n      'initialized': 'never'\n    }],\n    'operator-linebreak': [2, 'after', {\n      'overrides': {\n        '?': 'before',\n        ':': 'before'\n      }\n    }],\n    'padded-blocks': [2, 'never'],\n    'quotes': [2, 'single', {\n      'avoidEscape': true,\n      'allowTemplateLiterals': true\n    }],\n    'semi': [2, 'never'],\n    'semi-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'space-before-blocks': [2, 'always'],\n    'space-before-function-paren': [2, 'never'],\n    'space-in-parens': [2, 'never'],\n    'space-infix-ops': 2,\n    'space-unary-ops': [2, {\n      'words': true,\n      'nonwords': false\n    }],\n    'spaced-comment': [2, 'always', {\n      'markers': ['global', 'globals', 'eslint', 'eslint-disable', '*package', '!', ',']\n    }],\n    'template-curly-spacing': [2, 'never'],\n    'use-isnan': 2,\n    'valid-typeof': 2,\n    'wrap-iife': [2, 'any'],\n    'yield-star-spacing': [2, 'both'],\n    'yoda': [2, 'never'],\n    'prefer-const': 2,\n    'no-debugger': process.env.NODE_ENV === 'production' ? 2 : 0,\n    'object-curly-spacing': [2, 'always', {\n      objectsInObjects: false\n    }],\n    'array-bracket-spacing': [2, 'never']\n  }\n}\n\n\n官方地址：https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint",normalizedContent:"作为一个工作4年的小码农，为方便快捷开发vue项目当然得寻找合适的 vs code 扩展。\n\n\n# 目录\n\n * vetur 开发vue的童鞋必装插件之一\n * volar 开发vue3.0的童鞋必装插件之一\n * simplified language 简体语言包\n * 翻译(英汉词典)\n * material icon theme 图标主题\n * vscode icons 图标主题\n * bracket pair colorizer 彩色的括号\n * gitlens 增强git工具\n * git history\n * path intellisense 路径智能提示\n * auto rename tag 自动关闭标签\n * auto close tag 自动修改标签名\n * code runner 运行代码\n * live server 搭建本地服务器的静态页面\n * prettier - code formatter 代码格式化\n * eslint 代码检测\n\n\n# vetur\n\n这款插件相信不用我多说，想必大家都知道或者用过，它提供了 vue 特定的语法语义突出显示、代码片段和api语法以错误检查调试等。\n\n官方地址：https://marketplace.visualstudio.com/items?itemname=octref.vetur\n\n\n# volar（vue3.0开发）\n\n如果你的项目vue3.0推荐用这款插件，体验上会更好。\n\nvolar 是一个专为 vue 3 构建的语言支持插件，它基于@vue/reactivity按需计算 typescript 来优化类似于原生 typescript 语言服务的性能。\n\n官方地址：https://marketplace.visualstudio.com/items?itemname=johnsoncodehk.volar\n\n\n# chinese (simplified) language pack for visual studio code\n\n这款插件把vscode的英文转换成中文。对我我这种英语渣渣特别刚需。而且这个是官方汉化包，理解没毛病。 每当vs code软件更新后，有变会英文，只需要关闭软件重启就行，或者重新安装一下这款插件。\n\n官方地址：chinese (simplified) language pack for visual studio code\n\n\n# 翻译(英汉词典) 代码翻译\n\n在线翻译，翻译出来的结果真慢，吐槽。这款本地77万词条英汉词典，不依赖任何在线翻译api，无查询次数限制，秒输出结果。\n\n这款插件支持驼峰、小驼峰、下划线等等写法来写变量名、属性名、类名和方法名的。\n\n\n\n官方地址：https://marketplace.visualstudio.com/items?itemname=codeinchinese.englishchinesedictionary\n\n\n# material icon theme\n\n非常齐全的图标，可以说你想要包含在这里面，只截了其中一小部分图。\n\n\n\n官方地址：https://marketplace.visualstudio.com/items?itemname=pkief.material-icon-theme\n\n\n# vscode-icons\n\n这一款是vscode官方的图标主题包，看个人喜好选择图标库。效果如下\n\n\n\n官方地址：https://marketplace.visualstudio.com/items?itemname=vscode-icons-team.vscode-icons\n\n\n# bracket pair colorizer\n\n这个插件使用颜色来标识匹配的括号。代码非常多的情况，括号也就变的非常多，如果删除某个属性名对象，没有颜色区分可以就会误删。\n\n不过正常来说不推荐括号写的很多，推荐用扁平化写法，虽然颜色区分代码过长，看的也是脑壳疼。\n\n官方地址：https://marketplace.visualstudio.com/items?itemname=coenraads.bracket-pair-colorizer\n\n\n# gitlens\n\n增强git功能构建到visual studio代码可视化代码作者一眼就通过git指责注释和代码镜头,无缝导航和探索git存储库。\n\n官方地址：https://marketplace.visualstudio.com/items?itemname=eamodio.gitlens\n\n\n# git history\n\n查看git日志、文件历史、比较分支或提交。\n\n当我们需要查看文件的历史，可能会借助另外一个git ui工具查看，耶，只要点击文件的右上角图标就能看到历史代码还有代码差异性。\n\n官方地址：https://marketplace.visualstudio.com/items?itemname=donjayamanne.githistory\n\n\n# path intellisense 路径智能提示\n\n当我们需要引入某个文件或者图片，文件夹层级可能很多，我们可以通过这款插件来提示我们当前下的文件有哪些。\n\n\n\n官方地址：https://marketplace.visualstudio.com/items?itemname=christian-kohler.path-intellisense\n\n\n# auto rename tag\n\n自动重命名成对的html/xml标签。\n\n当我们修改<a-button></c-button>的标签时就会生成<a-button></a-button>。\n\n官方地址：https://marketplace.visualstudio.com/items?itemname=formulahendry.auto-rename-tag\n\n\n# auto close tag\n\n自动添加html/xml关闭标签。\n\n当我们写下<c-button>时就会生成<c-button></c-button>。\n\n官方地址：https://marketplace.visualstudio.com/items?itemname=formulahendry.auto-close-tag\n\n\n# code runner\n\n运行代码片段或多种语言的代码文件，支持c、java、javascript、php、python等\n\n只需要点击鼠标右键，选择 run code 就能得到结果。\n\n官方地址：https://marketplace.visualstudio.com/items?itemname=formulahendry.code-runner\n\n\n# live server\n\n在本地服务器搭建自动重新加载静态特性html页面。\n\nhtml页面中鼠标右键选择 open with live server\n\n\n\n官方地址：https://marketplace.visualstudio.com/items?itemname=ritwickdey.liveserver\n\n\n# prettier - code formatter\n\nprettier是一个代码格式化程序。它通过解析代码并使用它自己的规则重新打印代码来强制实现一致的样式，这些规则考虑到最大行长度，在必要时格式化代码。\n\n// vscode setting.json\n{\n  \"editor.formatonsave\": false, // 在保存时格式化文件\n  \"editor.defaultformatter\": \"esbenp.prettier-vscode\",\n  \"[javascript]\": {\n    \"editor.defaultformatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[vue]\": {\n    \"editor.defaultformatter\": \"esbenp.prettier-vscode\"\n  }\n}\n\n\n官方地址：https://marketplace.visualstudio.com/items?itemname=esbenp.prettier-vscode\n\n\n# eslint\n\n在一个多人协同开发的团队中，统一的代码编写规范非常重要。一套规范可以让我们编写的代码达到一致的风格，提高代码的可读性和统一性。自然维护性也会有所提高。\n\n以下eslint规范代码依托于 vue 官方的 eslint 规则 eslint-config-vue 做了少许的修改。大家可以按照自己的需求进行定制化配置。\n\n// .eslintrc.js\nmodule.exports = {\n  root: true,\n  parseroptions: {\n    parser: 'babel-eslint',\n    sourcetype: 'module'\n  },\n  env: {\n    browser: true,\n    node: true,\n    es6: true,\n  },\n  extends: ['plugin:vue/recommended', 'eslint:recommended'],\n\n  // add your custom rules here\n  //it is base on https://github.com/vuejs/eslint-config-vue\n  rules: {\n    \"vue/max-attributes-per-line\": [2, {\n      \"singleline\": 10,\n      \"multiline\": {\n        \"max\": 1,\n        \"allowfirstline\": false\n      }\n    }],\n    \"vue/singleline-html-element-content-newline\": \"off\",\n    \"vue/multiline-html-element-content-newline\":\"off\",\n    \"vue/name-property-casing\": [\"error\", \"pascalcase\"],\n    \"vue/no-v-html\": \"off\",\n    'accessor-pairs': 2,\n    'arrow-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'block-spacing': [2, 'always'],\n    'brace-style': [2, '1tbs', {\n      'allowsingleline': true\n    }],\n    'camelcase': [0, {\n      'properties': 'always'\n    }],\n    'comma-dangle': [2, 'never'],\n    'comma-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'comma-style': [2, 'last'],\n    'constructor-super': 2,\n    'curly': [2, 'multi-line'],\n    'dot-location': [2, 'property'],\n    'eol-last': 2,\n    'eqeqeq': [\"error\", \"always\", {\"null\": \"ignore\"}],\n    'generator-star-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'handle-callback-err': [2, '^(err|error)$'],\n    'indent': [2, 2, {\n      'switchcase': 1\n    }],\n    'jsx-quotes': [2, 'prefer-single'],\n    'key-spacing': [2, {\n      'beforecolon': false,\n      'aftercolon': true\n    }],\n    'keyword-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'new-cap': [2, {\n      'newiscap': true,\n      'capisnew': false\n    }],\n    'new-parens': 2,\n    'no-array-constructor': 2,\n    'no-caller': 2,\n    'no-console': 'off',\n    'no-class-assign': 2,\n    'no-cond-assign': 2,\n    'no-const-assign': 2,\n    'no-control-regex': 0,\n    'no-delete-var': 2,\n    'no-dupe-args': 2,\n    'no-dupe-class-members': 2,\n    'no-dupe-keys': 2,\n    'no-duplicate-case': 2,\n    'no-empty-character-class': 2,\n    'no-empty-pattern': 2,\n    'no-eval': 2,\n    'no-ex-assign': 2,\n    'no-extend-native': 2,\n    'no-extra-bind': 2,\n    'no-extra-boolean-cast': 2,\n    'no-extra-parens': [2, 'functions'],\n    'no-fallthrough': 2,\n    'no-floating-decimal': 2,\n    'no-func-assign': 2,\n    'no-implied-eval': 2,\n    'no-inner-declarations': [2, 'functions'],\n    'no-invalid-regexp': 2,\n    'no-irregular-whitespace': 2,\n    'no-iterator': 2,\n    'no-label-var': 2,\n    'no-labels': [2, {\n      'allowloop': false,\n      'allowswitch': false\n    }],\n    'no-lone-blocks': 2,\n    'no-mixed-spaces-and-tabs': 2,\n    'no-multi-spaces': 2,\n    'no-multi-str': 2,\n    'no-multiple-empty-lines': [2, {\n      'max': 1\n    }],\n    'no-native-reassign': 2,\n    'no-negated-in-lhs': 2,\n    'no-new-object': 2,\n    'no-new-require': 2,\n    'no-new-symbol': 2,\n    'no-new-wrappers': 2,\n    'no-obj-calls': 2,\n    'no-octal': 2,\n    'no-octal-escape': 2,\n    'no-path-concat': 2,\n    'no-proto': 2,\n    'no-redeclare': 2,\n    'no-regex-spaces': 2,\n    'no-return-assign': [2, 'except-parens'],\n    'no-self-assign': 2,\n    'no-self-compare': 2,\n    'no-sequences': 2,\n    'no-shadow-restricted-names': 2,\n    'no-spaced-func': 2,\n    'no-sparse-arrays': 2,\n    'no-this-before-super': 2,\n    'no-throw-literal': 2,\n    'no-trailing-spaces': 2,\n    'no-undef': 2,\n    'no-undef-init': 2,\n    'no-unexpected-multiline': 2,\n    'no-unmodified-loop-condition': 2,\n    'no-unneeded-ternary': [2, {\n      'defaultassignment': false\n    }],\n    'no-unreachable': 2,\n    'no-unsafe-finally': 2,\n    'no-unused-vars': [2, {\n      'vars': 'all',\n      'args': 'none'\n    }],\n    'no-useless-call': 2,\n    'no-useless-computed-key': 2,\n    'no-useless-constructor': 2,\n    'no-useless-escape': 0,\n    'no-whitespace-before-property': 2,\n    'no-with': 2,\n    'one-var': [2, {\n      'initialized': 'never'\n    }],\n    'operator-linebreak': [2, 'after', {\n      'overrides': {\n        '?': 'before',\n        ':': 'before'\n      }\n    }],\n    'padded-blocks': [2, 'never'],\n    'quotes': [2, 'single', {\n      'avoidescape': true,\n      'allowtemplateliterals': true\n    }],\n    'semi': [2, 'never'],\n    'semi-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'space-before-blocks': [2, 'always'],\n    'space-before-function-paren': [2, 'never'],\n    'space-in-parens': [2, 'never'],\n    'space-infix-ops': 2,\n    'space-unary-ops': [2, {\n      'words': true,\n      'nonwords': false\n    }],\n    'spaced-comment': [2, 'always', {\n      'markers': ['global', 'globals', 'eslint', 'eslint-disable', '*package', '!', ',']\n    }],\n    'template-curly-spacing': [2, 'never'],\n    'use-isnan': 2,\n    'valid-typeof': 2,\n    'wrap-iife': [2, 'any'],\n    'yield-star-spacing': [2, 'both'],\n    'yoda': [2, 'never'],\n    'prefer-const': 2,\n    'no-debugger': process.env.node_env === 'production' ? 2 : 0,\n    'object-curly-spacing': [2, 'always', {\n      objectsinobjects: false\n    }],\n    'array-bracket-spacing': [2, 'never']\n  }\n}\n\n\n官方地址：https://marketplace.visualstudio.com/items?itemname=dbaeumer.vscode-eslint",charsets:{cjk:!0},lastUpdated:"2022/05/10, 10:40:17",lastUpdatedTimestamp:1652179217e3},{title:"VSCode插件推荐",frontmatter:{title:"VSCode插件推荐",date:"2018-12-28T00:00:00.000Z",tags:["VSCode"],permalink:"/pages/9c9984/",categories:["VSCode"],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/04.VSCode/02.VSCode%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90.html",relativePath:"06.工具/04.VSCode/02.VSCode插件推荐.md",key:"v-189cf840",path:"/pages/9c9984/",headers:[{level:2,title:"DOM操作",slug:"dom操作",normalizedTitle:"dom操作",charIndex:44},{level:2,title:"路径补全",slug:"路径补全",normalizedTitle:"路径补全",charIndex:151},{level:2,title:"代码片段提示",slug:"代码片段提示",normalizedTitle:"代码片段提示",charIndex:232},{level:2,title:"美观",slug:"美观",normalizedTitle:"美观",charIndex:378},{level:2,title:"代码格式化",slug:"代码格式化",normalizedTitle:"代码格式化",charIndex:486},{level:2,title:"移动端",slug:"移动端",normalizedTitle:"移动端",charIndex:553},{level:2,title:"项目管理",slug:"项目管理",normalizedTitle:"项目管理",charIndex:626},{level:2,title:"Git",slug:"git",normalizedTitle:"git",charIndex:751},{level:2,title:"调试",slug:"调试",normalizedTitle:"调试",charIndex:855},{level:2,title:"Vue框架",slug:"vue框架",normalizedTitle:"vue框架",charIndex:1077},{level:2,title:"React框架",slug:"react框架",normalizedTitle:"react框架",charIndex:1231},{level:2,title:"提示类",slug:"提示类",normalizedTitle:"提示类",charIndex:1293},{level:2,title:"编程时间管理",slug:"编程时间管理",normalizedTitle:"编程时间管理",charIndex:1362},{level:2,title:"主题",slug:"主题",normalizedTitle:"主题",charIndex:1400},{level:2,title:"同步VScode配置",slug:"同步vscode配置",normalizedTitle:"同步vscode配置",charIndex:1445}],headersStr:"DOM操作 路径补全 代码片段提示 美观 代码格式化 移动端 项目管理 Git 调试 Vue框架 React框架 提示类 编程时间管理 主题 同步VScode配置",content:"工欲善其事必先利其器，从事前端开发已近两年多，休闲时候收录一些觉得常用的插件。\n\n\n# DOM操作\n\nAuto Close Tag\n\n自动闭合HTML标签。\n\nAuto Rename Tag\n\n自动重命名标签。\n\nAutoprefixer\n\n解析CSS，SCSS，LESS并自动添加前缀。\n\n\n\n\n# 路径补全\n\nPath Intellisense\n\n自动补全代码中的路径和文件名。\n\nNpm Intellisense\n\n自动完成导入语句中的npm模块。\n\n\n# 代码片段提示\n\nHTML Snippets\n\n超级实用且初级的 H5代码片段以及提示。\n\nIntelliSense for CSS class names\n\nHTML、CSS 类名智能命名提示。\n\nJavaScript (ES6) code snippets\n\n提示ES6语法片段。\n\n\n# 美观\n\nvscode-icons\n\n将项目中不同类型的文件或文件夹通过图标区分出来。\n\nGuides\n\n代码的标签对齐线。\n\nBracket Pair Colorizer\n\n让括号拥有独立的颜色，易于区分。\n\n\n# 代码格式化\n\nPrettier - Code formatter\n\n更漂亮的格式化。\n\nESLint\n\n符合代码风格的代码。\n\n\n# 移动端\n\npx to rem\n\n如果你有px转rem困惑的话，只需要插件中的基数默认16px，便可一键转换。转换快捷键 option+z\n\n\n# 项目管理\n\nProject Manager\n\n如果你的公司有非常多项目，需要来回切换的话，推荐Project Manage可以让你轻松在项目直接替换，无需在导入项目文件夹打开。\n\nBookmarks\n\n书签，在代码中标记/取消标记位置。\n\n\n\n\n# Git\n\nGitLens\n\n查看代码作者的身份，无缝地导航和浏览 Git存储库。这就意味着你写的坑，要自己填，严重的话还要被骂。\n\nGit History\n\n查看和搜索git日志以及图形和详细信息。\n\n\n# 调试\n\nCode Runner\n\n支持C, C++, Java, JavaScript, PHP, Python等语言的代码的立即执行。使用方法鼠标右键 Run Code运行该文件。\n\nLive Server\n\n类似搭建本地服务器页面，修改直接生效。\n\nhtml页面下鼠标右键 open with Live Server打开的页面就是。\n\nQuokka.js\n\nQuokka.js 会在你输入时自动计算结果，并在 IDE 中打印结果。\n\n\n# Vue框架\n\nvetur\n\n * 语法高亮\n * 片段\n * Emmet\n * 整理/错误检查\n * 格式化\n * 自动完成\n * 调试\n\nVue Peek\n\n快速跳转或浏览作为组件（从模板）或模块导入（从脚本）引用的文件。\n\nVue 2 Snippets\n\n提示Vue 2 的 API，非常方便。\n\n\n# React框架\n\nReact.js code snippets\n\n用ES6语法去开发React.js应用非常方便。\n\n\n# 提示类\n\nImport Cost\n\n计算引入包大小，可能引入包大太，就实现一小部分的功能，可能找其它包替代，或者自己实现该功能。\n\n\n# 编程时间管理\n\nWakaTime\n\n从你的编程时间中生成数据报表。\n\n\n# 主题\n\nOne Dark Pro\n\nAtom中黑暗主题。非常不错，本人一直在用。\n\n\n# 同步VScode配置\n\nSettings Sync\n\n如果你有多台设备，或者以后不想在重新配置vscode，推荐你用Settings Sync，将vscode上传到gist，以后登录账号就可以一键完成。\n\n不懂得操作的话，可以看 官网教程",normalizedContent:"工欲善其事必先利其器，从事前端开发已近两年多，休闲时候收录一些觉得常用的插件。\n\n\n# dom操作\n\nauto close tag\n\n自动闭合html标签。\n\nauto rename tag\n\n自动重命名标签。\n\nautoprefixer\n\n解析css，scss，less并自动添加前缀。\n\n\n\n\n# 路径补全\n\npath intellisense\n\n自动补全代码中的路径和文件名。\n\nnpm intellisense\n\n自动完成导入语句中的npm模块。\n\n\n# 代码片段提示\n\nhtml snippets\n\n超级实用且初级的 h5代码片段以及提示。\n\nintellisense for css class names\n\nhtml、css 类名智能命名提示。\n\njavascript (es6) code snippets\n\n提示es6语法片段。\n\n\n# 美观\n\nvscode-icons\n\n将项目中不同类型的文件或文件夹通过图标区分出来。\n\nguides\n\n代码的标签对齐线。\n\nbracket pair colorizer\n\n让括号拥有独立的颜色，易于区分。\n\n\n# 代码格式化\n\nprettier - code formatter\n\n更漂亮的格式化。\n\neslint\n\n符合代码风格的代码。\n\n\n# 移动端\n\npx to rem\n\n如果你有px转rem困惑的话，只需要插件中的基数默认16px，便可一键转换。转换快捷键 option+z\n\n\n# 项目管理\n\nproject manager\n\n如果你的公司有非常多项目，需要来回切换的话，推荐project manage可以让你轻松在项目直接替换，无需在导入项目文件夹打开。\n\nbookmarks\n\n书签，在代码中标记/取消标记位置。\n\n\n\n\n# git\n\ngitlens\n\n查看代码作者的身份，无缝地导航和浏览 git存储库。这就意味着你写的坑，要自己填，严重的话还要被骂。\n\ngit history\n\n查看和搜索git日志以及图形和详细信息。\n\n\n# 调试\n\ncode runner\n\n支持c, c++, java, javascript, php, python等语言的代码的立即执行。使用方法鼠标右键 run code运行该文件。\n\nlive server\n\n类似搭建本地服务器页面，修改直接生效。\n\nhtml页面下鼠标右键 open with live server打开的页面就是。\n\nquokka.js\n\nquokka.js 会在你输入时自动计算结果，并在 ide 中打印结果。\n\n\n# vue框架\n\nvetur\n\n * 语法高亮\n * 片段\n * emmet\n * 整理/错误检查\n * 格式化\n * 自动完成\n * 调试\n\nvue peek\n\n快速跳转或浏览作为组件（从模板）或模块导入（从脚本）引用的文件。\n\nvue 2 snippets\n\n提示vue 2 的 api，非常方便。\n\n\n# react框架\n\nreact.js code snippets\n\n用es6语法去开发react.js应用非常方便。\n\n\n# 提示类\n\nimport cost\n\n计算引入包大小，可能引入包大太，就实现一小部分的功能，可能找其它包替代，或者自己实现该功能。\n\n\n# 编程时间管理\n\nwakatime\n\n从你的编程时间中生成数据报表。\n\n\n# 主题\n\none dark pro\n\natom中黑暗主题。非常不错，本人一直在用。\n\n\n# 同步vscode配置\n\nsettings sync\n\n如果你有多台设备，或者以后不想在重新配置vscode，推荐你用settings sync，将vscode上传到gist，以后登录账号就可以一键完成。\n\n不懂得操作的话，可以看 官网教程",charsets:{cjk:!0},lastUpdated:"2022/05/10, 10:40:17",lastUpdatedTimestamp:1652179217e3},{title:"用好VSCode这几个快捷键，工作效率提升10倍",frontmatter:{title:"用好VSCode这几个快捷键，工作效率提升10倍",date:"2019-12-28T00:00:00.000Z",tags:["VSCode"],permalink:"/pages/ecd1c2/",categories:["VSCode"],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/04.VSCode/03.%E7%94%A8%E5%A5%BDVSCode%E8%BF%99%E5%87%A0%E4%B8%AA%E5%BF%AB%E6%8D%B7%E9%94%AE%EF%BC%8C%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%8710%E5%80%8D.html",relativePath:"06.工具/04.VSCode/03.用好VSCode这几个快捷键，工作效率提升10倍.md",key:"v-15f63c55",path:"/pages/ecd1c2/",headers:[{level:2,title:"快速打开文件「Quick open」",slug:"快速打开文件「quick-open」",normalizedTitle:"快速打开文件「quick open」",charIndex:31},{level:2,title:"编辑器命令「Command Palette」",slug:"编辑器命令「command-palette」",normalizedTitle:"编辑器命令「command palette」",charIndex:233},{level:2,title:"拆分编辑器「Split Editor」",slug:"拆分编辑器「split-editor」",normalizedTitle:"拆分编辑器「split editor」",charIndex:318},{level:2,title:"快速打开集成终端「Open new Terminal」",slug:"快速打开集成终端「open-new-terminal」",normalizedTitle:"快速打开集成终端「open new terminal」",charIndex:385},{level:2,title:"合并行「Join Line」",slug:"合并行「join-line」",normalizedTitle:"合并行「join line」",charIndex:460},{level:2,title:"代码格式化「Code Formatting」",slug:"代码格式化「code-formatting」",normalizedTitle:"代码格式化「code formatting」",charIndex:603},{level:2,title:"代码折叠「Code Folding」",slug:"代码折叠「code-folding」",normalizedTitle:"代码折叠「code folding」",charIndex:680},{level:2,title:"往上/下复制行「Copy Line Up/Down」",slug:"往上-下复制行「copy-line-up-down」",normalizedTitle:"往上/下复制行「copy line up/down」",charIndex:831},{level:2,title:"选择单词「Select Word」",slug:"选择单词「select-word」",normalizedTitle:"选择单词「select word」",charIndex:929},{level:2,title:"跳转到特定行数「Navigate to a Specific Line」",slug:"跳转到特定行数「navigate-to-a-specific-line」",normalizedTitle:"跳转到特定行数「navigate to a specific line」",charIndex:1061},{level:2,title:"往上/下添加同时编辑「Add Cursor Above/Below」",slug:"往上-下添加同时编辑「add-cursor-above-below」",normalizedTitle:"往上/下添加同时编辑「add cursor above/below」",charIndex:1155},{level:2,title:"多行选中同时编辑 「Column Selection」",slug:"多行选中同时编辑-「column-selection」",normalizedTitle:"多行选中同时编辑 「column selection」",charIndex:1310},{level:2,title:"修改“符号” 「Rename Symbol」",slug:"修改-符号-「rename-symbol」",normalizedTitle:"修改“符号” 「rename symbol」",charIndex:1391}],headersStr:"快速打开文件「Quick open」 编辑器命令「Command Palette」 拆分编辑器「Split Editor」 快速打开集成终端「Open new Terminal」 合并行「Join Line」 代码格式化「Code Formatting」 代码折叠「Code Folding」 往上/下复制行「Copy Line Up/Down」 选择单词「Select Word」 跳转到特定行数「Navigate to a Specific Line」 往上/下添加同时编辑「Add Cursor Above/Below」 多行选中同时编辑 「Column Selection」 修改“符号” 「Rename Symbol」",content:'# 用好VSCode这几个快捷键，工作效率提升10倍\n\n\n# 快速打开文件「Quick open」\n\nMac: Command + P\nLinux/Windows：Ctrl + P\n\n\n> 如果想打开多个文件有两种方法：（会在背后打开新的文件，搜索不会被关闭）\n\n打开新文件 Mac: Option + → 或者 Linux/Windows：Alt + →\n多窗口打开 Mac: Command + → 或者 Linux/Windows：Ctrl + →\n\n\n\n# 编辑器命令「Command Palette」\n\nMac: Command + Shift + P\nLinux/Windows：Ctrl + Shift + P\n\n\n\n# 拆分编辑器「Split Editor」\n\nMac: Command +\\\nWindows: Shift + Alt + \\\n\n\n\n# 快速打开集成终端「Open new Terminal」\n\nMac: Control + `\nWindows/Linux: Ctrl + `\n\n\n\n# 合并行「Join Line」\n\nMac：Control + J\nLinux/Windows：使用上面说到的快捷键打开快捷键查询列表，搜索"合并行"（editor.action.joinLines），鼠标放在合并行的快捷键上，然后点击编辑图标，这里可以设置一个你喜欢的快捷键。\n\n\n\n# 代码格式化「Code Formatting」\n\nMac: Shift + Option + F\nWindows：Shift + Alt + F\n\n\n\n# 代码折叠「Code Folding」\n\n折叠代码\nMac: Command + Option + [\nWindows/linux: Ctrl + Shift + [\n展开代码\nMac: Command + Option + ]\nWindows/linux: Ctrl + Shift + ]\n\n\n\n# 往上/下复制行「Copy Line Up/Down」\n\nMac: Shift + Option + Up / Down\nWindows: Shift + Alt + Up / Down\n\n\n\n# 选择单词「Select Word」\n\n局部选择\nMac: Command + D\nWindows/Linux: Ctrl + D\n全局选中\nMac: Command + Shift + L\nWindows/Linux: Ctrl + Shift + L\n\n\n\n# 跳转到特定行数「Navigate to a Specific Line」\n\n选择单词下个单词行\nMac: Command + G\nWindows/Linux: Ctrl + G\n\n\n\n# 往上/下添加同时编辑「Add Cursor Above/Below」\n\nMac: Command + Option + ↑ / ↓\nWindows/Linux: Ctrl + Alt + ↑ / ↓\n同时编辑的最前面\nMac: Command + →\nWindows/Linux: Ctrl + →\n\n\n\n# 多行选中同时编辑 「Column Selection」\n\nMac: Shift + Option\nWindows/Linux: Shift + Alt\n\n\n\n# 修改“符号” 「Rename Symbol」\n\nVSCode默认支持JavaScript和TypeScript的方法名、类名和属性名等符号修改。在修改后，文件下引用到这些符号的地方都会被自动的同时修改。其他语言的支持需要插件。\n\nMac: F2\nWindows/Linux: F2\n\n\n参考链接：\n\nhttps://juejin.im/post/5e9bd1a46fb9a03c4d410b0d',normalizedContent:'# 用好vscode这几个快捷键，工作效率提升10倍\n\n\n# 快速打开文件「quick open」\n\nmac: command + p\nlinux/windows：ctrl + p\n\n\n> 如果想打开多个文件有两种方法：（会在背后打开新的文件，搜索不会被关闭）\n\n打开新文件 mac: option + → 或者 linux/windows：alt + →\n多窗口打开 mac: command + → 或者 linux/windows：ctrl + →\n\n\n\n# 编辑器命令「command palette」\n\nmac: command + shift + p\nlinux/windows：ctrl + shift + p\n\n\n\n# 拆分编辑器「split editor」\n\nmac: command +\\\nwindows: shift + alt + \\\n\n\n\n# 快速打开集成终端「open new terminal」\n\nmac: control + `\nwindows/linux: ctrl + `\n\n\n\n# 合并行「join line」\n\nmac：control + j\nlinux/windows：使用上面说到的快捷键打开快捷键查询列表，搜索"合并行"（editor.action.joinlines），鼠标放在合并行的快捷键上，然后点击编辑图标，这里可以设置一个你喜欢的快捷键。\n\n\n\n# 代码格式化「code formatting」\n\nmac: shift + option + f\nwindows：shift + alt + f\n\n\n\n# 代码折叠「code folding」\n\n折叠代码\nmac: command + option + [\nwindows/linux: ctrl + shift + [\n展开代码\nmac: command + option + ]\nwindows/linux: ctrl + shift + ]\n\n\n\n# 往上/下复制行「copy line up/down」\n\nmac: shift + option + up / down\nwindows: shift + alt + up / down\n\n\n\n# 选择单词「select word」\n\n局部选择\nmac: command + d\nwindows/linux: ctrl + d\n全局选中\nmac: command + shift + l\nwindows/linux: ctrl + shift + l\n\n\n\n# 跳转到特定行数「navigate to a specific line」\n\n选择单词下个单词行\nmac: command + g\nwindows/linux: ctrl + g\n\n\n\n# 往上/下添加同时编辑「add cursor above/below」\n\nmac: command + option + ↑ / ↓\nwindows/linux: ctrl + alt + ↑ / ↓\n同时编辑的最前面\nmac: command + →\nwindows/linux: ctrl + →\n\n\n\n# 多行选中同时编辑 「column selection」\n\nmac: shift + option\nwindows/linux: shift + alt\n\n\n\n# 修改“符号” 「rename symbol」\n\nvscode默认支持javascript和typescript的方法名、类名和属性名等符号修改。在修改后，文件下引用到这些符号的地方都会被自动的同时修改。其他语言的支持需要插件。\n\nmac: f2\nwindows/linux: f2\n\n\n参考链接：\n\nhttps://juejin.im/post/5e9bd1a46fb9a03c4d410b0d',charsets:{cjk:!0},lastUpdated:"2022/05/10, 10:40:17",lastUpdatedTimestamp:1652179217e3},{title:"VSCode所有的默认配置项介绍",frontmatter:{title:"VSCode所有的默认配置项介绍",date:"2022-02-21T17:31:05.000Z",permalink:"/pages/c1cbea/",categories:["VSCode"],tags:[null],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/04.VSCode/04.VSCode%E6%89%80%E6%9C%89%E7%9A%84%E9%BB%98%E8%AE%A4%E9%85%8D%E7%BD%AE%E9%A1%B9%E4%BB%8B%E7%BB%8D.html",relativePath:"06.工具/04.VSCode/04.VSCode所有的默认配置项介绍.md",key:"v-2e954df7",path:"/pages/c1cbea/",headersStr:null,content:'# VSCode 所有的默认配置项介绍\n\n使用快捷键 Ctrl+Shift+P ，然后搜索setting\n\n{\n\t// 控制在差异编辑器中是否把前导空格或尾随空格的改动显示为差异。\n\t"diffEditor.ignoreTrimWhitespace": true,\n\n\t// 控制差异编辑器是否为添加/删除的更改显示 +/- 指示符号。\n\t"diffEditor.renderIndicators": true,\n\n\t// 控制差异编辑器的显示方式是并排还是内联。\n\t"diffEditor.renderSideBySide": true,\n\n\t// 控制是否应在遇到提交字符时接受建议。例如，在 JavaScript 中，半角分号 (`;`) 可以为提交字符，能够在接受建议的同时键入该字符。\n\t"editor.acceptSuggestionOnCommitCharacter": true,\n\n\t// 控制除了 `Tab` 键以外， `Enter` 键是否同样可以接受建议。这能减少“插入新行”和“接受建议”命令之间的歧义。\n\t//  - on\n\t//  - smart: 仅当建议包含文本改动时才可使用 `Enter` 键进行接受。\n\t//  - off\n\t"editor.acceptSuggestionOnEnter": "on",\n\n\t// 控制编辑器是否应运行在对屏幕阅读器进行优化的模式。\n\t//  - auto: 编辑器将使用平台 API 以检测是否附加了屏幕阅读器。\n\t//  - on: 编辑器将对屏幕阅读器的使用进行永久优化。\n\t//  - off: 编辑器将不再对屏幕阅读器的使用进行优化。\n\t"editor.accessibilitySupport": "auto",\n\n\t// 控制编辑器是否在左括号后自动插入右括号。\n\t//  - always\n\t//  - languageDefined: 使用语言配置确定何时自动闭合括号。\n\t//  - beforeWhitespace: 仅当光标位于空白字符左侧时，才自动闭合括号。\n\t//  - never\n\t"editor.autoClosingBrackets": "languageDefined",\n\n\t// 控制编辑器是否在左引号后自动插入右引号。\n\t//  - always\n\t//  - languageDefined: 使用语言配置确定何时自动闭合引号。\n\t//  - beforeWhitespace: 仅当光标位于空白字符左侧时，才自动闭合引号。\n\t//  - never\n\t"editor.autoClosingQuotes": "languageDefined",\n\n\t// 控制编辑器是否在用户键入、粘贴或移动行时自动调整缩进。必须安装包含此语言缩进规则的扩展。\n\t"editor.autoIndent": true,\n\n\t// 控制编辑器是否应自动包住所选内容。\n\t//  - languageDefined: 使用语言配置确定何时自动包住所选内容。\n\t//  - brackets: 使用括号而非引号来包住所选内容。\n\t//  - quotes: 使用引号而非括号来包住所选内容。\n\t//  - never\n\t"editor.autoSurround": "languageDefined",\n\n\t// 在保存时运行的代码操作类型。\n\t"editor.codeActionsOnSave": {},\n\n\t// 控制在保存文件时进行的代码操作的超时时间 (毫秒)。\n\t"editor.codeActionsOnSaveTimeout": 750,\n\n\t// 控制是否在编辑器中显示 CodeLens。\n\t"editor.codeLens": true,\n\n\t// 控制编辑器是否显示内联颜色修饰器和颜色选取器。\n\t"editor.colorDecorators": true,\n\n\t// 控制在复制时是否同时复制语法高亮。\n\t"editor.copyWithSyntaxHighlighting": true,\n\n\t// 控制光标的动画样式。\n\t"editor.cursorBlinking": "blink",\n\n\t// 控制是否启用平滑插入动画。\n\t"editor.cursorSmoothCaretAnimation": false,\n\n\t// 控制光标样式。\n\t"editor.cursorStyle": "line",\n\n\t// 当 `editor.cursorStyle` 设置为 `line` 时，控制光标的宽度。\n\t"editor.cursorWidth": 0,\n\n\t// 定义一个默认格式化程序, 该格式化程序优先于所有其他格式化程序设置。必须是提供格式化程序的扩展的标识符。\n\t//  - null: 没有\n\t//  - vscode.configuration-editing: 在配置文件 (如设置、启动和扩展推荐文件) 中提供高级 IntelliSense、自动修复等功能\n\t//  - vscode.css-language-features: 为 CSS、LESS 和 SCSS 文件提供丰富的语言支持。\n\t//  - vscode.debug-auto-launch: 当 node-debug 扩展未启用时提供自动附加的辅助程序。\n\t//  - vscode.debug-server-ready: 如果正在调试的服务器已准备就绪，在浏览器中打开 URI。\n\t//  - vscode.emmet: 适用于 VS Code 的 Emmet 支持\n\t//  - vscode.extension-editing: 在创建扩展时提供 linting 功能。\n\t//  - vscode.git: Git 源代码管理集成\n\t//  - vscode.grunt: Extension to add Grunt capabilities to VS Code.\n\t//  - vscode.gulp: 向 VSCode 提供 Gulp 功能的扩展。\n\t//  - vscode.html-language-features: 为 HTML 和 Handlebar 文件提供丰富的语言支持\n\t//  - vscode.jake: 向 VS Code 提供 Jake 功能的扩展。\n\t//  - vscode.json-language-features: 为 JSON 文件提供丰富的语言支持\n\t//  - vscode.markdown-language-features: 为 Markdown 提供丰富的语言支持。\n\t//  - vscode.merge-conflict: 为内联合并冲突提供高亮和命令。\n\t//  - ms-vscode.node-debug: Node.js 调试支持(低于 8.0 版本)\n\t//  - ms-vscode.node-debug2: Node.js 调试支持\n\t//  - ms-vscode.references-view: Reference Search results as separate, stable view in the sidebar\n\t//  - vscode.npm: 为 npm 脚本提供任务支持的扩展。\n\t//  - vscode.php-language-features: 为 PHP 文件提供丰富的语言支持。\n\t//  - vscode.python: 在 Python 文件中提供语法高亮、括号匹配和折叠功能。\n\t//  - vscode.typescript-language-features: 为 JavaScript 和 TypeScript 提供丰富的语言支持。\n\t//  - christian-kohler.path-intellisense: Visual Studio Code plugin that autocompletes filenames\n\t//  - CoenraadS.bracket-pair-colorizer: A customizable extension for colorizing matching brackets\n\t//  - dbaeumer.vscode-eslint: Integrates ESLint JavaScript into VS Code.\n\t//  - eamodio.gitlens: Supercharge the Git capabilities built into Visual Studio Code — Visualize code authorship at a glance via Git blame annotations and code lens, seamlessly navigate and explore Git repositories, gain valuable insights via powerful comparison commands, and so much more\n\t//  - Equinusocio.vsc-material-theme: The most epic theme now for Visual Studio Code\n\t//  - esbenp.prettier-vscode: VS Code plugin for prettier/prettier\n\t//  - formulahendry.auto-close-tag: Automatically add HTML/XML close tag, same as Visual Studio IDE or Sublime Text\n\t//  - formulahendry.auto-rename-tag: Auto rename paired HTML/XML tag\n\t//  - formulahendry.code-runner: Run C, C++, Java, JS, PHP, Python, Perl, Ruby, Go, Lua, Groovy, PowerShell, CMD, BASH, F#, C#, VBScript, TypeScript, CoffeeScript, Scala, Swift, Julia, Crystal, OCaml, R, AppleScript, Elixir, VB.NET, Clojure, Haxe, Obj-C, Rust, Racket, AutoHotkey, AutoIt, Kotlin, Dart, Pascal, Haskell, Nim, D, Lisp, Kit\n\t//  - octref.vetur: Vue tooling for VS Code\n\t//  - PKief.material-icon-theme: Material Design Icons for Visual Studio Code\n\t//  - ritwickdey.LiveServer: Launch a development local Server with live reload feature for static & dynamic pages\n\t//  - Shan.code-settings-sync: Synchronize Settings, Snippets, Themes, File Icons, Launch, Keybindings, Workspaces and Extensions Across Multiple Machines Using GitHub Gist.\n\t//  - shd101wyy.markdown-preview-enhanced: Markdown Preview Enhanced ported to vscode\n\t//  - WallabyJs.quokka-vscode: Live Scratchpad for JavaScript.\n\t"editor.defaultFormatter": null,\n\n\t// 控制是否在打开文件时，基于文件内容自动检测 `editor.tabSize#` 和 `#editor.insertSpaces`。\n\t"editor.detectIndentation": true,\n\n\t// 控制在编辑器中是否允许通过拖放来移动选中内容。\n\t"editor.dragAndDrop": true,\n\n\t// 控制在没有选择内容时进行复制是否复制当前行。\n\t"editor.emptySelectionClipboard": true,\n\n\t// 按下 "Alt" 时滚动速度加倍。\n\t"editor.fastScrollSensitivity": 5,\n\n\t// 控制 "查找小部件" 是否应在编辑器顶部添加额外的行。如果为 true, 则可以在 "查找小工具" 可见时滚动到第一行之外。\n\t"editor.find.addExtraSpaceOnTop": true,\n\n\t// 在执行查找操作时，在编辑器中的选中文本中还是整个文件中进行查找。\n\t"editor.find.autoFindInSelection": false,\n\n\t// 控制是否将编辑器选中内容作为搜索词填入到查找小组件中。\n\t"editor.find.seedSearchStringFromSelection": true,\n\n\t// 控制编辑器是否启用了代码折叠。\n\t"editor.folding": true,\n\n\t// 控制计算折叠范围的策略。`auto` 将使用语言特定的折叠策略 (若可用)。`indentation` 将使用基于缩进的折叠策略。\n\t"editor.foldingStrategy": "auto",\n\n\t// 控制字体系列。\n\t"editor.fontFamily": "Consolas, \'Courier New\', monospace",\n\n\t// 启用或禁用字体连字。\n\t"editor.fontLigatures": false,\n\n\t// 以像素为单位控制字体大小。\n\t"editor.fontSize": 14,\n\n\t// 控制字体粗细。\n\t"editor.fontWeight": "normal",\n\n\t// 控制编辑器是否自动格式化粘贴的内容。格式化程序必须可用，并且能针对文档中的某一范围进行格式化。\n\t"editor.formatOnPaste": false,\n\n\t// 在保存时格式化文件。格式化程序必须可用，延迟后文件不能保存，并且编辑器不能关闭。\n\t"editor.formatOnSave": false,\n\n\t// 控制在保存文件时进行格式化的超时时间 (毫秒)。\n\t"editor.formatOnSaveTimeout": 750,\n\n\t// 控制编辑器在键入一行后是否自动格式化该行。\n\t"editor.formatOnType": false,\n\n\t// 控制编辑器是否应呈现垂直字形边距。字形边距最常用于调试。\n\t"editor.glyphMargin": true,\n\n\t// 当存在多个目标位置时, 控制 "Go To" 命令 (如 "Go To Definition") 的行为。\n\t//  - peek: 显示结果的预览视图 (默认值)\n\t//  - gotoAndPeek: 转到主结果并显示预览视图\n\t//  - goto: 转到主要结果并忽略其他结果\n\t"editor.gotoLocation.multiple": "peek",\n\n\t// 控制是否在概览标尺中隐藏光标。\n\t"editor.hideCursorInOverviewRuler": false,\n\n\t// 控制是否突出显示编辑器中活动的缩进参考线。\n\t"editor.highlightActiveIndentGuide": true,\n\n\t// 控制显示悬停提示前的等待时间 (毫秒)。\n\t"editor.hover.delay": 300,\n\n\t// 控制是否显示悬停提示。\n\t"editor.hover.enabled": true,\n\n\t// 控制当鼠标移动到悬停提示上时，其是否保持可见。\n\t"editor.hover.sticky": true,\n\n\t// 按 `Tab` 键时插入空格。该设置在 `editor.detectIndentation` 启用时根据文件内容可能会被覆盖。\n\t"editor.insertSpaces": true,\n\n\t// 对大型文件进行特殊处理，禁用某些内存密集型功能。\n\t"editor.largeFileOptimizations": true,\n\n\t// 控制以像素为单位的字母间距。\n\t"editor.letterSpacing": 0,\n\n\t// 在编辑器中启用代码操作小灯泡提示。\n\t"editor.lightbulb.enabled": true,\n\n\t// 控制行高。为 0 时则通过字体大小自动计算。\n\t"editor.lineHeight": 0,\n\n\t// 控制行号的显示。\n\t//  - off: 不显示行号。\n\t//  - on: 将行号显示为绝对行数。\n\t//  - relative: 将行号显示为与光标相隔的行数。\n\t//  - interval: 每 10 行显示一次行号。\n\t"editor.lineNumbers": "on",\n\n\t// 控制是否在编辑器中检测链接并使其可被点击。\n\t"editor.links": true,\n\n\t// 当选择其中一项时，将突出显示匹配的括号。\n\t"editor.matchBrackets": true,\n\n\t// 由于性能原因，超过这个长度的行将不会被标记\n\t"editor.maxTokenizationLineLength": 20000,\n\n\t// 控制是否显示缩略图。\n\t"editor.minimap.enabled": true,\n\n\t// 限制缩略图的宽度，控制其最多显示的列数。\n\t"editor.minimap.maxColumn": 120,\n\n\t// 渲染每行的实际字符，而不是色块。\n\t"editor.minimap.renderCharacters": true,\n\n\t// 控制是否自动隐藏缩略图滑块。\n\t"editor.minimap.showSlider": "mouseover",\n\n\t// 控制在哪一侧显示缩略图。\n\t"editor.minimap.side": "right",\n\n\t// 对鼠标滚轮滚动事件的 `deltaX` 和 `deltaY` 乘上的系数。\n\t"editor.mouseWheelScrollSensitivity": 1,\n\n\t// 按住 `Ctrl` 键并滚动鼠标滚轮时对编辑器字体大小进行缩放。\n\t"editor.mouseWheelZoom": false,\n\n\t// 当多个光标重叠时进行合并。\n\t"editor.multiCursorMergeOverlapping": true,\n\n\t// 在通过鼠标添加多个光标时使用的修改键。“转到定义”和“打开链接”功能所需的鼠标动作将会相应调整，不与多光标修改键冲突。[阅读详细信息](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier)。\n\t//  - ctrlCmd: 映射为 `Ctrl` (Windows 和 Linux) 或 `Command` (macOS)。\n\t//  - alt: 映射为 `Alt` (Windows 和 Linux) 或 `Option` (macOS)。\n\t"editor.multiCursorModifier": "alt",\n\n\t// 控制编辑器是否突出显示语义符号的匹配项。\n\t"editor.occurrencesHighlight": true,\n\n\t// 控制是否在概览标尺周围绘制边框。\n\t"editor.overviewRulerBorder": true,\n\n\t// 控制概览标尺中同一位置可显示的提示数量。\n\t"editor.overviewRulerLanes": 3,\n\n\t// 控制参数提示菜单在到达列表末尾时进行循环还是关闭。\n\t"editor.parameterHints.cycle": false,\n\n\t// 在输入时显示含有参数文档和类型信息的小面板。\n\t"editor.parameterHints.enabled": true,\n\n\t// 控制是否在键入时自动显示建议。\n\t"editor.quickSuggestions": {\n\t\t"other": true,\n\t\t"comments": false,\n\t\t"strings": false\n\t},\n\n\t// 控制显示快速建议前的等待时间 (毫秒)。\n\t"editor.quickSuggestionsDelay": 10,\n\n\t// 控制编辑器是否显示控制字符。\n\t"editor.renderControlCharacters": false,\n\n\t// 当文件以换行符结束时, 呈现最后一行的行号。\n\t"editor.renderFinalNewline": true,\n\n\t// 控制编辑器是否显示缩进参考线。\n\t"editor.renderIndentGuides": true,\n\n\t// 控制编辑器的当前行进行高亮显示的方式。\n\t//  - none\n\t//  - gutter\n\t//  - line\n\t//  - all: 同时突出显示导航线和当前行。\n\t"editor.renderLineHighlight": "line",\n\n\t// 控制编辑器在空白字符上显示符号的方式。\n\t//  - none\n\t//  - boundary: 除了单个空格，在空白字符上显示符号。\n\t//  - all\n\t"editor.renderWhitespace": "none",\n\n\t// 控制选区是否有圆角。\n\t"editor.roundedSelection": true,\n\n\t// 在一定数量的等宽字符后显示垂直标尺。输入多个值，显示多个标尺。若数组为空，则不绘制标尺。\n\t"editor.rulers": [],\n\n\t// 控制编辑器水平滚动时可以超过范围的字符数。\n\t"editor.scrollBeyondLastColumn": 5,\n\n\t// 控制编辑器是否可以滚动到最后一行之后。\n\t"editor.scrollBeyondLastLine": true,\n\n\t// 控制编辑器是否应突出显示与所选内容类似的匹配项。\n\t"editor.selectionHighlight": true,\n\n\t// 控制是否自动隐藏导航线上的折叠控件。\n\t"editor.showFoldingControls": "mouseover",\n\n\t// 控制是否淡化未使用的代码。\n\t"editor.showUnused": true,\n\n\t// 控制编辑器是否在滚动时使用动画。\n\t"editor.smoothScrolling": false,\n\n\t// 控制代码片段是否与其他建议一起显示及其排列的位置。\n\t//  - top: 在其他建议上方显示代码片段建议。\n\t//  - bottom: 在其他建议下方显示代码片段建议。\n\t//  - inline: 在其他建议中穿插显示代码片段建议。\n\t//  - none: 不显示代码片段建议。\n\t"editor.snippetSuggestions": "inline",\n\n\t// 在速览编辑器中，即使双击其中的内容或者按 `Esc` 键，也保持其打开状态。\n\t"editor.stablePeek": false,\n\n\t// 控制是否应从智能感知中筛选某些建议类型。建议类型的列表可以在这里找到: https://code.visualstudio.com/docs/editor/intellisense#_types-of-completions。\n\t"editor.suggest.filteredTypes": {\n\t\t"keyword": true\n\t},\n\n\t// 控制对建议的筛选和排序是否考虑小的拼写错误。\n\t"editor.suggest.filterGraceful": true,\n\n\t// 控制排序时是否提高靠近光标的词语的优先级。\n\t"editor.suggest.localityBonus": false,\n\n\t// 控制在显示滚动条之前智能感知将显示的建议数 (最多 15个)。\n\t"editor.suggest.maxVisibleSuggestions": 12,\n\n\t// 控制是否在多个工作区和窗口间共享记忆的建议选项(需要 `editor.suggestSelection`)。\n\t"editor.suggest.shareSuggestSelections": false,\n\n\t// 控制是否在建议中显示或隐藏图标。\n\t"editor.suggest.showIcons": true,\n\n\t// 控制在活动代码片段内是否禁用快速建议。\n\t"editor.suggest.snippetsPreventQuickSuggestions": true,\n\n\t// 建议小部件的字号。如果设置为 `0`，则使用 `editor.fontSize` 的值。\n\t"editor.suggestFontSize": 0,\n\n\t// 建议小部件的行高。如果设置为 `0`，则使用 `editor.lineHeight` 的值。\n\t"editor.suggestLineHeight": 0,\n\n\t// 控制在键入触发字符后是否自动显示建议。\n\t"editor.suggestOnTriggerCharacters": true,\n\n\t// 控制在建议列表中如何预先选择建议。\n\t//  - first: 始终选择第一个建议。\n\t//  - recentlyUsed: 选择最近的建议，除非进一步键入选择其他项。例如 `console. -> console.log`，因为最近补全过 `log`。\n\t//  - recentlyUsedByPrefix: 根据之前补全过的建议的前缀来进行选择。例如，`co -> console`、`con -> const`。\n\t"editor.suggestSelection": "recentlyUsed",\n\n\t// 启用 Tab 补全。\n\t//  - on: 在按下 Tab 键时进行 Tab 补全，将插入最佳匹配建议。\n\t//  - off: 禁用 Tab 补全。\n\t//  - onlySnippets: 在前缀匹配时进行 Tab 补全。在 "quickSuggestions" 未启用时体验最好。\n\t"editor.tabCompletion": "off",\n\n\t// 一个制表符等于的空格数。在 `editor.detectIndentation` 启用时，根据文件内容，该设置可能会被覆盖。\n\t"editor.tabSize": 4,\n\n\t// 覆盖当前所选颜色主题中的编辑器颜色和字体样式。\n\t"editor.tokenColorCustomizations": {},\n\n\t// 删除自动插入的尾随空白符号。\n\t"editor.trimAutoWhitespace": true,\n\n\t// 根据制表位插入和删除空格。\n\t"editor.useTabStops": true,\n\n\t// 控制是否根据文档中的文字计算自动完成列表。\n\t"editor.wordBasedSuggestions": true,\n\n\t// 执行单词相关的导航或操作时作为单词分隔符的字符。\n\t"editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\\\|;:\'\\",.<>/?",\n\n\t// 控制折行的方式。\n\t//  - off: 永不换行。\n\t//  - on: 将在视区宽度处换行。\n\t//  - wordWrapColumn: 在 `editor.wordWrapColumn` 处折行。\n\t//  - bounded: 在视区宽度和 `editor.wordWrapColumn` 中的较小值处折行。\n\t"editor.wordWrap": "off",\n\n\t// 在 `editor.wordWrap` 为 `wordWrapColumn`  或 `bounded` 时，控制编辑器的折行列。\n\t"editor.wordWrapColumn": 80,\n\n\t// 控制折行的缩进。\n\t//  - none: 没有缩进。折行从第 1 列开始。\n\t//  - same: 折行的缩进量与其父级相同。\n\t//  - indent: 折行的缩进量比其父级多 1。\n\t//  - deepIndent: 折行的缩进量比其父级多 2。\n\t"editor.wrappingIndent": "same",\n\n\t// 控制是否在“源代码管理”视图中始终显示内联操作。\n\t"scm.alwaysShowActions": false,\n\n\t// 控制是否始终显示“源代码管理提供程序”部分。\n\t"scm.alwaysShowProviders": false,\n\n\t// 控制编辑器中差异的显示效果。\n\t"scm.diffDecorations": "all",\n\n\t// 控制水槽中不同装饰的宽度(px)(添加&修改)。\n\t"scm.diffDecorationsGutterWidth": 3,\n\n\t// 控制在 "源代码管理提供程序" 部分中可见的提供程序数。设置为 "0", 以便能够手动调整视图的大小。\n\t"scm.providers.visible": 10,\n\n\t// 控制工作台中活动栏的可见性。\n\t"workbench.activityBar.visible": true,\n\n\t// 覆盖当前所选颜色主题的颜色。\n\t"workbench.colorCustomizations": {},\n\n\t// 指定用在工作台中的颜色主题。\n\t"workbench.colorTheme": "Default Dark+",\n\n\t// 控制命令面板中保留最近使用命令的数量。设置为 0 时禁用命令历史功能。\n\t"workbench.commandPalette.history": 50,\n\n\t// 当再次打开命令面板时，控制是否恢复上一次输入的内容。\n\t"workbench.commandPalette.preserveInput": false,\n\n\t// 如果在居中布局中打开了超过一组编辑器，控制是否自动将宽度调整为最大宽度值。当回到只打开了一组编辑器的状态，将自动将宽度调整为原始的居中宽度值。\n\t"workbench.editor.centeredLayoutAutoResize": true,\n\n\t// 控制编辑器组中最后一个选项卡关闭时这个空组的行为。若启用，将自动关闭空组。若禁用，空组仍将保留在网格布局中。\n\t"workbench.editor.closeEmptyGroups": true,\n\n\t// 当文件被其他进程删除或重命名时，控制是否自动关闭在这个期间内打开了此文件的编辑器。若禁用此项，在这种情况下将保留编辑器。请注意，若从应用内部进行删除，将始终关闭编辑器，并且为了保护您的数据，已更新文件始终不会关闭。\n\t"workbench.editor.closeOnFileDelete": false,\n\n\t// 控制打开的编辑器是否为预览编辑器。预览编辑器在被固定 (例如，通过双击或编辑) 前可重用，其字体样式为斜体。\n\t"workbench.editor.enablePreview": true,\n\n\t// 控制从 Quick Open 打开的编辑器是否为预览编辑器。预览编辑器在被固定 (例如，通过双击或编辑) 前可重用。\n\t"workbench.editor.enablePreviewFromQuickOpen": true,\n\n\t// 控制是否按最常使用的顺序或从左到右的顺序关闭选项卡。\n\t"workbench.editor.focusRecentEditorAfterClose": true,\n\n\t// 控制是否绘制已修改 (存在更新) 的编辑器选项卡的顶部边框。\n\t"workbench.editor.highlightModifiedTabs": false,\n\n\t// 控制编辑器标签的格式。\n\t//  - default: 显示文件名。当启用选项卡且在同一组内有两个相同名称的文件时，将添加每个文件路径中可以用于区分的部分。在选项卡被禁用且编辑器活动时，将显示相对于工作区文件夹的路径。\n\t//  - short: 在文件的目录名之后显示文件名。\n\t//  - medium: 在文件相对当前工作区文件夹的路径之后显示文件名。\n\t//  - long: 在文件的绝对路径之后显示文件名。\n\t"workbench.editor.labelFormat": "default",\n\n\t// 控制编辑器打开的位置。选择 `left` 或 `right` 可分别在当前活动编辑器的左侧或右侧打开。选择 `first` (最前) 或 `last` (最后) 打开的位置与当前活动编辑器无关。\n\t"workbench.editor.openPositioning": "right",\n\n\t// 控制编辑器在并排打开时 (比如从资源管理器) 出现的默认位置。默认在当前活动编辑器右侧打开。若更改为 `down`，则在当前活动编辑器下方打开。\n\t"workbench.editor.openSideBySideDirection": "right",\n\n\t// 在重新打开已关闭文件时，还原最后一个视图的状态 (如滚动位置)。\n\t"workbench.editor.restoreViewState": true,\n\n\t// 控制是否在打开的任何可见组中显示编辑器。如果禁用，编辑器将优先在当前活动的编辑器组中打开。如果启用，将会显示在已打开的编辑器，而不是在当前活动的编辑器组中再次打开。请注意，有些情况下会忽略此设置，例如，强制编辑器在特定组中打开或当前活动组的一侧时。\n\t"workbench.editor.revealIfOpen": false,\n\n\t// 控制是否在编辑器选项卡中显示图标。要求同时启用图标主题。\n\t"workbench.editor.showIcons": true,\n\n\t// 控制打开的编辑器是否显示在选项卡中。\n\t"workbench.editor.showTabs": true,\n\n\t// 控制编辑器选项卡中关闭按钮的位置，或是设置为 `off` 禁用。\n\t"workbench.editor.tabCloseButton": "right",\n\n\t// 控制编辑器选项卡的大小。\n\t//  - fit: 始终将标签页保持足够大，能够完全显示编辑器标签。\n\t//  - shrink: 在不能同时显示所有选项卡时，允许选项卡缩小。\n\t"workbench.editor.tabSizing": "fit",\n\n\t// 从 Microsoft 联机服务中获取要进行的实验。\n\t"workbench.enableExperiments": true,\n\n\t// 指定在工作台中使用的图标主题，或指定 "null" 以不显示任何文件图标。\n\t//  - null: 无文件图标\n\t//  - vs-minimal\n\t//  - vs-seti\n\t//  - material-icon-theme\n\t"workbench.iconTheme": "vs-seti",\n\n\t// 控制列表和树中的键盘导航是否仅通过键入自动触发。如果设置为“false”，键盘导航只在执行“list.toggleKeyboardNavigation ”命令时触发，您可以为该命令指定键盘快捷方式。\n\t"workbench.list.automaticKeyboardNavigation": true,\n\n\t// 控制列表和树是否支持在工作台中进行水平滚动。\n\t"workbench.list.horizontalScrolling": false,\n\n\t// 控制工作台中的列表和树的键盘导航样式。它可为“简单”、“突出显示”或“筛选”。\n\t//  - simple: 简单键盘导航聚焦与键盘输入相匹配的元素。仅对前缀进行匹配。\n\t//  - highlight: 高亮键盘导航会突出显示与键盘输入相匹配的元素。进一步向上和向下导航将仅遍历突出显示的元素。\n\t//  - filter: 筛选器键盘导航将筛选出并隐藏与键盘输入不匹配的所有元素。\n\t"workbench.list.keyboardNavigation": "highlight",\n\n\t// 在通过鼠标多选树和列表条目时使用的修改键 (例如“资源管理器”、“打开的编辑器”和“源代码管理”视图)。“在侧边打开”功能所需的鼠标动作 (若可用) 将会相应调整，不与多选修改键冲突。\n\t//  - ctrlCmd: 映射为 `Ctrl` (Windows 和 Linux) 或 `Command` (macOS)。\n\t//  - alt: 映射为 `Alt` (Windows 和 Linux) 或 `Option` (macOS)。\n\t"workbench.list.multiSelectModifier": "ctrlCmd",\n\n\t// 控制在树和列表中怎样使用鼠标来展开子项（若支持）。对于树中的父节点，此设置将控制是使用单击还是双击来展开。注意，某些不适用于此设置的树或列表可能会忽略此项。\n\t"workbench.list.openMode": "singleClick",\n\n\t// 控制面板 (终端、调试控制台、输出、问题) 的默认位置。可显示在工作台的底部或右侧。\n\t"workbench.panel.defaultLocation": "bottom",\n\n\t// 控制 Quick Open 是否在其失去焦点时自动关闭。\n\t"workbench.quickOpen.closeOnFocusLost": true,\n\n\t// 在打开 Quick Open 视图时，控制是否自动恢复上一次输入的值。\n\t"workbench.quickOpen.preserveInput": false,\n\n\t// 配置默认使用的设置编辑器。\n\t//  - ui: 使用设置 ui 编辑器。\n\t//  - json: 使用 json 文件编辑器。\n\t"workbench.settings.editor": "ui",\n\n\t// 控制是否在设置中启用自然语言搜索。自然语言搜索由 Microsoft 联机服务提供。\n\t"workbench.settings.enableNaturalLanguageSearch": true,\n\n\t// 控制在打开按键绑定设置时是否同时打开显示所有默认按键绑定的编辑器。\n\t"workbench.settings.openDefaultKeybindings": false,\n\n\t// 控制在打开设置时是否同时打开显示所有默认设置的编辑器。\n\t"workbench.settings.openDefaultSettings": false,\n\n\t// 控制设置编辑器的目录在搜索时的行为。\n\t//  - hide: 在搜索时隐藏目录。\n\t//  - filter: 筛选目录为仅显示含有匹配设置的类别。单击一个类别将仅显示该类别的结果。\n\t"workbench.settings.settingsSearchTocBehavior": "filter",\n\n\t// 控制在将设置编辑为 json 时是否使用拆分 json 编辑器。\n\t"workbench.settings.useSplitJSON": false,\n\n\t// 控制边栏的位置。它可显示在工作台的左侧或右侧。\n\t"workbench.sideBar.location": "left",\n\n\t// 在没有从上一会话中恢复出信息的情况下，控制启动时显示的编辑器。\n\t//  - none: 在启动时不打开编辑器。\n\t//  - welcomePage: 打开欢迎页面 (默认)。\n\t//  - readme: 打开包含一个自述文件的文件夹时, 打开自述文件, 否则回退到 "欢迎页面"。\n\t//  - newUntitledFile: 打开新的无标题文件 (仅在打开空工作区时适用)。\n\t//  - welcomePageInEmptyWorkbench: 在打开空工作区时打开欢迎页面。\n\t"workbench.startupEditor": "welcomePage",\n\n\t// 控制是否显示工作台底部状态栏中的 Twitter 反馈 (笑脸图标)。\n\t"workbench.statusBar.feedback.visible": true,\n\n\t// 控制工作台底部状态栏的可见性。\n\t"workbench.statusBar.visible": true,\n\n\t// 启用后，当没有打开编辑器时将显示水印提示。\n\t"workbench.tips.enabled": true,\n\n\t// 此设置已弃用, 请改用 "workbench.list.horizontalScrolling"。\n\t// 控制工作台中的树控件是否支持水平滚动。\n\t"workbench.tree.horizontalScrolling": false,\n\n\t// 控制树缩进(以像素为单位)。\n\t"workbench.tree.indent": 8,\n\n\t// 启用工作台的网格布局。此设置可能会为工作台组件启用其他布局选项。\n\t"workbench.useExperimentalGridLayout": false,\n\n\t// 控制是否显示视图头部的操作项。视图头部操作项可以一直，或是仅当聚焦到和悬停在视图上时显示。\n\t"workbench.view.alwaysShowHeaderActions": false,\n\n\t// 如果已启用，将自动更改为高对比度主题；如果 Windows 正在使用高对比度主题，则当离开 Windows 高对比度主题时会更改为深色主题。\n\t"window.autoDetectHighContrast": true,\n\n\t// 控制在关闭最后一个编辑器时是否关闭整个窗口。此设置仅适用于没有显示文件夹的窗口。\n\t"window.closeWhenEmpty": false,\n\n\t// 如果启用, 双击标题栏中的应用程序图标将关闭窗口, 并且该窗口无法通过图标拖动。此设置仅在 "#window.titleBarStyle#" 设置为 "custom" 时生效。\n\t"window.doubleClickIconToClose": false,\n\n\t// 启用后，即可使用 Alt 快捷键打开主菜单。若禁用助记键，这些 Alt 快捷键将能绑定到编辑器命令。\n\t"window.enableMenuBarMnemonics": true,\n\n\t// 控制菜单栏的可见性。“切换”设置表示隐藏菜单栏，按一次 Alt 键则将显示此菜单栏。默认情况下，除非窗口为全屏，否则菜单栏可见。\n\t//  - default: 菜单仅在全屏模式下隐藏。\n\t//  - visible: 菜单始终可见，即使处于全屏模式下。\n\t//  - toggle: 菜单隐藏，但可以通过 Alt 键显示。\n\t//  - hidden: 菜单始终隐藏。\n\t"window.menuBarVisibility": "default",\n\n\t// 控制在已有窗口时新开窗口的尺寸。请注意，此设置对第一个打开的窗口无效。第一个窗口将始终恢复关闭前的大小和位置。\n\t//  - default: 在屏幕中心打开新窗口。\n\t//  - inherit: 以与上一个活动窗口相同的尺寸打开新窗口。\n\t//  - maximized: 打开最大化的新窗口。\n\t//  - fullscreen: 在全屏模式下打开新窗口。\n\t"window.newWindowDimensions": "default",\n\n\t// 控制是否在新窗口中打开文件。\n\t// 注意，此设置可能会被忽略 (例如，在使用 `--new-window` 或 `--reuse-window` 命令行选项时)。\n\t//  - on: 在新窗口中打开文件。\n\t//  - off: 在文件所在文件夹的已有窗口中或在上一个活动窗口中打开文件。\n\t//  - default: 在新窗口中打开文件，除非文件从应用程序内进行选取 (例如，通过“文件”菜单)。\n\t"window.openFilesInNewWindow": "off",\n\n\t// 控制打开文件夹时是在新窗口打开还是替换上一个活动窗口。\n\t// 注意，此设置可能会被忽略 (例如，在使用 `--new-window` 或 `--reuse-window` 命令行选项时)。\n\t//  - on: 在新窗口中打开文件夹。\n\t//  - off: 文件夹将替换上一个活动窗口。\n\t//  - default: 在新窗口中打开文件夹，除非文件夹从应用程序内进行选取 (例如，通过“文件”菜单)。\n\t"window.openFoldersInNewWindow": "default",\n\n\t// 在另一实例无参启动时，控制是打开新的空窗口或是聚焦到最后运行的实例。\n\t// 注意，此设置可能会被忽略 (例如，在使用 `--new-window` 或 `--reuse-window` 命令行选项时)。\n\t//  - on: 打开一个新的空窗口。\n\t//  - off: 聚焦到上一活动的运行实例。\n\t"window.openWithoutArgumentsInNewWindow": "on",\n\n\t// 若窗口在处于全屏模式时退出，控制其在恢复时是否还原到全屏模式。\n\t"window.restoreFullscreen": false,\n\n\t// 控制窗口在重启后再次打开的方式。\n\t//  - all: 重新打开所有窗口。\n\t//  - folders: 重新打开所有文件夹。空工作区将不会被恢复。\n\t//  - one: 重新打开上一个活动窗口。\n\t//  - none: 永远不重新打开窗口。总是以一个空窗口启动。\n\t"window.restoreWindows": "one",\n\n\t// 根据活动编辑器控制窗口标题。变量是根据上下文替换的:"${activeEditorShort}": 文件名 (例如 myFile.txt)。\n\t// - "${activeEditorMedium}": 相对于工作区文件夹的文件路径 (例如, myFolder/myFileFolder/myFile.txt)。\n\t// - "${activeEditorLong}": 文件的完整路径 (例如 /Users/Development/myFolder/myFileFolder/myFile.txt)。\n\t// - "${activeFolderShort}": 文件所在的文件夹名称 (例如, myFileFolder)。\n\t// - "${activeFolderMedium}": 相对于工作区文件夹的、包含文件的文件夹的路径, (例如 myFolder/myFileFolder)。\n\t// - "${activeFolderLong}": 文件所在文件夹的完整路径 (例如 /Users/Development/myFolder/myFileFolder)。\n\t// - "${folderName}": 文件所在工作区文件夹的名称 (例如 myFolder)。\n\t// - "${folderpath}": 文件所在工作区文件夹的路径 (例如 /Users/Development/myFolder)。\n\t// - "${rootName}": 工作区的名称 (例如, myFolder 或 myWorkspace)。\n\t// - "${rootPath}": 工作区的文件路径 (例如 /Users/Development/myWorkspace)。\n\t// - "${appName}": 例如 VS Code。\n\t// - "${dirty}": 表示活动编辑器为脏的脏指示器。\n\t// - "${separator}": 一种条件分隔符 ("-"), 仅在被包含值或静态文本的变量包围时显示。\n\t"window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName}",\n\n\t// 调整窗口标题栏的外观。在 Linux 和 Windows 上，此设置也会影响应用程序和上下文菜单的外观。更改需要完全重新启动才能应用。\n\t"window.titleBarStyle": "custom",\n\n\t// 调整窗口的缩放级别。原始大小是 0，每次递增(例如 1)或递减(例如 -1)表示放大或缩小 20%。也可以输入小数以便以更精细的粒度调整缩放级别。\n\t"window.zoomLevel": 0,\n\n\t// 配置语言的文件关联 (如: `"*.extension": "html"`)。这些关联的优先级高于已安装语言的默认关联。\n\t"files.associations": {},\n\n\t// 启用后，将在文件打开时尝试猜测字符集编码。可以按语言对此项进行配置。\n\t"files.autoGuessEncoding": false,\n\n\t// 控制已更新文件的自动保存。可在[此处](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save)阅读有关自动保存的详细信息。\n\t//  - off: 永不自动保存更新后的文件。\n\t//  - afterDelay: 当文件修改后的时间超过 `files.autoSaveDelay` 中配置的值时自动进行保存。\n\t//  - onFocusChange: 编辑器失去焦点时自动保存更新后的文件。\n\t//  - onWindowChange: 窗口失去焦点时自动保存更新后的文件。\n\t"files.autoSave": "off",\n\n\t// 控制自动保存已更新文件的延迟时间 (毫秒)。仅在 `files.autoSave` 设置为 `afterDelay` 时生效。\n\t"files.autoSaveDelay": 1000,\n\n\t// 分配给新文件的默认语言模式。\n\t"files.defaultLanguage": "",\n\n\t// 在删除文件或文件夹时，将它们移动到操作系统的“废纸篓”中 (Windows 为“回收站”)。禁用此设置将永久删除文件或文件夹。\n\t"files.enableTrash": true,\n\n\t// 在读取和写入文件时使用的默认字符集编码。可以按语言对此项进行配置。\n\t//  - utf8: UTF-8\n\t//  - utf8bom: UTF-8 with BOM\n\t//  - utf16le: UTF-16 LE\n\t//  - utf16be: UTF-16 BE\n\t//  - windows1252: Western (Windows 1252)\n\t//  - iso88591: Western (ISO 8859-1)\n\t//  - iso88593: Western (ISO 8859-3)\n\t//  - iso885915: Western (ISO 8859-15)\n\t//  - macroman: Western (Mac Roman)\n\t//  - cp437: DOS (CP 437)\n\t//  - windows1256: Arabic (Windows 1256)\n\t//  - iso88596: Arabic (ISO 8859-6)\n\t//  - windows1257: Baltic (Windows 1257)\n\t//  - iso88594: Baltic (ISO 8859-4)\n\t//  - iso885914: Celtic (ISO 8859-14)\n\t//  - windows1250: Central European (Windows 1250)\n\t//  - iso88592: Central European (ISO 8859-2)\n\t//  - cp852: Central European (CP 852)\n\t//  - windows1251: Cyrillic (Windows 1251)\n\t//  - cp866: Cyrillic (CP 866)\n\t//  - iso88595: Cyrillic (ISO 8859-5)\n\t//  - koi8r: Cyrillic (KOI8-R)\n\t//  - koi8u: Cyrillic (KOI8-U)\n\t//  - iso885913: Estonian (ISO 8859-13)\n\t//  - windows1253: Greek (Windows 1253)\n\t//  - iso88597: Greek (ISO 8859-7)\n\t//  - windows1255: Hebrew (Windows 1255)\n\t//  - iso88598: Hebrew (ISO 8859-8)\n\t//  - iso885910: Nordic (ISO 8859-10)\n\t//  - iso885916: Romanian (ISO 8859-16)\n\t//  - windows1254: Turkish (Windows 1254)\n\t//  - iso88599: Turkish (ISO 8859-9)\n\t//  - windows1258: Vietnamese (Windows 1258)\n\t//  - gbk: Simplified Chinese (GBK)\n\t//  - gb18030: Simplified Chinese (GB18030)\n\t//  - cp950: Traditional Chinese (Big5)\n\t//  - big5hkscs: Traditional Chinese (Big5-HKSCS)\n\t//  - shiftjis: Japanese (Shift JIS)\n\t//  - eucjp: Japanese (EUC-JP)\n\t//  - euckr: Korean (EUC-KR)\n\t//  - windows874: Thai (Windows 874)\n\t//  - iso885911: Latin/Thai (ISO 8859-11)\n\t//  - koi8ru: Cyrillic (KOI8-RU)\n\t//  - koi8t: Tajik (KOI8-T)\n\t//  - gb2312: Simplified Chinese (GB 2312)\n\t//  - cp865: Nordic DOS (CP 865)\n\t//  - cp850: Western European DOS (CP 850)\n\t"files.encoding": "utf8",\n\n\t// 默认行尾字符。\n\t//  - \\n: LF\n\t//  - \\r\\n: CRLF\n\t//  - auto: 使用具体操作系统规定的行末字符。\n\t"files.eol": "auto",\n\n\t// 配置排除的文件和文件夹的 glob 模式。例如，文件资源管理器将根据此设置决定要显示或隐藏的文件和文件夹。可在[此处](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options)阅读有关 glob 模式的详细信息。\n\t"files.exclude": {\n\t\t"**/.git": true,\n\t\t"**/.svn": true,\n\t\t"**/.hg": true,\n\t\t"**/CVS": true,\n\t\t"**/.DS_Store": true\n\t},\n\n\t// 控制是否在会话间记住未保存的文件，以允许在退出编辑器时跳过保存提示。\n\t//  - off: 禁用热退出。\n\t//  - onExit: 在 Windows/Linux 平台关闭最后一个窗口，或者在全平台触发 `workbench.action.quit` 命令 (命令托盘、键绑定、菜单) 时进行热退出。下次启动时将还原所有已备份的窗口。\n\t//  - onExitAndWindowClose: 在 Windows/Linux 平台关闭最后一个窗口、触发 `workbench.action.quit` 命令 (命令托盘、键绑定、菜单) 会引起应用程序关闭。对于任何有文件夹打开的窗口，则不论该窗口是否是最后一个窗口进行热退出。下次启动时将还原所有未打开文件夹的窗口。若要还原打开有文件夹的窗口，请将 `window.restoreWindows` 设置为 `all`。\n\t"files.hotExit": "onExit",\n\n\t// 启用后，保存文件时在文件末尾插入一个最终新行。\n\t"files.insertFinalNewline": false,\n\n\t// 在打开大型文件时，控制 VS Code 可在重启后使用的内存。在命令行中指定 `--max-memory=新的大小` 参数可达到相同效果。\n\t"files.maxMemoryForLargeFilesMB": 4096,\n\n\t// 启用后，保存文件时将删除在最终新行后的所有新行。\n\t"files.trimFinalNewlines": false,\n\n\t// 启用后，将在保存文件时剪裁尾随空格。\n\t"files.trimTrailingWhitespace": false,\n\n\t// 配置文件路径的 glob 模式以从文件监视排除。模式必须在绝对路径上匹配(例如 ** 前缀或完整路径需正确匹配)。更改此设置需要重启。如果在启动时遇到 Code 消耗大量 CPU 时间，则可以排除大型文件夹以减少初始加载。\n\t"files.watcherExclude": {\n\t\t"**/.git/objects/**": true,\n\t\t"**/.git/subtree-cache/**": true,\n\t\t"**/node_modules/*/**": true\n\t},\n\n\t// 控制在打开禅模式时是否启用居中布局。\n\t"zenMode.centerLayout": true,\n\n\t// 控制在打开禅模式时是否将工作台切换到全屏。\n\t"zenMode.fullScreen": true,\n\n\t// 控制在打开禅模式时是否隐藏工作台左侧的活动栏。\n\t"zenMode.hideActivityBar": true,\n\n\t// 控制在打开禅模式时是否隐藏编辑器行号。\n\t"zenMode.hideLineNumbers": true,\n\n\t// 控制在打开禅模式时是否隐藏工作台底部的状态栏。\n\t"zenMode.hideStatusBar": true,\n\n\t// 控制在打开禅模式时是否隐藏工作台选项卡。\n\t"zenMode.hideTabs": true,\n\n\t// 若窗口在处于禅模式时退出，控制其在恢复时是否还原到禅模式。\n\t"zenMode.restore": false,\n\n\t// 控制资源管理器是否在打开文件时自动显示并选择。\n\t"explorer.autoReveal": true,\n\n\t// 控制资源管理器是否在把文件删除到废纸篓时进行确认。\n\t"explorer.confirmDelete": true,\n\n\t// 控制在资源管理器内拖放移动文件或文件夹时是否进行确认。\n\t"explorer.confirmDragAndDrop": true,\n\n\t// 控制文件修饰是否应使用徽章。\n\t"explorer.decorations.badges": true,\n\n\t// 控制文件修饰是否应使用颜色。\n\t"explorer.decorations.colors": true,\n\n\t// 控制资源管理器是否允许通过拖放移动文件和文件夹。\n\t"explorer.enableDragAndDrop": true,\n\n\t// 在“打开的编辑器”窗格中显示的编辑器数量。\n\t"explorer.openEditors.visible": 9,\n\n\t// 控制文件和文件夹在资源管理器中的排列顺序。\n\t//  - default: 按名称的字母顺序排列文件和文件夹。文件夹显示在文件前。\n\t//  - mixed: 按名称的字母顺序排列文件和文件夹。两者穿插显示。\n\t//  - filesFirst: 按名称的字母顺序排列文件和文件夹。文件显示在文件夹前。\n\t//  - type: 按扩展名的字母顺序排列文件和文件夹。文件夹显示在文件前。\n\t//  - modified: 按最后修改日期降序排列文件和文件夹。文件夹显示在文件前。\n\t"explorer.sortOrder": "default",\n\n\t// 在搜索视图中控制操作栏的位置。\n\t//  - auto: 当搜索视图较窄时将操作栏置于右侧，当搜索视图较宽时，将它紧接在内容之后。\n\t//  - right: 始终将操作栏放置在右侧。\n\t"search.actionsPosition": "auto",\n\n\t// 控制是折叠还是展开搜索结果。\n\t//  - auto: Files with less than 10 results are expanded. Others are collapsed.\n\t//  - alwaysCollapse\n\t//  - alwaysExpand\n\t"search.collapseResults": "auto",\n\n\t// 配置在搜索中排除的文件和文件夹的 glob 模式。已经继承 `files.exclude` 设置的所有 glob 模式。可在[此处](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options)阅读有关 glob 模式的详细信息。\n\t"search.exclude": {\n\t\t"**/node_modules": true,\n\t\t"**/bower_components": true\n\t},\n\n\t// 控制是否在搜索中跟踪符号链接。\n\t"search.followSymlinks": true,\n\n\t// 控制搜索功能是显示在侧边栏，还是显示在水平空间更大的面板区域。\n\t"search.location": "sidebar",\n\n\t// 启用后，搜索服务进程将保持活动状态，而不是在一个小时不活动后关闭。这将使文件搜索缓存保留在内存中。\n\t"search.maintainFileSearchCache": false,\n\n\t// 是否在 Quick Open 的文件结果中包含最近打开的文件。\n\t"search.quickOpen.includeHistory": true,\n\n\t// 控制 Quick Open 文件结果中是否包括全局符号搜索的结果。\n\t"search.quickOpen.includeSymbols": false,\n\n\t// 控制是否在扩展宿主中运行搜索。重启后才能生效。\n\t"search.runInExtensionHost": false,\n\n\t// 控制是否显示搜索结果所在的行号。\n\t"search.showLineNumbers": false,\n\n\t// 若搜索词全为小写，则不区分大小写进行搜索，否则区分大小写进行搜索。\n\t"search.smartCase": false,\n\n\t// 控制在搜索文件时是否使用全局 `.gitignore` 和 `.ignore` 文件。\n\t"search.useGlobalIgnoreFiles": false,\n\n\t// 控制在搜索文件时是否使用 `.gitignore` 和 `.ignore` 文件。\n\t"search.useIgnoreFiles": true,\n\n\t// 是否在文本搜索中使用 pcre2 正则表达式引擎。这允许使用一些高级正则表达式功能, 如前瞻和反向引用。但是, 并非所有 pcre2 功能都受支持-仅支持 javascript 也支持的功能。\n\t"search.usePCRE2": false,\n\n\t// 控制在选择或替换匹配项时是否打开“替换预览”视图。\n\t"search.useReplacePreview": true,\n\n\t// 已弃用。请考虑使用 "search.usePCRE2" 获取对高级正则表达式功能的支持。\n\t// 此设置已被弃用，将回退到 "search.usePCRE2"。\n\t"search.useRipgrep": true,\n\n\t// 已弃用。请改用 "search.runInExtensionHost"\n\t// 控制是否在扩展宿主中运行搜索\n\t"searchRipgrep.enable": false,\n\n\t// 使用的代理设置。如果没有设置，将从 http_proxy 和 https_proxy 环境变量中获取。\n\t"http.proxy": "",\n\n\t// 要作为每个网络请求的 "Proxy-Authorization" 标头发送的值。\n\t"http.proxyAuthorization": null,\n\n\t// 控制是否根据提供的 CA 列表验证代理服务器证书。\n\t"http.proxyStrictSSL": true,\n\n\t// 对扩展使用代理支持。\n\t//  - off: 禁用对扩展的代理支持。\n\t//  - on: 为扩展启用代理支持。\n\t//  - override: 为扩展启用代理支持，覆盖请求选项。\n\t"http.proxySupport": "override",\n\n\t// 控制是否应从操作系统加载 CA 证书。(在 Windows 和 macOS 上, 关闭此窗口后需要重新加载窗口。\n\t"http.systemCertificates": true,\n\n\t// 此设置已弃用，请改用“update.mode”。\n\t// 配置是否接收自动更新。更改后需要重新启动。更新是从微软在线服务获取的。\n\t"update.channel": "default",\n\n\t// 启用 Windows 后台更新。更新将从 Microsoft 联机服务中获取。\n\t"update.enableWindowsBackgroundUpdates": true,\n\n\t// 配置是否接收自动更新。更改后需要重新启动。更新是从微软在线服务获取的。\n\t//  - none: 禁用更新。\n\t//  - manual: 禁用自动后台更新检查。如果手动检查更新，更新将可用。\n\t//  - default: 启用自动更新检查。代码将定期自动检查更新。\n\t"update.mode": "default",\n\n\t// 在更新后显示发行说明。发行说明将从 Microsoft 联机服务中获取。\n\t"update.showReleaseNotes": true,\n\n\t// 启用/禁用 HTML 标记的自动关闭。\n\t"html.autoClosingTags": true,\n\n\t// A list of JSON file paths that define custom tags, properties and other HTML syntax constructs. Only workspace folder setting will be read.\n\t"html.experimental.customData": [],\n\n\t// List of tags, comma separated, where the content shouldn\'t be reformatted. `null` defaults to the `pre` tag.\n\t"html.format.contentUnformatted": "pre,code,textarea",\n\n\t// 启用或禁用默认 HTML 格式化程序。\n\t"html.format.enable": true,\n\n\t// 以新行结束。\n\t"html.format.endWithNewline": false,\n\n\t// 以逗号分隔的标记列表，其中的标记之前将有额外新行。若为 `null`，默认包含 `"head, body, /html"`。\n\t"html.format.extraLiners": "head, body, /html",\n\n\t// 对 `{{#foo}}` 和 `{{/foo}}` 进行格式化与缩进。\n\t"html.format.indentHandlebars": false,\n\n\t// 缩进 `<head>` 和 `<body>` 部分。\n\t"html.format.indentInnerHtml": false,\n\n\t// 保留在一个区块中的换行符的最大数量。若为 `null`，则没有限制。\n\t"html.format.maxPreserveNewLines": null,\n\n\t// 控制是否保留元素前已有的换行符。仅适用于元素前，不适用于标记内或文本。\n\t"html.format.preserveNewLines": true,\n\n\t// 以逗号分隔的标记列表，其中的内容不会被重新格式化。若为 `null`，默认包含所有列于 https://www.w3.org/TR/html5/dom.html#phrasing-content 的标记。\n\t"html.format.unformatted": "wbr",\n\n\t// 对属性进行换行。\n\t//  - auto: 仅在超出行长度时才对属性进行换行。\n\t//  - force: 对除第一个属性外的其他每个属性进行换行。\n\t//  - force-aligned: 对除第一个属性外的其他每个属性进行换行，并保持对齐。\n\t//  - force-expand-multiline: 对每个属性进行换行。\n\t//  - aligned-multiple: 当超出折行长度时，将属性进行垂直对齐。\n\t//  - preserve: 保留属性的包装\n\t//  - preserve-aligned: 保留属性的包装，但对齐。\n\t"html.format.wrapAttributes": "auto",\n\n\t// 每行最大字符数(0 = 禁用)。\n\t"html.format.wrapLineLength": 120,\n\n\t// 配置内置 HTML 语言支持是否建议 HTML5 标记、属性和值。\n\t"html.suggest.html5": true,\n\n\t// 跟踪 VS Code 与 HTML 语言服务器之间的通信。\n\t"html.trace.server": "off",\n\n\t// 配置内置的 HTML 语言支持是否对嵌入的脚本进行验证。\n\t"html.validate.scripts": true,\n\n\t// 配置内置 HTML 语言支持是否对嵌入的样式进行验证。\n\t"html.validate.styles": true,\n\n\t// 已弃用设置 "json.colorDecorators.enable"，请改用 "editor.colorDecorators"。\n\t// 启用或禁用颜色修饰器\n\t"json.colorDecorators.enable": true,\n\n\t// 启用或禁用默认 JSON 格式化程序。\n\t"json.format.enable": true,\n\n\t// 将当前项目中的 JSON 文件与架构关联起来\n\t"json.schemas": [],\n\n\t// 跟踪 VS Code 和 JSON 语言服务器之间的通信。\n\t"json.trace.server": "off",\n\n\t// 设置换行符如何在 markdown 预览中呈现。将其设置为 "true" 会为每一个新行创建一个 <br>。\n\t"markdown.preview.breaks": false,\n\n\t// 在 Markdown 预览中双击切换到编辑器。\n\t"markdown.preview.doubleClickToSwitchToEditor": true,\n\n\t// 控制 Markdown 预览中使用的字体系列。\n\t"markdown.preview.fontFamily": "-apple-system, BlinkMacSystemFont, \'Segoe WPC\', \'Segoe UI\', \'Ubuntu\', \'Droid Sans\', sans-serif",\n\n\t// 控制 Markdown 预览中使用的字号(以像素为单位)。\n\t"markdown.preview.fontSize": 14,\n\n\t// 控制 Markdown 预览中使用的行高。此数值与字号相关。\n\t"markdown.preview.lineHeight": 1.6,\n\n\t// 在 Markdown 预览中启用或禁用将类似 URL 的文本转换为链接。\n\t"markdown.preview.linkify": true,\n\n\t// 在 Markdown 预览中标记当前的编辑器选定内容。\n\t"markdown.preview.markEditorSelection": true,\n\n\t// 在预览中，控制如何处理指向 Markdown 文件的链接。\n\t//  - inPreview: 尝试在 Markdown 预览中打开链接\n\t//  - inEditor: 尝试在编辑器中打开链接\n\t"markdown.preview.openMarkdownLinks": "inPreview",\n\n\t// 滚动 Markdown 预览时，更新其编辑器视图。\n\t"markdown.preview.scrollEditorWithPreview": true,\n\n\t// 滚动 Markdown 编辑器时，更新其预览视图。\n\t"markdown.preview.scrollPreviewWithEditor": true,\n\n\t// 此设置已被 "markdown.preview.scrollPreviewWithEditor" 替换且不再有任何效果。\n\t// [弃用] 滚动 Markdown 预览以显示编辑器当前所选行。\n\t"markdown.preview.scrollPreviewWithEditorSelection": true,\n\n\t// 要在 Markdown 预览中使用的 CSS 样式表的 URL 或本地路径列表。相对路径被解释为相对于资源管理器中打开的文件夹。如果没有任何打开的文件夹，则会被解释为相对于 Markdown 文件的位置。所有的 "\\" 需写为 "\\\\"。\n\t"markdown.styles": [],\n\n\t// 对 Markdown 扩展启用调试日志记录。\n\t"markdown.trace": "off",\n\n\t// 控制是否启用内置 PHP 语言建议。支持对 PHP 全局变量和变量进行建议。\n\t"php.suggest.basic": true,\n\n\t// 启用/禁用内置的 PHP 验证。\n\t"php.validate.enable": true,\n\n\t// 指向 PHP 可执行文件。\n\t"php.validate.executablePath": null,\n\n\t// 不管 linter 是在 save 还是在 type 上运行。\n\t"php.validate.run": "onSave",\n\n\t// 启用或禁用自动关闭 JSX 标记。要求工作区使用高于 3.0 版本的 TypeScript。\n\t"javascript.autoClosingTags": true,\n\n\t// 启用/禁用 JavaScript 格式化程序。\n\t"javascript.format.enable": true,\n\n\t// 定义逗号分隔符后面的空格处理。\n\t"javascript.format.insertSpaceAfterCommaDelimiter": true,\n\n\t// 定义 constructor 关键字后的空格处理方式。要求工作区使用高于 2.3.0 版本的 TypeScript。\n\t"javascript.format.insertSpaceAfterConstructor": false,\n\n\t// 定义匿名函数的函数关键字后面的空格处理。\n\t"javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,\n\n\t// 定义控制流语句中关键字后面的空格处理。\n\t"javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,\n\n\t// 定义 JSX 表达式括号中左括号后和右括号前的空格处理方式。\n\t"javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,\n\n\t// 定义非空大括号中左括号后和右括号前的空格处理方式。要求工作区使用高于 2.3.0 版本的 TypeScript。\n\t"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,\n\n\t// 定义非空中括号的左括号后和右括号前的空格处理方式。\n\t"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,\n\n\t// 定义非空小括号的左括号后和右括号前的空格处理方式。\n\t"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,\n\n\t// 定义模板字符串括号中左括号后和右括号前的空格处理方式。\n\t"javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,\n\n\t// 定义 for 语句中分号之后的空格处理方式。\n\t"javascript.format.insertSpaceAfterSemicolonInForStatements": true,\n\n\t// 定义二进制运算符后面的空格处理\n\t"javascript.format.insertSpaceBeforeAndAfterBinaryOperators": true,\n\n\t// 定义函数参数括号前的空格处理方式。\n\t"javascript.format.insertSpaceBeforeFunctionParenthesis": false,\n\n\t// 定义控制块的左括号是否放置在新的一行。\n\t"javascript.format.placeOpenBraceOnNewLineForControlBlocks": false,\n\n\t// 定义函数的左大括号是否放置在新的一行。\n\t"javascript.format.placeOpenBraceOnNewLineForFunctions": false,\n\n\t// 启用或禁用 JavaScript 文件的语义检查。若有 jsconfig.json 或 tsconfig.json 文件，将覆盖此设置。要求工作区使用高于 2.3.1 版本的 TypeScript。\n\t"javascript.implicitProjectConfig.checkJs": false,\n\n\t// 对不属于任何工程的 JavaScript 文件启用或禁用 `experimentalDecorators` 设置。若有 jsconfig.json 或 tsconfig.json 文件，将覆盖此设置。要求工作区使用高于 2.3.1 版本的 TypeScript。\n\t"javascript.implicitProjectConfig.experimentalDecorators": false,\n\n\t// 自动 import 语句中路径的首选样式。\n\t//  - auto: 推断最短的路径类型。\n\t//  - relative: 相对于文件位置。\n\t//  - non-relative: 根据 `jsconfig.json` 或 `tsconfig.json` 中配置的 `baseUrl` 。\n\t"javascript.preferences.importModuleSpecifier": "auto",\n\n\t// 用于快速修复的首选引用样式: `single` (单引号)、`double` (双引号) 或 `auto` (从已有 import 语句中推测引号类型)。要求工作区使用高于 2.9 版本的 TypeScript。\n\t"javascript.preferences.quoteStyle": "auto",\n\n\t// 启用/禁用在重命名过程中引入对象速记属性的别名。需要在工作区中使用 TypeScript 3.4 或更高版本。\n\t"javascript.preferences.renameShorthandProperties": true,\n\n\t// 启用/禁用在 JavaScript 文件中引用 CodeLens。\n\t"javascript.referencesCodeLens.enabled": false,\n\n\t// 启用或禁用自动导入建议。要求工作区使用高于 2.6.1 版本的 TypeScript。\n\t"javascript.suggest.autoImports": true,\n\n\t// 完成函数的参数签名。\n\t"javascript.suggest.completeFunctionCalls": false,\n\n\t// 启用/禁用对完成 JSDoc 注释的建议。\n\t"javascript.suggest.completeJSDocs": true,\n\n\t// 启用或禁用自动完成建议。\n\t"javascript.suggest.enabled": true,\n\n\t// 启用或禁用在 JavaScript 建议列表中包含文件中的唯一名称。\n\t"javascript.suggest.names": true,\n\n\t// 在 import 语句和 require 调用中，启用或禁用路径建议。\n\t"javascript.suggest.paths": true,\n\n\t// 启用或禁用编辑器中 JavaScript 文件的建议诊断。要求工作区使用高于 2.8 版本的 TypeScript。\n\t"javascript.suggestionActions.enabled": true,\n\n\t// 当在 VS Code 中重命名或移动文件时，启用或禁用自动更新导入路径。要求工作区使用高于 2.9 版本的 TypeScript。\n\t//  - prompt: 在每次重命名时进行提示。\n\t//  - always: 始终自动更新路径。\n\t//  - never: 一律不要重命名路径，也不要提示。\n\t"javascript.updateImportsOnFileMove.enabled": "prompt",\n\n\t// 启用/禁用 JavaScript 验证。\n\t"javascript.validate.enable": true,\n\n\t// 启用或禁用自动关闭 JSX 标记。要求工作区使用高于 3.0 版本的 TypeScript。\n\t"typescript.autoClosingTags": true,\n\n\t// 检查是否安装了 NPM 以自动获取类型。\n\t"typescript.check.npmIsInstalled": true,\n\n\t// 禁用自动类型获取。自动类型获取从 npm 提取 `@types` 包，提高对于外部库的 IntelliSense 能力。\n\t"typescript.disableAutomaticTypeAcquisition": false,\n\n\t// 启用/禁用默认 TypeScript 格式化程序。\n\t"typescript.format.enable": true,\n\n\t// 定义逗号分隔符后面的空格处理。\n\t"typescript.format.insertSpaceAfterCommaDelimiter": true,\n\n\t// 定义 constructor 关键字后的空格处理方式。要求工作区使用高于 2.3.0 版本的 TypeScript。\n\t"typescript.format.insertSpaceAfterConstructor": false,\n\n\t// 定义匿名函数的函数关键字后面的空格处理。\n\t"typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,\n\n\t// 定义控制流语句中关键字后面的空格处理。\n\t"typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,\n\n\t// 定义 JSX 表达式括号中左括号后和右括号前的空格处理方式。\n\t"typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,\n\n\t// 定义非空大括号中左括号后和右括号前的空格处理方式。要求工作区使用高于 2.3.0 版本的 TypeScript。\n\t"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,\n\n\t// 定义非空中括号的左括号后和右括号前的空格处理方式。\n\t"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,\n\n\t// 定义非空小括号的左括号后和右括号前的空格处理方式。\n\t"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,\n\n\t// 定义模板字符串括号中左括号后和右括号前的空格处理方式。\n\t"typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,\n\n\t// 定义 for 语句中分号之后的空格处理方式。\n\t"typescript.format.insertSpaceAfterSemicolonInForStatements": true,\n\n\t// 定义 TypeScript 中类型断言后的空格处理方式。要求工作区使用高于 2.4 版本的 TypeScript。\n\t"typescript.format.insertSpaceAfterTypeAssertion": false,\n\n\t// 定义二进制运算符后面的空格处理\n\t"typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,\n\n\t// 定义函数参数括号前的空格处理方式。\n\t"typescript.format.insertSpaceBeforeFunctionParenthesis": false,\n\n\t// 定义控制块的左括号是否放置在新的一行。\n\t"typescript.format.placeOpenBraceOnNewLineForControlBlocks": false,\n\n\t// 定义函数的左大括号是否放置在新的一行。\n\t"typescript.format.placeOpenBraceOnNewLineForFunctions": false,\n\n\t// 启用或禁用实现 CodeLens。此 CodeLens 显示接口的实现。\n\t"typescript.implementationsCodeLens.enabled": false,\n\n\t// 设置在报告 JavaScript 和 TypeScript 的错误时使用的区域设置。要求工作区使用高于 2.6.0 版本的 TypeScript。默认 (`null`) 使用 VS Code 的区域设置。\n\t"typescript.locale": null,\n\n\t// 指定用于自动获取类型的 NPM 可执行文件的路径。要求工作区使用高于 2.3.4 版本的 TypeScript。\n\t"typescript.npm": null,\n\n\t// 自动 import 语句中路径的首选样式。\n\t//  - auto: 推断最短的路径类型。\n\t//  - relative: 相对于文件位置。\n\t//  - non-relative: 根据 `jsconfig.json` 或 `tsconfig.json` 中配置的 `baseUrl` 。\n\t"typescript.preferences.importModuleSpecifier": "auto",\n\n\t// 用于快速修复的首选引用样式: `single` (单引号)、`double` (双引号) 或 `auto` (从已有 import 语句中推测引号类型)。要求工作区使用高于 2.9 版本的 TypeScript。\n\t"typescript.preferences.quoteStyle": "auto",\n\n\t// 启用/禁用在重命名过程中引入对象速记属性的别名。需要在工作区中使用 TypeScript 3.4 或更高版本。\n\t"typescript.preferences.renameShorthandProperties": true,\n\n\t// 在 TypeScript 文件中启用或禁用引用 CodeLens。\n\t"typescript.referencesCodeLens.enabled": false,\n\n\t// 将风格检查的问题报告为警告。\n\t"typescript.reportStyleChecksAsWarnings": true,\n\n\t// 启用或禁用自动导入建议。要求工作区使用高于 2.6.1 版本的 TypeScript。\n\t"typescript.suggest.autoImports": true,\n\n\t// 完成函数的参数签名。\n\t"typescript.suggest.completeFunctionCalls": false,\n\n\t// 启用/禁用对完成 JSDoc 注释的建议。\n\t"typescript.suggest.completeJSDocs": true,\n\n\t// 启用或禁用自动完成建议。\n\t"typescript.suggest.enabled": true,\n\n\t// 在 import 语句和 require 调用中，启用或禁用路径建议。\n\t"typescript.suggest.paths": true,\n\n\t// 启用或禁用编辑器中 TypeScript 文件的建议诊断。要求工作区使用高于 2.8 版本的 TypeScript。\n\t"typescript.suggestionActions.enabled": true,\n\n\t// 启用或禁用偶尔出现的有关 JavaScript 和 TypeScript 的调查，帮助我们改善 VS Code 对两者的支持。\n\t"typescript.surveys.enabled": true,\n\n\t// 控制对 tsc 任务的自动检测。\n\t//  - on: 同时创建生成和监视任务。\n\t//  - off: 禁用此功能。\n\t//  - build: 仅创建单次运行编译任务。\n\t//  - watch: 仅创建编译和监视任务。\n\t"typescript.tsc.autoDetect": "on",\n\n\t// 指定包含要使用的 tsserver 和 lib*.d.ts 文件的文件夹路径。\n\t"typescript.tsdk": null,\n\n\t// 将 TS 服务器的日志保存到一个文件。此日志可用于诊断 TS 服务器问题。日志可能包含你的项目中的文件路径、源代码和其他可能敏感的信息。\n\t"typescript.tsserver.log": "off",\n\n\t// 其他用于搜索 TypeScript 语言服务插件的路径。要求工作区使用高于 2.3.0 版本的 TypeScript。\n\t"typescript.tsserver.pluginPaths": [],\n\n\t// 对发送到 TS 服务器的消息启用跟踪。此跟踪信息可用于诊断 TS 服务器问题。 跟踪信息可能包含你的项目中的文件路径、源代码和其他可能敏感的信息。\n\t"typescript.tsserver.trace": "off",\n\n\t// 当在 VS Code 中重命名或移动文件时，启用或禁用自动更新导入路径。要求工作区使用高于 2.9 版本的 TypeScript。\n\t//  - prompt: 在每次重命名时进行提示。\n\t//  - always: 始终自动更新路径。\n\t//  - never: 一律不要重命名路径，也不要提示。\n\t"typescript.updateImportsOnFileMove.enabled": "prompt",\n\n\t// 启用/禁用 TypeScript 验证。\n\t"typescript.validate.enable": true,\n\n\t// 控制评论面板应何时打开。\n\t"comments.openPanel": "openOnSessionStartWithComments",\n\n\t// 允许在任何文件中设置断点。\n\t"debug.allowBreakpointsEverywhere": false,\n\n\t// 控制调试控制台中的字体系列。\n\t"debug.console.fontFamily": "default",\n\n\t// 控制调试控制台中的字体大小(以像素为单位)。\n\t"debug.console.fontSize": 14,\n\n\t// 设置调试控制台中的行高(以像素为单位)。使用 0 来计算从字体大小开始的行高。\n\t"debug.console.lineHeight": 0,\n\n\t// 控制调试过程中是否启用非调试悬停提示。启用后，将调用悬停提供程序来提供悬停提示。即使启用此项设置，普通悬停提示也不会显示。\n\t"debug.enableAllHovers": false,\n\n\t// 当处于调试过程中时，在编辑器中内联显示变量值。\n\t"debug.inlineValues": false,\n\n\t// 控制何时打开内部调试控制台。\n\t"debug.internalConsoleOptions": "openOnFirstSessionStart",\n\n\t// 控制何时打开“调试”视图。\n\t"debug.openDebug": "openOnSessionStart",\n\n\t// 在调试会话结束时自动打开资源管理器视图。\n\t"debug.openExplorerOnEnd": false,\n\n\t// 控制何时显示调试状态栏。\n\t//  - never: 在状态栏中不再显示调试\n\t//  - always: 始终在状态栏中显示调试\n\t//  - onFirstSessionStart: 仅于第一次启动调试后在状态栏中显示调试\n\t"debug.showInStatusBar": "onFirstSessionStart",\n\n\t// 控制调试子会话是否显示在调试工具栏中。当此设置为 false 时, 子会话上的 stop 命令也将停止父会话。\n\t"debug.showSubSessionsInToolBar": false,\n\n\t// 控制调试工具栏的位置。可在所有视图中“浮动”、在调试视图中“停靠”，也可“隐藏”。\n\t"debug.toolBarLocation": "floating",\n\n\t// 全局调试启动配置。应当作为跨工作区共享的 \\"launch.json\\" 的替代方法。\n\t"launch": {\n\t\t"configurations": [],\n\t\t"compounds": []\n\t},\n\n\t// 默认情况下，VS Code 在选择 CSS 属性后触发属性值完成。使用此设置可禁用此行为。\n\t"css.completion.triggerPropertyValueCompletion": true,\n\n\t// A list of JSON file paths that define custom CSS data that loads custom properties, at directives, pseudo classes / elements.\n\t"css.experimental.customData": [],\n\n\t// 无效的参数数量。\n\t"css.lint.argumentsInColorFunction": "error",\n\n\t// 在使用 `padding` 或 `border` 时，不要使用 `width` 或 `height`。\n\t"css.lint.boxModel": "ignore",\n\n\t// 使用厂商特定的前缀时，同时添加所有其他厂商特定的属性。\n\t"css.lint.compatibleVendorPrefixes": "ignore",\n\n\t// 不要使用重复的样式定义。\n\t"css.lint.duplicateProperties": "ignore",\n\n\t// 不要使用空规则集。\n\t"css.lint.emptyRules": "warning",\n\n\t// 避免使用 `float`。浮动会使 CSS 变得脆弱。即使只更改了一部分布局，也很容易造成破坏。\n\t"css.lint.float": "ignore",\n\n\t// `@font-face` 规则必须定义 `src` 和 `font-family` 属性。\n\t"css.lint.fontFaceProperties": "warning",\n\n\t// 十六进制颜色必须由三个或六个十六进制数字组成。\n\t"css.lint.hexColorLength": "error",\n\n\t// 选择器不应包含 ID，因为这些规则与 HTML 的耦合过于紧密。\n\t"css.lint.idSelector": "ignore",\n\n\t// 仅在需要支持 IE7 及更低版本时，才需要 IE hack。\n\t"css.lint.ieHack": "ignore",\n\n\t// 避免使用 `!important`。它表明整个 CSS 的优先级已经失去控制且需要进行重构。\n\t"css.lint.important": "ignore",\n\n\t// import 语句没有并行加载。\n\t"css.lint.importStatement": "ignore",\n\n\t// 由于 `display` 属性值，属性被忽略。例如，使用 `display: inline` 时，`width`、`height`、`margin-top`、`margin-bottom` 和 `float` 属性将不起作用。\n\t"css.lint.propertyIgnoredDueToDisplay": "warning",\n\n\t// 通配选择符 (`*`) 的运行效率低。\n\t"css.lint.universalSelector": "ignore",\n\n\t// 未知的 @ 规则。\n\t"css.lint.unknownAtRules": "warning",\n\n\t// 未知的属性。\n\t"css.lint.unknownProperties": "warning",\n\n\t// 未知的供应商特定属性。\n\t"css.lint.unknownVendorSpecificProperties": "ignore",\n\n\t// 不根据 "unknownProperties" 规则进行验证的属性列表。\n\t"css.lint.validProperties": [],\n\n\t// 使用厂商特定的前缀时，同时添加标准属性。\n\t"css.lint.vendorPrefix": "warning",\n\n\t// 零不需要单位。\n\t"css.lint.zeroUnits": "ignore",\n\n\t// 跟踪 VS Code 与 CSS 语言服务器之间的通信。\n\t"css.trace.server": "off",\n\n\t// 启用或禁用所有验证。\n\t"css.validate": true,\n\n\t// 参数数目无效。\n\t"less.lint.argumentsInColorFunction": "error",\n\n\t// 在使用 `padding` 或 `border` 时，不要使用 `width` 或 `height`。\n\t"less.lint.boxModel": "ignore",\n\n\t// 使用厂商特定的前缀时，同时添加所有其他厂商特定的属性。\n\t"less.lint.compatibleVendorPrefixes": "ignore",\n\n\t// 不要使用重复的样式定义。\n\t"less.lint.duplicateProperties": "ignore",\n\n\t// 不要使用空规则集。\n\t"less.lint.emptyRules": "warning",\n\n\t// 避免使用 `float`。浮动会使 CSS 变得脆弱。即使只更改了一部分布局，也很容易造成破坏。\n\t"less.lint.float": "ignore",\n\n\t// `@font-face` 规则必须定义 `src` 和 `font-family` 属性。\n\t"less.lint.fontFaceProperties": "warning",\n\n\t// 十六进制颜色必须由三个或六个十六进制数字组成。\n\t"less.lint.hexColorLength": "error",\n\n\t// 选择器不应包含 ID，因为这些规则与 HTML 的耦合过于紧密。\n\t"less.lint.idSelector": "ignore",\n\n\t// 仅在需要支持 IE7 及更低版本时，才需要 IE hack。\n\t"less.lint.ieHack": "ignore",\n\n\t// 避免使用 `!important`。它表明整个 CSS 的优先级已经失去控制且需要进行重构。\n\t"less.lint.important": "ignore",\n\n\t// import 语句没有并行加载。\n\t"less.lint.importStatement": "ignore",\n\n\t// 由于 `display` 属性值，属性被忽略。例如，使用 `display: inline` 时，`width`、`height`、`margin-top`、`margin-bottom` 和 `float` 属性将不起作用。\n\t"less.lint.propertyIgnoredDueToDisplay": "warning",\n\n\t// 通配选择符 (`*`) 的运行效率低。\n\t"less.lint.universalSelector": "ignore",\n\n\t// 未知的属性。\n\t"less.lint.unknownProperties": "warning",\n\n\t// 未知的供应商特定属性。\n\t"less.lint.unknownVendorSpecificProperties": "ignore",\n\n\t// 不根据 "unknownProperties" 规则进行验证的属性列表。\n\t"less.lint.validProperties": [],\n\n\t// 使用厂商特定的前缀时，同时添加标准属性。\n\t"less.lint.vendorPrefix": "warning",\n\n\t// 零不需要单位。\n\t"less.lint.zeroUnits": "ignore",\n\n\t// 启用或禁用所有验证。\n\t"less.validate": true,\n\n\t// 参数数目无效。\n\t"scss.lint.argumentsInColorFunction": "error",\n\n\t// 在使用 `padding` 或 `border` 时，不要使用 `width` 或 `height`。\n\t"scss.lint.boxModel": "ignore",\n\n\t// 使用厂商特定的前缀时，同时添加所有其他厂商特定的属性。\n\t"scss.lint.compatibleVendorPrefixes": "ignore",\n\n\t// 不要使用重复的样式定义。\n\t"scss.lint.duplicateProperties": "ignore",\n\n\t// 不要使用空规则集。\n\t"scss.lint.emptyRules": "warning",\n\n\t// 避免使用 `float`。浮动会使 CSS 变得脆弱。即使只更改了一部分布局，也很容易造成破坏。\n\t"scss.lint.float": "ignore",\n\n\t// `@font-face` 规则必须定义 `src` 和 `font-family` 属性。\n\t"scss.lint.fontFaceProperties": "warning",\n\n\t// 十六进制颜色必须由三个或六个十六进制数字组成。\n\t"scss.lint.hexColorLength": "error",\n\n\t// 选择器不应包含 ID，因为这些规则与 HTML 的耦合过于紧密。\n\t"scss.lint.idSelector": "ignore",\n\n\t// 仅在需要支持 IE7 及更低版本时，才需要 IE hack。\n\t"scss.lint.ieHack": "ignore",\n\n\t// 避免使用 `!important`。它表明整个 CSS 的优先级已经失去控制且需要进行重构。\n\t"scss.lint.important": "ignore",\n\n\t// import 语句没有并行加载。\n\t"scss.lint.importStatement": "ignore",\n\n\t// 由于 `display` 属性值，属性被忽略。例如，使用 `display: inline` 时，`width`、`height`、`margin-top`、`margin-bottom` 和 `float` 属性将不起作用。\n\t"scss.lint.propertyIgnoredDueToDisplay": "warning",\n\n\t// 通配选择符 (`*`) 的运行效率低。\n\t"scss.lint.universalSelector": "ignore",\n\n\t// 未知的属性。\n\t"scss.lint.unknownProperties": "warning",\n\n\t// 未知的供应商特定属性。\n\t"scss.lint.unknownVendorSpecificProperties": "ignore",\n\n\t// 不根据 "unknownProperties" 规则进行验证的属性列表。\n\t"scss.lint.validProperties": [],\n\n\t// 使用厂商特定的前缀时，同时添加标准属性。\n\t"scss.lint.vendorPrefix": "warning",\n\n\t// 零不需要单位。\n\t"scss.lint.zeroUnits": "ignore",\n\n\t// 启用或禁用所有验证。\n\t"scss.validate": true,\n\n\t// 启用后，将自动检查扩展更新。若扩展存在更新，将在“扩展”视图中将其标记为过时扩展。更新将从 Microsoft 联机服务中获取。\n\t"extensions.autoCheckUpdates": true,\n\n\t// 启用后，将自动安装扩展更新。更新将从 Microsoft 联机服务中获取。\n\t"extensions.autoUpdate": true,\n\n\t// 启用后，将在离开“扩展”视图时，自动关闭扩展详细信息页面。\n\t"extensions.closeExtensionDetailsOnViewChange": false,\n\n\t// 启用后，将不会显示扩展建议的通知。\n\t"extensions.ignoreRecommendations": false,\n\n\t// 启用后，除非用户特别进行请求，将不会获取或显示推荐。某些推荐将从 Microsoft 联机服务中获取。\n\t"extensions.showRecommendationsOnlyOnDemand": false,\n\n\t// 自定义要启动的终端类型。\n\t//  - integrated: 使用 VS Code 的集成终端。\n\t//  - external: 使用设定的外部终端。\n\t"terminal.explorerKind": "integrated",\n\n\t// 自定义要在 Linux 上运行的终端。\n\t"terminal.external.linuxExec": "xterm",\n\n\t// 定义在 macOS 上运行的终端应用程序。\n\t"terminal.external.osxExec": "Terminal.app",\n\n\t// 自定义要在 Windows 上运行的终端。\n\t"terminal.external.windowsExec": "C:\\\\windows\\\\System32\\\\cmd.exe",\n\n\t// 一组命令 ID，其键绑定将不发送到 shell，而始终由 Code 进行处理。这样，使用键绑定(通常由 shell 使用)时的效果与终端未对焦时(例如，按 Ctrl+P 启动“快速打开”)时的效果一致。\n\t// 默认跳过的命令:\n\t// \n\t// - editor.action.toggleTabFocusMode\n\t// - workbench.action.debug.continue\n\t// - workbench.action.debug.pause\n\t// - workbench.action.debug.restart\n\t// - workbench.action.debug.run\n\t// - workbench.action.debug.start\n\t// - workbench.action.debug.stepInto\n\t// - workbench.action.debug.stepOut\n\t// - workbench.action.debug.stepOver\n\t// - workbench.action.debug.stop\n\t// - workbench.action.firstEditorInGroup\n\t// - workbench.action.focusActiveEditorGroup\n\t// - workbench.action.focusEighthEditorGroup\n\t// - workbench.action.focusFifthEditorGroup\n\t// - workbench.action.focusFirstEditorGroup\n\t// - workbench.action.focusFourthEditorGroup\n\t// - workbench.action.focusLastEditorGroup\n\t// - workbench.action.focusSecondEditorGroup\n\t// - workbench.action.focusSeventhEditorGroup\n\t// - workbench.action.focusSixthEditorGroup\n\t// - workbench.action.focusThirdEditorGroup\n\t// - workbench.action.lastEditorInGroup\n\t// - workbench.action.navigateDown\n\t// - workbench.action.navigateLeft\n\t// - workbench.action.navigateRight\n\t// - workbench.action.navigateUp\n\t// - workbench.action.nextPanelView\n\t// - workbench.action.nextSideBarView\n\t// - workbench.action.openNextRecentlyUsedEditorInGroup\n\t// - workbench.action.openPreviousRecentlyUsedEditorInGroup\n\t// - workbench.action.previousPanelView\n\t// - workbench.action.previousSideBarView\n\t// - workbench.action.quickOpen\n\t// - workbench.action.quickOpenPreviousEditor\n\t// - workbench.action.quickOpenView\n\t// - workbench.action.showCommands\n\t// - workbench.action.tasks.build\n\t// - workbench.action.tasks.reRunTask\n\t// - workbench.action.tasks.restartTask\n\t// - workbench.action.tasks.runTask\n\t// - workbench.action.tasks.showLog\n\t// - workbench.action.tasks.showTasks\n\t// - workbench.action.tasks.terminate\n\t// - workbench.action.tasks.test\n\t// - workbench.action.terminal.clear\n\t// - workbench.action.terminal.clearSelection\n\t// - workbench.action.terminal.copySelection\n\t// - workbench.action.terminal.deleteToLineStart\n\t// - workbench.action.terminal.deleteWordLeft\n\t// - workbench.action.terminal.deleteWordRight\n\t// - workbench.action.terminal.findNextTerminalFocus\n\t// - workbench.action.terminal.findPreviousTerminalFocus\n\t// - workbench.action.terminal.focus\n\t// - workbench.action.terminal.focusAtIndex1\n\t// - workbench.action.terminal.focusAtIndex2\n\t// - workbench.action.terminal.focusAtIndex3\n\t// - workbench.action.terminal.focusAtIndex4\n\t// - workbench.action.terminal.focusAtIndex5\n\t// - workbench.action.terminal.focusAtIndex6\n\t// - workbench.action.terminal.focusAtIndex7\n\t// - workbench.action.terminal.focusAtIndex8\n\t// - workbench.action.terminal.focusAtIndex9\n\t// - workbench.action.terminal.focusFindWidget\n\t// - workbench.action.terminal.focusNext\n\t// - workbench.action.terminal.focusNextPane\n\t// - workbench.action.terminal.focusPrevious\n\t// - workbench.action.terminal.focusPreviousPane\n\t// - workbench.action.terminal.hideFindWidget\n\t// - workbench.action.terminal.kill\n\t// - workbench.action.terminal.moveToLineEnd\n\t// - workbench.action.terminal.moveToLineStart\n\t// - workbench.action.terminal.new\n\t// - workbench.action.terminal.newInActiveWorkspace\n\t// - workbench.action.terminal.paste\n\t// - workbench.action.terminal.resizePaneDown\n\t// - workbench.action.terminal.resizePaneLeft\n\t// - workbench.action.terminal.resizePaneRight\n\t// - workbench.action.terminal.resizePaneUp\n\t// - workbench.action.terminal.runActiveFile\n\t// - workbench.action.terminal.runSelectedText\n\t// - workbench.action.terminal.scrollDown\n\t// - workbench.action.terminal.scrollDownPage\n\t// - workbench.action.terminal.scrollToBottom\n\t// - workbench.action.terminal.scrollToNextCommand\n\t// - workbench.action.terminal.scrollToPreviousCommand\n\t// - workbench.action.terminal.scrollToTop\n\t// - workbench.action.terminal.scrollUp\n\t// - workbench.action.terminal.scrollUpPage\n\t// - workbench.action.terminal.selectAll\n\t// - workbench.action.terminal.selectToNextCommand\n\t// - workbench.action.terminal.selectToNextLine\n\t// - workbench.action.terminal.selectToPreviousCommand\n\t// - workbench.action.terminal.selectToPreviousLine\n\t// - workbench.action.terminal.sendSequence\n\t// - workbench.action.terminal.split\n\t// - workbench.action.terminal.splitInActiveWorkspace\n\t// - workbench.action.terminal.toggleFindCaseSensitiveTerminalFocus\n\t// - workbench.action.terminal.toggleFindRegexTerminalFocus\n\t// - workbench.action.terminal.toggleFindWholeWordTerminalFocus\n\t// - workbench.action.terminal.toggleTerminal\n\t// - workbench.action.toggleFullScreen\n\t// - workbench.action.toggleMaximizedPanel\n\t// - workbench.action.togglePanel\n\t"terminal.integrated.commandsToSkipShell": [],\n\n\t// 在存在活动终端会话的情况下，是否在退出时进行确认。\n\t"terminal.integrated.confirmOnExit": false,\n\n\t// 控制是否将终端中选定的文本复制到剪贴板。\n\t"terminal.integrated.copyOnSelection": false,\n\n\t// 控制终端光标是否闪烁。\n\t"terminal.integrated.cursorBlinking": false,\n\n\t// 控制终端光标的样式。\n\t"terminal.integrated.cursorStyle": "block",\n\n\t// 将在其中启动终端的一个显式起始路径，它用作 shell 进程的当前工作目录(cwd)。当根目录为不方便的 cwd 时，此路径在工作区设置中可能十分有用。\n\t"terminal.integrated.cwd": "",\n\n\t// 控制终端中的粗体文本是否始终使用 ANSI 的“明亮”颜色样式。\n\t"terminal.integrated.drawBoldTextInBrightColors": true,\n\n\t// 控制终端铃声是否启用。\n\t"terminal.integrated.enableBell": false,\n\n\t// Whether to enable the latency mitigation feature for high-latency terminals.\n\t"terminal.integrated.enableLatencyMitigation": false,\n\n\t// 要添加到 VS Code 进程中的带有环境变量的对象，其将被 Linux 终端使用。设置为 `null` 可删除环境变量。\n\t"terminal.integrated.env.linux": {},\n\n\t// 要添加到 VS Code 进程中的带有环境变量的对象，其将被 macOS 终端使用。设置为 `null` 可删除环境变量。\n\t"terminal.integrated.env.osx": {},\n\n\t// 要添加到 VS Code 进程中的带有环境变量的对象，其将被 Windows 终端使用。设置为 `null` 可删除环境变量。\n\t"terminal.integrated.env.windows": {},\n\n\t// An experimental setting that will refresh the terminal renderer when the system is resumed.\n\t"terminal.integrated.experimentalRefreshOnResume": false,\n\n\t// 控制终端的字体系列，默认为 `editor.fontFamily` 的值。\n\t"terminal.integrated.fontFamily": "",\n\n\t// 控制终端的字号(以像素为单位)。\n\t"terminal.integrated.fontSize": 14,\n\n\t// 终端中非粗体字使用的字重。\n\t"terminal.integrated.fontWeight": "normal",\n\n\t// 终端中粗体字使用的字重。\n\t"terminal.integrated.fontWeightBold": "bold",\n\n\t// 控制终端字符的间距。此项的值为整数，表示在字符间添加的额外像素数。\n\t"terminal.integrated.letterSpacing": 0,\n\n\t// 控制终端的行高，此数字乘上终端字号得到实际行高(以像素为单位)。\n\t"terminal.integrated.lineHeight": 1,\n\n\t// 在 macOS 中，控制是否在按住 Option 键并单击时进行强制选择。这将强制进行常规 (行) 选择并禁用列选择模式; 同时允许使用常规终端选择来进行复制与粘贴，例如，可在 tmux 启用了鼠标模式时适用。\n\t"terminal.integrated.macOptionClickForcesSelection": false,\n\n\t// 控制是否在 macOS 终端中，使用 Option 键作为 Meta 键。\n\t"terminal.integrated.macOptionIsMeta": false,\n\n\t// 控制终端的渲染方式。\n\t//  - auto: 让 VS Code 决定要使用的渲染器。\n\t//  - canvas: 使用标准 GPU/基于 canvas 的渲染器\n\t//  - dom: 使用基于 DOM 的备用渲染器。\n\t"terminal.integrated.rendererType": "auto",\n\n\t// 控制终端对右键单击的响应方式。\n\t//  - default: 显示上下文菜单。\n\t//  - copyPaste: 当有内容选中时进行复制，否则进行粘贴。\n\t//  - selectWord: 选择光标下的单词并显示上下文菜单。\n\t"terminal.integrated.rightClickBehavior": "copyPaste",\n\n\t// 控制终端保持在缓冲区的最大行数。\n\t"terminal.integrated.scrollback": 1000,\n\n\t// 控制是否在终端启动时设置语言区域变量。\n\t"terminal.integrated.setLocaleVariables": true,\n\n\t// 终端在 Linux 上使用的 Shell 的路径。[阅读有关配置 Shell 的详细信息](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。\n\t"terminal.integrated.shell.linux": "/bin/bash",\n\n\t// 终端在 macOS 上使用的 Shell 的路径。[阅读有关配置 Shell 的详细信息](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。\n\t"terminal.integrated.shell.osx": "/bin/bash",\n\n\t// 终端在 Windows 上使用的 Shell 的路径。[阅读有关配置 Shell 的详细信息](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。\n\t"terminal.integrated.shell.windows": "C:\\\\windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe",\n\n\t// 在 Linux 终端上使用的命令行参数。[阅读有关配置 Shell 的详细信息](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。\n\t"terminal.integrated.shellArgs.linux": [],\n\n\t// 在 macOS 终端上使用的命令行参数。[阅读有关配置 Shell 的详细信息](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。\n\t"terminal.integrated.shellArgs.osx": [\n\t\t"-l"\n\t],\n\n\t// 在 Windows 终端上使用的命令行参数。[阅读有关配置 Shell 的详细信息](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。\n\t"terminal.integrated.shellArgs.windows": [],\n\n\t// 当退出代码非零时，控制是否显示“终端进程以某退出代码终止”的警告。\n\t"terminal.integrated.showExitAlert": true,\n\n\t// 控制拆分终端的初始工作目录。\n\t//  - workspaceRoot: 新拆分终端将使用工作区根目录作为工作目录。在多根目录工作区中，可选择要使用的根目录。\n\t//  - initial: 新拆分终端将使用父终端起始目录作为工作目录。\n\t//  - inherited: 在macOS和Linux上，一个新的分割终端将使用父终端的工作目录。在Windows上，这与初始值相同。\n\t"terminal.integrated.splitCwd": "inherited",\n\n\t// Works in conjunction with the `terminal.integrated.windowsEnableConpty` setting. Both must be enabled for tasks to use conpty. Defaults to `false`.\n\t"terminal.integrated.windowsAllowConptyTasks": false,\n\n\t// 是否要将 ConPTY 用于 Windows 终端进程通信(需要 Windows 10 内部版本号 18309+)。如果此为 false，则将使用 Winpty。\n\t"terminal.integrated.windowsEnableConpty": true,\n\n\t// 在打开文件时，控制是否在“问题”视图中对其进行定位。\n\t"problems.autoReveal": true,\n\n\t// 在文件和文件夹上显示错误和警告。\n\t"problems.decorations.enabled": true,\n\n\t// 启用/禁用导航路径。\n\t"breadcrumbs.enabled": false,\n\n\t// 控制是否及如何在“导航路径”视图中显示文件路径。\n\t//  - on: 在导航路径视图中显示文件路径。\n\t//  - off: 不在导航路径视图中显示文件路径。\n\t//  - last: 在导航路径视图中仅显示文件路径的最后一个元素。\n\t"breadcrumbs.filePath": "on",\n\n\t// 控制是否及如何在“导航路径”视图中显示符号。\n\t//  - on: 在“导航路径”视图中显示所有符号。\n\t//  - off: 不在导航路径视图中显示符号。\n\t//  - last: 在导航路径视图中仅显示当前符号。\n\t"breadcrumbs.symbolPath": "on",\n\n\t// 控制“导航路径”大纲视图中符号的排序方式。\n\t//  - position: 以文件位置顺序显示符号大纲。\n\t//  - name: 以字母顺序显示符号大纲。\n\t//  - type: 以符号类型顺序显示符号大纲。\n\t"breadcrumbs.symbolSortOrder": "position",\n\n\t// 将崩溃报告发送到 Microsoft 联机服务。\n\t// 此选项在重新启动后才能生效。\n\t"telemetry.enableCrashReporter": true,\n\n\t// 将使用数据和错误发送到 Microsoft 联机服务。\n\t"telemetry.enableTelemetry": true,\n\n\t// 显示大纲元素的图标。\n\t"outline.icons": true,\n\n\t// 使用错误和警告的徽章。\n\t"outline.problems.badges": true,\n\n\t// 使用颜色表示错误和警告。\n\t"outline.problems.colors": true,\n\n\t// 显示大纲元素上的错误和警告。\n\t"outline.problems.enabled": true,\n\n\t// Colorize Quokka output\n\t"quokka.colorizeOutput": true,\n\n\t// Quokka gutter indicators colors (requires a restart after change)\n\t"quokka.colors": {\n\t\t"covered": "#62b455",\n\t\t"errorPath": "#ffa0a0",\n\t\t"errorSource": "#fe536a",\n\t\t"notCovered": "#cccccc",\n\t\t"partiallyCovered": "#d2a032"\n\t},\n\n\t// Minimize the number of new line characters between output console messages\n\t"quokka.compactMessageOutput": false,\n\n\t// Override Quokka Dark Theme Error\n\t"quokka.darkTheme.error.decorationAttachmentRenderOptions": {\n\t\t"border": null,\n\t\t"borderColor": null,\n\t\t"fontStyle": null,\n\t\t"fontWeight": null,\n\t\t"textDecoration": null,\n\t\t"color": "#fe536a",\n\t\t"backgroundColor": null,\n\t\t"margin": "1.2em",\n\t\t"width": null,\n\t\t"height": null\n\t},\n\n\t// Override Quokka Dark Theme Log\n\t"quokka.darkTheme.log.decorationAttachmentRenderOptions": {\n\t\t"border": null,\n\t\t"borderColor": null,\n\t\t"fontStyle": null,\n\t\t"fontWeight": null,\n\t\t"textDecoration": null,\n\t\t"color": "rgba(86, 156, 214, 1)",\n\t\t"backgroundColor": null,\n\t\t"margin": "1.2em",\n\t\t"width": null,\n\t\t"height": null\n\t},\n\n\t// Override Quokka Light Theme Error\n\t"quokka.lightTheme.error.decorationAttachmentRenderOptions": {\n\t\t"border": null,\n\t\t"borderColor": null,\n\t\t"fontStyle": null,\n\t\t"fontWeight": null,\n\t\t"textDecoration": null,\n\t\t"color": "#c80000",\n\t\t"backgroundColor": null,\n\t\t"margin": "1.2em",\n\t\t"width": null,\n\t\t"height": null\n\t},\n\n\t// Override Quokka Light Theme Log\n\t"quokka.lightTheme.log.decorationAttachmentRenderOptions": {\n\t\t"border": null,\n\t\t"borderColor": null,\n\t\t"fontStyle": null,\n\t\t"fontWeight": null,\n\t\t"textDecoration": null,\n\t\t"color": "#0000ff",\n\t\t"backgroundColor": null,\n\t\t"margin": "1.2em",\n\t\t"width": null,\n\t\t"height": null\n\t},\n\n\t// Show Quokka output window on start up\n\t"quokka.showOutputOnStart": true,\n\n\t// Stop Quokka expiring license update reminders\n\t"quokka.suppressExpirationNotifications": false,\n\n\t// Supress Quokka Glyph Margin Notifications\n\t"quokka.suppressGlyphMarginNotifications": true,\n\n\t// Always show the ESlint status bar item.\n\t"eslint.alwaysShowStatus": false,\n\n\t// Turns auto fix on save on or off.\n\t"eslint.autoFixOnSave": false,\n\n\t// \n\t"eslint.codeAction.disableRuleComment": {\n\t\t"enable": true,\n\t\t"location": "separateLine"\n\t},\n\n\t// \n\t"eslint.codeAction.showDocumentation": {\n\t\t"enable": true\n\t},\n\n\t// Controls whether eslint is enabled for JavaScript files or not.\n\t"eslint.enable": true,\n\n\t// A path added to NODE_PATH when resolving the eslint module.\n\t"eslint.nodePath": null,\n\n\t// The eslint options object to provide args normally passed to eslint when executed from a command line (see http://eslint.org/docs/developer-guide/nodejs-api#cliengine).\n\t"eslint.options": {},\n\n\t// The package manager you use to install node modules.\n\t"eslint.packageManager": "npm",\n\n\t// Controls whether a task for linting the whole workspace will be available.\n\t"eslint.provideLintTask": false,\n\n\t// Turns on quiet mode, which ignores warnings.\n\t"eslint.quiet": false,\n\n\t// Run the linter on save (onSave) or on type (onType)\n\t"eslint.run": "onType",\n\n\t// The location of the node binary to run ESLint under.\n\t"eslint.runtime": null,\n\n\t// Traces the communication between VSCode and the eslint linter service.\n\t"eslint.trace.server": "off",\n\n\t// An array of language ids which should be validated by ESLint\n\t"eslint.validate": [\n\t\t"javascript",\n\t\t"javascriptreact"\n\t],\n\n\t// \n\t"eslint.workingDirectories": [],\n\n\t// 针对 [git-commit] 语言，配置替代编辑器设置。\n\t"[git-commit]":  {\n\t\t"editor.rulers": [\n\t\t\t\t72\n\t\t]\n\t},\n\n\t// 针对 [go] 语言，配置替代编辑器设置。\n\t"[go]":  {\n\t\t"editor.insertSpaces": false\n\t},\n\n\t// 针对 [json] 语言，配置替代编辑器设置。\n\t"[json]":  {\n\t\t"editor.quickSuggestions": {\n\t\t\t\t"strings": true\n\t\t}\n\t},\n\n\t// 针对 [makefile] 语言，配置替代编辑器设置。\n\t"[makefile]":  {\n\t\t"editor.insertSpaces": false\n\t},\n\n\t// 针对 [markdown] 语言，配置替代编辑器设置。\n\t"[markdown]":  {\n\t\t"editor.wordWrap": "on",\n\t\t"editor.quickSuggestions": false\n\t},\n\n\t// 针对 [yaml] 语言，配置替代编辑器设置。\n\t"[yaml]":  {\n\t\t"editor.insertSpaces": true,\n\t\t"editor.tabSize": 2,\n\t\t"editor.autoIndent": false\n\t},\n\n\t// Specifies the length of abbreviated commit ids (shas)\n\t"gitlens.advanced.abbreviatedShaLength": "7",\n\n\t// Specifies additional arguments to pass to the `git blame` command\n\t"gitlens.advanced.blame.customArguments": null,\n\n\t// Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit. Use 0 to specify an infinite wait\n\t"gitlens.advanced.blame.delayAfterEdit": 5000,\n\n\t// Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum\n\t"gitlens.advanced.blame.sizeThresholdAfterEdit": 5000,\n\n\t// Specifies whether git output will be cached — changing the default is not recommended\n\t"gitlens.advanced.caching.enabled": true,\n\n\t// Specifies whether file histories will follow renames — will affect how merge commits are shown in histories\n\t"gitlens.advanced.fileHistoryFollowsRenames": true,\n\n\t// Specifies the maximum number of items to show in a list. Use 0 to specify no maximum\n\t"gitlens.advanced.maxListItems": 200,\n\n\t// Specifies the maximum number of items to show in a search. Use 0 to specify no maximum\n\t"gitlens.advanced.maxSearchItems": 200,\n\n\t// Specifies which messages should be suppressed\n\t"gitlens.advanced.messages": {\n\t\t"suppressCommitHasNoPreviousCommitWarning": false,\n\t\t"suppressCommitNotFoundWarning": false,\n\t\t"suppressFileNotUnderSourceControlWarning": false,\n\t\t"suppressGitDisabledWarning": false,\n\t\t"suppressGitVersionWarning": false,\n\t\t"suppressLineUncommittedWarning": false,\n\t\t"suppressNoRepositoryWarning": false,\n\t\t"suppressSupportGitLensNotification": false\n\t},\n\n\t// Specifies whether to close QuickPick menus when focus is lost\n\t"gitlens.advanced.quickPick.closeOnFocusOut": true,\n\n\t// Specifies how many folders deep to search for repositories\n\t"gitlens.advanced.repositorySearchDepth": 1,\n\n\t// Specifies the amount (percent) of similarity a deleted and added file pair must have to be considered a rename\n\t"gitlens.advanced.similarityThreshold": null,\n\n\t// Specifies whether to enable GitLens telemetry (even if enabled still abides by the overall `telemetry.enableTelemetry` setting\n\t"gitlens.advanced.telemetry.enabled": true,\n\n\t// Specifies whether to show avatar images in the gutter blame annotations\n\t"gitlens.blame.avatars": true,\n\n\t// Specifies whether to compact (deduplicate) matching adjacent gutter blame annotations\n\t"gitlens.blame.compact": true,\n\n\t// Specifies how to format absolute dates (e.g. using the `${date}` token) in gutter blame annotations. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats\n\t"gitlens.blame.dateFormat": null,\n\n\t// Specifies the format of the gutter blame annotations. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `gitlens.blame.dateFormat` setting\n\t"gitlens.blame.format": "${message|40?} ${agoOrDate|14-}",\n\n\t// Specifies whether to provide a heatmap indicator in the gutter blame annotations\n\t"gitlens.blame.heatmap.enabled": true,\n\n\t// Specifies where the heatmap indicators will be shown in the gutter blame annotations\n\t//  - left: Adds a heatmap indicator on the left edge of the gutter blame annotations\n\t//  - right: Adds a heatmap indicator on the right edge of the gutter blame annotations\n\t"gitlens.blame.heatmap.location": "right",\n\n\t// Specifies whether to highlight lines associated with the current line\n\t"gitlens.blame.highlight.enabled": true,\n\n\t// Specifies where the associated line highlights will be shown\n\t"gitlens.blame.highlight.locations": [\n\t\t"gutter",\n\t\t"line",\n\t\t"overview"\n\t],\n\n\t// Specifies whether to ignore whitespace when comparing revisions during blame operations\n\t"gitlens.blame.ignoreWhitespace": false,\n\n\t// Specifies whether gutter blame annotations will be separated by a small gap\n\t"gitlens.blame.separateLines": true,\n\n\t// Specifies how the gutter blame annotations will be toggled\n\t//  - file: Toggles each file individually\n\t//  - window: Toggles the window, i.e. all files at once\n\t"gitlens.blame.toggleMode": "file",\n\n\t// Specifies the command to be executed when an _authors_ code lens is clicked\n\t//  - gitlens.toggleFileBlame: Toggles file blame annotations\n\t//  - gitlens.diffWithPrevious: Compares the current committed file with the previous commit\n\t//  - gitlens.showQuickCommitDetails: Shows a commit details quick pick\n\t//  - gitlens.showQuickCommitFileDetails: Shows a commit file details quick pick\n\t//  - gitlens.showQuickFileHistory: Shows a file history quick pick\n\t//  - gitlens.showQuickRepoHistory: Shows a branch history quick pick\n\t"gitlens.codeLens.authors.command": "gitlens.toggleFileBlame",\n\n\t// Specifies whether to provide an _authors_ code lens, showing number of authors of the file or code block and the most prominent author (if there is more than one)\n\t"gitlens.codeLens.authors.enabled": true,\n\n\t// Specifies whether to provide any Git code lens, by default. Use the `Toggle Git Code Lens` command (`gitlens.toggleCodeLens`) to toggle the Git code lens on and off for the current window\n\t"gitlens.codeLens.enabled": true,\n\n\t// Specifies whether to provide any Git code lens on symbols that span only a single line\n\t"gitlens.codeLens.includeSingleLineSymbols": false,\n\n\t// Specifies the command to be executed when a _recent change_ code lens is clicked\n\t//  - gitlens.toggleFileBlame: Toggles file blame annotations\n\t//  - gitlens.diffWithPrevious: Compares the current committed file with the previous commit\n\t//  - gitlens.showQuickCommitDetails: Shows a commit details quick pick\n\t//  - gitlens.showQuickCommitFileDetails: Shows a commit file details quick pick\n\t//  - gitlens.showQuickFileHistory: Shows a file history quick pick\n\t//  - gitlens.showQuickRepoHistory: Shows a branch history quick pick\n\t"gitlens.codeLens.recentChange.command": "gitlens.showQuickCommitFileDetails",\n\n\t// Specifies whether to provide a _recent change_ code lens, showing the author and date of the most recent commit for the file or code block\n\t"gitlens.codeLens.recentChange.enabled": true,\n\n\t// Specifies where Git code lens will be shown in the document\n\t"gitlens.codeLens.scopes": [\n\t\t"document",\n\t\t"containers"\n\t],\n\n\t// Specifies where Git code lens will be shown in the document for the specified languages\n\t"gitlens.codeLens.scopesByLanguage": [\n\t\t{\n\t\t\t"language": "azure-pipelines",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "css",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "html",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "json",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "jsonc",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "less",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "postcss",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "python",\n\t\t\t"symbolScopes": [\n\t\t\t\t"!Module"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "scss",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "stylus",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "vue",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "yaml",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t}\n\t],\n\n\t// Specifies a set of document symbols where Git code lens will or will not be shown in the document. Prefix with `!` to avoid providing a Git code lens for the symbol. Must be a member of `SymbolKind`\n\t"gitlens.codeLens.symbolScopes": [],\n\n\t// Specifies how to format absolute dates (e.g. using the `${date}` token) for the current line blame annotation. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats\n\t"gitlens.currentLine.dateFormat": null,\n\n\t// Specifies whether to provide a blame annotation for the current line, by default. Use the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window\n\t"gitlens.currentLine.enabled": true,\n\n\t// Specifies the format of the current line blame annotation. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `gitlens.currentLine.dateFormat` setting\n\t"gitlens.currentLine.format": "${author}, ${agoOrDate} • ${message}",\n\n\t// Specifies whether the current line blame annotation can be scrolled into view when it is outside the viewport\n\t"gitlens.currentLine.scrollable": true,\n\n\t// Specifies debug mode\n\t"gitlens.debug": false,\n\n\t// Specifies how absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats\n\t"gitlens.defaultDateFormat": null,\n\n\t// Specifies how short absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats\n\t"gitlens.defaultDateShortFormat": null,\n\n\t// Specifies whether commit dates should use the authored or committed date\n\t//  - authored: Uses the date when the changes were authored (i.e. originally written)\n\t//  - committed: Uses the date when the changes were committed\n\t"gitlens.defaultDateSource": "authored",\n\n\t// Specifies how dates will be displayed by default\n\t//  - relative: e.g. 1 day ago\n\t//  - absolute: e.g. July 25th, 2018 7:18pm\n\t"gitlens.defaultDateStyle": "relative",\n\n\t// Specifies the style of the gravatar default (fallback) images\n\t//  - identicon: A geometric pattern\n\t//  - mp: A simple, cartoon-style silhouetted outline of a person (does not vary by email hash)\n\t//  - monsterid: A monster with different colors, faces, etc\n\t//  - retro: 8-bit arcade-style pixelated faces\n\t//  - robohash: A robot with different colors, faces, etc\n\t//  - wavatar: A face with differing features and backgrounds\n\t"gitlens.defaultGravatarsStyle": "robohash",\n\n\t// Specifies the age of the most recent change (in days) after which the gutter heatmap annotations will be cold rather than hot (i.e. will use `gitlens.heatmap.coldColor#` instead of `#gitlens.heatmap.hotColor`)\n\t"gitlens.heatmap.ageThreshold": "90",\n\n\t// Specifies the base color of the gutter heatmap annotations when the most recent change is older (cold) than the `gitlens.heatmap.ageThreshold` value\n\t"gitlens.heatmap.coldColor": "#0a60f6",\n\n\t// Specifies the base color of the gutter heatmap annotations when the most recent change is newer (hot) than the `gitlens.heatmap.ageThreshold` value\n\t"gitlens.heatmap.hotColor": "#f66a0a",\n\n\t// Specifies how the gutter heatmap annotations will be toggled\n\t//  - file: Toggles each file individually\n\t//  - window: Toggles the window, i.e. all files at once\n\t"gitlens.heatmap.toggleMode": "file",\n\n\t// Specifies whether to provide a _changes (diff)_ hover for all lines when showing blame annotations\n\t"gitlens.hovers.annotations.changes": true,\n\n\t// Specifies whether to provide a _commit details_ hover for all lines when showing blame annotations\n\t"gitlens.hovers.annotations.details": true,\n\n\t// Specifies whether to provide any hovers when showing blame annotations\n\t"gitlens.hovers.annotations.enabled": true,\n\n\t// Specifies when to trigger hovers when showing blame annotations\n\t//  - annotation: Only shown when hovering over the line annotation\n\t//  - line: Shown when hovering anywhere over the line\n\t"gitlens.hovers.annotations.over": "line",\n\n\t// Specifies whether to show avatar images in hovers\n\t"gitlens.hovers.avatars": true,\n\n\t// Specifies whether to show just the changes to the line or the set of related changes in the _changes (diff)_ hover\n\t//  - line: Shows only the changes to the line\n\t//  - hunk: Shows the set of related changes\n\t"gitlens.hovers.changesDiff": "line",\n\n\t// Specifies whether to provide a _changes (diff)_ hover for the current line\n\t"gitlens.hovers.currentLine.changes": true,\n\n\t// Specifies whether to provide a _commit details_ hover for the current line\n\t"gitlens.hovers.currentLine.details": true,\n\n\t// Specifies whether to provide any hovers for the current line\n\t"gitlens.hovers.currentLine.enabled": true,\n\n\t// Specifies when to trigger hovers for the current line\n\t//  - annotation: Only shown when hovering over the line annotation\n\t//  - line: Shown when hovering anywhere over the line\n\t"gitlens.hovers.currentLine.over": "annotation",\n\n\t// Specifies the format (in markdown) of the _commit details_ hover. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs\n\t"gitlens.hovers.detailsMarkdownFormat": "${avatar} &nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \\n\\n${message}\\n\\n${commands}",\n\n\t// Specifies whether to provide any hovers\n\t"gitlens.hovers.enabled": true,\n\n\t// Specifies whether to enable experimental features\n\t"gitlens.insiders": false,\n\n\t// Specifies the keymap to use for GitLens shortcut keys\n\t//  - alternate: Adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)\n\t//  - chorded: Adds a chorded set of shortcut keys that start with `Ctrl+Alt+G` (`⌥⌘G` on macOS)\n\t//  - none: No shortcut keys will be added\n\t"gitlens.keymap": "chorded",\n\n\t// Specifies whether to allow guest access to GitLens features when using Visual Studio Live Share\n\t"gitlens.liveshare.allowGuestAccess": true,\n\n\t// Specifies which commands will be added to which menus\n\t"gitlens.menus": {\n\t\t"editor": {\n\t\t\t"blame": false,\n\t\t\t"clipboard": true,\n\t\t\t"compare": true,\n\t\t\t"details": false,\n\t\t\t"history": false,\n\t\t\t"remote": false\n\t\t},\n\t\t"editorGroup": {\n\t\t\t"blame": true,\n\t\t\t"compare": true\n\t\t},\n\t\t"editorTab": {\n\t\t\t"clipboard": true,\n\t\t\t"compare": true,\n\t\t\t"history": true,\n\t\t\t"remote": true\n\t\t},\n\t\t"explorer": {\n\t\t\t"clipboard": true,\n\t\t\t"compare": true,\n\t\t\t"history": true,\n\t\t\t"remote": true\n\t\t},\n\t\t"scmGroup": {\n\t\t\t"compare": true,\n\t\t\t"openClose": true,\n\t\t\t"stash": true,\n\t\t\t"stashInline": true\n\t\t},\n\t\t"scmItem": {\n\t\t\t"clipboard": true,\n\t\t\t"compare": true,\n\t\t\t"history": true,\n\t\t\t"remote": true,\n\t\t\t"stash": true\n\t\t}\n\t},\n\n\t// Specifies the active GitLens mode, if any\n\t"gitlens.mode.active": "",\n\n\t// Specifies the active GitLens mode alignment in the status bar\n\t//  - left: Aligns to the left\n\t//  - right: Aligns to the right\n\t"gitlens.mode.statusBar.alignment": "right",\n\n\t// Specifies whether to provide the active GitLens mode in the status bar\n\t"gitlens.mode.statusBar.enabled": true,\n\n\t// Specifies the user-defined GitLens modes\n\t"gitlens.modes": {\n\t\t"zen": {\n\t\t\t"name": "Zen",\n\t\t\t"statusBarItemName": "Zen",\n\t\t\t"description": "for a zen-like experience, disables many visual features",\n\t\t\t"codeLens": false,\n\t\t\t"currentLine": false,\n\t\t\t"hovers": false,\n\t\t\t"statusBar": false\n\t\t},\n\t\t"review": {\n\t\t\t"name": "Review",\n\t\t\t"statusBarItemName": "Reviewing",\n\t\t\t"description": "for reviewing code, enables many visual features",\n\t\t\t"codeLens": true,\n\t\t\t"currentLine": true,\n\t\t\t"hovers": true\n\t\t}\n\t},\n\n\t// Specifies how much (if any) output will be sent to the GitLens output channel\n\t//  - silent: Logs nothing\n\t//  - errors: Logs only errors\n\t//  - verbose: Logs all errors, warnings, and messages\n\t//  - debug: Logs all errors, warnings, and messages with extra context useful for debugging\n\t"gitlens.outputLevel": "errors",\n\n\t// Specifies where the highlights of the recently changed lines will be shown\n\t"gitlens.recentChanges.highlight.locations": [\n\t\t"gutter",\n\t\t"line",\n\t\t"overview"\n\t],\n\n\t// Specifies how the recently changed lines annotations will be toggled\n\t//  - file: Toggles each file individually\n\t//  - window: Toggles the window, i.e. all files at once\n\t"gitlens.recentChanges.toggleMode": "file",\n\n\t// Specifies user-defined remote (code-hosting) services or custom domains for built-in remote services\n\t"gitlens.remotes": null,\n\n\t// Specifies the display mode of the interactive settings editor\n\t//  - simple: Only displays common settings\n\t//  - advanced: Displays all settings\n\t"gitlens.settings.mode": "simple",\n\n\t// Specifies whether to show What\'s New after upgrading to new feature releases\n\t"gitlens.showWhatsNewAfterUpgrades": true,\n\n\t// Specifies the blame alignment in the status bar\n\t//  - left: Aligns to the left\n\t//  - right: Aligns to the right\n\t"gitlens.statusBar.alignment": "right",\n\n\t// Specifies the command to be executed when the blame status bar item is clicked\n\t//  - gitlens.toggleFileBlame: Toggles file blame annotations\n\t//  - gitlens.diffWithPrevious: Compares the current line commit with the previous\n\t//  - gitlens.diffWithWorking: Compares the current line commit with the working tree\n\t//  - gitlens.toggleCodeLens: Toggles Git code lens\n\t//  - gitlens.showQuickCommitDetails: Shows a commit details quick pick\n\t//  - gitlens.showQuickCommitFileDetails: Shows a commit file details quick pick\n\t//  - gitlens.showQuickFileHistory: Shows a file history quick pick\n\t//  - gitlens.showQuickRepoHistory: Shows a branch history quick pick\n\t"gitlens.statusBar.command": "gitlens.showQuickCommitDetails",\n\n\t// Specifies how to format absolute dates (e.g. using the `${date}` token) in the blame information in the status bar. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats\n\t"gitlens.statusBar.dateFormat": null,\n\n\t// Specifies whether to provide blame information in the status bar\n\t"gitlens.statusBar.enabled": true,\n\n\t// Specifies the format of the blame information in the status bar. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `gitlens.statusBar.dateFormat` setting\n\t"gitlens.statusBar.format": "${author}, ${agoOrDate}",\n\n\t// Specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar "flashing"\n\t"gitlens.statusBar.reduceFlicker": false,\n\n\t// Specifies the string to be shown in place of the _authors_ code lens when there are unsaved changes\n\t"gitlens.strings.codeLens.unsavedChanges.authorsOnly": "Unsaved changes (cannot determine authors)",\n\n\t// Specifies the string to be shown in place of both the _recent change_ and _authors_ code lens when there are unsaved changes\n\t"gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors": "Unsaved changes (cannot determine recent change or authors)",\n\n\t// Specifies the string to be shown in place of the _recent change_ code lens when there are unsaved changes\n\t"gitlens.strings.codeLens.unsavedChanges.recentChangeOnly": "Unsaved changes (cannot determine recent change)",\n\n\t// Specifies the description format of committed changes in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs\n\t"gitlens.views.commitDescriptionFormat": "${changes  •  }${author}, ${agoOrDate}",\n\n\t// Specifies the description format of a committed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs\n\t"gitlens.views.commitFileDescriptionFormat": "${directory}${  ←  originalPath}",\n\n\t// Specifies the format of a committed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs\n\t"gitlens.views.commitFileFormat": "${file}",\n\n\t// Specifies the format of committed changes in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs\n\t"gitlens.views.commitFormat": "${message}",\n\n\t// Specifies whether to show avatar images instead of commit (or status) icons in the _Compare_ view\n\t"gitlens.views.compare.avatars": true,\n\n\t// Specifies whether to show the _Compare_ view\n\t"gitlens.views.compare.enabled": true,\n\n\t// Specifies whether to compact (flatten) unnecessary file nesting in the _Compare_ view. Only applies when `gitlens.views.compare.files.layout` is set to `tree` or `auto`\n\t"gitlens.views.compare.files.compact": true,\n\n\t// Specifies how the _Compare_ view will display files\n\t//  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.compare.files.threshold` value and the number of files at each nesting level\n\t//  - list: Displays files as a list\n\t//  - tree: Displays files as a tree\n\t"gitlens.views.compare.files.layout": "auto",\n\n\t// Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Compare_ view. Only applies when `gitlens.views.compare.files.layout` is set to `auto`\n\t"gitlens.views.compare.files.threshold": 5,\n\n\t// Specifies where to show the _Compare_ view\n\t//  - gitlens: Adds to the GitLens side bar\n\t//  - explorer: Adds to the Explorer side bar\n\t//  - scm: Adds to the Source Control side bar\n\t"gitlens.views.compare.location": "gitlens",\n\n\t// Specifies the default number of items to show in a view list. Use 0 to specify no limit\n\t"gitlens.views.defaultItemLimit": 10,\n\n\t// Specifies whether to show avatar images instead of status icons in the _File History_ view\n\t"gitlens.views.fileHistory.avatars": true,\n\n\t// Specifies whether to show the _File History_ view\n\t"gitlens.views.fileHistory.enabled": true,\n\n\t// Specifies where to show the _File History_ view\n\t//  - gitlens: Adds to the GitLens side bar\n\t//  - explorer: Adds to the Explorer side bar\n\t//  - scm: Adds to the Source Control side bar\n\t"gitlens.views.fileHistory.location": "gitlens",\n\n\t// Specifies whether to show avatar images instead of status icons in the _Line History_ view\n\t"gitlens.views.lineHistory.avatars": true,\n\n\t// Specifies whether to show the _Line History_ view\n\t"gitlens.views.lineHistory.enabled": true,\n\n\t// Specifies where to show the _Line History_ view\n\t//  - gitlens: Adds to the GitLens side bar\n\t//  - explorer: Adds to the Explorer side bar\n\t//  - scm: Adds to the Source Control side bar\n\t"gitlens.views.lineHistory.location": "gitlens",\n\n\t// Specifies the number of items to show in a each page when paginating a view list. Use 0 to specify no limit\n\t"gitlens.views.pageItemLimit": 20,\n\n\t// Specifies whether to automatically refresh the _Repositories_ view when the repository or the file system changes\n\t"gitlens.views.repositories.autoRefresh": true,\n\n\t// Specifies whether to automatically reveal repositories in the _Repositories_ view when opening files\n\t"gitlens.views.repositories.autoReveal": true,\n\n\t// Specifies whether to show avatar images instead of commit (or status) icons in the _Repositories_ view\n\t"gitlens.views.repositories.avatars": true,\n\n\t// Specifies how the _Repositories_ view will display branches\n\t//  - list: Displays branches as a list\n\t//  - tree: Displays branches as a tree when branch names contain slashes `/`\n\t"gitlens.views.repositories.branches.layout": "tree",\n\n\t// Specifies whether to show the _Repositories_ view in a compact display density\n\t"gitlens.views.repositories.compact": false,\n\n\t// Specifies whether to show the _Repositories_ view\n\t"gitlens.views.repositories.enabled": true,\n\n\t// Specifies whether to compact (flatten) unnecessary file nesting in the _Repositories_ view. Only applies when `gitlens.views.repositories.files.layout` is set to `tree` or `auto`\n\t"gitlens.views.repositories.files.compact": true,\n\n\t// Specifies how the _Repositories_ view will display files\n\t//  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.repositories.files.threshold` value and the number of files at each nesting level\n\t//  - list: Displays files as a list\n\t//  - tree: Displays files as a tree\n\t"gitlens.views.repositories.files.layout": "auto",\n\n\t// Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Repositories_ view. Only applies when `gitlens.views.repositories.files.layout` is set to `auto`\n\t"gitlens.views.repositories.files.threshold": 5,\n\n\t// Specifies whether to include working tree file status for each repository in the _Repositories_ view\n\t"gitlens.views.repositories.includeWorkingTree": true,\n\n\t// Specifies where to show the _Repositories_ view\n\t//  - gitlens: Adds to the GitLens side bar\n\t//  - explorer: Adds to the Explorer side bar\n\t//  - scm: Adds to the Source Control side bar\n\t"gitlens.views.repositories.location": "gitlens",\n\n\t// Specifies whether to show the tracking branch when displaying local branches in the _Repositories_ view\n\t"gitlens.views.repositories.showTrackingBranch": true,\n\n\t// Specifies whether to show avatar images instead of commit (or status) icons in the _Search Commits_ view\n\t"gitlens.views.search.avatars": true,\n\n\t// Specifies whether to show the _Search Commits_ view\n\t"gitlens.views.search.enabled": true,\n\n\t// Specifies whether to compact (flatten) unnecessary file nesting in the _Search Commits_ view. Only applies when `gitlens.views.search.files.layout` is set to `tree` or `auto`\n\t"gitlens.views.search.files.compact": true,\n\n\t// Specifies how the _Search Commits_ view will display files\n\t//  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.search.files.threshold` value and the number of files at each nesting level\n\t//  - list: Displays files as a list\n\t//  - tree: Displays files as a tree\n\t"gitlens.views.search.files.layout": "auto",\n\n\t// Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Search Commits_ view. Only applies when `gitlens.views.search.files.layout` is set to `auto`\n\t"gitlens.views.search.files.threshold": 5,\n\n\t// Specifies where to show the _Search Commits_ view\n\t//  - gitlens: Adds to the GitLens side bar\n\t//  - explorer: Adds to the Explorer side bar\n\t//  - scm: Adds to the Source Control side bar\n\t"gitlens.views.search.location": "gitlens",\n\n\t// Specifies whether to show relative date markers (_Less than a week ago_, _Over a week ago_, _Over a month ago_, etc) on revision (commit) histories in the views\n\t"gitlens.views.showRelativeDateMarkers": true,\n\n\t// Specifies the description format of stashed changes in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs\n\t"gitlens.views.stashDescriptionFormat": "${changes  •  }${agoOrDate}",\n\n\t// Specifies the description format of a stashed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs\n\t"gitlens.views.stashFileDescriptionFormat": "${directory}${  ←  originalPath}",\n\n\t// Specifies the format of a stashed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs\n\t"gitlens.views.stashFileFormat": "${file}",\n\n\t// Specifies the format of stashed changes in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs\n\t"gitlens.views.stashFormat": "${message}",\n\n\t// Specifies the description format of the status of a working or committed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs\n\t"gitlens.views.statusFileDescriptionFormat": "${directory}${  ←  originalPath}",\n\n\t// Specifies the format of the status of a working or committed file in the views. See [_File Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs\n\t"gitlens.views.statusFileFormat": "${working  }${file}",\n\n\t// 控制是否自动检测 Grunt 任务。默认开启。\n\t"grunt.autoDetect": "on",\n\n\t// Current accent color selected\n\t"materialTheme.accent": "Blue",\n\n\t// 控制是否启用强制推送 (不论 force 还是 force-with-lease)。\n\t"git.allowForcePush": false,\n\n\t// 始终显示“暂存的更改”资源组。\n\t"git.alwaysShowStagedChangesResourceGroup": false,\n\n\t// 控制所有提交的 signoff 标志。\n\t"git.alwaysSignOff": false,\n\n\t// 启用时，提交将自动从当前Git存储库的默认远程获取。\n\t"git.autofetch": false,\n\n\t// 在启用 "git.autofetch" 情况下每次自动 git fetch 之间的间隔时间(以秒为单位)。\n\t"git.autofetchPeriod": 180,\n\n\t// 是否启用自动刷新。\n\t"git.autorefresh": true,\n\n\t// 配置何时自动检测存储库。\n\t//  - true: 扫描当前打开文件夹与当前打开文件所在文件夹的子文件夹。\n\t//  - false: 禁止自动扫描存储库。\n\t//  - subFolders: 扫描当前打开文件夹的子文件夹。\n\t//  - openEditors: 扫描当前打开文件的父文件夹。\n\t"git.autoRepositoryDetection": true,\n\n\t// 在拉取前暂存所有更改，在成功拉取后还原这些更改。\n\t"git.autoStash": false,\n\n\t// 用于验证新分支名称的正则表达式。\n\t"git.branchValidationRegex": "",\n\n\t// 在新分支名称中替换空白字符的字符。\n\t"git.branchWhitespaceChar": "-",\n\n\t// 控制在运行“推送到...”功能时列出的分支类型。\n\t//  - all: 显示全部参考文献。\n\t//  - local: 只显示本地分支。\n\t//  - tags: 仅显示标记。\n\t//  - remote: 仅显示远程分支。\n\t"git.checkoutType": "all",\n\n\t// 在创建空提交时始终进行确认。\n\t"git.confirmEmptyCommits": true,\n\n\t// 控制在强制推送前是否进行确认。\n\t"git.confirmForcePush": true,\n\n\t// 同步 Git 存储库前请先进行确认。\n\t"git.confirmSync": true,\n\n\t// 控制 Git 徽章计数器。\n\t//  - all: 对所有更改计数。\n\t//  - tracked: 仅对跟踪的更改计数。\n\t//  - off: 关闭计数器。\n\t"git.countBadge": "all",\n\n\t// 控制 Git 是否在资源管理器和“打开的编辑器”视图中添加颜色和小标。\n\t"git.decorations.enabled": true,\n\n\t// 克隆 Git 存储库的默认位置。\n\t"git.defaultCloneDirectory": null,\n\n\t// 控制是否自动检测 Git 子模块。\n\t"git.detectSubmodules": true,\n\n\t// 控制可检测到的 Git 子模块的限制。\n\t"git.detectSubmodulesLimit": 10,\n\n\t// 启用使用 GPG 签名的提交\n\t"git.enableCommitSigning": false,\n\n\t// 是否启用 Git。\n\t"git.enabled": true,\n\n\t// 在没有暂存的更改时提交所有更改。\n\t"git.enableSmartCommit": false,\n\n\t// 在拉取时是抓取所有分支还是仅当前分支。\n\t"git.fetchOnPull": false,\n\n\t// 要忽略的 Git 存储库列表。\n\t"git.ignoredRepositories": [],\n\n\t// 忽略“旧版 Git”警告。\n\t"git.ignoreLegacyWarning": false,\n\n\t// 忽略“存储库中存在大量更改”的警告。\n\t"git.ignoreLimitWarning": false,\n\n\t// 忽略“缺失 Git”的警告。\n\t"git.ignoreMissingGitWarning": false,\n\n\t// 控制何时显示提交消息输入验证。\n\t"git.inputValidation": "warn",\n\n\t// 控制显示提交消息长度警告的长度阈值。\n\t"git.inputValidationLength": 72,\n\n\t// 控制显示警告的提交消息主题长度阈值。请取消设置它以继承 "config.inputValidationLength" 的值。\n\t"git.inputValidationSubjectLength": 50,\n\n\t// 控制单击更改时是否应打开差异编辑器。否则将打开常规编辑器。\n\t"git.openDiffOnClick": true,\n\n\t// Git 可执行文件的路径和文件名。例如: `C:\\Program Files\\Git\\bin\\git.exe` (Windows)。\n\t"git.path": null,\n\n\t// 成功提交后运行 git 命令。\n\t//  - none: 提交后不要运行任何命令。\n\t//  - push: 成功提交后运行\'Git Push\'。\n\t//  - sync: 成功提交后运行\'Git Sync\'。\n\t"git.postCommitCommand": "none",\n\n\t// 控制 Git 是否在提交之前检查未保存的文件。\n\t"git.promptToSaveFilesBeforeCommit": true,\n\n\t// 在运行“同步”命令时，强制 Git 使用“变基”。\n\t"git.rebaseWhenSync": false,\n\n\t// 在其中搜索 Git 存储库的路径的列表。\n\t"git.scanRepositories": [],\n\n\t// 控制是否在 Git 更改视图中显示内联“打开文件”操作。\n\t"git.showInlineOpenFileAction": true,\n\n\t// 控制 Git 操作是否显示进度提示。\n\t"git.showProgress": true,\n\n\t// 控制在推送成功时是否显示通知。\n\t"git.showPushSuccessNotification": false,\n\n\t// 控制是否使用更安全的 force-with-lease 进行强制推送。\n\t"git.useForcePushWithLease": true,\n\n\t// Include parentheses around a sole arrow function parameter\n\t"prettier.arrowParens": "avoid",\n\n\t// Controls the printing of spaces inside object literals\n\t"prettier.bracketSpacing": true,\n\n\t// A list of languages IDs to disable this extension on\n\t"prettier.disableLanguages": [\n\t\t"vue"\n\t],\n\n\t// Specify the end of line used by prettier\n\t"prettier.endOfLine": "auto",\n\n\t// Use \'prettier-eslint\' instead of \'prettier\'. Other settings will only be fallbacks in case they could not be inferred from eslint rules.\n\t"prettier.eslintIntegration": false,\n\n\t// Specify the global whitespace sensitivity for HTML files.\n\t//  Valid options: \n\t// \'css\' - Respect the default value of CSS display property. \n\t// \'strict\' - Whitespaces are considered sensitive. \n\t// \'ignore\' - Whitespaces are considered insensitive.\n\t"prettier.htmlWhitespaceSensitivity": "css",\n\n\t// Path to a .prettierignore or similar file\n\t"prettier.ignorePath": ".prettierignore",\n\n\t// If true, puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line\n\t"prettier.jsxBracketSameLine": false,\n\n\t// Use single quotes instead of double quotes in JSX\n\t"prettier.jsxSingleQuote": false,\n\n\t// Override the parser. You shouldn\'t have to change this setting.\n\t"prettier.parser": "babylon",\n\n\t// Fit code within this line limit\n\t"prettier.printWidth": 80,\n\n\t// (Markdown) wrap prose over multiple lines\n\t"prettier.proseWrap": "preserve",\n\n\t// Change when properties in objects are quoted\n\t"prettier.quoteProps": "as-needed",\n\n\t// Require a \'prettierconfig\' to format\n\t"prettier.requireConfig": false,\n\n\t// Whether to add a semicolon at the end of every line\n\t"prettier.semi": true,\n\n\t// If true, will use single instead of double quotes\n\t"prettier.singleQuote": false,\n\n\t// Use \'prettier-stylelint\' instead of \'prettier\'. Other settings will only be fallbacks in case they could not be inferred from stylelint rules.\n\t"prettier.stylelintIntegration": false,\n\n\t// Number of spaces it should use per tab\n\t"prettier.tabWidth": 2,\n\n\t// Controls the printing of trailing commas wherever possible.\n\t//  Valid options:\n\t//     \'none\' - No trailing commas\n\t//     \'es5\' - Trailing commas where valid in ES5 (objects, arrays, etc)\n\t//     \'all\' - Trailing commas wherever possible (function arguments)\n\t"prettier.trailingComma": "none",\n\n\t// Use \'prettier-tslint\' instead of \'prettier\'. Other settings will only be fallbacks in case they could not be inferred from tslint rules.\n\t"prettier.tslintIntegration": false,\n\n\t// Indent lines with tabs\n\t"prettier.useTabs": false,\n\n\t// 不应展开 Emmet 缩写的语言数组。\n\t"emmet.excludeLanguages": [\n\t\t"markdown"\n\t],\n\n\t// 指向包含 Emmet 配置文件与代码片段的文件夹路径。\n\t"emmet.extensionsPath": null,\n\n\t// 在默认不支持 Emmet 的语言中启用 Emmet 缩写功能。在此添加该语言与受支持的语言间的映射。\n\t// 示例: `{"vue-html": "html", "javascript": "javascriptreact"}`\n\t"emmet.includeLanguages": {},\n\n\t// 当设置为 `false` 时，将分析整个文件并确定当前位置能否展开 Emmet 缩写。当设置为 `true` 时，将仅在 CSS/SCSS/LESS 文件中分析当前位置周围的内容。\n\t"emmet.optimizeStylesheetParsing": true,\n\n\t// 用于修改 Emmet 某些操作和解析程序的行为的首选项。\n\t"emmet.preferences": {},\n\n\t// 将可能的 Emmet 缩写作为建议进行显示。当在样式表中或 emmet.showExpandedAbbreviation 设置为 `"never"` 时不适用。\n\t"emmet.showAbbreviationSuggestions": true,\n\n\t// 将展开的 Emmet 缩写作为建议进行显示。\n\t// 若选择 `"inMarkupAndStylesheetFilesOnly"`，将在 html、haml、jade、slim、xml、xsl、css、scss、sass、less 和 stylus 文件中生效。\n\t// 若选择 `"always"`，将在所有适用文件 (不仅仅是标记或 CSS 文件) 的所有部分生效。\n\t"emmet.showExpandedAbbreviation": "always",\n\n\t// 若为 `true`，Emmet 建议将显示为代码片段。可以在 `editor.snippetSuggestions` 设置中排列其顺序。\n\t"emmet.showSuggestionsAsSnippets": false,\n\n\t// 为指定的语法定义配置文件或使用带有特定规则的配置文件。\n\t"emmet.syntaxProfiles": {},\n\n\t// 启用后，按下 TAB 键，将展开 Emmet 缩写。\n\t"emmet.triggerExpansionOnTab": false,\n\n\t// 用于 Emmet 代码片段的变量\n\t"emmet.variables": {},\n\n\t// Set the languages that the extension will be activated.  e.g. ["html","xml","php"]. Use ["*"] to activate for all languages.\n\t"auto-close-tag.activationOnLanguage": [\n\t\t"xml",\n\t\t"php",\n\t\t"blade",\n\t\t"ejs",\n\t\t"jinja",\n\t\t"javascript",\n\t\t"javascriptreact",\n\t\t"typescript",\n\t\t"typescriptreact",\n\t\t"plaintext",\n\t\t"markdown",\n\t\t"vue",\n\t\t"liquid",\n\t\t"erb",\n\t\t"lang-cfml",\n\t\t"cfml",\n\t\t"HTML (Eex)"\n\t],\n\n\t// Whether to close self-closing tag automatically\n\t"auto-close-tag.enableAutoCloseSelfClosingTag": true,\n\n\t// Whether to insert close tag automatically\n\t"auto-close-tag.enableAutoCloseTag": true,\n\n\t// Set the tag list that would not be auto closed.\n\t"auto-close-tag.excludedTags": [\n\t\t"area",\n\t\t"base",\n\t\t"br",\n\t\t"col",\n\t\t"command",\n\t\t"embed",\n\t\t"hr",\n\t\t"img",\n\t\t"input",\n\t\t"keygen",\n\t\t"link",\n\t\t"meta",\n\t\t"param",\n\t\t"source",\n\t\t"track",\n\t\t"wbr"\n\t],\n\n\t// Enable both Visual Studio and Sublime Text mode\n\t"auto-close-tag.fullMode": false,\n\n\t// Auto close tag when </ is typed, same as Sublime Text 3\n\t"auto-close-tag.SublimeText3Mode": false,\n\n\t// 是否在解决合并冲突后自动转到下一个合并冲突。\n\t"merge-conflict.autoNavigateNextConflict.enabled": false,\n\n\t// 为编辑器中的合并冲突区域创建 CodeLens。\n\t"merge-conflict.codeLens.enabled": true,\n\n\t// 为编辑器中的合并冲突区域创建提示小标。\n\t"merge-conflict.decorators.enabled": true,\n\n\t// Set the languages that the extension will be activated.  e.g. ["html","xml","php"] By default, it is ["*"] and will be activated for all languages.\n\t"auto-rename-tag.activationOnLanguage": [\n\t\t"*"\n\t],\n\n\t// 控制是否自动检测 npm 脚本。\n\t"npm.autoDetect": "on",\n\n\t// 在资源管理器中启用“npm 脚本”视图。\n\t"npm.enableScriptExplorer": false,\n\n\t// 配置应从自动脚本检测中排除的文件夹的 glob 模式。\n\t"npm.exclude": "",\n\n\t// 从 https://registry.npmjs/org 和 https://registry.bower.io 获取数据，并在 npm 依赖中提供自动完成和悬停信息功能。\n\t"npm.fetchOnlinePackageInfo": true,\n\n\t// 用于运行脚本的程序包管理器。\n\t"npm.packageManager": "npm",\n\n\t// 使用 `--silent` 选项运行 npm 命令。\n\t"npm.runSilent": false,\n\n\t// 在脚本资源管理器中点击时进行的默认操作: `open` (打开) 或 `run` (运行)。默认值为 `open`。\n\t"npm.scriptExplorerAction": "open",\n\n\t// Whether to clear previous output before each run.\n\t"code-runner.clearPreviousOutput": false,\n\n\t// Set the custom command to run.\n\t"code-runner.customCommand": "echo Hello",\n\n\t// Set the working directory.\n\t"code-runner.cwd": "",\n\n\t// Set the default language to run.\n\t"code-runner.defaultLanguage": "",\n\n\t// Whether to enable AppInsights to track user telemetry data.\n\t"code-runner.enableAppInsights": true,\n\n\t// Set the executor of each language.\n\t"code-runner.executorMap": {\n\t\t"javascript": "node",\n\t\t"java": "cd $dir && javac $fileName && java $fileNameWithoutExt",\n\t\t"c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",\n\t\t"cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",\n\t\t"objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",\n\t\t"php": "php",\n\t\t"python": "python -u",\n\t\t"perl": "perl",\n\t\t"perl6": "perl6",\n\t\t"ruby": "ruby",\n\t\t"go": "go run",\n\t\t"lua": "lua",\n\t\t"groovy": "groovy",\n\t\t"powershell": "powershell -ExecutionPolicy ByPass -File",\n\t\t"bat": "cmd /c",\n\t\t"shellscript": "bash",\n\t\t"fsharp": "fsi",\n\t\t"csharp": "scriptcs",\n\t\t"vbscript": "cscript //Nologo",\n\t\t"typescript": "ts-node",\n\t\t"coffeescript": "coffee",\n\t\t"scala": "scala",\n\t\t"swift": "swift",\n\t\t"julia": "julia",\n\t\t"crystal": "crystal",\n\t\t"ocaml": "ocaml",\n\t\t"r": "Rscript",\n\t\t"applescript": "osascript",\n\t\t"clojure": "lein exec",\n\t\t"haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",\n\t\t"rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",\n\t\t"racket": "racket",\n\t\t"ahk": "autohotkey",\n\t\t"autoit": "autoit3",\n\t\t"dart": "dart",\n\t\t"pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",\n\t\t"d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",\n\t\t"haskell": "runhaskell",\n\t\t"nim": "nim compile --verbosity:0 --hints:off --run",\n\t\t"lisp": "sbcl --script",\n\t\t"kit": "kitc --run"\n\t},\n\n\t// Set the executor of each file extension.\n\t"code-runner.executorMapByFileExtension": {\n\t\t".vb": "cd $dir && vbc /nologo $fileName && $dir$fileNameWithoutExt",\n\t\t".vbs": "cscript //Nologo",\n\t\t".scala": "scala",\n\t\t".jl": "julia",\n\t\t".cr": "crystal",\n\t\t".ml": "ocaml",\n\t\t".exs": "elixir",\n\t\t".hx": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",\n\t\t".rkt": "racket",\n\t\t".ahk": "autohotkey",\n\t\t".au3": "autoit3",\n\t\t".kt": "cd $dir && kotlinc $fileName -include-runtime -d $fileNameWithoutExt.jar && java -jar $fileNameWithoutExt.jar",\n\t\t".kts": "kotlinc -script",\n\t\t".dart": "dart",\n\t\t".pas": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",\n\t\t".pp": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",\n\t\t".d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",\n\t\t".hs": "runhaskell",\n\t\t".nim": "nim compile --verbosity:0 --hints:off --run",\n\t\t".csproj": "dotnet run --project",\n\t\t".fsproj": "dotnet run --project",\n\t\t".lisp": "sbcl --script",\n\t\t".kit": "kitc --run"\n\t},\n\n\t// Set the executor by glob.\n\t"code-runner.executorMapByGlob": {\n\t\t"pom.xml": "cd $dir && mvn clean package"\n\t},\n\n\t// Whether to use the directory of the file to be executed as the working directory.\n\t"code-runner.fileDirectoryAsCwd": false,\n\n\t// Whether to ignore selection to always run entire file.\n\t"code-runner.ignoreSelection": false,\n\n\t// Set the mapping of languageId to file extension.\n\t"code-runner.languageIdToFileExtensionMap": {\n\t\t"bat": ".bat",\n\t\t"powershell": ".ps1",\n\t\t"typescript": ".ts"\n\t},\n\n\t// Whether to preserve focus on code editor after code run is triggered.\n\t"code-runner.preserveFocus": true,\n\n\t// Whether to respect Shebang to run code.\n\t"code-runner.respectShebang": true,\n\n\t// Whether to run code in Integrated Terminal.\n\t"code-runner.runInTerminal": false,\n\n\t// Whether to save all files before running.\n\t"code-runner.saveAllFilesBeforeRun": false,\n\n\t// Whether to save the current file before running.\n\t"code-runner.saveFileBeforeRun": false,\n\n\t// Whether to show extra execution message like [Running] ... and [Done] ...\n\t"code-runner.showExecutionMessage": true,\n\n\t// Whether to show \'Run Code\' command in editor context menu.\n\t"code-runner.showRunCommandInEditorContextMenu": true,\n\n\t// Whether to show \'Run Code\' command in explorer context menu.\n\t"code-runner.showRunCommandInExplorerContextMenu": true,\n\n\t// Whether to show \'Run Code\' icon in editor title menu.\n\t"code-runner.showRunIconInEditorTitleMenu": true,\n\n\t// Temporary file name used in running selected code snippet. When it is set as empty, the file name will be random.\n\t"code-runner.temporaryFileName": "tempCodeRunnerFile",\n\n\t// For Windows system, replaces the Windows style drive letter in the command with a Unix style root when using a custom shell as the terminal, like Bash or Cgywin. Example: Setting this to \'/mnt/\' will replace \'C:\\path\' with \'/mnt/c/path\'\n\t"code-runner.terminalRoot": "",\n\n\t// Include completion for module export and auto import them\n\t"vetur.completion.autoImport": true,\n\n\t// Casing conversion for tag completion\n\t//  - initial: use the key in `components: {...}` as is for tag completion and do not force any casing\n\t//  - kebab: kebab-case completion for <my-tag>\n\t"vetur.completion.tagCasing": "kebab",\n\n\t// Enable/disable Vetur\'s built-in scaffolding snippets\n\t"vetur.completion.useScaffoldSnippets": true,\n\n\t// Log level for VLS\n\t//  - INFO: Only log info messages. This is the default.\n\t//  - DEBUG: Log info and debug messages.\n\t"vetur.dev.logLevel": "INFO",\n\n\t// Path to VLS for Vetur developers. There are two ways of using it. \n\t// \n\t// 1. Clone vuejs/vetur from GitHub, build it and point it to the ABSOLUTE path of `/server`.\n\t// 2. `yarn global add vue-language-server` and point Vetur to the installed location (`yarn global dir` + node_modules/vue-language-server)\n\t"vetur.dev.vlsPath": "",\n\n\t// The port that VLS listens to. Can be used for attaching to the VLS Node process for debugging / profiling.\n\t"vetur.dev.vlsPort": -1,\n\n\t// Enable template interpolation service that offers diagnostics / hover / definition / references.\n\t"vetur.experimental.templateInterpolationService": false,\n\n\t// Default formatter for <style> region\n\t//  - none: disable formatting\n\t//  - prettier: css formatter using css parser from prettier\n\t"vetur.format.defaultFormatter.css": "prettier",\n\n\t// Default formatter for <template> region\n\t//  - none: disable formatting\n\t//  - prettyhtml: prettyhtml\n\t//  - js-beautify-html: html formatter of js-beautify\n\t//  - prettier: prettier\n\t"vetur.format.defaultFormatter.html": "prettyhtml",\n\n\t// Default formatter for <script> region\n\t//  - none: disable formatting\n\t//  - prettier: js formatter from prettier\n\t//  - prettier-eslint: prettier-eslint\n\t//  - vscode-typescript: js formatter from TypeScript\n\t"vetur.format.defaultFormatter.js": "prettier",\n\n\t// Default formatter for <style lang=\'less\'> region\n\t//  - none: disable formatting\n\t//  - prettier: less formatter using postcss parser from prettier\n\t"vetur.format.defaultFormatter.less": "prettier",\n\n\t// Default formatter for <style lang=\'postcss\'> region\n\t//  - none: disable formatting\n\t//  - prettier: postcss formatter using css parser from prettier\n\t"vetur.format.defaultFormatter.postcss": "prettier",\n\n\t// Default formatter for <style lang=\'scss\'> region\n\t//  - none: disable formatting\n\t//  - prettier: scss formatter using scss parser from prettier\n\t"vetur.format.defaultFormatter.scss": "prettier",\n\n\t// Default formatter for <style lang=\'stylus\'> region\n\t//  - none: disable formatting\n\t//  - stylus-supremacy: stylus formatter from stylus-supremacy\n\t"vetur.format.defaultFormatter.stylus": "stylus-supremacy",\n\n\t// Default formatter for <script> region\n\t//  - none: disable formatting\n\t//  - prettier: ts formatter using typescript parser from prettier\n\t//  - vscode-typescript: ts formatter from TypeScript\n\t"vetur.format.defaultFormatter.ts": "prettier",\n\n\t// Options for all default formatters\n\t"vetur.format.defaultFormatterOptions": {\n\t\t"js-beautify-html": {\n\t\t\t"wrap_attributes": "force-expand-multiline"\n\t\t},\n\t\t"prettyhtml": {\n\t\t\t"printWidth": 100,\n\t\t\t"singleQuote": false,\n\t\t\t"wrapAttributes": false,\n\t\t\t"sortAttributes": false\n\t\t}\n\t},\n\n\t// Enable/disable the Vetur document formatter.\n\t"vetur.format.enable": true,\n\n\t// Number of spaces per indentation level. Inherited by all formatters.\n\t"vetur.format.options.tabSize": 2,\n\n\t// Use tabs for indentation. Inherited by all formatters.\n\t"vetur.format.options.useTabs": false,\n\n\t// Whether to have initial indent for <script> region\n\t"vetur.format.scriptInitialIndent": false,\n\n\t// Whether to have initial indent for <style> region\n\t"vetur.format.styleInitialIndent": false,\n\n\t// Mapping from custom block tag name to language name. Used for generating grammar to support syntax highlighting for custom blocks.\n\t"vetur.grammar.customBlocks": {\n\t\t"docs": "md",\n\t\t"i18n": "json"\n\t},\n\n\t// Traces the communication between VS Code and Vue Language Server.\n\t"vetur.trace.server": "off",\n\n\t// Use dependencies from workspace. Currently only for TypeScript.\n\t"vetur.useWorkspaceDependencies": false,\n\n\t// Validate js/ts in <script>\n\t"vetur.validation.script": true,\n\n\t// Validate css/scss/less/postcss in <style>\n\t"vetur.validation.style": true,\n\n\t// Validate vue-html in <template> using eslint-plugin-vue\n\t"vetur.validation.template": true,\n\n\t// CSS for the active scope. Use {color} to match the bracket color. The string types listed at https://code.visualstudio.com/docs/extensionAPI/vscode-api#DecorationRenderOptions can be used\n\t"bracketPairColorizer.activeScopeCSS": [\n\t\t"borderStyle : solid",\n\t\t"borderWidth : 1px",\n\t\t"borderColor : {color}; opacity: 0.5"\n\t],\n\n\t// Should different brackets share a color group (Consecutive), or use their own color group (Independent)\n\t"bracketPairColorizer.colorMode": "Consecutive",\n\n\t// Define paired characters and their shared color group\n\t"bracketPairColorizer.consecutivePairColors": [\n\t\t"()",\n\t\t"[]",\n\t\t"{}",\n\t\t[\n\t\t\t"Gold",\n\t\t\t"Orchid",\n\t\t\t"LightSkyBlue"\n\t\t],\n\t\t"Red"\n\t],\n\n\t// Don\'t colorize files of these languages\n\t"bracketPairColorizer.excludedLanguages": [],\n\n\t// Should opening brackets iterate the color cycle even if they are not nested\n\t"bracketPairColorizer.forceIterationColorCycle": false,\n\n\t// Ensure that an opening brackets color does not match a previous brackets color\n\t"bracketPairColorizer.forceUniqueOpeningColor": false,\n\n\t// Should the active scope brackets always be highlighted? Recommended to disable editor.matchBrackets if using this feature.\n\t"bracketPairColorizer.highlightActiveScope": false,\n\n\t// Define paired characters and their color groups\n\t"bracketPairColorizer.independentPairColors": [\n\t\t[\n\t\t\t"()",\n\t\t\t[\n\t\t\t\t"Gold",\n\t\t\t\t"Orchid",\n\t\t\t\t"LightSkyBlue"\n\t\t\t],\n\t\t\t"Red"\n\t\t],\n\t\t[\n\t\t\t"[]",\n\t\t\t[\n\t\t\t\t"Gold",\n\t\t\t\t"Orchid",\n\t\t\t\t"LightSkyBlue"\n\t\t\t],\n\t\t\t"Red"\n\t\t],\n\t\t[\n\t\t\t"{}",\n\t\t\t[\n\t\t\t\t"Gold",\n\t\t\t\t"Orchid",\n\t\t\t\t"LightSkyBlue"\n\t\t\t],\n\t\t\t"Red"\n\t\t]\n\t],\n\n\t// Show active bracket scope in ruler?\n\t"bracketPairColorizer.rulerPosition": "Center",\n\n\t// CSS for the scope line. Use {color} to match the bracket color. The string types listed at https://code.visualstudio.com/docs/extensionAPI/vscode-api#DecorationRenderOptions can be used\n\t"bracketPairColorizer.scopeLineCSS": [\n\t\t"borderStyle : solid",\n\t\t"borderWidth : 1px",\n\t\t"borderColor : {color}; opacity: 0.5"\n\t],\n\n\t// True: Scope Line will start from the ending bracket position. False: Scope Line will always be at column 0\n\t"bracketPairColorizer.scopeLineRelativePosition": true,\n\n\t// Show active bracket scope in gutter?\n\t"bracketPairColorizer.showBracketsInGutter": false,\n\n\t// Show active bracket scope in ruler?\n\t"bracketPairColorizer.showBracketsInRuler": false,\n\n\t// Show a horizontal line to create a block around the active bracket scope?\n\t"bracketPairColorizer.showHorizontalScopeLine": true,\n\n\t// Show a vertical line on the left side of the editor representing the active bracket scope?\n\t"bracketPairColorizer.showVerticalScopeLine": true,\n\n\t// How long the user should idle for, before the document is colorized. Set to 0 to disable\n\t"bracketPairColorizer.timeOut": 200,\n\n\t// 控制是否自动检测 Jake 任务。默认开启。\n\t"jake.autoDetect": "on",\n\n\t// Qiniu AccessKey\n\t"markdown-preview-enhanced.AccessKey": "",\n\n\t// Automatically show preview of markdown being edited.\n\t"markdown-preview-enhanced.automaticallyShowPreviewOfMarkdownBeingEdited": true,\n\n\t// In Markdown, a single newline character doesn\'t cause a line break in the generated HTML. In GitHub Flavored Markdown, that is not true. Enable this config option to insert line breaks in rendered HTML for single newlines in Markdown source.\n\t"markdown-preview-enhanced.breakOnSingleNewLine": true,\n\n\t// Qiniu Bucket\n\t"markdown-preview-enhanced.Bucket": "",\n\n\t// Code block theme. If `auto.css` is chosen, then the code block theme that best matches the current preview theme will be picked.\n\t"markdown-preview-enhanced.codeBlockTheme": "auto.css",\n\n\t// Qiniu Domain\n\t"markdown-preview-enhanced.Domain": "http://",\n\n\t// Enable CriticMarkup syntax. Only works with markdown-it parser. Please check http://criticmarkup.com/users-guide.php for more information.\n\t"markdown-preview-enhanced.enableCriticMarkupSyntax": false,\n\n\t// Enable emoji & font-awesome plugin. This only works for markdown-it parser, but not pandoc parser.\n\t"markdown-preview-enhanced.enableEmojiSyntax": true,\n\n\t// Enable extended table syntax to support merging table cells.\n\t"markdown-preview-enhanced.enableExtendedTableSyntax": false,\n\n\t// Enable or disable conversion of URL-like text to links in the markdown preview.\n\t"markdown-preview-enhanced.enableLinkify": true,\n\n\t// Enables executing code chunks and importing javascript files.\n\t// ⚠️ Please use this feature with caution because it may put your security at risk! Your machine can get hacked if someone makes you open a markdown with malicious code while script execution is enabled.\n\t"markdown-preview-enhanced.enableScriptExecution": false,\n\n\t// Enable smartypants and other sweet transforms.\n\t"markdown-preview-enhanced.enableTypographer": false,\n\n\t// Enable Wiki Link syntax support. More information can be found at https://help.github.com/articles/adding-links-to-wikis/\n\t"markdown-preview-enhanced.enableWikiLinkSyntax": true,\n\n\t// Front matter rendering option\n\t"markdown-preview-enhanced.frontMatterRenderingOption": "none",\n\n\t// When using Image Helper to copy images, by default images will be copied to root image folder path \'/assets\'\n\t"markdown-preview-enhanced.imageFolderPath": "/assets",\n\n\t// You can choose different image uploader to upload image\n\t"markdown-preview-enhanced.imageUploader": "imgur",\n\n\t// Default latex engine for Pandoc export and latex code chunk.\n\t"markdown-preview-enhanced.latexEngine": "pdflatex",\n\n\t// Re-render the preview as the contents of the source changes, without requiring the source buffer to be saved. If disabled, the preview is re-rendered only when the buffer is saved to disk.\n\t"markdown-preview-enhanced.liveUpdate": true,\n\n\t// Use customized Math expression block delimiters.\n\t"markdown-preview-enhanced.mathBlockDelimiters": [\n\t\t[\n\t\t\t"$$",\n\t\t\t"$$"\n\t\t],\n\t\t[\n\t\t\t"\\\\[",\n\t\t\t"\\\\]"\n\t\t]\n\t],\n\n\t// Use customized Math expression inline delimiters.\n\t"markdown-preview-enhanced.mathInlineDelimiters": [\n\t\t[\n\t\t\t"$",\n\t\t\t"$"\n\t\t],\n\t\t[\n\t\t\t"\\\\(",\n\t\t\t"\\\\)"\n\t\t]\n\t],\n\n\t// Choose the Math expression rendering method option for GFM markdown export (Save as Markdown).\n\t"markdown-preview-enhanced.mathRenderingOnlineService": "https://latex.codecogs.com/gif.latex",\n\n\t// Choose the Math expression rendering method here. You can also disable math rendering if you want by choosing \'None\'.\n\t"markdown-preview-enhanced.mathRenderingOption": "KaTeX",\n\n\t// Mermaid theme, you can choose one from ["mermaid.css", "mermaid.dark.css", "mermaid.forest.css"]\n\t"markdown-preview-enhanced.mermaidTheme": "mermaid.css",\n\n\t// Comma separated pandoc arguments e.g. `--smart, --filter=/bin/exe`. Please use long argument names.\n\t"markdown-preview-enhanced.pandocArguments": "",\n\n\t// The pandoc markdown flavor you want\n\t"markdown-preview-enhanced.pandocMarkdownFlavor": "markdown-raw_tex+tex_math_single_backslash",\n\n\t// Pandoc executable path\n\t"markdown-preview-enhanced.pandocPath": "pandoc",\n\n\t// PhantomJS executable path\n\t"markdown-preview-enhanced.phantomPath": "phantomjs",\n\n\t// Preview Theme\n\t"markdown-preview-enhanced.previewTheme": "github-light.css",\n\n\t// Whether to print background for file export or not. If set to `false`, then `github-light` preview theme will be used. You can also set `print_background` in front-matter for individual files.\n\t"markdown-preview-enhanced.printBackground": false,\n\n\t// Accepted protocols for links.\n\t"markdown-preview-enhanced.protocolsWhiteList": "http://, https://, atom://, file://, mailto:, tel:",\n\n\t// RevealJS Presentation Theme\n\t"markdown-preview-enhanced.revealjsTheme": "white.css",\n\n\t// Automatic scroll sync. This is now partially supported.\n\t"markdown-preview-enhanced.scrollSync": true,\n\n\t// Qiniu SecretKey\n\t"markdown-preview-enhanced.SecretKey": "",\n\n\t// Open Only One Preview.\n\t"markdown-preview-enhanced.singlePreview": true,\n\n\t// Enable this option will render markdown by pandoc instead of markdown-it.\n\t"markdown-preview-enhanced.usePandocParser": false,\n\n\t// By default, the extension for wikilink is `.md`. For example: [[test]] will direct to file path `test.md`.\n\t"markdown-preview-enhanced.wikiLinkFileExtension": ".md",\n\n\t// 在创建时询问 gist 的名称. 能够帮助你识别多个 gist.\n\t"sync.askGistName": false,\n\n\t// 设置为 true 在编辑器打开时自动下载远程配置. [需要重启]\n\t"sync.autoDownload": false,\n\n\t// 设置为 true 在编辑器打开时自动上传本地配置. [需要重启]\n\t"sync.autoUpload": false,\n\n\t// 设置为 true 将会下载远程配置, 即便本地已有更新的配置.\n\t"sync.forceDownload": false,\n\n\t// 设置同步使用的 GitHub GIST ID\n\t"sync.gist": "",\n\n\t// 如果设置为 true, 开启静默模式. 上传和下载的概要信息显示在状态栏而非输出面板\n\t"sync.quietSync": false,\n\n\t// 设置为 false 如果你不想在下载时移除扩展.\n\t"sync.removeExtensions": true,\n\n\t// 设置为 false 如果你不想上传/下载扩展.\n\t"sync.syncExtensions": true,\n\n\t// Note: If it is not Null, It will override CustomBrowser and ChromeDebuggingAttachment settings.\n\t// \n\t//  Examples : \n\t// chrome --incognito --headless --remote-debugging-port=9222 \n\t//  C:\\\\Program Files\\\\Firefox Developer Edition\\\\firefox.exe --private-window\n\t"liveServer.settings.AdvanceCustomBrowserCmdLine": null,\n\n\t// Enable Chrome Debugging Attachment to Live Server at Debuging Port 9222.\n\t//  NOTE: You have to install \'Debugger for Chrome\' \n\t// If the value is true, Select \'Attach to Chrome\' from Debug Window to start debugging. \n\t// \n\t//  CAUTION: If it is true, \'Launch Chrome against localhost\' may not work.\n\t"liveServer.settings.ChromeDebuggingAttachment": false,\n\n\t// Specify custom browser settings for Live Server. \n\t// By Default it will open your default favorite browser.\n\t"liveServer.settings.CustomBrowser": null,\n\n\t// To disable information pop up messages.\n\t"liveServer.settings.donotShowInfoMsg": false,\n\n\t// To turn off prompt warning message if body or head or other supporting tag is missing in your HTML.\n\t"liveServer.settings.donotVerifyTags": false,\n\n\t// When set, serve this file (server root relative) for every 404 (useful for single-page applications)\n\t"liveServer.settings.file": "",\n\n\t// By Default Live Server inject CSS changes without full reloading of browser. You can change this behviour by making this setting as `true`\n\t"liveServer.settings.fullReload": false,\n\n\t// To switch between localhost or 127.0.0.1 or anything else. Default is 127.0.0.1\n\t"liveServer.settings.host": "127.0.0.1",\n\n\t// Setup https configuration\n\t"liveServer.settings.https": {\n\t\t"enable": false,\n\t\t"cert": "",\n\t\t"key": "",\n\t\t"passphrase": ""\n\t},\n\n\t// To ignore specific file changes\n\t"liveServer.settings.ignoreFiles": [\n\t\t".vscode/**",\n\t\t"**/*.scss",\n\t\t"**/*.sass",\n\t\t"**/*.ts"\n\t],\n\n\t// Mount a directory to a route. Such as [[\'/components\', \'./node_modules\']]\n\t"liveServer.settings.mount": [],\n\n\t// This the entry point of server when you\'re in multiroot workspace\n\t"liveServer.settings.multiRootWorkspaceName": null,\n\n\t// If it is true live server will start without browser opened.\n\t"liveServer.settings.NoBrowser": false,\n\n\t// Set Custom Port Number of Live Server. Set 0 if you want random port.\n\t"liveServer.settings.port": 5500,\n\n\t// To Setup Proxy\n\t"liveServer.settings.proxy": {\n\t\t"enable": false,\n\t\t"baseUri": "/",\n\t\t"proxyUri": "http://127.0.0.1:80"\n\t},\n\n\t// Set Custom root of Live Server. \n\t// To change root the the server to sub folder of workspace, use \'/\' and relative path from workspace. \n\t// Example: /subfolder1/subfolder2\n\t"liveServer.settings.root": "/",\n\n\t// Change this to false if you don\'t want the button to show in the statusbar\n\t"liveServer.settings.showOnStatusbar": true,\n\n\t// Open in Browser Preview inside VS Code, instead of default browser\n\t"liveServer.settings.useBrowserPreview": false,\n\n\t// Use local IP as host\n\t"liveServer.settings.useLocalIp": false,\n\n\t// You have to install a browser extension. That will be works for your dynamic pages (like PHP).\n\t"liveServer.settings.useWebExt": false,\n\n\t// Delay before live reloading. Value in milliseconds. Default is 100\n\t"liveServer.settings.wait": 100,\n\n\t// 选择一个图标包。\n\t//  - angular: Angular的图标。\n\t//  - angular_ngrx: Angular和ngrx的图标。\n\t//  - react: React的图标。\n\t//  - react_redux: React和Redux的图标。\n\t//  - none: 没有启用图标包。\n\t"material-icon-theme.activeIconPack": "angular",\n\n\t// 设置自定义文件图标关联。\n\t"material-icon-theme.files.associations": {},\n\n\t// 设置自定义文件夹图标关联。\n\t"material-icon-theme.folders.associations": {},\n\n\t// 更改文件夹图标的颜色。\n\t"material-icon-theme.folders.color": "#90a4ae",\n\n\t// 设置文件夹图标的类型。\n\t//  - specific: 选择特定文件夹图标。\n\t//  - classic: 选择经典文件夹图标。\n\t//  - none: 没有文件夹图标。\n\t"material-icon-theme.folders.theme": "specific",\n\n\t// 隐藏该文件夹旁边的箭头。\n\t"material-icon-theme.hidesExplorerArrows": false,\n\n\t// 定义自定义语言映射的图标。\n\t"material-icon-theme.languages.associations": {},\n\n\t// 更改图标的透明度。\n\t"material-icon-theme.opacity": 1,\n\n\t// Change the saturation of the icons.\n\t"material-icon-theme.saturation": 1,\n\n\t// 显示重启消息。\n\t"material-icon-theme.showReloadMessage": true,\n\n\t// 更新后显示升级信息。\n\t"material-icon-theme.showUpdateMessage": false,\n\n\t// 首次安装后显示欢迎信息。\n\t"material-icon-theme.showWelcomeMessage": true,\n\n\t// 当 Node.js 从集成终端以调试模式启动时自动附加 Node 调试器\n\t//  - disabled: 自动附加被禁用，且不在状态栏中显示。\n\t//  - on: 自动附加已启用。\n\t//  - off: 自动附加未启用。\n\t"debug.node.autoAttach": "disabled",\n\n\t// 控制是否自动检测 Gulp 任务。默认开启。\n\t"gulp.autoDetect": "on",\n\n\t// Sets an absolute path to the current workspace\n\t"path-intellisense.absolutePathToWorkspace": true,\n\n\t// Automatically adds slash after directory\n\t"path-intellisense.autoSlashAfterDirectory": false,\n\n\t// Adds the file extension to a import statements\n\t"path-intellisense.extensionOnImport": false,\n\n\t// Mappings for paths\n\t"path-intellisense.mappings": {},\n\n\t// Show hidden files\n\t"path-intellisense.showHiddenFiles": false,\n\n\t// Override the kind of an extension. `ui` extensions are installed and run on the local machine while `workspace` extensions are run on the remote. By overriding an extension\'s default kind using this setting, you specify if that extension should be installed and enabled locally or remotely.\n\t"remote.extensionKind": {\n\t\t"pub.name": "ui"\n\t},\n\n\t// Controls whether \'Peek References\' or \'Find References\' is invoked when selecting code lens references\n\t//  - peek: Show references in peek editor.\n\t//  - view: Show references in separate view.\n\t"references.preferredLocation": "peek",\n\n}\n',normalizedContent:'# vscode 所有的默认配置项介绍\n\n使用快捷键 ctrl+shift+p ，然后搜索setting\n\n{\n\t// 控制在差异编辑器中是否把前导空格或尾随空格的改动显示为差异。\n\t"diffeditor.ignoretrimwhitespace": true,\n\n\t// 控制差异编辑器是否为添加/删除的更改显示 +/- 指示符号。\n\t"diffeditor.renderindicators": true,\n\n\t// 控制差异编辑器的显示方式是并排还是内联。\n\t"diffeditor.rendersidebyside": true,\n\n\t// 控制是否应在遇到提交字符时接受建议。例如，在 javascript 中，半角分号 (`;`) 可以为提交字符，能够在接受建议的同时键入该字符。\n\t"editor.acceptsuggestiononcommitcharacter": true,\n\n\t// 控制除了 `tab` 键以外， `enter` 键是否同样可以接受建议。这能减少“插入新行”和“接受建议”命令之间的歧义。\n\t//  - on\n\t//  - smart: 仅当建议包含文本改动时才可使用 `enter` 键进行接受。\n\t//  - off\n\t"editor.acceptsuggestiononenter": "on",\n\n\t// 控制编辑器是否应运行在对屏幕阅读器进行优化的模式。\n\t//  - auto: 编辑器将使用平台 api 以检测是否附加了屏幕阅读器。\n\t//  - on: 编辑器将对屏幕阅读器的使用进行永久优化。\n\t//  - off: 编辑器将不再对屏幕阅读器的使用进行优化。\n\t"editor.accessibilitysupport": "auto",\n\n\t// 控制编辑器是否在左括号后自动插入右括号。\n\t//  - always\n\t//  - languagedefined: 使用语言配置确定何时自动闭合括号。\n\t//  - beforewhitespace: 仅当光标位于空白字符左侧时，才自动闭合括号。\n\t//  - never\n\t"editor.autoclosingbrackets": "languagedefined",\n\n\t// 控制编辑器是否在左引号后自动插入右引号。\n\t//  - always\n\t//  - languagedefined: 使用语言配置确定何时自动闭合引号。\n\t//  - beforewhitespace: 仅当光标位于空白字符左侧时，才自动闭合引号。\n\t//  - never\n\t"editor.autoclosingquotes": "languagedefined",\n\n\t// 控制编辑器是否在用户键入、粘贴或移动行时自动调整缩进。必须安装包含此语言缩进规则的扩展。\n\t"editor.autoindent": true,\n\n\t// 控制编辑器是否应自动包住所选内容。\n\t//  - languagedefined: 使用语言配置确定何时自动包住所选内容。\n\t//  - brackets: 使用括号而非引号来包住所选内容。\n\t//  - quotes: 使用引号而非括号来包住所选内容。\n\t//  - never\n\t"editor.autosurround": "languagedefined",\n\n\t// 在保存时运行的代码操作类型。\n\t"editor.codeactionsonsave": {},\n\n\t// 控制在保存文件时进行的代码操作的超时时间 (毫秒)。\n\t"editor.codeactionsonsavetimeout": 750,\n\n\t// 控制是否在编辑器中显示 codelens。\n\t"editor.codelens": true,\n\n\t// 控制编辑器是否显示内联颜色修饰器和颜色选取器。\n\t"editor.colordecorators": true,\n\n\t// 控制在复制时是否同时复制语法高亮。\n\t"editor.copywithsyntaxhighlighting": true,\n\n\t// 控制光标的动画样式。\n\t"editor.cursorblinking": "blink",\n\n\t// 控制是否启用平滑插入动画。\n\t"editor.cursorsmoothcaretanimation": false,\n\n\t// 控制光标样式。\n\t"editor.cursorstyle": "line",\n\n\t// 当 `editor.cursorstyle` 设置为 `line` 时，控制光标的宽度。\n\t"editor.cursorwidth": 0,\n\n\t// 定义一个默认格式化程序, 该格式化程序优先于所有其他格式化程序设置。必须是提供格式化程序的扩展的标识符。\n\t//  - null: 没有\n\t//  - vscode.configuration-editing: 在配置文件 (如设置、启动和扩展推荐文件) 中提供高级 intellisense、自动修复等功能\n\t//  - vscode.css-language-features: 为 css、less 和 scss 文件提供丰富的语言支持。\n\t//  - vscode.debug-auto-launch: 当 node-debug 扩展未启用时提供自动附加的辅助程序。\n\t//  - vscode.debug-server-ready: 如果正在调试的服务器已准备就绪，在浏览器中打开 uri。\n\t//  - vscode.emmet: 适用于 vs code 的 emmet 支持\n\t//  - vscode.extension-editing: 在创建扩展时提供 linting 功能。\n\t//  - vscode.git: git 源代码管理集成\n\t//  - vscode.grunt: extension to add grunt capabilities to vs code.\n\t//  - vscode.gulp: 向 vscode 提供 gulp 功能的扩展。\n\t//  - vscode.html-language-features: 为 html 和 handlebar 文件提供丰富的语言支持\n\t//  - vscode.jake: 向 vs code 提供 jake 功能的扩展。\n\t//  - vscode.json-language-features: 为 json 文件提供丰富的语言支持\n\t//  - vscode.markdown-language-features: 为 markdown 提供丰富的语言支持。\n\t//  - vscode.merge-conflict: 为内联合并冲突提供高亮和命令。\n\t//  - ms-vscode.node-debug: node.js 调试支持(低于 8.0 版本)\n\t//  - ms-vscode.node-debug2: node.js 调试支持\n\t//  - ms-vscode.references-view: reference search results as separate, stable view in the sidebar\n\t//  - vscode.npm: 为 npm 脚本提供任务支持的扩展。\n\t//  - vscode.php-language-features: 为 php 文件提供丰富的语言支持。\n\t//  - vscode.python: 在 python 文件中提供语法高亮、括号匹配和折叠功能。\n\t//  - vscode.typescript-language-features: 为 javascript 和 typescript 提供丰富的语言支持。\n\t//  - christian-kohler.path-intellisense: visual studio code plugin that autocompletes filenames\n\t//  - coenraads.bracket-pair-colorizer: a customizable extension for colorizing matching brackets\n\t//  - dbaeumer.vscode-eslint: integrates eslint javascript into vs code.\n\t//  - eamodio.gitlens: supercharge the git capabilities built into visual studio code — visualize code authorship at a glance via git blame annotations and code lens, seamlessly navigate and explore git repositories, gain valuable insights via powerful comparison commands, and so much more\n\t//  - equinusocio.vsc-material-theme: the most epic theme now for visual studio code\n\t//  - esbenp.prettier-vscode: vs code plugin for prettier/prettier\n\t//  - formulahendry.auto-close-tag: automatically add html/xml close tag, same as visual studio ide or sublime text\n\t//  - formulahendry.auto-rename-tag: auto rename paired html/xml tag\n\t//  - formulahendry.code-runner: run c, c++, java, js, php, python, perl, ruby, go, lua, groovy, powershell, cmd, bash, f#, c#, vbscript, typescript, coffeescript, scala, swift, julia, crystal, ocaml, r, applescript, elixir, vb.net, clojure, haxe, obj-c, rust, racket, autohotkey, autoit, kotlin, dart, pascal, haskell, nim, d, lisp, kit\n\t//  - octref.vetur: vue tooling for vs code\n\t//  - pkief.material-icon-theme: material design icons for visual studio code\n\t//  - ritwickdey.liveserver: launch a development local server with live reload feature for static & dynamic pages\n\t//  - shan.code-settings-sync: synchronize settings, snippets, themes, file icons, launch, keybindings, workspaces and extensions across multiple machines using github gist.\n\t//  - shd101wyy.markdown-preview-enhanced: markdown preview enhanced ported to vscode\n\t//  - wallabyjs.quokka-vscode: live scratchpad for javascript.\n\t"editor.defaultformatter": null,\n\n\t// 控制是否在打开文件时，基于文件内容自动检测 `editor.tabsize#` 和 `#editor.insertspaces`。\n\t"editor.detectindentation": true,\n\n\t// 控制在编辑器中是否允许通过拖放来移动选中内容。\n\t"editor.draganddrop": true,\n\n\t// 控制在没有选择内容时进行复制是否复制当前行。\n\t"editor.emptyselectionclipboard": true,\n\n\t// 按下 "alt" 时滚动速度加倍。\n\t"editor.fastscrollsensitivity": 5,\n\n\t// 控制 "查找小部件" 是否应在编辑器顶部添加额外的行。如果为 true, 则可以在 "查找小工具" 可见时滚动到第一行之外。\n\t"editor.find.addextraspaceontop": true,\n\n\t// 在执行查找操作时，在编辑器中的选中文本中还是整个文件中进行查找。\n\t"editor.find.autofindinselection": false,\n\n\t// 控制是否将编辑器选中内容作为搜索词填入到查找小组件中。\n\t"editor.find.seedsearchstringfromselection": true,\n\n\t// 控制编辑器是否启用了代码折叠。\n\t"editor.folding": true,\n\n\t// 控制计算折叠范围的策略。`auto` 将使用语言特定的折叠策略 (若可用)。`indentation` 将使用基于缩进的折叠策略。\n\t"editor.foldingstrategy": "auto",\n\n\t// 控制字体系列。\n\t"editor.fontfamily": "consolas, \'courier new\', monospace",\n\n\t// 启用或禁用字体连字。\n\t"editor.fontligatures": false,\n\n\t// 以像素为单位控制字体大小。\n\t"editor.fontsize": 14,\n\n\t// 控制字体粗细。\n\t"editor.fontweight": "normal",\n\n\t// 控制编辑器是否自动格式化粘贴的内容。格式化程序必须可用，并且能针对文档中的某一范围进行格式化。\n\t"editor.formatonpaste": false,\n\n\t// 在保存时格式化文件。格式化程序必须可用，延迟后文件不能保存，并且编辑器不能关闭。\n\t"editor.formatonsave": false,\n\n\t// 控制在保存文件时进行格式化的超时时间 (毫秒)。\n\t"editor.formatonsavetimeout": 750,\n\n\t// 控制编辑器在键入一行后是否自动格式化该行。\n\t"editor.formatontype": false,\n\n\t// 控制编辑器是否应呈现垂直字形边距。字形边距最常用于调试。\n\t"editor.glyphmargin": true,\n\n\t// 当存在多个目标位置时, 控制 "go to" 命令 (如 "go to definition") 的行为。\n\t//  - peek: 显示结果的预览视图 (默认值)\n\t//  - gotoandpeek: 转到主结果并显示预览视图\n\t//  - goto: 转到主要结果并忽略其他结果\n\t"editor.gotolocation.multiple": "peek",\n\n\t// 控制是否在概览标尺中隐藏光标。\n\t"editor.hidecursorinoverviewruler": false,\n\n\t// 控制是否突出显示编辑器中活动的缩进参考线。\n\t"editor.highlightactiveindentguide": true,\n\n\t// 控制显示悬停提示前的等待时间 (毫秒)。\n\t"editor.hover.delay": 300,\n\n\t// 控制是否显示悬停提示。\n\t"editor.hover.enabled": true,\n\n\t// 控制当鼠标移动到悬停提示上时，其是否保持可见。\n\t"editor.hover.sticky": true,\n\n\t// 按 `tab` 键时插入空格。该设置在 `editor.detectindentation` 启用时根据文件内容可能会被覆盖。\n\t"editor.insertspaces": true,\n\n\t// 对大型文件进行特殊处理，禁用某些内存密集型功能。\n\t"editor.largefileoptimizations": true,\n\n\t// 控制以像素为单位的字母间距。\n\t"editor.letterspacing": 0,\n\n\t// 在编辑器中启用代码操作小灯泡提示。\n\t"editor.lightbulb.enabled": true,\n\n\t// 控制行高。为 0 时则通过字体大小自动计算。\n\t"editor.lineheight": 0,\n\n\t// 控制行号的显示。\n\t//  - off: 不显示行号。\n\t//  - on: 将行号显示为绝对行数。\n\t//  - relative: 将行号显示为与光标相隔的行数。\n\t//  - interval: 每 10 行显示一次行号。\n\t"editor.linenumbers": "on",\n\n\t// 控制是否在编辑器中检测链接并使其可被点击。\n\t"editor.links": true,\n\n\t// 当选择其中一项时，将突出显示匹配的括号。\n\t"editor.matchbrackets": true,\n\n\t// 由于性能原因，超过这个长度的行将不会被标记\n\t"editor.maxtokenizationlinelength": 20000,\n\n\t// 控制是否显示缩略图。\n\t"editor.minimap.enabled": true,\n\n\t// 限制缩略图的宽度，控制其最多显示的列数。\n\t"editor.minimap.maxcolumn": 120,\n\n\t// 渲染每行的实际字符，而不是色块。\n\t"editor.minimap.rendercharacters": true,\n\n\t// 控制是否自动隐藏缩略图滑块。\n\t"editor.minimap.showslider": "mouseover",\n\n\t// 控制在哪一侧显示缩略图。\n\t"editor.minimap.side": "right",\n\n\t// 对鼠标滚轮滚动事件的 `deltax` 和 `deltay` 乘上的系数。\n\t"editor.mousewheelscrollsensitivity": 1,\n\n\t// 按住 `ctrl` 键并滚动鼠标滚轮时对编辑器字体大小进行缩放。\n\t"editor.mousewheelzoom": false,\n\n\t// 当多个光标重叠时进行合并。\n\t"editor.multicursormergeoverlapping": true,\n\n\t// 在通过鼠标添加多个光标时使用的修改键。“转到定义”和“打开链接”功能所需的鼠标动作将会相应调整，不与多光标修改键冲突。[阅读详细信息](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier)。\n\t//  - ctrlcmd: 映射为 `ctrl` (windows 和 linux) 或 `command` (macos)。\n\t//  - alt: 映射为 `alt` (windows 和 linux) 或 `option` (macos)。\n\t"editor.multicursormodifier": "alt",\n\n\t// 控制编辑器是否突出显示语义符号的匹配项。\n\t"editor.occurrenceshighlight": true,\n\n\t// 控制是否在概览标尺周围绘制边框。\n\t"editor.overviewrulerborder": true,\n\n\t// 控制概览标尺中同一位置可显示的提示数量。\n\t"editor.overviewrulerlanes": 3,\n\n\t// 控制参数提示菜单在到达列表末尾时进行循环还是关闭。\n\t"editor.parameterhints.cycle": false,\n\n\t// 在输入时显示含有参数文档和类型信息的小面板。\n\t"editor.parameterhints.enabled": true,\n\n\t// 控制是否在键入时自动显示建议。\n\t"editor.quicksuggestions": {\n\t\t"other": true,\n\t\t"comments": false,\n\t\t"strings": false\n\t},\n\n\t// 控制显示快速建议前的等待时间 (毫秒)。\n\t"editor.quicksuggestionsdelay": 10,\n\n\t// 控制编辑器是否显示控制字符。\n\t"editor.rendercontrolcharacters": false,\n\n\t// 当文件以换行符结束时, 呈现最后一行的行号。\n\t"editor.renderfinalnewline": true,\n\n\t// 控制编辑器是否显示缩进参考线。\n\t"editor.renderindentguides": true,\n\n\t// 控制编辑器的当前行进行高亮显示的方式。\n\t//  - none\n\t//  - gutter\n\t//  - line\n\t//  - all: 同时突出显示导航线和当前行。\n\t"editor.renderlinehighlight": "line",\n\n\t// 控制编辑器在空白字符上显示符号的方式。\n\t//  - none\n\t//  - boundary: 除了单个空格，在空白字符上显示符号。\n\t//  - all\n\t"editor.renderwhitespace": "none",\n\n\t// 控制选区是否有圆角。\n\t"editor.roundedselection": true,\n\n\t// 在一定数量的等宽字符后显示垂直标尺。输入多个值，显示多个标尺。若数组为空，则不绘制标尺。\n\t"editor.rulers": [],\n\n\t// 控制编辑器水平滚动时可以超过范围的字符数。\n\t"editor.scrollbeyondlastcolumn": 5,\n\n\t// 控制编辑器是否可以滚动到最后一行之后。\n\t"editor.scrollbeyondlastline": true,\n\n\t// 控制编辑器是否应突出显示与所选内容类似的匹配项。\n\t"editor.selectionhighlight": true,\n\n\t// 控制是否自动隐藏导航线上的折叠控件。\n\t"editor.showfoldingcontrols": "mouseover",\n\n\t// 控制是否淡化未使用的代码。\n\t"editor.showunused": true,\n\n\t// 控制编辑器是否在滚动时使用动画。\n\t"editor.smoothscrolling": false,\n\n\t// 控制代码片段是否与其他建议一起显示及其排列的位置。\n\t//  - top: 在其他建议上方显示代码片段建议。\n\t//  - bottom: 在其他建议下方显示代码片段建议。\n\t//  - inline: 在其他建议中穿插显示代码片段建议。\n\t//  - none: 不显示代码片段建议。\n\t"editor.snippetsuggestions": "inline",\n\n\t// 在速览编辑器中，即使双击其中的内容或者按 `esc` 键，也保持其打开状态。\n\t"editor.stablepeek": false,\n\n\t// 控制是否应从智能感知中筛选某些建议类型。建议类型的列表可以在这里找到: https://code.visualstudio.com/docs/editor/intellisense#_types-of-completions。\n\t"editor.suggest.filteredtypes": {\n\t\t"keyword": true\n\t},\n\n\t// 控制对建议的筛选和排序是否考虑小的拼写错误。\n\t"editor.suggest.filtergraceful": true,\n\n\t// 控制排序时是否提高靠近光标的词语的优先级。\n\t"editor.suggest.localitybonus": false,\n\n\t// 控制在显示滚动条之前智能感知将显示的建议数 (最多 15个)。\n\t"editor.suggest.maxvisiblesuggestions": 12,\n\n\t// 控制是否在多个工作区和窗口间共享记忆的建议选项(需要 `editor.suggestselection`)。\n\t"editor.suggest.sharesuggestselections": false,\n\n\t// 控制是否在建议中显示或隐藏图标。\n\t"editor.suggest.showicons": true,\n\n\t// 控制在活动代码片段内是否禁用快速建议。\n\t"editor.suggest.snippetspreventquicksuggestions": true,\n\n\t// 建议小部件的字号。如果设置为 `0`，则使用 `editor.fontsize` 的值。\n\t"editor.suggestfontsize": 0,\n\n\t// 建议小部件的行高。如果设置为 `0`，则使用 `editor.lineheight` 的值。\n\t"editor.suggestlineheight": 0,\n\n\t// 控制在键入触发字符后是否自动显示建议。\n\t"editor.suggestontriggercharacters": true,\n\n\t// 控制在建议列表中如何预先选择建议。\n\t//  - first: 始终选择第一个建议。\n\t//  - recentlyused: 选择最近的建议，除非进一步键入选择其他项。例如 `console. -> console.log`，因为最近补全过 `log`。\n\t//  - recentlyusedbyprefix: 根据之前补全过的建议的前缀来进行选择。例如，`co -> console`、`con -> const`。\n\t"editor.suggestselection": "recentlyused",\n\n\t// 启用 tab 补全。\n\t//  - on: 在按下 tab 键时进行 tab 补全，将插入最佳匹配建议。\n\t//  - off: 禁用 tab 补全。\n\t//  - onlysnippets: 在前缀匹配时进行 tab 补全。在 "quicksuggestions" 未启用时体验最好。\n\t"editor.tabcompletion": "off",\n\n\t// 一个制表符等于的空格数。在 `editor.detectindentation` 启用时，根据文件内容，该设置可能会被覆盖。\n\t"editor.tabsize": 4,\n\n\t// 覆盖当前所选颜色主题中的编辑器颜色和字体样式。\n\t"editor.tokencolorcustomizations": {},\n\n\t// 删除自动插入的尾随空白符号。\n\t"editor.trimautowhitespace": true,\n\n\t// 根据制表位插入和删除空格。\n\t"editor.usetabstops": true,\n\n\t// 控制是否根据文档中的文字计算自动完成列表。\n\t"editor.wordbasedsuggestions": true,\n\n\t// 执行单词相关的导航或操作时作为单词分隔符的字符。\n\t"editor.wordseparators": "`~!@#$%^&*()-=+[{]}\\\\|;:\'\\",.<>/?",\n\n\t// 控制折行的方式。\n\t//  - off: 永不换行。\n\t//  - on: 将在视区宽度处换行。\n\t//  - wordwrapcolumn: 在 `editor.wordwrapcolumn` 处折行。\n\t//  - bounded: 在视区宽度和 `editor.wordwrapcolumn` 中的较小值处折行。\n\t"editor.wordwrap": "off",\n\n\t// 在 `editor.wordwrap` 为 `wordwrapcolumn`  或 `bounded` 时，控制编辑器的折行列。\n\t"editor.wordwrapcolumn": 80,\n\n\t// 控制折行的缩进。\n\t//  - none: 没有缩进。折行从第 1 列开始。\n\t//  - same: 折行的缩进量与其父级相同。\n\t//  - indent: 折行的缩进量比其父级多 1。\n\t//  - deepindent: 折行的缩进量比其父级多 2。\n\t"editor.wrappingindent": "same",\n\n\t// 控制是否在“源代码管理”视图中始终显示内联操作。\n\t"scm.alwaysshowactions": false,\n\n\t// 控制是否始终显示“源代码管理提供程序”部分。\n\t"scm.alwaysshowproviders": false,\n\n\t// 控制编辑器中差异的显示效果。\n\t"scm.diffdecorations": "all",\n\n\t// 控制水槽中不同装饰的宽度(px)(添加&修改)。\n\t"scm.diffdecorationsgutterwidth": 3,\n\n\t// 控制在 "源代码管理提供程序" 部分中可见的提供程序数。设置为 "0", 以便能够手动调整视图的大小。\n\t"scm.providers.visible": 10,\n\n\t// 控制工作台中活动栏的可见性。\n\t"workbench.activitybar.visible": true,\n\n\t// 覆盖当前所选颜色主题的颜色。\n\t"workbench.colorcustomizations": {},\n\n\t// 指定用在工作台中的颜色主题。\n\t"workbench.colortheme": "default dark+",\n\n\t// 控制命令面板中保留最近使用命令的数量。设置为 0 时禁用命令历史功能。\n\t"workbench.commandpalette.history": 50,\n\n\t// 当再次打开命令面板时，控制是否恢复上一次输入的内容。\n\t"workbench.commandpalette.preserveinput": false,\n\n\t// 如果在居中布局中打开了超过一组编辑器，控制是否自动将宽度调整为最大宽度值。当回到只打开了一组编辑器的状态，将自动将宽度调整为原始的居中宽度值。\n\t"workbench.editor.centeredlayoutautoresize": true,\n\n\t// 控制编辑器组中最后一个选项卡关闭时这个空组的行为。若启用，将自动关闭空组。若禁用，空组仍将保留在网格布局中。\n\t"workbench.editor.closeemptygroups": true,\n\n\t// 当文件被其他进程删除或重命名时，控制是否自动关闭在这个期间内打开了此文件的编辑器。若禁用此项，在这种情况下将保留编辑器。请注意，若从应用内部进行删除，将始终关闭编辑器，并且为了保护您的数据，已更新文件始终不会关闭。\n\t"workbench.editor.closeonfiledelete": false,\n\n\t// 控制打开的编辑器是否为预览编辑器。预览编辑器在被固定 (例如，通过双击或编辑) 前可重用，其字体样式为斜体。\n\t"workbench.editor.enablepreview": true,\n\n\t// 控制从 quick open 打开的编辑器是否为预览编辑器。预览编辑器在被固定 (例如，通过双击或编辑) 前可重用。\n\t"workbench.editor.enablepreviewfromquickopen": true,\n\n\t// 控制是否按最常使用的顺序或从左到右的顺序关闭选项卡。\n\t"workbench.editor.focusrecenteditorafterclose": true,\n\n\t// 控制是否绘制已修改 (存在更新) 的编辑器选项卡的顶部边框。\n\t"workbench.editor.highlightmodifiedtabs": false,\n\n\t// 控制编辑器标签的格式。\n\t//  - default: 显示文件名。当启用选项卡且在同一组内有两个相同名称的文件时，将添加每个文件路径中可以用于区分的部分。在选项卡被禁用且编辑器活动时，将显示相对于工作区文件夹的路径。\n\t//  - short: 在文件的目录名之后显示文件名。\n\t//  - medium: 在文件相对当前工作区文件夹的路径之后显示文件名。\n\t//  - long: 在文件的绝对路径之后显示文件名。\n\t"workbench.editor.labelformat": "default",\n\n\t// 控制编辑器打开的位置。选择 `left` 或 `right` 可分别在当前活动编辑器的左侧或右侧打开。选择 `first` (最前) 或 `last` (最后) 打开的位置与当前活动编辑器无关。\n\t"workbench.editor.openpositioning": "right",\n\n\t// 控制编辑器在并排打开时 (比如从资源管理器) 出现的默认位置。默认在当前活动编辑器右侧打开。若更改为 `down`，则在当前活动编辑器下方打开。\n\t"workbench.editor.opensidebysidedirection": "right",\n\n\t// 在重新打开已关闭文件时，还原最后一个视图的状态 (如滚动位置)。\n\t"workbench.editor.restoreviewstate": true,\n\n\t// 控制是否在打开的任何可见组中显示编辑器。如果禁用，编辑器将优先在当前活动的编辑器组中打开。如果启用，将会显示在已打开的编辑器，而不是在当前活动的编辑器组中再次打开。请注意，有些情况下会忽略此设置，例如，强制编辑器在特定组中打开或当前活动组的一侧时。\n\t"workbench.editor.revealifopen": false,\n\n\t// 控制是否在编辑器选项卡中显示图标。要求同时启用图标主题。\n\t"workbench.editor.showicons": true,\n\n\t// 控制打开的编辑器是否显示在选项卡中。\n\t"workbench.editor.showtabs": true,\n\n\t// 控制编辑器选项卡中关闭按钮的位置，或是设置为 `off` 禁用。\n\t"workbench.editor.tabclosebutton": "right",\n\n\t// 控制编辑器选项卡的大小。\n\t//  - fit: 始终将标签页保持足够大，能够完全显示编辑器标签。\n\t//  - shrink: 在不能同时显示所有选项卡时，允许选项卡缩小。\n\t"workbench.editor.tabsizing": "fit",\n\n\t// 从 microsoft 联机服务中获取要进行的实验。\n\t"workbench.enableexperiments": true,\n\n\t// 指定在工作台中使用的图标主题，或指定 "null" 以不显示任何文件图标。\n\t//  - null: 无文件图标\n\t//  - vs-minimal\n\t//  - vs-seti\n\t//  - material-icon-theme\n\t"workbench.icontheme": "vs-seti",\n\n\t// 控制列表和树中的键盘导航是否仅通过键入自动触发。如果设置为“false”，键盘导航只在执行“list.togglekeyboardnavigation ”命令时触发，您可以为该命令指定键盘快捷方式。\n\t"workbench.list.automatickeyboardnavigation": true,\n\n\t// 控制列表和树是否支持在工作台中进行水平滚动。\n\t"workbench.list.horizontalscrolling": false,\n\n\t// 控制工作台中的列表和树的键盘导航样式。它可为“简单”、“突出显示”或“筛选”。\n\t//  - simple: 简单键盘导航聚焦与键盘输入相匹配的元素。仅对前缀进行匹配。\n\t//  - highlight: 高亮键盘导航会突出显示与键盘输入相匹配的元素。进一步向上和向下导航将仅遍历突出显示的元素。\n\t//  - filter: 筛选器键盘导航将筛选出并隐藏与键盘输入不匹配的所有元素。\n\t"workbench.list.keyboardnavigation": "highlight",\n\n\t// 在通过鼠标多选树和列表条目时使用的修改键 (例如“资源管理器”、“打开的编辑器”和“源代码管理”视图)。“在侧边打开”功能所需的鼠标动作 (若可用) 将会相应调整，不与多选修改键冲突。\n\t//  - ctrlcmd: 映射为 `ctrl` (windows 和 linux) 或 `command` (macos)。\n\t//  - alt: 映射为 `alt` (windows 和 linux) 或 `option` (macos)。\n\t"workbench.list.multiselectmodifier": "ctrlcmd",\n\n\t// 控制在树和列表中怎样使用鼠标来展开子项（若支持）。对于树中的父节点，此设置将控制是使用单击还是双击来展开。注意，某些不适用于此设置的树或列表可能会忽略此项。\n\t"workbench.list.openmode": "singleclick",\n\n\t// 控制面板 (终端、调试控制台、输出、问题) 的默认位置。可显示在工作台的底部或右侧。\n\t"workbench.panel.defaultlocation": "bottom",\n\n\t// 控制 quick open 是否在其失去焦点时自动关闭。\n\t"workbench.quickopen.closeonfocuslost": true,\n\n\t// 在打开 quick open 视图时，控制是否自动恢复上一次输入的值。\n\t"workbench.quickopen.preserveinput": false,\n\n\t// 配置默认使用的设置编辑器。\n\t//  - ui: 使用设置 ui 编辑器。\n\t//  - json: 使用 json 文件编辑器。\n\t"workbench.settings.editor": "ui",\n\n\t// 控制是否在设置中启用自然语言搜索。自然语言搜索由 microsoft 联机服务提供。\n\t"workbench.settings.enablenaturallanguagesearch": true,\n\n\t// 控制在打开按键绑定设置时是否同时打开显示所有默认按键绑定的编辑器。\n\t"workbench.settings.opendefaultkeybindings": false,\n\n\t// 控制在打开设置时是否同时打开显示所有默认设置的编辑器。\n\t"workbench.settings.opendefaultsettings": false,\n\n\t// 控制设置编辑器的目录在搜索时的行为。\n\t//  - hide: 在搜索时隐藏目录。\n\t//  - filter: 筛选目录为仅显示含有匹配设置的类别。单击一个类别将仅显示该类别的结果。\n\t"workbench.settings.settingssearchtocbehavior": "filter",\n\n\t// 控制在将设置编辑为 json 时是否使用拆分 json 编辑器。\n\t"workbench.settings.usesplitjson": false,\n\n\t// 控制边栏的位置。它可显示在工作台的左侧或右侧。\n\t"workbench.sidebar.location": "left",\n\n\t// 在没有从上一会话中恢复出信息的情况下，控制启动时显示的编辑器。\n\t//  - none: 在启动时不打开编辑器。\n\t//  - welcomepage: 打开欢迎页面 (默认)。\n\t//  - readme: 打开包含一个自述文件的文件夹时, 打开自述文件, 否则回退到 "欢迎页面"。\n\t//  - newuntitledfile: 打开新的无标题文件 (仅在打开空工作区时适用)。\n\t//  - welcomepageinemptyworkbench: 在打开空工作区时打开欢迎页面。\n\t"workbench.startupeditor": "welcomepage",\n\n\t// 控制是否显示工作台底部状态栏中的 twitter 反馈 (笑脸图标)。\n\t"workbench.statusbar.feedback.visible": true,\n\n\t// 控制工作台底部状态栏的可见性。\n\t"workbench.statusbar.visible": true,\n\n\t// 启用后，当没有打开编辑器时将显示水印提示。\n\t"workbench.tips.enabled": true,\n\n\t// 此设置已弃用, 请改用 "workbench.list.horizontalscrolling"。\n\t// 控制工作台中的树控件是否支持水平滚动。\n\t"workbench.tree.horizontalscrolling": false,\n\n\t// 控制树缩进(以像素为单位)。\n\t"workbench.tree.indent": 8,\n\n\t// 启用工作台的网格布局。此设置可能会为工作台组件启用其他布局选项。\n\t"workbench.useexperimentalgridlayout": false,\n\n\t// 控制是否显示视图头部的操作项。视图头部操作项可以一直，或是仅当聚焦到和悬停在视图上时显示。\n\t"workbench.view.alwaysshowheaderactions": false,\n\n\t// 如果已启用，将自动更改为高对比度主题；如果 windows 正在使用高对比度主题，则当离开 windows 高对比度主题时会更改为深色主题。\n\t"window.autodetecthighcontrast": true,\n\n\t// 控制在关闭最后一个编辑器时是否关闭整个窗口。此设置仅适用于没有显示文件夹的窗口。\n\t"window.closewhenempty": false,\n\n\t// 如果启用, 双击标题栏中的应用程序图标将关闭窗口, 并且该窗口无法通过图标拖动。此设置仅在 "#window.titlebarstyle#" 设置为 "custom" 时生效。\n\t"window.doubleclickicontoclose": false,\n\n\t// 启用后，即可使用 alt 快捷键打开主菜单。若禁用助记键，这些 alt 快捷键将能绑定到编辑器命令。\n\t"window.enablemenubarmnemonics": true,\n\n\t// 控制菜单栏的可见性。“切换”设置表示隐藏菜单栏，按一次 alt 键则将显示此菜单栏。默认情况下，除非窗口为全屏，否则菜单栏可见。\n\t//  - default: 菜单仅在全屏模式下隐藏。\n\t//  - visible: 菜单始终可见，即使处于全屏模式下。\n\t//  - toggle: 菜单隐藏，但可以通过 alt 键显示。\n\t//  - hidden: 菜单始终隐藏。\n\t"window.menubarvisibility": "default",\n\n\t// 控制在已有窗口时新开窗口的尺寸。请注意，此设置对第一个打开的窗口无效。第一个窗口将始终恢复关闭前的大小和位置。\n\t//  - default: 在屏幕中心打开新窗口。\n\t//  - inherit: 以与上一个活动窗口相同的尺寸打开新窗口。\n\t//  - maximized: 打开最大化的新窗口。\n\t//  - fullscreen: 在全屏模式下打开新窗口。\n\t"window.newwindowdimensions": "default",\n\n\t// 控制是否在新窗口中打开文件。\n\t// 注意，此设置可能会被忽略 (例如，在使用 `--new-window` 或 `--reuse-window` 命令行选项时)。\n\t//  - on: 在新窗口中打开文件。\n\t//  - off: 在文件所在文件夹的已有窗口中或在上一个活动窗口中打开文件。\n\t//  - default: 在新窗口中打开文件，除非文件从应用程序内进行选取 (例如，通过“文件”菜单)。\n\t"window.openfilesinnewwindow": "off",\n\n\t// 控制打开文件夹时是在新窗口打开还是替换上一个活动窗口。\n\t// 注意，此设置可能会被忽略 (例如，在使用 `--new-window` 或 `--reuse-window` 命令行选项时)。\n\t//  - on: 在新窗口中打开文件夹。\n\t//  - off: 文件夹将替换上一个活动窗口。\n\t//  - default: 在新窗口中打开文件夹，除非文件夹从应用程序内进行选取 (例如，通过“文件”菜单)。\n\t"window.openfoldersinnewwindow": "default",\n\n\t// 在另一实例无参启动时，控制是打开新的空窗口或是聚焦到最后运行的实例。\n\t// 注意，此设置可能会被忽略 (例如，在使用 `--new-window` 或 `--reuse-window` 命令行选项时)。\n\t//  - on: 打开一个新的空窗口。\n\t//  - off: 聚焦到上一活动的运行实例。\n\t"window.openwithoutargumentsinnewwindow": "on",\n\n\t// 若窗口在处于全屏模式时退出，控制其在恢复时是否还原到全屏模式。\n\t"window.restorefullscreen": false,\n\n\t// 控制窗口在重启后再次打开的方式。\n\t//  - all: 重新打开所有窗口。\n\t//  - folders: 重新打开所有文件夹。空工作区将不会被恢复。\n\t//  - one: 重新打开上一个活动窗口。\n\t//  - none: 永远不重新打开窗口。总是以一个空窗口启动。\n\t"window.restorewindows": "one",\n\n\t// 根据活动编辑器控制窗口标题。变量是根据上下文替换的:"${activeeditorshort}": 文件名 (例如 myfile.txt)。\n\t// - "${activeeditormedium}": 相对于工作区文件夹的文件路径 (例如, myfolder/myfilefolder/myfile.txt)。\n\t// - "${activeeditorlong}": 文件的完整路径 (例如 /users/development/myfolder/myfilefolder/myfile.txt)。\n\t// - "${activefoldershort}": 文件所在的文件夹名称 (例如, myfilefolder)。\n\t// - "${activefoldermedium}": 相对于工作区文件夹的、包含文件的文件夹的路径, (例如 myfolder/myfilefolder)。\n\t// - "${activefolderlong}": 文件所在文件夹的完整路径 (例如 /users/development/myfolder/myfilefolder)。\n\t// - "${foldername}": 文件所在工作区文件夹的名称 (例如 myfolder)。\n\t// - "${folderpath}": 文件所在工作区文件夹的路径 (例如 /users/development/myfolder)。\n\t// - "${rootname}": 工作区的名称 (例如, myfolder 或 myworkspace)。\n\t// - "${rootpath}": 工作区的文件路径 (例如 /users/development/myworkspace)。\n\t// - "${appname}": 例如 vs code。\n\t// - "${dirty}": 表示活动编辑器为脏的脏指示器。\n\t// - "${separator}": 一种条件分隔符 ("-"), 仅在被包含值或静态文本的变量包围时显示。\n\t"window.title": "${dirty}${activeeditorshort}${separator}${rootname}${separator}${appname}",\n\n\t// 调整窗口标题栏的外观。在 linux 和 windows 上，此设置也会影响应用程序和上下文菜单的外观。更改需要完全重新启动才能应用。\n\t"window.titlebarstyle": "custom",\n\n\t// 调整窗口的缩放级别。原始大小是 0，每次递增(例如 1)或递减(例如 -1)表示放大或缩小 20%。也可以输入小数以便以更精细的粒度调整缩放级别。\n\t"window.zoomlevel": 0,\n\n\t// 配置语言的文件关联 (如: `"*.extension": "html"`)。这些关联的优先级高于已安装语言的默认关联。\n\t"files.associations": {},\n\n\t// 启用后，将在文件打开时尝试猜测字符集编码。可以按语言对此项进行配置。\n\t"files.autoguessencoding": false,\n\n\t// 控制已更新文件的自动保存。可在[此处](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save)阅读有关自动保存的详细信息。\n\t//  - off: 永不自动保存更新后的文件。\n\t//  - afterdelay: 当文件修改后的时间超过 `files.autosavedelay` 中配置的值时自动进行保存。\n\t//  - onfocuschange: 编辑器失去焦点时自动保存更新后的文件。\n\t//  - onwindowchange: 窗口失去焦点时自动保存更新后的文件。\n\t"files.autosave": "off",\n\n\t// 控制自动保存已更新文件的延迟时间 (毫秒)。仅在 `files.autosave` 设置为 `afterdelay` 时生效。\n\t"files.autosavedelay": 1000,\n\n\t// 分配给新文件的默认语言模式。\n\t"files.defaultlanguage": "",\n\n\t// 在删除文件或文件夹时，将它们移动到操作系统的“废纸篓”中 (windows 为“回收站”)。禁用此设置将永久删除文件或文件夹。\n\t"files.enabletrash": true,\n\n\t// 在读取和写入文件时使用的默认字符集编码。可以按语言对此项进行配置。\n\t//  - utf8: utf-8\n\t//  - utf8bom: utf-8 with bom\n\t//  - utf16le: utf-16 le\n\t//  - utf16be: utf-16 be\n\t//  - windows1252: western (windows 1252)\n\t//  - iso88591: western (iso 8859-1)\n\t//  - iso88593: western (iso 8859-3)\n\t//  - iso885915: western (iso 8859-15)\n\t//  - macroman: western (mac roman)\n\t//  - cp437: dos (cp 437)\n\t//  - windows1256: arabic (windows 1256)\n\t//  - iso88596: arabic (iso 8859-6)\n\t//  - windows1257: baltic (windows 1257)\n\t//  - iso88594: baltic (iso 8859-4)\n\t//  - iso885914: celtic (iso 8859-14)\n\t//  - windows1250: central european (windows 1250)\n\t//  - iso88592: central european (iso 8859-2)\n\t//  - cp852: central european (cp 852)\n\t//  - windows1251: cyrillic (windows 1251)\n\t//  - cp866: cyrillic (cp 866)\n\t//  - iso88595: cyrillic (iso 8859-5)\n\t//  - koi8r: cyrillic (koi8-r)\n\t//  - koi8u: cyrillic (koi8-u)\n\t//  - iso885913: estonian (iso 8859-13)\n\t//  - windows1253: greek (windows 1253)\n\t//  - iso88597: greek (iso 8859-7)\n\t//  - windows1255: hebrew (windows 1255)\n\t//  - iso88598: hebrew (iso 8859-8)\n\t//  - iso885910: nordic (iso 8859-10)\n\t//  - iso885916: romanian (iso 8859-16)\n\t//  - windows1254: turkish (windows 1254)\n\t//  - iso88599: turkish (iso 8859-9)\n\t//  - windows1258: vietnamese (windows 1258)\n\t//  - gbk: simplified chinese (gbk)\n\t//  - gb18030: simplified chinese (gb18030)\n\t//  - cp950: traditional chinese (big5)\n\t//  - big5hkscs: traditional chinese (big5-hkscs)\n\t//  - shiftjis: japanese (shift jis)\n\t//  - eucjp: japanese (euc-jp)\n\t//  - euckr: korean (euc-kr)\n\t//  - windows874: thai (windows 874)\n\t//  - iso885911: latin/thai (iso 8859-11)\n\t//  - koi8ru: cyrillic (koi8-ru)\n\t//  - koi8t: tajik (koi8-t)\n\t//  - gb2312: simplified chinese (gb 2312)\n\t//  - cp865: nordic dos (cp 865)\n\t//  - cp850: western european dos (cp 850)\n\t"files.encoding": "utf8",\n\n\t// 默认行尾字符。\n\t//  - \\n: lf\n\t//  - \\r\\n: crlf\n\t//  - auto: 使用具体操作系统规定的行末字符。\n\t"files.eol": "auto",\n\n\t// 配置排除的文件和文件夹的 glob 模式。例如，文件资源管理器将根据此设置决定要显示或隐藏的文件和文件夹。可在[此处](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options)阅读有关 glob 模式的详细信息。\n\t"files.exclude": {\n\t\t"**/.git": true,\n\t\t"**/.svn": true,\n\t\t"**/.hg": true,\n\t\t"**/cvs": true,\n\t\t"**/.ds_store": true\n\t},\n\n\t// 控制是否在会话间记住未保存的文件，以允许在退出编辑器时跳过保存提示。\n\t//  - off: 禁用热退出。\n\t//  - onexit: 在 windows/linux 平台关闭最后一个窗口，或者在全平台触发 `workbench.action.quit` 命令 (命令托盘、键绑定、菜单) 时进行热退出。下次启动时将还原所有已备份的窗口。\n\t//  - onexitandwindowclose: 在 windows/linux 平台关闭最后一个窗口、触发 `workbench.action.quit` 命令 (命令托盘、键绑定、菜单) 会引起应用程序关闭。对于任何有文件夹打开的窗口，则不论该窗口是否是最后一个窗口进行热退出。下次启动时将还原所有未打开文件夹的窗口。若要还原打开有文件夹的窗口，请将 `window.restorewindows` 设置为 `all`。\n\t"files.hotexit": "onexit",\n\n\t// 启用后，保存文件时在文件末尾插入一个最终新行。\n\t"files.insertfinalnewline": false,\n\n\t// 在打开大型文件时，控制 vs code 可在重启后使用的内存。在命令行中指定 `--max-memory=新的大小` 参数可达到相同效果。\n\t"files.maxmemoryforlargefilesmb": 4096,\n\n\t// 启用后，保存文件时将删除在最终新行后的所有新行。\n\t"files.trimfinalnewlines": false,\n\n\t// 启用后，将在保存文件时剪裁尾随空格。\n\t"files.trimtrailingwhitespace": false,\n\n\t// 配置文件路径的 glob 模式以从文件监视排除。模式必须在绝对路径上匹配(例如 ** 前缀或完整路径需正确匹配)。更改此设置需要重启。如果在启动时遇到 code 消耗大量 cpu 时间，则可以排除大型文件夹以减少初始加载。\n\t"files.watcherexclude": {\n\t\t"**/.git/objects/**": true,\n\t\t"**/.git/subtree-cache/**": true,\n\t\t"**/node_modules/*/**": true\n\t},\n\n\t// 控制在打开禅模式时是否启用居中布局。\n\t"zenmode.centerlayout": true,\n\n\t// 控制在打开禅模式时是否将工作台切换到全屏。\n\t"zenmode.fullscreen": true,\n\n\t// 控制在打开禅模式时是否隐藏工作台左侧的活动栏。\n\t"zenmode.hideactivitybar": true,\n\n\t// 控制在打开禅模式时是否隐藏编辑器行号。\n\t"zenmode.hidelinenumbers": true,\n\n\t// 控制在打开禅模式时是否隐藏工作台底部的状态栏。\n\t"zenmode.hidestatusbar": true,\n\n\t// 控制在打开禅模式时是否隐藏工作台选项卡。\n\t"zenmode.hidetabs": true,\n\n\t// 若窗口在处于禅模式时退出，控制其在恢复时是否还原到禅模式。\n\t"zenmode.restore": false,\n\n\t// 控制资源管理器是否在打开文件时自动显示并选择。\n\t"explorer.autoreveal": true,\n\n\t// 控制资源管理器是否在把文件删除到废纸篓时进行确认。\n\t"explorer.confirmdelete": true,\n\n\t// 控制在资源管理器内拖放移动文件或文件夹时是否进行确认。\n\t"explorer.confirmdraganddrop": true,\n\n\t// 控制文件修饰是否应使用徽章。\n\t"explorer.decorations.badges": true,\n\n\t// 控制文件修饰是否应使用颜色。\n\t"explorer.decorations.colors": true,\n\n\t// 控制资源管理器是否允许通过拖放移动文件和文件夹。\n\t"explorer.enabledraganddrop": true,\n\n\t// 在“打开的编辑器”窗格中显示的编辑器数量。\n\t"explorer.openeditors.visible": 9,\n\n\t// 控制文件和文件夹在资源管理器中的排列顺序。\n\t//  - default: 按名称的字母顺序排列文件和文件夹。文件夹显示在文件前。\n\t//  - mixed: 按名称的字母顺序排列文件和文件夹。两者穿插显示。\n\t//  - filesfirst: 按名称的字母顺序排列文件和文件夹。文件显示在文件夹前。\n\t//  - type: 按扩展名的字母顺序排列文件和文件夹。文件夹显示在文件前。\n\t//  - modified: 按最后修改日期降序排列文件和文件夹。文件夹显示在文件前。\n\t"explorer.sortorder": "default",\n\n\t// 在搜索视图中控制操作栏的位置。\n\t//  - auto: 当搜索视图较窄时将操作栏置于右侧，当搜索视图较宽时，将它紧接在内容之后。\n\t//  - right: 始终将操作栏放置在右侧。\n\t"search.actionsposition": "auto",\n\n\t// 控制是折叠还是展开搜索结果。\n\t//  - auto: files with less than 10 results are expanded. others are collapsed.\n\t//  - alwayscollapse\n\t//  - alwaysexpand\n\t"search.collapseresults": "auto",\n\n\t// 配置在搜索中排除的文件和文件夹的 glob 模式。已经继承 `files.exclude` 设置的所有 glob 模式。可在[此处](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options)阅读有关 glob 模式的详细信息。\n\t"search.exclude": {\n\t\t"**/node_modules": true,\n\t\t"**/bower_components": true\n\t},\n\n\t// 控制是否在搜索中跟踪符号链接。\n\t"search.followsymlinks": true,\n\n\t// 控制搜索功能是显示在侧边栏，还是显示在水平空间更大的面板区域。\n\t"search.location": "sidebar",\n\n\t// 启用后，搜索服务进程将保持活动状态，而不是在一个小时不活动后关闭。这将使文件搜索缓存保留在内存中。\n\t"search.maintainfilesearchcache": false,\n\n\t// 是否在 quick open 的文件结果中包含最近打开的文件。\n\t"search.quickopen.includehistory": true,\n\n\t// 控制 quick open 文件结果中是否包括全局符号搜索的结果。\n\t"search.quickopen.includesymbols": false,\n\n\t// 控制是否在扩展宿主中运行搜索。重启后才能生效。\n\t"search.runinextensionhost": false,\n\n\t// 控制是否显示搜索结果所在的行号。\n\t"search.showlinenumbers": false,\n\n\t// 若搜索词全为小写，则不区分大小写进行搜索，否则区分大小写进行搜索。\n\t"search.smartcase": false,\n\n\t// 控制在搜索文件时是否使用全局 `.gitignore` 和 `.ignore` 文件。\n\t"search.useglobalignorefiles": false,\n\n\t// 控制在搜索文件时是否使用 `.gitignore` 和 `.ignore` 文件。\n\t"search.useignorefiles": true,\n\n\t// 是否在文本搜索中使用 pcre2 正则表达式引擎。这允许使用一些高级正则表达式功能, 如前瞻和反向引用。但是, 并非所有 pcre2 功能都受支持-仅支持 javascript 也支持的功能。\n\t"search.usepcre2": false,\n\n\t// 控制在选择或替换匹配项时是否打开“替换预览”视图。\n\t"search.usereplacepreview": true,\n\n\t// 已弃用。请考虑使用 "search.usepcre2" 获取对高级正则表达式功能的支持。\n\t// 此设置已被弃用，将回退到 "search.usepcre2"。\n\t"search.useripgrep": true,\n\n\t// 已弃用。请改用 "search.runinextensionhost"\n\t// 控制是否在扩展宿主中运行搜索\n\t"searchripgrep.enable": false,\n\n\t// 使用的代理设置。如果没有设置，将从 http_proxy 和 https_proxy 环境变量中获取。\n\t"http.proxy": "",\n\n\t// 要作为每个网络请求的 "proxy-authorization" 标头发送的值。\n\t"http.proxyauthorization": null,\n\n\t// 控制是否根据提供的 ca 列表验证代理服务器证书。\n\t"http.proxystrictssl": true,\n\n\t// 对扩展使用代理支持。\n\t//  - off: 禁用对扩展的代理支持。\n\t//  - on: 为扩展启用代理支持。\n\t//  - override: 为扩展启用代理支持，覆盖请求选项。\n\t"http.proxysupport": "override",\n\n\t// 控制是否应从操作系统加载 ca 证书。(在 windows 和 macos 上, 关闭此窗口后需要重新加载窗口。\n\t"http.systemcertificates": true,\n\n\t// 此设置已弃用，请改用“update.mode”。\n\t// 配置是否接收自动更新。更改后需要重新启动。更新是从微软在线服务获取的。\n\t"update.channel": "default",\n\n\t// 启用 windows 后台更新。更新将从 microsoft 联机服务中获取。\n\t"update.enablewindowsbackgroundupdates": true,\n\n\t// 配置是否接收自动更新。更改后需要重新启动。更新是从微软在线服务获取的。\n\t//  - none: 禁用更新。\n\t//  - manual: 禁用自动后台更新检查。如果手动检查更新，更新将可用。\n\t//  - default: 启用自动更新检查。代码将定期自动检查更新。\n\t"update.mode": "default",\n\n\t// 在更新后显示发行说明。发行说明将从 microsoft 联机服务中获取。\n\t"update.showreleasenotes": true,\n\n\t// 启用/禁用 html 标记的自动关闭。\n\t"html.autoclosingtags": true,\n\n\t// a list of json file paths that define custom tags, properties and other html syntax constructs. only workspace folder setting will be read.\n\t"html.experimental.customdata": [],\n\n\t// list of tags, comma separated, where the content shouldn\'t be reformatted. `null` defaults to the `pre` tag.\n\t"html.format.contentunformatted": "pre,code,textarea",\n\n\t// 启用或禁用默认 html 格式化程序。\n\t"html.format.enable": true,\n\n\t// 以新行结束。\n\t"html.format.endwithnewline": false,\n\n\t// 以逗号分隔的标记列表，其中的标记之前将有额外新行。若为 `null`，默认包含 `"head, body, /html"`。\n\t"html.format.extraliners": "head, body, /html",\n\n\t// 对 `{{#foo}}` 和 `{{/foo}}` 进行格式化与缩进。\n\t"html.format.indenthandlebars": false,\n\n\t// 缩进 `<head>` 和 `<body>` 部分。\n\t"html.format.indentinnerhtml": false,\n\n\t// 保留在一个区块中的换行符的最大数量。若为 `null`，则没有限制。\n\t"html.format.maxpreservenewlines": null,\n\n\t// 控制是否保留元素前已有的换行符。仅适用于元素前，不适用于标记内或文本。\n\t"html.format.preservenewlines": true,\n\n\t// 以逗号分隔的标记列表，其中的内容不会被重新格式化。若为 `null`，默认包含所有列于 https://www.w3.org/tr/html5/dom.html#phrasing-content 的标记。\n\t"html.format.unformatted": "wbr",\n\n\t// 对属性进行换行。\n\t//  - auto: 仅在超出行长度时才对属性进行换行。\n\t//  - force: 对除第一个属性外的其他每个属性进行换行。\n\t//  - force-aligned: 对除第一个属性外的其他每个属性进行换行，并保持对齐。\n\t//  - force-expand-multiline: 对每个属性进行换行。\n\t//  - aligned-multiple: 当超出折行长度时，将属性进行垂直对齐。\n\t//  - preserve: 保留属性的包装\n\t//  - preserve-aligned: 保留属性的包装，但对齐。\n\t"html.format.wrapattributes": "auto",\n\n\t// 每行最大字符数(0 = 禁用)。\n\t"html.format.wraplinelength": 120,\n\n\t// 配置内置 html 语言支持是否建议 html5 标记、属性和值。\n\t"html.suggest.html5": true,\n\n\t// 跟踪 vs code 与 html 语言服务器之间的通信。\n\t"html.trace.server": "off",\n\n\t// 配置内置的 html 语言支持是否对嵌入的脚本进行验证。\n\t"html.validate.scripts": true,\n\n\t// 配置内置 html 语言支持是否对嵌入的样式进行验证。\n\t"html.validate.styles": true,\n\n\t// 已弃用设置 "json.colordecorators.enable"，请改用 "editor.colordecorators"。\n\t// 启用或禁用颜色修饰器\n\t"json.colordecorators.enable": true,\n\n\t// 启用或禁用默认 json 格式化程序。\n\t"json.format.enable": true,\n\n\t// 将当前项目中的 json 文件与架构关联起来\n\t"json.schemas": [],\n\n\t// 跟踪 vs code 和 json 语言服务器之间的通信。\n\t"json.trace.server": "off",\n\n\t// 设置换行符如何在 markdown 预览中呈现。将其设置为 "true" 会为每一个新行创建一个 <br>。\n\t"markdown.preview.breaks": false,\n\n\t// 在 markdown 预览中双击切换到编辑器。\n\t"markdown.preview.doubleclicktoswitchtoeditor": true,\n\n\t// 控制 markdown 预览中使用的字体系列。\n\t"markdown.preview.fontfamily": "-apple-system, blinkmacsystemfont, \'segoe wpc\', \'segoe ui\', \'ubuntu\', \'droid sans\', sans-serif",\n\n\t// 控制 markdown 预览中使用的字号(以像素为单位)。\n\t"markdown.preview.fontsize": 14,\n\n\t// 控制 markdown 预览中使用的行高。此数值与字号相关。\n\t"markdown.preview.lineheight": 1.6,\n\n\t// 在 markdown 预览中启用或禁用将类似 url 的文本转换为链接。\n\t"markdown.preview.linkify": true,\n\n\t// 在 markdown 预览中标记当前的编辑器选定内容。\n\t"markdown.preview.markeditorselection": true,\n\n\t// 在预览中，控制如何处理指向 markdown 文件的链接。\n\t//  - inpreview: 尝试在 markdown 预览中打开链接\n\t//  - ineditor: 尝试在编辑器中打开链接\n\t"markdown.preview.openmarkdownlinks": "inpreview",\n\n\t// 滚动 markdown 预览时，更新其编辑器视图。\n\t"markdown.preview.scrolleditorwithpreview": true,\n\n\t// 滚动 markdown 编辑器时，更新其预览视图。\n\t"markdown.preview.scrollpreviewwitheditor": true,\n\n\t// 此设置已被 "markdown.preview.scrollpreviewwitheditor" 替换且不再有任何效果。\n\t// [弃用] 滚动 markdown 预览以显示编辑器当前所选行。\n\t"markdown.preview.scrollpreviewwitheditorselection": true,\n\n\t// 要在 markdown 预览中使用的 css 样式表的 url 或本地路径列表。相对路径被解释为相对于资源管理器中打开的文件夹。如果没有任何打开的文件夹，则会被解释为相对于 markdown 文件的位置。所有的 "\\" 需写为 "\\\\"。\n\t"markdown.styles": [],\n\n\t// 对 markdown 扩展启用调试日志记录。\n\t"markdown.trace": "off",\n\n\t// 控制是否启用内置 php 语言建议。支持对 php 全局变量和变量进行建议。\n\t"php.suggest.basic": true,\n\n\t// 启用/禁用内置的 php 验证。\n\t"php.validate.enable": true,\n\n\t// 指向 php 可执行文件。\n\t"php.validate.executablepath": null,\n\n\t// 不管 linter 是在 save 还是在 type 上运行。\n\t"php.validate.run": "onsave",\n\n\t// 启用或禁用自动关闭 jsx 标记。要求工作区使用高于 3.0 版本的 typescript。\n\t"javascript.autoclosingtags": true,\n\n\t// 启用/禁用 javascript 格式化程序。\n\t"javascript.format.enable": true,\n\n\t// 定义逗号分隔符后面的空格处理。\n\t"javascript.format.insertspaceaftercommadelimiter": true,\n\n\t// 定义 constructor 关键字后的空格处理方式。要求工作区使用高于 2.3.0 版本的 typescript。\n\t"javascript.format.insertspaceafterconstructor": false,\n\n\t// 定义匿名函数的函数关键字后面的空格处理。\n\t"javascript.format.insertspaceafterfunctionkeywordforanonymousfunctions": true,\n\n\t// 定义控制流语句中关键字后面的空格处理。\n\t"javascript.format.insertspaceafterkeywordsincontrolflowstatements": true,\n\n\t// 定义 jsx 表达式括号中左括号后和右括号前的空格处理方式。\n\t"javascript.format.insertspaceafteropeningandbeforeclosingjsxexpressionbraces": false,\n\n\t// 定义非空大括号中左括号后和右括号前的空格处理方式。要求工作区使用高于 2.3.0 版本的 typescript。\n\t"javascript.format.insertspaceafteropeningandbeforeclosingnonemptybraces": true,\n\n\t// 定义非空中括号的左括号后和右括号前的空格处理方式。\n\t"javascript.format.insertspaceafteropeningandbeforeclosingnonemptybrackets": false,\n\n\t// 定义非空小括号的左括号后和右括号前的空格处理方式。\n\t"javascript.format.insertspaceafteropeningandbeforeclosingnonemptyparenthesis": false,\n\n\t// 定义模板字符串括号中左括号后和右括号前的空格处理方式。\n\t"javascript.format.insertspaceafteropeningandbeforeclosingtemplatestringbraces": false,\n\n\t// 定义 for 语句中分号之后的空格处理方式。\n\t"javascript.format.insertspaceaftersemicoloninforstatements": true,\n\n\t// 定义二进制运算符后面的空格处理\n\t"javascript.format.insertspacebeforeandafterbinaryoperators": true,\n\n\t// 定义函数参数括号前的空格处理方式。\n\t"javascript.format.insertspacebeforefunctionparenthesis": false,\n\n\t// 定义控制块的左括号是否放置在新的一行。\n\t"javascript.format.placeopenbraceonnewlineforcontrolblocks": false,\n\n\t// 定义函数的左大括号是否放置在新的一行。\n\t"javascript.format.placeopenbraceonnewlineforfunctions": false,\n\n\t// 启用或禁用 javascript 文件的语义检查。若有 jsconfig.json 或 tsconfig.json 文件，将覆盖此设置。要求工作区使用高于 2.3.1 版本的 typescript。\n\t"javascript.implicitprojectconfig.checkjs": false,\n\n\t// 对不属于任何工程的 javascript 文件启用或禁用 `experimentaldecorators` 设置。若有 jsconfig.json 或 tsconfig.json 文件，将覆盖此设置。要求工作区使用高于 2.3.1 版本的 typescript。\n\t"javascript.implicitprojectconfig.experimentaldecorators": false,\n\n\t// 自动 import 语句中路径的首选样式。\n\t//  - auto: 推断最短的路径类型。\n\t//  - relative: 相对于文件位置。\n\t//  - non-relative: 根据 `jsconfig.json` 或 `tsconfig.json` 中配置的 `baseurl` 。\n\t"javascript.preferences.importmodulespecifier": "auto",\n\n\t// 用于快速修复的首选引用样式: `single` (单引号)、`double` (双引号) 或 `auto` (从已有 import 语句中推测引号类型)。要求工作区使用高于 2.9 版本的 typescript。\n\t"javascript.preferences.quotestyle": "auto",\n\n\t// 启用/禁用在重命名过程中引入对象速记属性的别名。需要在工作区中使用 typescript 3.4 或更高版本。\n\t"javascript.preferences.renameshorthandproperties": true,\n\n\t// 启用/禁用在 javascript 文件中引用 codelens。\n\t"javascript.referencescodelens.enabled": false,\n\n\t// 启用或禁用自动导入建议。要求工作区使用高于 2.6.1 版本的 typescript。\n\t"javascript.suggest.autoimports": true,\n\n\t// 完成函数的参数签名。\n\t"javascript.suggest.completefunctioncalls": false,\n\n\t// 启用/禁用对完成 jsdoc 注释的建议。\n\t"javascript.suggest.completejsdocs": true,\n\n\t// 启用或禁用自动完成建议。\n\t"javascript.suggest.enabled": true,\n\n\t// 启用或禁用在 javascript 建议列表中包含文件中的唯一名称。\n\t"javascript.suggest.names": true,\n\n\t// 在 import 语句和 require 调用中，启用或禁用路径建议。\n\t"javascript.suggest.paths": true,\n\n\t// 启用或禁用编辑器中 javascript 文件的建议诊断。要求工作区使用高于 2.8 版本的 typescript。\n\t"javascript.suggestionactions.enabled": true,\n\n\t// 当在 vs code 中重命名或移动文件时，启用或禁用自动更新导入路径。要求工作区使用高于 2.9 版本的 typescript。\n\t//  - prompt: 在每次重命名时进行提示。\n\t//  - always: 始终自动更新路径。\n\t//  - never: 一律不要重命名路径，也不要提示。\n\t"javascript.updateimportsonfilemove.enabled": "prompt",\n\n\t// 启用/禁用 javascript 验证。\n\t"javascript.validate.enable": true,\n\n\t// 启用或禁用自动关闭 jsx 标记。要求工作区使用高于 3.0 版本的 typescript。\n\t"typescript.autoclosingtags": true,\n\n\t// 检查是否安装了 npm 以自动获取类型。\n\t"typescript.check.npmisinstalled": true,\n\n\t// 禁用自动类型获取。自动类型获取从 npm 提取 `@types` 包，提高对于外部库的 intellisense 能力。\n\t"typescript.disableautomatictypeacquisition": false,\n\n\t// 启用/禁用默认 typescript 格式化程序。\n\t"typescript.format.enable": true,\n\n\t// 定义逗号分隔符后面的空格处理。\n\t"typescript.format.insertspaceaftercommadelimiter": true,\n\n\t// 定义 constructor 关键字后的空格处理方式。要求工作区使用高于 2.3.0 版本的 typescript。\n\t"typescript.format.insertspaceafterconstructor": false,\n\n\t// 定义匿名函数的函数关键字后面的空格处理。\n\t"typescript.format.insertspaceafterfunctionkeywordforanonymousfunctions": true,\n\n\t// 定义控制流语句中关键字后面的空格处理。\n\t"typescript.format.insertspaceafterkeywordsincontrolflowstatements": true,\n\n\t// 定义 jsx 表达式括号中左括号后和右括号前的空格处理方式。\n\t"typescript.format.insertspaceafteropeningandbeforeclosingjsxexpressionbraces": false,\n\n\t// 定义非空大括号中左括号后和右括号前的空格处理方式。要求工作区使用高于 2.3.0 版本的 typescript。\n\t"typescript.format.insertspaceafteropeningandbeforeclosingnonemptybraces": true,\n\n\t// 定义非空中括号的左括号后和右括号前的空格处理方式。\n\t"typescript.format.insertspaceafteropeningandbeforeclosingnonemptybrackets": false,\n\n\t// 定义非空小括号的左括号后和右括号前的空格处理方式。\n\t"typescript.format.insertspaceafteropeningandbeforeclosingnonemptyparenthesis": false,\n\n\t// 定义模板字符串括号中左括号后和右括号前的空格处理方式。\n\t"typescript.format.insertspaceafteropeningandbeforeclosingtemplatestringbraces": false,\n\n\t// 定义 for 语句中分号之后的空格处理方式。\n\t"typescript.format.insertspaceaftersemicoloninforstatements": true,\n\n\t// 定义 typescript 中类型断言后的空格处理方式。要求工作区使用高于 2.4 版本的 typescript。\n\t"typescript.format.insertspaceaftertypeassertion": false,\n\n\t// 定义二进制运算符后面的空格处理\n\t"typescript.format.insertspacebeforeandafterbinaryoperators": true,\n\n\t// 定义函数参数括号前的空格处理方式。\n\t"typescript.format.insertspacebeforefunctionparenthesis": false,\n\n\t// 定义控制块的左括号是否放置在新的一行。\n\t"typescript.format.placeopenbraceonnewlineforcontrolblocks": false,\n\n\t// 定义函数的左大括号是否放置在新的一行。\n\t"typescript.format.placeopenbraceonnewlineforfunctions": false,\n\n\t// 启用或禁用实现 codelens。此 codelens 显示接口的实现。\n\t"typescript.implementationscodelens.enabled": false,\n\n\t// 设置在报告 javascript 和 typescript 的错误时使用的区域设置。要求工作区使用高于 2.6.0 版本的 typescript。默认 (`null`) 使用 vs code 的区域设置。\n\t"typescript.locale": null,\n\n\t// 指定用于自动获取类型的 npm 可执行文件的路径。要求工作区使用高于 2.3.4 版本的 typescript。\n\t"typescript.npm": null,\n\n\t// 自动 import 语句中路径的首选样式。\n\t//  - auto: 推断最短的路径类型。\n\t//  - relative: 相对于文件位置。\n\t//  - non-relative: 根据 `jsconfig.json` 或 `tsconfig.json` 中配置的 `baseurl` 。\n\t"typescript.preferences.importmodulespecifier": "auto",\n\n\t// 用于快速修复的首选引用样式: `single` (单引号)、`double` (双引号) 或 `auto` (从已有 import 语句中推测引号类型)。要求工作区使用高于 2.9 版本的 typescript。\n\t"typescript.preferences.quotestyle": "auto",\n\n\t// 启用/禁用在重命名过程中引入对象速记属性的别名。需要在工作区中使用 typescript 3.4 或更高版本。\n\t"typescript.preferences.renameshorthandproperties": true,\n\n\t// 在 typescript 文件中启用或禁用引用 codelens。\n\t"typescript.referencescodelens.enabled": false,\n\n\t// 将风格检查的问题报告为警告。\n\t"typescript.reportstylechecksaswarnings": true,\n\n\t// 启用或禁用自动导入建议。要求工作区使用高于 2.6.1 版本的 typescript。\n\t"typescript.suggest.autoimports": true,\n\n\t// 完成函数的参数签名。\n\t"typescript.suggest.completefunctioncalls": false,\n\n\t// 启用/禁用对完成 jsdoc 注释的建议。\n\t"typescript.suggest.completejsdocs": true,\n\n\t// 启用或禁用自动完成建议。\n\t"typescript.suggest.enabled": true,\n\n\t// 在 import 语句和 require 调用中，启用或禁用路径建议。\n\t"typescript.suggest.paths": true,\n\n\t// 启用或禁用编辑器中 typescript 文件的建议诊断。要求工作区使用高于 2.8 版本的 typescript。\n\t"typescript.suggestionactions.enabled": true,\n\n\t// 启用或禁用偶尔出现的有关 javascript 和 typescript 的调查，帮助我们改善 vs code 对两者的支持。\n\t"typescript.surveys.enabled": true,\n\n\t// 控制对 tsc 任务的自动检测。\n\t//  - on: 同时创建生成和监视任务。\n\t//  - off: 禁用此功能。\n\t//  - build: 仅创建单次运行编译任务。\n\t//  - watch: 仅创建编译和监视任务。\n\t"typescript.tsc.autodetect": "on",\n\n\t// 指定包含要使用的 tsserver 和 lib*.d.ts 文件的文件夹路径。\n\t"typescript.tsdk": null,\n\n\t// 将 ts 服务器的日志保存到一个文件。此日志可用于诊断 ts 服务器问题。日志可能包含你的项目中的文件路径、源代码和其他可能敏感的信息。\n\t"typescript.tsserver.log": "off",\n\n\t// 其他用于搜索 typescript 语言服务插件的路径。要求工作区使用高于 2.3.0 版本的 typescript。\n\t"typescript.tsserver.pluginpaths": [],\n\n\t// 对发送到 ts 服务器的消息启用跟踪。此跟踪信息可用于诊断 ts 服务器问题。 跟踪信息可能包含你的项目中的文件路径、源代码和其他可能敏感的信息。\n\t"typescript.tsserver.trace": "off",\n\n\t// 当在 vs code 中重命名或移动文件时，启用或禁用自动更新导入路径。要求工作区使用高于 2.9 版本的 typescript。\n\t//  - prompt: 在每次重命名时进行提示。\n\t//  - always: 始终自动更新路径。\n\t//  - never: 一律不要重命名路径，也不要提示。\n\t"typescript.updateimportsonfilemove.enabled": "prompt",\n\n\t// 启用/禁用 typescript 验证。\n\t"typescript.validate.enable": true,\n\n\t// 控制评论面板应何时打开。\n\t"comments.openpanel": "openonsessionstartwithcomments",\n\n\t// 允许在任何文件中设置断点。\n\t"debug.allowbreakpointseverywhere": false,\n\n\t// 控制调试控制台中的字体系列。\n\t"debug.console.fontfamily": "default",\n\n\t// 控制调试控制台中的字体大小(以像素为单位)。\n\t"debug.console.fontsize": 14,\n\n\t// 设置调试控制台中的行高(以像素为单位)。使用 0 来计算从字体大小开始的行高。\n\t"debug.console.lineheight": 0,\n\n\t// 控制调试过程中是否启用非调试悬停提示。启用后，将调用悬停提供程序来提供悬停提示。即使启用此项设置，普通悬停提示也不会显示。\n\t"debug.enableallhovers": false,\n\n\t// 当处于调试过程中时，在编辑器中内联显示变量值。\n\t"debug.inlinevalues": false,\n\n\t// 控制何时打开内部调试控制台。\n\t"debug.internalconsoleoptions": "openonfirstsessionstart",\n\n\t// 控制何时打开“调试”视图。\n\t"debug.opendebug": "openonsessionstart",\n\n\t// 在调试会话结束时自动打开资源管理器视图。\n\t"debug.openexploreronend": false,\n\n\t// 控制何时显示调试状态栏。\n\t//  - never: 在状态栏中不再显示调试\n\t//  - always: 始终在状态栏中显示调试\n\t//  - onfirstsessionstart: 仅于第一次启动调试后在状态栏中显示调试\n\t"debug.showinstatusbar": "onfirstsessionstart",\n\n\t// 控制调试子会话是否显示在调试工具栏中。当此设置为 false 时, 子会话上的 stop 命令也将停止父会话。\n\t"debug.showsubsessionsintoolbar": false,\n\n\t// 控制调试工具栏的位置。可在所有视图中“浮动”、在调试视图中“停靠”，也可“隐藏”。\n\t"debug.toolbarlocation": "floating",\n\n\t// 全局调试启动配置。应当作为跨工作区共享的 \\"launch.json\\" 的替代方法。\n\t"launch": {\n\t\t"configurations": [],\n\t\t"compounds": []\n\t},\n\n\t// 默认情况下，vs code 在选择 css 属性后触发属性值完成。使用此设置可禁用此行为。\n\t"css.completion.triggerpropertyvaluecompletion": true,\n\n\t// a list of json file paths that define custom css data that loads custom properties, at directives, pseudo classes / elements.\n\t"css.experimental.customdata": [],\n\n\t// 无效的参数数量。\n\t"css.lint.argumentsincolorfunction": "error",\n\n\t// 在使用 `padding` 或 `border` 时，不要使用 `width` 或 `height`。\n\t"css.lint.boxmodel": "ignore",\n\n\t// 使用厂商特定的前缀时，同时添加所有其他厂商特定的属性。\n\t"css.lint.compatiblevendorprefixes": "ignore",\n\n\t// 不要使用重复的样式定义。\n\t"css.lint.duplicateproperties": "ignore",\n\n\t// 不要使用空规则集。\n\t"css.lint.emptyrules": "warning",\n\n\t// 避免使用 `float`。浮动会使 css 变得脆弱。即使只更改了一部分布局，也很容易造成破坏。\n\t"css.lint.float": "ignore",\n\n\t// `@font-face` 规则必须定义 `src` 和 `font-family` 属性。\n\t"css.lint.fontfaceproperties": "warning",\n\n\t// 十六进制颜色必须由三个或六个十六进制数字组成。\n\t"css.lint.hexcolorlength": "error",\n\n\t// 选择器不应包含 id，因为这些规则与 html 的耦合过于紧密。\n\t"css.lint.idselector": "ignore",\n\n\t// 仅在需要支持 ie7 及更低版本时，才需要 ie hack。\n\t"css.lint.iehack": "ignore",\n\n\t// 避免使用 `!important`。它表明整个 css 的优先级已经失去控制且需要进行重构。\n\t"css.lint.important": "ignore",\n\n\t// import 语句没有并行加载。\n\t"css.lint.importstatement": "ignore",\n\n\t// 由于 `display` 属性值，属性被忽略。例如，使用 `display: inline` 时，`width`、`height`、`margin-top`、`margin-bottom` 和 `float` 属性将不起作用。\n\t"css.lint.propertyignoredduetodisplay": "warning",\n\n\t// 通配选择符 (`*`) 的运行效率低。\n\t"css.lint.universalselector": "ignore",\n\n\t// 未知的 @ 规则。\n\t"css.lint.unknownatrules": "warning",\n\n\t// 未知的属性。\n\t"css.lint.unknownproperties": "warning",\n\n\t// 未知的供应商特定属性。\n\t"css.lint.unknownvendorspecificproperties": "ignore",\n\n\t// 不根据 "unknownproperties" 规则进行验证的属性列表。\n\t"css.lint.validproperties": [],\n\n\t// 使用厂商特定的前缀时，同时添加标准属性。\n\t"css.lint.vendorprefix": "warning",\n\n\t// 零不需要单位。\n\t"css.lint.zerounits": "ignore",\n\n\t// 跟踪 vs code 与 css 语言服务器之间的通信。\n\t"css.trace.server": "off",\n\n\t// 启用或禁用所有验证。\n\t"css.validate": true,\n\n\t// 参数数目无效。\n\t"less.lint.argumentsincolorfunction": "error",\n\n\t// 在使用 `padding` 或 `border` 时，不要使用 `width` 或 `height`。\n\t"less.lint.boxmodel": "ignore",\n\n\t// 使用厂商特定的前缀时，同时添加所有其他厂商特定的属性。\n\t"less.lint.compatiblevendorprefixes": "ignore",\n\n\t// 不要使用重复的样式定义。\n\t"less.lint.duplicateproperties": "ignore",\n\n\t// 不要使用空规则集。\n\t"less.lint.emptyrules": "warning",\n\n\t// 避免使用 `float`。浮动会使 css 变得脆弱。即使只更改了一部分布局，也很容易造成破坏。\n\t"less.lint.float": "ignore",\n\n\t// `@font-face` 规则必须定义 `src` 和 `font-family` 属性。\n\t"less.lint.fontfaceproperties": "warning",\n\n\t// 十六进制颜色必须由三个或六个十六进制数字组成。\n\t"less.lint.hexcolorlength": "error",\n\n\t// 选择器不应包含 id，因为这些规则与 html 的耦合过于紧密。\n\t"less.lint.idselector": "ignore",\n\n\t// 仅在需要支持 ie7 及更低版本时，才需要 ie hack。\n\t"less.lint.iehack": "ignore",\n\n\t// 避免使用 `!important`。它表明整个 css 的优先级已经失去控制且需要进行重构。\n\t"less.lint.important": "ignore",\n\n\t// import 语句没有并行加载。\n\t"less.lint.importstatement": "ignore",\n\n\t// 由于 `display` 属性值，属性被忽略。例如，使用 `display: inline` 时，`width`、`height`、`margin-top`、`margin-bottom` 和 `float` 属性将不起作用。\n\t"less.lint.propertyignoredduetodisplay": "warning",\n\n\t// 通配选择符 (`*`) 的运行效率低。\n\t"less.lint.universalselector": "ignore",\n\n\t// 未知的属性。\n\t"less.lint.unknownproperties": "warning",\n\n\t// 未知的供应商特定属性。\n\t"less.lint.unknownvendorspecificproperties": "ignore",\n\n\t// 不根据 "unknownproperties" 规则进行验证的属性列表。\n\t"less.lint.validproperties": [],\n\n\t// 使用厂商特定的前缀时，同时添加标准属性。\n\t"less.lint.vendorprefix": "warning",\n\n\t// 零不需要单位。\n\t"less.lint.zerounits": "ignore",\n\n\t// 启用或禁用所有验证。\n\t"less.validate": true,\n\n\t// 参数数目无效。\n\t"scss.lint.argumentsincolorfunction": "error",\n\n\t// 在使用 `padding` 或 `border` 时，不要使用 `width` 或 `height`。\n\t"scss.lint.boxmodel": "ignore",\n\n\t// 使用厂商特定的前缀时，同时添加所有其他厂商特定的属性。\n\t"scss.lint.compatiblevendorprefixes": "ignore",\n\n\t// 不要使用重复的样式定义。\n\t"scss.lint.duplicateproperties": "ignore",\n\n\t// 不要使用空规则集。\n\t"scss.lint.emptyrules": "warning",\n\n\t// 避免使用 `float`。浮动会使 css 变得脆弱。即使只更改了一部分布局，也很容易造成破坏。\n\t"scss.lint.float": "ignore",\n\n\t// `@font-face` 规则必须定义 `src` 和 `font-family` 属性。\n\t"scss.lint.fontfaceproperties": "warning",\n\n\t// 十六进制颜色必须由三个或六个十六进制数字组成。\n\t"scss.lint.hexcolorlength": "error",\n\n\t// 选择器不应包含 id，因为这些规则与 html 的耦合过于紧密。\n\t"scss.lint.idselector": "ignore",\n\n\t// 仅在需要支持 ie7 及更低版本时，才需要 ie hack。\n\t"scss.lint.iehack": "ignore",\n\n\t// 避免使用 `!important`。它表明整个 css 的优先级已经失去控制且需要进行重构。\n\t"scss.lint.important": "ignore",\n\n\t// import 语句没有并行加载。\n\t"scss.lint.importstatement": "ignore",\n\n\t// 由于 `display` 属性值，属性被忽略。例如，使用 `display: inline` 时，`width`、`height`、`margin-top`、`margin-bottom` 和 `float` 属性将不起作用。\n\t"scss.lint.propertyignoredduetodisplay": "warning",\n\n\t// 通配选择符 (`*`) 的运行效率低。\n\t"scss.lint.universalselector": "ignore",\n\n\t// 未知的属性。\n\t"scss.lint.unknownproperties": "warning",\n\n\t// 未知的供应商特定属性。\n\t"scss.lint.unknownvendorspecificproperties": "ignore",\n\n\t// 不根据 "unknownproperties" 规则进行验证的属性列表。\n\t"scss.lint.validproperties": [],\n\n\t// 使用厂商特定的前缀时，同时添加标准属性。\n\t"scss.lint.vendorprefix": "warning",\n\n\t// 零不需要单位。\n\t"scss.lint.zerounits": "ignore",\n\n\t// 启用或禁用所有验证。\n\t"scss.validate": true,\n\n\t// 启用后，将自动检查扩展更新。若扩展存在更新，将在“扩展”视图中将其标记为过时扩展。更新将从 microsoft 联机服务中获取。\n\t"extensions.autocheckupdates": true,\n\n\t// 启用后，将自动安装扩展更新。更新将从 microsoft 联机服务中获取。\n\t"extensions.autoupdate": true,\n\n\t// 启用后，将在离开“扩展”视图时，自动关闭扩展详细信息页面。\n\t"extensions.closeextensiondetailsonviewchange": false,\n\n\t// 启用后，将不会显示扩展建议的通知。\n\t"extensions.ignorerecommendations": false,\n\n\t// 启用后，除非用户特别进行请求，将不会获取或显示推荐。某些推荐将从 microsoft 联机服务中获取。\n\t"extensions.showrecommendationsonlyondemand": false,\n\n\t// 自定义要启动的终端类型。\n\t//  - integrated: 使用 vs code 的集成终端。\n\t//  - external: 使用设定的外部终端。\n\t"terminal.explorerkind": "integrated",\n\n\t// 自定义要在 linux 上运行的终端。\n\t"terminal.external.linuxexec": "xterm",\n\n\t// 定义在 macos 上运行的终端应用程序。\n\t"terminal.external.osxexec": "terminal.app",\n\n\t// 自定义要在 windows 上运行的终端。\n\t"terminal.external.windowsexec": "c:\\\\windows\\\\system32\\\\cmd.exe",\n\n\t// 一组命令 id，其键绑定将不发送到 shell，而始终由 code 进行处理。这样，使用键绑定(通常由 shell 使用)时的效果与终端未对焦时(例如，按 ctrl+p 启动“快速打开”)时的效果一致。\n\t// 默认跳过的命令:\n\t// \n\t// - editor.action.toggletabfocusmode\n\t// - workbench.action.debug.continue\n\t// - workbench.action.debug.pause\n\t// - workbench.action.debug.restart\n\t// - workbench.action.debug.run\n\t// - workbench.action.debug.start\n\t// - workbench.action.debug.stepinto\n\t// - workbench.action.debug.stepout\n\t// - workbench.action.debug.stepover\n\t// - workbench.action.debug.stop\n\t// - workbench.action.firsteditoringroup\n\t// - workbench.action.focusactiveeditorgroup\n\t// - workbench.action.focuseightheditorgroup\n\t// - workbench.action.focusfiftheditorgroup\n\t// - workbench.action.focusfirsteditorgroup\n\t// - workbench.action.focusfourtheditorgroup\n\t// - workbench.action.focuslasteditorgroup\n\t// - workbench.action.focussecondeditorgroup\n\t// - workbench.action.focusseventheditorgroup\n\t// - workbench.action.focussixtheditorgroup\n\t// - workbench.action.focusthirdeditorgroup\n\t// - workbench.action.lasteditoringroup\n\t// - workbench.action.navigatedown\n\t// - workbench.action.navigateleft\n\t// - workbench.action.navigateright\n\t// - workbench.action.navigateup\n\t// - workbench.action.nextpanelview\n\t// - workbench.action.nextsidebarview\n\t// - workbench.action.opennextrecentlyusededitoringroup\n\t// - workbench.action.openpreviousrecentlyusededitoringroup\n\t// - workbench.action.previouspanelview\n\t// - workbench.action.previoussidebarview\n\t// - workbench.action.quickopen\n\t// - workbench.action.quickopenpreviouseditor\n\t// - workbench.action.quickopenview\n\t// - workbench.action.showcommands\n\t// - workbench.action.tasks.build\n\t// - workbench.action.tasks.reruntask\n\t// - workbench.action.tasks.restarttask\n\t// - workbench.action.tasks.runtask\n\t// - workbench.action.tasks.showlog\n\t// - workbench.action.tasks.showtasks\n\t// - workbench.action.tasks.terminate\n\t// - workbench.action.tasks.test\n\t// - workbench.action.terminal.clear\n\t// - workbench.action.terminal.clearselection\n\t// - workbench.action.terminal.copyselection\n\t// - workbench.action.terminal.deletetolinestart\n\t// - workbench.action.terminal.deletewordleft\n\t// - workbench.action.terminal.deletewordright\n\t// - workbench.action.terminal.findnextterminalfocus\n\t// - workbench.action.terminal.findpreviousterminalfocus\n\t// - workbench.action.terminal.focus\n\t// - workbench.action.terminal.focusatindex1\n\t// - workbench.action.terminal.focusatindex2\n\t// - workbench.action.terminal.focusatindex3\n\t// - workbench.action.terminal.focusatindex4\n\t// - workbench.action.terminal.focusatindex5\n\t// - workbench.action.terminal.focusatindex6\n\t// - workbench.action.terminal.focusatindex7\n\t// - workbench.action.terminal.focusatindex8\n\t// - workbench.action.terminal.focusatindex9\n\t// - workbench.action.terminal.focusfindwidget\n\t// - workbench.action.terminal.focusnext\n\t// - workbench.action.terminal.focusnextpane\n\t// - workbench.action.terminal.focusprevious\n\t// - workbench.action.terminal.focuspreviouspane\n\t// - workbench.action.terminal.hidefindwidget\n\t// - workbench.action.terminal.kill\n\t// - workbench.action.terminal.movetolineend\n\t// - workbench.action.terminal.movetolinestart\n\t// - workbench.action.terminal.new\n\t// - workbench.action.terminal.newinactiveworkspace\n\t// - workbench.action.terminal.paste\n\t// - workbench.action.terminal.resizepanedown\n\t// - workbench.action.terminal.resizepaneleft\n\t// - workbench.action.terminal.resizepaneright\n\t// - workbench.action.terminal.resizepaneup\n\t// - workbench.action.terminal.runactivefile\n\t// - workbench.action.terminal.runselectedtext\n\t// - workbench.action.terminal.scrolldown\n\t// - workbench.action.terminal.scrolldownpage\n\t// - workbench.action.terminal.scrolltobottom\n\t// - workbench.action.terminal.scrolltonextcommand\n\t// - workbench.action.terminal.scrolltopreviouscommand\n\t// - workbench.action.terminal.scrolltotop\n\t// - workbench.action.terminal.scrollup\n\t// - workbench.action.terminal.scrolluppage\n\t// - workbench.action.terminal.selectall\n\t// - workbench.action.terminal.selecttonextcommand\n\t// - workbench.action.terminal.selecttonextline\n\t// - workbench.action.terminal.selecttopreviouscommand\n\t// - workbench.action.terminal.selecttopreviousline\n\t// - workbench.action.terminal.sendsequence\n\t// - workbench.action.terminal.split\n\t// - workbench.action.terminal.splitinactiveworkspace\n\t// - workbench.action.terminal.togglefindcasesensitiveterminalfocus\n\t// - workbench.action.terminal.togglefindregexterminalfocus\n\t// - workbench.action.terminal.togglefindwholewordterminalfocus\n\t// - workbench.action.terminal.toggleterminal\n\t// - workbench.action.togglefullscreen\n\t// - workbench.action.togglemaximizedpanel\n\t// - workbench.action.togglepanel\n\t"terminal.integrated.commandstoskipshell": [],\n\n\t// 在存在活动终端会话的情况下，是否在退出时进行确认。\n\t"terminal.integrated.confirmonexit": false,\n\n\t// 控制是否将终端中选定的文本复制到剪贴板。\n\t"terminal.integrated.copyonselection": false,\n\n\t// 控制终端光标是否闪烁。\n\t"terminal.integrated.cursorblinking": false,\n\n\t// 控制终端光标的样式。\n\t"terminal.integrated.cursorstyle": "block",\n\n\t// 将在其中启动终端的一个显式起始路径，它用作 shell 进程的当前工作目录(cwd)。当根目录为不方便的 cwd 时，此路径在工作区设置中可能十分有用。\n\t"terminal.integrated.cwd": "",\n\n\t// 控制终端中的粗体文本是否始终使用 ansi 的“明亮”颜色样式。\n\t"terminal.integrated.drawboldtextinbrightcolors": true,\n\n\t// 控制终端铃声是否启用。\n\t"terminal.integrated.enablebell": false,\n\n\t// whether to enable the latency mitigation feature for high-latency terminals.\n\t"terminal.integrated.enablelatencymitigation": false,\n\n\t// 要添加到 vs code 进程中的带有环境变量的对象，其将被 linux 终端使用。设置为 `null` 可删除环境变量。\n\t"terminal.integrated.env.linux": {},\n\n\t// 要添加到 vs code 进程中的带有环境变量的对象，其将被 macos 终端使用。设置为 `null` 可删除环境变量。\n\t"terminal.integrated.env.osx": {},\n\n\t// 要添加到 vs code 进程中的带有环境变量的对象，其将被 windows 终端使用。设置为 `null` 可删除环境变量。\n\t"terminal.integrated.env.windows": {},\n\n\t// an experimental setting that will refresh the terminal renderer when the system is resumed.\n\t"terminal.integrated.experimentalrefreshonresume": false,\n\n\t// 控制终端的字体系列，默认为 `editor.fontfamily` 的值。\n\t"terminal.integrated.fontfamily": "",\n\n\t// 控制终端的字号(以像素为单位)。\n\t"terminal.integrated.fontsize": 14,\n\n\t// 终端中非粗体字使用的字重。\n\t"terminal.integrated.fontweight": "normal",\n\n\t// 终端中粗体字使用的字重。\n\t"terminal.integrated.fontweightbold": "bold",\n\n\t// 控制终端字符的间距。此项的值为整数，表示在字符间添加的额外像素数。\n\t"terminal.integrated.letterspacing": 0,\n\n\t// 控制终端的行高，此数字乘上终端字号得到实际行高(以像素为单位)。\n\t"terminal.integrated.lineheight": 1,\n\n\t// 在 macos 中，控制是否在按住 option 键并单击时进行强制选择。这将强制进行常规 (行) 选择并禁用列选择模式; 同时允许使用常规终端选择来进行复制与粘贴，例如，可在 tmux 启用了鼠标模式时适用。\n\t"terminal.integrated.macoptionclickforcesselection": false,\n\n\t// 控制是否在 macos 终端中，使用 option 键作为 meta 键。\n\t"terminal.integrated.macoptionismeta": false,\n\n\t// 控制终端的渲染方式。\n\t//  - auto: 让 vs code 决定要使用的渲染器。\n\t//  - canvas: 使用标准 gpu/基于 canvas 的渲染器\n\t//  - dom: 使用基于 dom 的备用渲染器。\n\t"terminal.integrated.renderertype": "auto",\n\n\t// 控制终端对右键单击的响应方式。\n\t//  - default: 显示上下文菜单。\n\t//  - copypaste: 当有内容选中时进行复制，否则进行粘贴。\n\t//  - selectword: 选择光标下的单词并显示上下文菜单。\n\t"terminal.integrated.rightclickbehavior": "copypaste",\n\n\t// 控制终端保持在缓冲区的最大行数。\n\t"terminal.integrated.scrollback": 1000,\n\n\t// 控制是否在终端启动时设置语言区域变量。\n\t"terminal.integrated.setlocalevariables": true,\n\n\t// 终端在 linux 上使用的 shell 的路径。[阅读有关配置 shell 的详细信息](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。\n\t"terminal.integrated.shell.linux": "/bin/bash",\n\n\t// 终端在 macos 上使用的 shell 的路径。[阅读有关配置 shell 的详细信息](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。\n\t"terminal.integrated.shell.osx": "/bin/bash",\n\n\t// 终端在 windows 上使用的 shell 的路径。[阅读有关配置 shell 的详细信息](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。\n\t"terminal.integrated.shell.windows": "c:\\\\windows\\\\system32\\\\windowspowershell\\\\v1.0\\\\powershell.exe",\n\n\t// 在 linux 终端上使用的命令行参数。[阅读有关配置 shell 的详细信息](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。\n\t"terminal.integrated.shellargs.linux": [],\n\n\t// 在 macos 终端上使用的命令行参数。[阅读有关配置 shell 的详细信息](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。\n\t"terminal.integrated.shellargs.osx": [\n\t\t"-l"\n\t],\n\n\t// 在 windows 终端上使用的命令行参数。[阅读有关配置 shell 的详细信息](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。\n\t"terminal.integrated.shellargs.windows": [],\n\n\t// 当退出代码非零时，控制是否显示“终端进程以某退出代码终止”的警告。\n\t"terminal.integrated.showexitalert": true,\n\n\t// 控制拆分终端的初始工作目录。\n\t//  - workspaceroot: 新拆分终端将使用工作区根目录作为工作目录。在多根目录工作区中，可选择要使用的根目录。\n\t//  - initial: 新拆分终端将使用父终端起始目录作为工作目录。\n\t//  - inherited: 在macos和linux上，一个新的分割终端将使用父终端的工作目录。在windows上，这与初始值相同。\n\t"terminal.integrated.splitcwd": "inherited",\n\n\t// works in conjunction with the `terminal.integrated.windowsenableconpty` setting. both must be enabled for tasks to use conpty. defaults to `false`.\n\t"terminal.integrated.windowsallowconptytasks": false,\n\n\t// 是否要将 conpty 用于 windows 终端进程通信(需要 windows 10 内部版本号 18309+)。如果此为 false，则将使用 winpty。\n\t"terminal.integrated.windowsenableconpty": true,\n\n\t// 在打开文件时，控制是否在“问题”视图中对其进行定位。\n\t"problems.autoreveal": true,\n\n\t// 在文件和文件夹上显示错误和警告。\n\t"problems.decorations.enabled": true,\n\n\t// 启用/禁用导航路径。\n\t"breadcrumbs.enabled": false,\n\n\t// 控制是否及如何在“导航路径”视图中显示文件路径。\n\t//  - on: 在导航路径视图中显示文件路径。\n\t//  - off: 不在导航路径视图中显示文件路径。\n\t//  - last: 在导航路径视图中仅显示文件路径的最后一个元素。\n\t"breadcrumbs.filepath": "on",\n\n\t// 控制是否及如何在“导航路径”视图中显示符号。\n\t//  - on: 在“导航路径”视图中显示所有符号。\n\t//  - off: 不在导航路径视图中显示符号。\n\t//  - last: 在导航路径视图中仅显示当前符号。\n\t"breadcrumbs.symbolpath": "on",\n\n\t// 控制“导航路径”大纲视图中符号的排序方式。\n\t//  - position: 以文件位置顺序显示符号大纲。\n\t//  - name: 以字母顺序显示符号大纲。\n\t//  - type: 以符号类型顺序显示符号大纲。\n\t"breadcrumbs.symbolsortorder": "position",\n\n\t// 将崩溃报告发送到 microsoft 联机服务。\n\t// 此选项在重新启动后才能生效。\n\t"telemetry.enablecrashreporter": true,\n\n\t// 将使用数据和错误发送到 microsoft 联机服务。\n\t"telemetry.enabletelemetry": true,\n\n\t// 显示大纲元素的图标。\n\t"outline.icons": true,\n\n\t// 使用错误和警告的徽章。\n\t"outline.problems.badges": true,\n\n\t// 使用颜色表示错误和警告。\n\t"outline.problems.colors": true,\n\n\t// 显示大纲元素上的错误和警告。\n\t"outline.problems.enabled": true,\n\n\t// colorize quokka output\n\t"quokka.colorizeoutput": true,\n\n\t// quokka gutter indicators colors (requires a restart after change)\n\t"quokka.colors": {\n\t\t"covered": "#62b455",\n\t\t"errorpath": "#ffa0a0",\n\t\t"errorsource": "#fe536a",\n\t\t"notcovered": "#cccccc",\n\t\t"partiallycovered": "#d2a032"\n\t},\n\n\t// minimize the number of new line characters between output console messages\n\t"quokka.compactmessageoutput": false,\n\n\t// override quokka dark theme error\n\t"quokka.darktheme.error.decorationattachmentrenderoptions": {\n\t\t"border": null,\n\t\t"bordercolor": null,\n\t\t"fontstyle": null,\n\t\t"fontweight": null,\n\t\t"textdecoration": null,\n\t\t"color": "#fe536a",\n\t\t"backgroundcolor": null,\n\t\t"margin": "1.2em",\n\t\t"width": null,\n\t\t"height": null\n\t},\n\n\t// override quokka dark theme log\n\t"quokka.darktheme.log.decorationattachmentrenderoptions": {\n\t\t"border": null,\n\t\t"bordercolor": null,\n\t\t"fontstyle": null,\n\t\t"fontweight": null,\n\t\t"textdecoration": null,\n\t\t"color": "rgba(86, 156, 214, 1)",\n\t\t"backgroundcolor": null,\n\t\t"margin": "1.2em",\n\t\t"width": null,\n\t\t"height": null\n\t},\n\n\t// override quokka light theme error\n\t"quokka.lighttheme.error.decorationattachmentrenderoptions": {\n\t\t"border": null,\n\t\t"bordercolor": null,\n\t\t"fontstyle": null,\n\t\t"fontweight": null,\n\t\t"textdecoration": null,\n\t\t"color": "#c80000",\n\t\t"backgroundcolor": null,\n\t\t"margin": "1.2em",\n\t\t"width": null,\n\t\t"height": null\n\t},\n\n\t// override quokka light theme log\n\t"quokka.lighttheme.log.decorationattachmentrenderoptions": {\n\t\t"border": null,\n\t\t"bordercolor": null,\n\t\t"fontstyle": null,\n\t\t"fontweight": null,\n\t\t"textdecoration": null,\n\t\t"color": "#0000ff",\n\t\t"backgroundcolor": null,\n\t\t"margin": "1.2em",\n\t\t"width": null,\n\t\t"height": null\n\t},\n\n\t// show quokka output window on start up\n\t"quokka.showoutputonstart": true,\n\n\t// stop quokka expiring license update reminders\n\t"quokka.suppressexpirationnotifications": false,\n\n\t// supress quokka glyph margin notifications\n\t"quokka.suppressglyphmarginnotifications": true,\n\n\t// always show the eslint status bar item.\n\t"eslint.alwaysshowstatus": false,\n\n\t// turns auto fix on save on or off.\n\t"eslint.autofixonsave": false,\n\n\t// \n\t"eslint.codeaction.disablerulecomment": {\n\t\t"enable": true,\n\t\t"location": "separateline"\n\t},\n\n\t// \n\t"eslint.codeaction.showdocumentation": {\n\t\t"enable": true\n\t},\n\n\t// controls whether eslint is enabled for javascript files or not.\n\t"eslint.enable": true,\n\n\t// a path added to node_path when resolving the eslint module.\n\t"eslint.nodepath": null,\n\n\t// the eslint options object to provide args normally passed to eslint when executed from a command line (see http://eslint.org/docs/developer-guide/nodejs-api#cliengine).\n\t"eslint.options": {},\n\n\t// the package manager you use to install node modules.\n\t"eslint.packagemanager": "npm",\n\n\t// controls whether a task for linting the whole workspace will be available.\n\t"eslint.providelinttask": false,\n\n\t// turns on quiet mode, which ignores warnings.\n\t"eslint.quiet": false,\n\n\t// run the linter on save (onsave) or on type (ontype)\n\t"eslint.run": "ontype",\n\n\t// the location of the node binary to run eslint under.\n\t"eslint.runtime": null,\n\n\t// traces the communication between vscode and the eslint linter service.\n\t"eslint.trace.server": "off",\n\n\t// an array of language ids which should be validated by eslint\n\t"eslint.validate": [\n\t\t"javascript",\n\t\t"javascriptreact"\n\t],\n\n\t// \n\t"eslint.workingdirectories": [],\n\n\t// 针对 [git-commit] 语言，配置替代编辑器设置。\n\t"[git-commit]":  {\n\t\t"editor.rulers": [\n\t\t\t\t72\n\t\t]\n\t},\n\n\t// 针对 [go] 语言，配置替代编辑器设置。\n\t"[go]":  {\n\t\t"editor.insertspaces": false\n\t},\n\n\t// 针对 [json] 语言，配置替代编辑器设置。\n\t"[json]":  {\n\t\t"editor.quicksuggestions": {\n\t\t\t\t"strings": true\n\t\t}\n\t},\n\n\t// 针对 [makefile] 语言，配置替代编辑器设置。\n\t"[makefile]":  {\n\t\t"editor.insertspaces": false\n\t},\n\n\t// 针对 [markdown] 语言，配置替代编辑器设置。\n\t"[markdown]":  {\n\t\t"editor.wordwrap": "on",\n\t\t"editor.quicksuggestions": false\n\t},\n\n\t// 针对 [yaml] 语言，配置替代编辑器设置。\n\t"[yaml]":  {\n\t\t"editor.insertspaces": true,\n\t\t"editor.tabsize": 2,\n\t\t"editor.autoindent": false\n\t},\n\n\t// specifies the length of abbreviated commit ids (shas)\n\t"gitlens.advanced.abbreviatedshalength": "7",\n\n\t// specifies additional arguments to pass to the `git blame` command\n\t"gitlens.advanced.blame.customarguments": null,\n\n\t// specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit. use 0 to specify an infinite wait\n\t"gitlens.advanced.blame.delayafteredit": 5000,\n\n\t// specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. use 0 to specify no maximum\n\t"gitlens.advanced.blame.sizethresholdafteredit": 5000,\n\n\t// specifies whether git output will be cached — changing the default is not recommended\n\t"gitlens.advanced.caching.enabled": true,\n\n\t// specifies whether file histories will follow renames — will affect how merge commits are shown in histories\n\t"gitlens.advanced.filehistoryfollowsrenames": true,\n\n\t// specifies the maximum number of items to show in a list. use 0 to specify no maximum\n\t"gitlens.advanced.maxlistitems": 200,\n\n\t// specifies the maximum number of items to show in a search. use 0 to specify no maximum\n\t"gitlens.advanced.maxsearchitems": 200,\n\n\t// specifies which messages should be suppressed\n\t"gitlens.advanced.messages": {\n\t\t"suppresscommithasnopreviouscommitwarning": false,\n\t\t"suppresscommitnotfoundwarning": false,\n\t\t"suppressfilenotundersourcecontrolwarning": false,\n\t\t"suppressgitdisabledwarning": false,\n\t\t"suppressgitversionwarning": false,\n\t\t"suppresslineuncommittedwarning": false,\n\t\t"suppressnorepositorywarning": false,\n\t\t"suppresssupportgitlensnotification": false\n\t},\n\n\t// specifies whether to close quickpick menus when focus is lost\n\t"gitlens.advanced.quickpick.closeonfocusout": true,\n\n\t// specifies how many folders deep to search for repositories\n\t"gitlens.advanced.repositorysearchdepth": 1,\n\n\t// specifies the amount (percent) of similarity a deleted and added file pair must have to be considered a rename\n\t"gitlens.advanced.similaritythreshold": null,\n\n\t// specifies whether to enable gitlens telemetry (even if enabled still abides by the overall `telemetry.enabletelemetry` setting\n\t"gitlens.advanced.telemetry.enabled": true,\n\n\t// specifies whether to show avatar images in the gutter blame annotations\n\t"gitlens.blame.avatars": true,\n\n\t// specifies whether to compact (deduplicate) matching adjacent gutter blame annotations\n\t"gitlens.blame.compact": true,\n\n\t// specifies how to format absolute dates (e.g. using the `${date}` token) in gutter blame annotations. see the [moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats\n\t"gitlens.blame.dateformat": null,\n\n\t// specifies the format of the gutter blame annotations. see [_commit tokens_](https://github.com/eamodio/vscode-gitlens/wiki/custom-formatting#commit-tokens) in the gitlens docs. date formatting is controlled by the `gitlens.blame.dateformat` setting\n\t"gitlens.blame.format": "${message|40?} ${agoordate|14-}",\n\n\t// specifies whether to provide a heatmap indicator in the gutter blame annotations\n\t"gitlens.blame.heatmap.enabled": true,\n\n\t// specifies where the heatmap indicators will be shown in the gutter blame annotations\n\t//  - left: adds a heatmap indicator on the left edge of the gutter blame annotations\n\t//  - right: adds a heatmap indicator on the right edge of the gutter blame annotations\n\t"gitlens.blame.heatmap.location": "right",\n\n\t// specifies whether to highlight lines associated with the current line\n\t"gitlens.blame.highlight.enabled": true,\n\n\t// specifies where the associated line highlights will be shown\n\t"gitlens.blame.highlight.locations": [\n\t\t"gutter",\n\t\t"line",\n\t\t"overview"\n\t],\n\n\t// specifies whether to ignore whitespace when comparing revisions during blame operations\n\t"gitlens.blame.ignorewhitespace": false,\n\n\t// specifies whether gutter blame annotations will be separated by a small gap\n\t"gitlens.blame.separatelines": true,\n\n\t// specifies how the gutter blame annotations will be toggled\n\t//  - file: toggles each file individually\n\t//  - window: toggles the window, i.e. all files at once\n\t"gitlens.blame.togglemode": "file",\n\n\t// specifies the command to be executed when an _authors_ code lens is clicked\n\t//  - gitlens.togglefileblame: toggles file blame annotations\n\t//  - gitlens.diffwithprevious: compares the current committed file with the previous commit\n\t//  - gitlens.showquickcommitdetails: shows a commit details quick pick\n\t//  - gitlens.showquickcommitfiledetails: shows a commit file details quick pick\n\t//  - gitlens.showquickfilehistory: shows a file history quick pick\n\t//  - gitlens.showquickrepohistory: shows a branch history quick pick\n\t"gitlens.codelens.authors.command": "gitlens.togglefileblame",\n\n\t// specifies whether to provide an _authors_ code lens, showing number of authors of the file or code block and the most prominent author (if there is more than one)\n\t"gitlens.codelens.authors.enabled": true,\n\n\t// specifies whether to provide any git code lens, by default. use the `toggle git code lens` command (`gitlens.togglecodelens`) to toggle the git code lens on and off for the current window\n\t"gitlens.codelens.enabled": true,\n\n\t// specifies whether to provide any git code lens on symbols that span only a single line\n\t"gitlens.codelens.includesinglelinesymbols": false,\n\n\t// specifies the command to be executed when a _recent change_ code lens is clicked\n\t//  - gitlens.togglefileblame: toggles file blame annotations\n\t//  - gitlens.diffwithprevious: compares the current committed file with the previous commit\n\t//  - gitlens.showquickcommitdetails: shows a commit details quick pick\n\t//  - gitlens.showquickcommitfiledetails: shows a commit file details quick pick\n\t//  - gitlens.showquickfilehistory: shows a file history quick pick\n\t//  - gitlens.showquickrepohistory: shows a branch history quick pick\n\t"gitlens.codelens.recentchange.command": "gitlens.showquickcommitfiledetails",\n\n\t// specifies whether to provide a _recent change_ code lens, showing the author and date of the most recent commit for the file or code block\n\t"gitlens.codelens.recentchange.enabled": true,\n\n\t// specifies where git code lens will be shown in the document\n\t"gitlens.codelens.scopes": [\n\t\t"document",\n\t\t"containers"\n\t],\n\n\t// specifies where git code lens will be shown in the document for the specified languages\n\t"gitlens.codelens.scopesbylanguage": [\n\t\t{\n\t\t\t"language": "azure-pipelines",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "css",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "html",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "json",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "jsonc",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "less",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "postcss",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "python",\n\t\t\t"symbolscopes": [\n\t\t\t\t"!module"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "scss",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "stylus",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "vue",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"language": "yaml",\n\t\t\t"scopes": [\n\t\t\t\t"document"\n\t\t\t]\n\t\t}\n\t],\n\n\t// specifies a set of document symbols where git code lens will or will not be shown in the document. prefix with `!` to avoid providing a git code lens for the symbol. must be a member of `symbolkind`\n\t"gitlens.codelens.symbolscopes": [],\n\n\t// specifies how to format absolute dates (e.g. using the `${date}` token) for the current line blame annotation. see the [moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats\n\t"gitlens.currentline.dateformat": null,\n\n\t// specifies whether to provide a blame annotation for the current line, by default. use the `toggle line blame annotations` command (`gitlens.togglelineblame`) to toggle the annotations on and off for the current window\n\t"gitlens.currentline.enabled": true,\n\n\t// specifies the format of the current line blame annotation. see [_commit tokens_](https://github.com/eamodio/vscode-gitlens/wiki/custom-formatting#commit-tokens) in the gitlens docs. date formatting is controlled by the `gitlens.currentline.dateformat` setting\n\t"gitlens.currentline.format": "${author}, ${agoordate} • ${message}",\n\n\t// specifies whether the current line blame annotation can be scrolled into view when it is outside the viewport\n\t"gitlens.currentline.scrollable": true,\n\n\t// specifies debug mode\n\t"gitlens.debug": false,\n\n\t// specifies how absolute dates will be formatted by default. see the [moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats\n\t"gitlens.defaultdateformat": null,\n\n\t// specifies how short absolute dates will be formatted by default. see the [moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats\n\t"gitlens.defaultdateshortformat": null,\n\n\t// specifies whether commit dates should use the authored or committed date\n\t//  - authored: uses the date when the changes were authored (i.e. originally written)\n\t//  - committed: uses the date when the changes were committed\n\t"gitlens.defaultdatesource": "authored",\n\n\t// specifies how dates will be displayed by default\n\t//  - relative: e.g. 1 day ago\n\t//  - absolute: e.g. july 25th, 2018 7:18pm\n\t"gitlens.defaultdatestyle": "relative",\n\n\t// specifies the style of the gravatar default (fallback) images\n\t//  - identicon: a geometric pattern\n\t//  - mp: a simple, cartoon-style silhouetted outline of a person (does not vary by email hash)\n\t//  - monsterid: a monster with different colors, faces, etc\n\t//  - retro: 8-bit arcade-style pixelated faces\n\t//  - robohash: a robot with different colors, faces, etc\n\t//  - wavatar: a face with differing features and backgrounds\n\t"gitlens.defaultgravatarsstyle": "robohash",\n\n\t// specifies the age of the most recent change (in days) after which the gutter heatmap annotations will be cold rather than hot (i.e. will use `gitlens.heatmap.coldcolor#` instead of `#gitlens.heatmap.hotcolor`)\n\t"gitlens.heatmap.agethreshold": "90",\n\n\t// specifies the base color of the gutter heatmap annotations when the most recent change is older (cold) than the `gitlens.heatmap.agethreshold` value\n\t"gitlens.heatmap.coldcolor": "#0a60f6",\n\n\t// specifies the base color of the gutter heatmap annotations when the most recent change is newer (hot) than the `gitlens.heatmap.agethreshold` value\n\t"gitlens.heatmap.hotcolor": "#f66a0a",\n\n\t// specifies how the gutter heatmap annotations will be toggled\n\t//  - file: toggles each file individually\n\t//  - window: toggles the window, i.e. all files at once\n\t"gitlens.heatmap.togglemode": "file",\n\n\t// specifies whether to provide a _changes (diff)_ hover for all lines when showing blame annotations\n\t"gitlens.hovers.annotations.changes": true,\n\n\t// specifies whether to provide a _commit details_ hover for all lines when showing blame annotations\n\t"gitlens.hovers.annotations.details": true,\n\n\t// specifies whether to provide any hovers when showing blame annotations\n\t"gitlens.hovers.annotations.enabled": true,\n\n\t// specifies when to trigger hovers when showing blame annotations\n\t//  - annotation: only shown when hovering over the line annotation\n\t//  - line: shown when hovering anywhere over the line\n\t"gitlens.hovers.annotations.over": "line",\n\n\t// specifies whether to show avatar images in hovers\n\t"gitlens.hovers.avatars": true,\n\n\t// specifies whether to show just the changes to the line or the set of related changes in the _changes (diff)_ hover\n\t//  - line: shows only the changes to the line\n\t//  - hunk: shows the set of related changes\n\t"gitlens.hovers.changesdiff": "line",\n\n\t// specifies whether to provide a _changes (diff)_ hover for the current line\n\t"gitlens.hovers.currentline.changes": true,\n\n\t// specifies whether to provide a _commit details_ hover for the current line\n\t"gitlens.hovers.currentline.details": true,\n\n\t// specifies whether to provide any hovers for the current line\n\t"gitlens.hovers.currentline.enabled": true,\n\n\t// specifies when to trigger hovers for the current line\n\t//  - annotation: only shown when hovering over the line annotation\n\t//  - line: shown when hovering anywhere over the line\n\t"gitlens.hovers.currentline.over": "annotation",\n\n\t// specifies the format (in markdown) of the _commit details_ hover. see [_commit tokens_](https://github.com/eamodio/vscode-gitlens/wiki/custom-formatting#commit-tokens) in the gitlens docs\n\t"gitlens.hovers.detailsmarkdownformat": "${avatar} &nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \\n\\n${message}\\n\\n${commands}",\n\n\t// specifies whether to provide any hovers\n\t"gitlens.hovers.enabled": true,\n\n\t// specifies whether to enable experimental features\n\t"gitlens.insiders": false,\n\n\t// specifies the keymap to use for gitlens shortcut keys\n\t//  - alternate: adds an alternate set of shortcut keys that start with `alt` (⌥ on macos)\n\t//  - chorded: adds a chorded set of shortcut keys that start with `ctrl+alt+g` (`⌥⌘g` on macos)\n\t//  - none: no shortcut keys will be added\n\t"gitlens.keymap": "chorded",\n\n\t// specifies whether to allow guest access to gitlens features when using visual studio live share\n\t"gitlens.liveshare.allowguestaccess": true,\n\n\t// specifies which commands will be added to which menus\n\t"gitlens.menus": {\n\t\t"editor": {\n\t\t\t"blame": false,\n\t\t\t"clipboard": true,\n\t\t\t"compare": true,\n\t\t\t"details": false,\n\t\t\t"history": false,\n\t\t\t"remote": false\n\t\t},\n\t\t"editorgroup": {\n\t\t\t"blame": true,\n\t\t\t"compare": true\n\t\t},\n\t\t"editortab": {\n\t\t\t"clipboard": true,\n\t\t\t"compare": true,\n\t\t\t"history": true,\n\t\t\t"remote": true\n\t\t},\n\t\t"explorer": {\n\t\t\t"clipboard": true,\n\t\t\t"compare": true,\n\t\t\t"history": true,\n\t\t\t"remote": true\n\t\t},\n\t\t"scmgroup": {\n\t\t\t"compare": true,\n\t\t\t"openclose": true,\n\t\t\t"stash": true,\n\t\t\t"stashinline": true\n\t\t},\n\t\t"scmitem": {\n\t\t\t"clipboard": true,\n\t\t\t"compare": true,\n\t\t\t"history": true,\n\t\t\t"remote": true,\n\t\t\t"stash": true\n\t\t}\n\t},\n\n\t// specifies the active gitlens mode, if any\n\t"gitlens.mode.active": "",\n\n\t// specifies the active gitlens mode alignment in the status bar\n\t//  - left: aligns to the left\n\t//  - right: aligns to the right\n\t"gitlens.mode.statusbar.alignment": "right",\n\n\t// specifies whether to provide the active gitlens mode in the status bar\n\t"gitlens.mode.statusbar.enabled": true,\n\n\t// specifies the user-defined gitlens modes\n\t"gitlens.modes": {\n\t\t"zen": {\n\t\t\t"name": "zen",\n\t\t\t"statusbaritemname": "zen",\n\t\t\t"description": "for a zen-like experience, disables many visual features",\n\t\t\t"codelens": false,\n\t\t\t"currentline": false,\n\t\t\t"hovers": false,\n\t\t\t"statusbar": false\n\t\t},\n\t\t"review": {\n\t\t\t"name": "review",\n\t\t\t"statusbaritemname": "reviewing",\n\t\t\t"description": "for reviewing code, enables many visual features",\n\t\t\t"codelens": true,\n\t\t\t"currentline": true,\n\t\t\t"hovers": true\n\t\t}\n\t},\n\n\t// specifies how much (if any) output will be sent to the gitlens output channel\n\t//  - silent: logs nothing\n\t//  - errors: logs only errors\n\t//  - verbose: logs all errors, warnings, and messages\n\t//  - debug: logs all errors, warnings, and messages with extra context useful for debugging\n\t"gitlens.outputlevel": "errors",\n\n\t// specifies where the highlights of the recently changed lines will be shown\n\t"gitlens.recentchanges.highlight.locations": [\n\t\t"gutter",\n\t\t"line",\n\t\t"overview"\n\t],\n\n\t// specifies how the recently changed lines annotations will be toggled\n\t//  - file: toggles each file individually\n\t//  - window: toggles the window, i.e. all files at once\n\t"gitlens.recentchanges.togglemode": "file",\n\n\t// specifies user-defined remote (code-hosting) services or custom domains for built-in remote services\n\t"gitlens.remotes": null,\n\n\t// specifies the display mode of the interactive settings editor\n\t//  - simple: only displays common settings\n\t//  - advanced: displays all settings\n\t"gitlens.settings.mode": "simple",\n\n\t// specifies whether to show what\'s new after upgrading to new feature releases\n\t"gitlens.showwhatsnewafterupgrades": true,\n\n\t// specifies the blame alignment in the status bar\n\t//  - left: aligns to the left\n\t//  - right: aligns to the right\n\t"gitlens.statusbar.alignment": "right",\n\n\t// specifies the command to be executed when the blame status bar item is clicked\n\t//  - gitlens.togglefileblame: toggles file blame annotations\n\t//  - gitlens.diffwithprevious: compares the current line commit with the previous\n\t//  - gitlens.diffwithworking: compares the current line commit with the working tree\n\t//  - gitlens.togglecodelens: toggles git code lens\n\t//  - gitlens.showquickcommitdetails: shows a commit details quick pick\n\t//  - gitlens.showquickcommitfiledetails: shows a commit file details quick pick\n\t//  - gitlens.showquickfilehistory: shows a file history quick pick\n\t//  - gitlens.showquickrepohistory: shows a branch history quick pick\n\t"gitlens.statusbar.command": "gitlens.showquickcommitdetails",\n\n\t// specifies how to format absolute dates (e.g. using the `${date}` token) in the blame information in the status bar. see the [moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats\n\t"gitlens.statusbar.dateformat": null,\n\n\t// specifies whether to provide blame information in the status bar\n\t"gitlens.statusbar.enabled": true,\n\n\t// specifies the format of the blame information in the status bar. see [_commit tokens_](https://github.com/eamodio/vscode-gitlens/wiki/custom-formatting#commit-tokens) in the gitlens docs. date formatting is controlled by the `gitlens.statusbar.dateformat` setting\n\t"gitlens.statusbar.format": "${author}, ${agoordate}",\n\n\t// specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar "flashing"\n\t"gitlens.statusbar.reduceflicker": false,\n\n\t// specifies the string to be shown in place of the _authors_ code lens when there are unsaved changes\n\t"gitlens.strings.codelens.unsavedchanges.authorsonly": "unsaved changes (cannot determine authors)",\n\n\t// specifies the string to be shown in place of both the _recent change_ and _authors_ code lens when there are unsaved changes\n\t"gitlens.strings.codelens.unsavedchanges.recentchangeandauthors": "unsaved changes (cannot determine recent change or authors)",\n\n\t// specifies the string to be shown in place of the _recent change_ code lens when there are unsaved changes\n\t"gitlens.strings.codelens.unsavedchanges.recentchangeonly": "unsaved changes (cannot determine recent change)",\n\n\t// specifies the description format of committed changes in the views. see [_commit tokens_](https://github.com/eamodio/vscode-gitlens/wiki/custom-formatting#commit-tokens) in the gitlens docs\n\t"gitlens.views.commitdescriptionformat": "${changes  •  }${author}, ${agoordate}",\n\n\t// specifies the description format of a committed file in the views. see [_file tokens_](https://github.com/eamodio/vscode-gitlens/wiki/custom-formatting#file-tokens) in the gitlens docs\n\t"gitlens.views.commitfiledescriptionformat": "${directory}${  ←  originalpath}",\n\n\t// specifies the format of a committed file in the views. see [_file tokens_](https://github.com/eamodio/vscode-gitlens/wiki/custom-formatting#file-tokens) in the gitlens docs\n\t"gitlens.views.commitfileformat": "${file}",\n\n\t// specifies the format of committed changes in the views. see [_commit tokens_](https://github.com/eamodio/vscode-gitlens/wiki/custom-formatting#commit-tokens) in the gitlens docs\n\t"gitlens.views.commitformat": "${message}",\n\n\t// specifies whether to show avatar images instead of commit (or status) icons in the _compare_ view\n\t"gitlens.views.compare.avatars": true,\n\n\t// specifies whether to show the _compare_ view\n\t"gitlens.views.compare.enabled": true,\n\n\t// specifies whether to compact (flatten) unnecessary file nesting in the _compare_ view. only applies when `gitlens.views.compare.files.layout` is set to `tree` or `auto`\n\t"gitlens.views.compare.files.compact": true,\n\n\t// specifies how the _compare_ view will display files\n\t//  - auto: automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.compare.files.threshold` value and the number of files at each nesting level\n\t//  - list: displays files as a list\n\t//  - tree: displays files as a tree\n\t"gitlens.views.compare.files.layout": "auto",\n\n\t// specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _compare_ view. only applies when `gitlens.views.compare.files.layout` is set to `auto`\n\t"gitlens.views.compare.files.threshold": 5,\n\n\t// specifies where to show the _compare_ view\n\t//  - gitlens: adds to the gitlens side bar\n\t//  - explorer: adds to the explorer side bar\n\t//  - scm: adds to the source control side bar\n\t"gitlens.views.compare.location": "gitlens",\n\n\t// specifies the default number of items to show in a view list. use 0 to specify no limit\n\t"gitlens.views.defaultitemlimit": 10,\n\n\t// specifies whether to show avatar images instead of status icons in the _file history_ view\n\t"gitlens.views.filehistory.avatars": true,\n\n\t// specifies whether to show the _file history_ view\n\t"gitlens.views.filehistory.enabled": true,\n\n\t// specifies where to show the _file history_ view\n\t//  - gitlens: adds to the gitlens side bar\n\t//  - explorer: adds to the explorer side bar\n\t//  - scm: adds to the source control side bar\n\t"gitlens.views.filehistory.location": "gitlens",\n\n\t// specifies whether to show avatar images instead of status icons in the _line history_ view\n\t"gitlens.views.linehistory.avatars": true,\n\n\t// specifies whether to show the _line history_ view\n\t"gitlens.views.linehistory.enabled": true,\n\n\t// specifies where to show the _line history_ view\n\t//  - gitlens: adds to the gitlens side bar\n\t//  - explorer: adds to the explorer side bar\n\t//  - scm: adds to the source control side bar\n\t"gitlens.views.linehistory.location": "gitlens",\n\n\t// specifies the number of items to show in a each page when paginating a view list. use 0 to specify no limit\n\t"gitlens.views.pageitemlimit": 20,\n\n\t// specifies whether to automatically refresh the _repositories_ view when the repository or the file system changes\n\t"gitlens.views.repositories.autorefresh": true,\n\n\t// specifies whether to automatically reveal repositories in the _repositories_ view when opening files\n\t"gitlens.views.repositories.autoreveal": true,\n\n\t// specifies whether to show avatar images instead of commit (or status) icons in the _repositories_ view\n\t"gitlens.views.repositories.avatars": true,\n\n\t// specifies how the _repositories_ view will display branches\n\t//  - list: displays branches as a list\n\t//  - tree: displays branches as a tree when branch names contain slashes `/`\n\t"gitlens.views.repositories.branches.layout": "tree",\n\n\t// specifies whether to show the _repositories_ view in a compact display density\n\t"gitlens.views.repositories.compact": false,\n\n\t// specifies whether to show the _repositories_ view\n\t"gitlens.views.repositories.enabled": true,\n\n\t// specifies whether to compact (flatten) unnecessary file nesting in the _repositories_ view. only applies when `gitlens.views.repositories.files.layout` is set to `tree` or `auto`\n\t"gitlens.views.repositories.files.compact": true,\n\n\t// specifies how the _repositories_ view will display files\n\t//  - auto: automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.repositories.files.threshold` value and the number of files at each nesting level\n\t//  - list: displays files as a list\n\t//  - tree: displays files as a tree\n\t"gitlens.views.repositories.files.layout": "auto",\n\n\t// specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _repositories_ view. only applies when `gitlens.views.repositories.files.layout` is set to `auto`\n\t"gitlens.views.repositories.files.threshold": 5,\n\n\t// specifies whether to include working tree file status for each repository in the _repositories_ view\n\t"gitlens.views.repositories.includeworkingtree": true,\n\n\t// specifies where to show the _repositories_ view\n\t//  - gitlens: adds to the gitlens side bar\n\t//  - explorer: adds to the explorer side bar\n\t//  - scm: adds to the source control side bar\n\t"gitlens.views.repositories.location": "gitlens",\n\n\t// specifies whether to show the tracking branch when displaying local branches in the _repositories_ view\n\t"gitlens.views.repositories.showtrackingbranch": true,\n\n\t// specifies whether to show avatar images instead of commit (or status) icons in the _search commits_ view\n\t"gitlens.views.search.avatars": true,\n\n\t// specifies whether to show the _search commits_ view\n\t"gitlens.views.search.enabled": true,\n\n\t// specifies whether to compact (flatten) unnecessary file nesting in the _search commits_ view. only applies when `gitlens.views.search.files.layout` is set to `tree` or `auto`\n\t"gitlens.views.search.files.compact": true,\n\n\t// specifies how the _search commits_ view will display files\n\t//  - auto: automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.search.files.threshold` value and the number of files at each nesting level\n\t//  - list: displays files as a list\n\t//  - tree: displays files as a tree\n\t"gitlens.views.search.files.layout": "auto",\n\n\t// specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _search commits_ view. only applies when `gitlens.views.search.files.layout` is set to `auto`\n\t"gitlens.views.search.files.threshold": 5,\n\n\t// specifies where to show the _search commits_ view\n\t//  - gitlens: adds to the gitlens side bar\n\t//  - explorer: adds to the explorer side bar\n\t//  - scm: adds to the source control side bar\n\t"gitlens.views.search.location": "gitlens",\n\n\t// specifies whether to show relative date markers (_less than a week ago_, _over a week ago_, _over a month ago_, etc) on revision (commit) histories in the views\n\t"gitlens.views.showrelativedatemarkers": true,\n\n\t// specifies the description format of stashed changes in the views. see [_commit tokens_](https://github.com/eamodio/vscode-gitlens/wiki/custom-formatting#commit-tokens) in the gitlens docs\n\t"gitlens.views.stashdescriptionformat": "${changes  •  }${agoordate}",\n\n\t// specifies the description format of a stashed file in the views. see [_file tokens_](https://github.com/eamodio/vscode-gitlens/wiki/custom-formatting#file-tokens) in the gitlens docs\n\t"gitlens.views.stashfiledescriptionformat": "${directory}${  ←  originalpath}",\n\n\t// specifies the format of a stashed file in the views. see [_file tokens_](https://github.com/eamodio/vscode-gitlens/wiki/custom-formatting#file-tokens) in the gitlens docs\n\t"gitlens.views.stashfileformat": "${file}",\n\n\t// specifies the format of stashed changes in the views. see [_commit tokens_](https://github.com/eamodio/vscode-gitlens/wiki/custom-formatting#commit-tokens) in the gitlens docs\n\t"gitlens.views.stashformat": "${message}",\n\n\t// specifies the description format of the status of a working or committed file in the views. see [_file tokens_](https://github.com/eamodio/vscode-gitlens/wiki/custom-formatting#file-tokens) in the gitlens docs\n\t"gitlens.views.statusfiledescriptionformat": "${directory}${  ←  originalpath}",\n\n\t// specifies the format of the status of a working or committed file in the views. see [_file tokens_](https://github.com/eamodio/vscode-gitlens/wiki/custom-formatting#file-tokens) in the gitlens docs\n\t"gitlens.views.statusfileformat": "${working  }${file}",\n\n\t// 控制是否自动检测 grunt 任务。默认开启。\n\t"grunt.autodetect": "on",\n\n\t// current accent color selected\n\t"materialtheme.accent": "blue",\n\n\t// 控制是否启用强制推送 (不论 force 还是 force-with-lease)。\n\t"git.allowforcepush": false,\n\n\t// 始终显示“暂存的更改”资源组。\n\t"git.alwaysshowstagedchangesresourcegroup": false,\n\n\t// 控制所有提交的 signoff 标志。\n\t"git.alwayssignoff": false,\n\n\t// 启用时，提交将自动从当前git存储库的默认远程获取。\n\t"git.autofetch": false,\n\n\t// 在启用 "git.autofetch" 情况下每次自动 git fetch 之间的间隔时间(以秒为单位)。\n\t"git.autofetchperiod": 180,\n\n\t// 是否启用自动刷新。\n\t"git.autorefresh": true,\n\n\t// 配置何时自动检测存储库。\n\t//  - true: 扫描当前打开文件夹与当前打开文件所在文件夹的子文件夹。\n\t//  - false: 禁止自动扫描存储库。\n\t//  - subfolders: 扫描当前打开文件夹的子文件夹。\n\t//  - openeditors: 扫描当前打开文件的父文件夹。\n\t"git.autorepositorydetection": true,\n\n\t// 在拉取前暂存所有更改，在成功拉取后还原这些更改。\n\t"git.autostash": false,\n\n\t// 用于验证新分支名称的正则表达式。\n\t"git.branchvalidationregex": "",\n\n\t// 在新分支名称中替换空白字符的字符。\n\t"git.branchwhitespacechar": "-",\n\n\t// 控制在运行“推送到...”功能时列出的分支类型。\n\t//  - all: 显示全部参考文献。\n\t//  - local: 只显示本地分支。\n\t//  - tags: 仅显示标记。\n\t//  - remote: 仅显示远程分支。\n\t"git.checkouttype": "all",\n\n\t// 在创建空提交时始终进行确认。\n\t"git.confirmemptycommits": true,\n\n\t// 控制在强制推送前是否进行确认。\n\t"git.confirmforcepush": true,\n\n\t// 同步 git 存储库前请先进行确认。\n\t"git.confirmsync": true,\n\n\t// 控制 git 徽章计数器。\n\t//  - all: 对所有更改计数。\n\t//  - tracked: 仅对跟踪的更改计数。\n\t//  - off: 关闭计数器。\n\t"git.countbadge": "all",\n\n\t// 控制 git 是否在资源管理器和“打开的编辑器”视图中添加颜色和小标。\n\t"git.decorations.enabled": true,\n\n\t// 克隆 git 存储库的默认位置。\n\t"git.defaultclonedirectory": null,\n\n\t// 控制是否自动检测 git 子模块。\n\t"git.detectsubmodules": true,\n\n\t// 控制可检测到的 git 子模块的限制。\n\t"git.detectsubmoduleslimit": 10,\n\n\t// 启用使用 gpg 签名的提交\n\t"git.enablecommitsigning": false,\n\n\t// 是否启用 git。\n\t"git.enabled": true,\n\n\t// 在没有暂存的更改时提交所有更改。\n\t"git.enablesmartcommit": false,\n\n\t// 在拉取时是抓取所有分支还是仅当前分支。\n\t"git.fetchonpull": false,\n\n\t// 要忽略的 git 存储库列表。\n\t"git.ignoredrepositories": [],\n\n\t// 忽略“旧版 git”警告。\n\t"git.ignorelegacywarning": false,\n\n\t// 忽略“存储库中存在大量更改”的警告。\n\t"git.ignorelimitwarning": false,\n\n\t// 忽略“缺失 git”的警告。\n\t"git.ignoremissinggitwarning": false,\n\n\t// 控制何时显示提交消息输入验证。\n\t"git.inputvalidation": "warn",\n\n\t// 控制显示提交消息长度警告的长度阈值。\n\t"git.inputvalidationlength": 72,\n\n\t// 控制显示警告的提交消息主题长度阈值。请取消设置它以继承 "config.inputvalidationlength" 的值。\n\t"git.inputvalidationsubjectlength": 50,\n\n\t// 控制单击更改时是否应打开差异编辑器。否则将打开常规编辑器。\n\t"git.opendiffonclick": true,\n\n\t// git 可执行文件的路径和文件名。例如: `c:\\program files\\git\\bin\\git.exe` (windows)。\n\t"git.path": null,\n\n\t// 成功提交后运行 git 命令。\n\t//  - none: 提交后不要运行任何命令。\n\t//  - push: 成功提交后运行\'git push\'。\n\t//  - sync: 成功提交后运行\'git sync\'。\n\t"git.postcommitcommand": "none",\n\n\t// 控制 git 是否在提交之前检查未保存的文件。\n\t"git.prompttosavefilesbeforecommit": true,\n\n\t// 在运行“同步”命令时，强制 git 使用“变基”。\n\t"git.rebasewhensync": false,\n\n\t// 在其中搜索 git 存储库的路径的列表。\n\t"git.scanrepositories": [],\n\n\t// 控制是否在 git 更改视图中显示内联“打开文件”操作。\n\t"git.showinlineopenfileaction": true,\n\n\t// 控制 git 操作是否显示进度提示。\n\t"git.showprogress": true,\n\n\t// 控制在推送成功时是否显示通知。\n\t"git.showpushsuccessnotification": false,\n\n\t// 控制是否使用更安全的 force-with-lease 进行强制推送。\n\t"git.useforcepushwithlease": true,\n\n\t// include parentheses around a sole arrow function parameter\n\t"prettier.arrowparens": "avoid",\n\n\t// controls the printing of spaces inside object literals\n\t"prettier.bracketspacing": true,\n\n\t// a list of languages ids to disable this extension on\n\t"prettier.disablelanguages": [\n\t\t"vue"\n\t],\n\n\t// specify the end of line used by prettier\n\t"prettier.endofline": "auto",\n\n\t// use \'prettier-eslint\' instead of \'prettier\'. other settings will only be fallbacks in case they could not be inferred from eslint rules.\n\t"prettier.eslintintegration": false,\n\n\t// specify the global whitespace sensitivity for html files.\n\t//  valid options: \n\t// \'css\' - respect the default value of css display property. \n\t// \'strict\' - whitespaces are considered sensitive. \n\t// \'ignore\' - whitespaces are considered insensitive.\n\t"prettier.htmlwhitespacesensitivity": "css",\n\n\t// path to a .prettierignore or similar file\n\t"prettier.ignorepath": ".prettierignore",\n\n\t// if true, puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line\n\t"prettier.jsxbracketsameline": false,\n\n\t// use single quotes instead of double quotes in jsx\n\t"prettier.jsxsinglequote": false,\n\n\t// override the parser. you shouldn\'t have to change this setting.\n\t"prettier.parser": "babylon",\n\n\t// fit code within this line limit\n\t"prettier.printwidth": 80,\n\n\t// (markdown) wrap prose over multiple lines\n\t"prettier.prosewrap": "preserve",\n\n\t// change when properties in objects are quoted\n\t"prettier.quoteprops": "as-needed",\n\n\t// require a \'prettierconfig\' to format\n\t"prettier.requireconfig": false,\n\n\t// whether to add a semicolon at the end of every line\n\t"prettier.semi": true,\n\n\t// if true, will use single instead of double quotes\n\t"prettier.singlequote": false,\n\n\t// use \'prettier-stylelint\' instead of \'prettier\'. other settings will only be fallbacks in case they could not be inferred from stylelint rules.\n\t"prettier.stylelintintegration": false,\n\n\t// number of spaces it should use per tab\n\t"prettier.tabwidth": 2,\n\n\t// controls the printing of trailing commas wherever possible.\n\t//  valid options:\n\t//     \'none\' - no trailing commas\n\t//     \'es5\' - trailing commas where valid in es5 (objects, arrays, etc)\n\t//     \'all\' - trailing commas wherever possible (function arguments)\n\t"prettier.trailingcomma": "none",\n\n\t// use \'prettier-tslint\' instead of \'prettier\'. other settings will only be fallbacks in case they could not be inferred from tslint rules.\n\t"prettier.tslintintegration": false,\n\n\t// indent lines with tabs\n\t"prettier.usetabs": false,\n\n\t// 不应展开 emmet 缩写的语言数组。\n\t"emmet.excludelanguages": [\n\t\t"markdown"\n\t],\n\n\t// 指向包含 emmet 配置文件与代码片段的文件夹路径。\n\t"emmet.extensionspath": null,\n\n\t// 在默认不支持 emmet 的语言中启用 emmet 缩写功能。在此添加该语言与受支持的语言间的映射。\n\t// 示例: `{"vue-html": "html", "javascript": "javascriptreact"}`\n\t"emmet.includelanguages": {},\n\n\t// 当设置为 `false` 时，将分析整个文件并确定当前位置能否展开 emmet 缩写。当设置为 `true` 时，将仅在 css/scss/less 文件中分析当前位置周围的内容。\n\t"emmet.optimizestylesheetparsing": true,\n\n\t// 用于修改 emmet 某些操作和解析程序的行为的首选项。\n\t"emmet.preferences": {},\n\n\t// 将可能的 emmet 缩写作为建议进行显示。当在样式表中或 emmet.showexpandedabbreviation 设置为 `"never"` 时不适用。\n\t"emmet.showabbreviationsuggestions": true,\n\n\t// 将展开的 emmet 缩写作为建议进行显示。\n\t// 若选择 `"inmarkupandstylesheetfilesonly"`，将在 html、haml、jade、slim、xml、xsl、css、scss、sass、less 和 stylus 文件中生效。\n\t// 若选择 `"always"`，将在所有适用文件 (不仅仅是标记或 css 文件) 的所有部分生效。\n\t"emmet.showexpandedabbreviation": "always",\n\n\t// 若为 `true`，emmet 建议将显示为代码片段。可以在 `editor.snippetsuggestions` 设置中排列其顺序。\n\t"emmet.showsuggestionsassnippets": false,\n\n\t// 为指定的语法定义配置文件或使用带有特定规则的配置文件。\n\t"emmet.syntaxprofiles": {},\n\n\t// 启用后，按下 tab 键，将展开 emmet 缩写。\n\t"emmet.triggerexpansionontab": false,\n\n\t// 用于 emmet 代码片段的变量\n\t"emmet.variables": {},\n\n\t// set the languages that the extension will be activated.  e.g. ["html","xml","php"]. use ["*"] to activate for all languages.\n\t"auto-close-tag.activationonlanguage": [\n\t\t"xml",\n\t\t"php",\n\t\t"blade",\n\t\t"ejs",\n\t\t"jinja",\n\t\t"javascript",\n\t\t"javascriptreact",\n\t\t"typescript",\n\t\t"typescriptreact",\n\t\t"plaintext",\n\t\t"markdown",\n\t\t"vue",\n\t\t"liquid",\n\t\t"erb",\n\t\t"lang-cfml",\n\t\t"cfml",\n\t\t"html (eex)"\n\t],\n\n\t// whether to close self-closing tag automatically\n\t"auto-close-tag.enableautocloseselfclosingtag": true,\n\n\t// whether to insert close tag automatically\n\t"auto-close-tag.enableautoclosetag": true,\n\n\t// set the tag list that would not be auto closed.\n\t"auto-close-tag.excludedtags": [\n\t\t"area",\n\t\t"base",\n\t\t"br",\n\t\t"col",\n\t\t"command",\n\t\t"embed",\n\t\t"hr",\n\t\t"img",\n\t\t"input",\n\t\t"keygen",\n\t\t"link",\n\t\t"meta",\n\t\t"param",\n\t\t"source",\n\t\t"track",\n\t\t"wbr"\n\t],\n\n\t// enable both visual studio and sublime text mode\n\t"auto-close-tag.fullmode": false,\n\n\t// auto close tag when </ is typed, same as sublime text 3\n\t"auto-close-tag.sublimetext3mode": false,\n\n\t// 是否在解决合并冲突后自动转到下一个合并冲突。\n\t"merge-conflict.autonavigatenextconflict.enabled": false,\n\n\t// 为编辑器中的合并冲突区域创建 codelens。\n\t"merge-conflict.codelens.enabled": true,\n\n\t// 为编辑器中的合并冲突区域创建提示小标。\n\t"merge-conflict.decorators.enabled": true,\n\n\t// set the languages that the extension will be activated.  e.g. ["html","xml","php"] by default, it is ["*"] and will be activated for all languages.\n\t"auto-rename-tag.activationonlanguage": [\n\t\t"*"\n\t],\n\n\t// 控制是否自动检测 npm 脚本。\n\t"npm.autodetect": "on",\n\n\t// 在资源管理器中启用“npm 脚本”视图。\n\t"npm.enablescriptexplorer": false,\n\n\t// 配置应从自动脚本检测中排除的文件夹的 glob 模式。\n\t"npm.exclude": "",\n\n\t// 从 https://registry.npmjs/org 和 https://registry.bower.io 获取数据，并在 npm 依赖中提供自动完成和悬停信息功能。\n\t"npm.fetchonlinepackageinfo": true,\n\n\t// 用于运行脚本的程序包管理器。\n\t"npm.packagemanager": "npm",\n\n\t// 使用 `--silent` 选项运行 npm 命令。\n\t"npm.runsilent": false,\n\n\t// 在脚本资源管理器中点击时进行的默认操作: `open` (打开) 或 `run` (运行)。默认值为 `open`。\n\t"npm.scriptexploreraction": "open",\n\n\t// whether to clear previous output before each run.\n\t"code-runner.clearpreviousoutput": false,\n\n\t// set the custom command to run.\n\t"code-runner.customcommand": "echo hello",\n\n\t// set the working directory.\n\t"code-runner.cwd": "",\n\n\t// set the default language to run.\n\t"code-runner.defaultlanguage": "",\n\n\t// whether to enable appinsights to track user telemetry data.\n\t"code-runner.enableappinsights": true,\n\n\t// set the executor of each language.\n\t"code-runner.executormap": {\n\t\t"javascript": "node",\n\t\t"java": "cd $dir && javac $filename && java $filenamewithoutext",\n\t\t"c": "cd $dir && gcc $filename -o $filenamewithoutext && $dir$filenamewithoutext",\n\t\t"cpp": "cd $dir && g++ $filename -o $filenamewithoutext && $dir$filenamewithoutext",\n\t\t"objective-c": "cd $dir && gcc -framework cocoa $filename -o $filenamewithoutext && $dir$filenamewithoutext",\n\t\t"php": "php",\n\t\t"python": "python -u",\n\t\t"perl": "perl",\n\t\t"perl6": "perl6",\n\t\t"ruby": "ruby",\n\t\t"go": "go run",\n\t\t"lua": "lua",\n\t\t"groovy": "groovy",\n\t\t"powershell": "powershell -executionpolicy bypass -file",\n\t\t"bat": "cmd /c",\n\t\t"shellscript": "bash",\n\t\t"fsharp": "fsi",\n\t\t"csharp": "scriptcs",\n\t\t"vbscript": "cscript //nologo",\n\t\t"typescript": "ts-node",\n\t\t"coffeescript": "coffee",\n\t\t"scala": "scala",\n\t\t"swift": "swift",\n\t\t"julia": "julia",\n\t\t"crystal": "crystal",\n\t\t"ocaml": "ocaml",\n\t\t"r": "rscript",\n\t\t"applescript": "osascript",\n\t\t"clojure": "lein exec",\n\t\t"haxe": "haxe --cwd $dirwithouttrailingslash --run $filenamewithoutext",\n\t\t"rust": "cd $dir && rustc $filename && $dir$filenamewithoutext",\n\t\t"racket": "racket",\n\t\t"ahk": "autohotkey",\n\t\t"autoit": "autoit3",\n\t\t"dart": "dart",\n\t\t"pascal": "cd $dir && fpc $filename && $dir$filenamewithoutext",\n\t\t"d": "cd $dir && dmd $filename && $dir$filenamewithoutext",\n\t\t"haskell": "runhaskell",\n\t\t"nim": "nim compile --verbosity:0 --hints:off --run",\n\t\t"lisp": "sbcl --script",\n\t\t"kit": "kitc --run"\n\t},\n\n\t// set the executor of each file extension.\n\t"code-runner.executormapbyfileextension": {\n\t\t".vb": "cd $dir && vbc /nologo $filename && $dir$filenamewithoutext",\n\t\t".vbs": "cscript //nologo",\n\t\t".scala": "scala",\n\t\t".jl": "julia",\n\t\t".cr": "crystal",\n\t\t".ml": "ocaml",\n\t\t".exs": "elixir",\n\t\t".hx": "haxe --cwd $dirwithouttrailingslash --run $filenamewithoutext",\n\t\t".rkt": "racket",\n\t\t".ahk": "autohotkey",\n\t\t".au3": "autoit3",\n\t\t".kt": "cd $dir && kotlinc $filename -include-runtime -d $filenamewithoutext.jar && java -jar $filenamewithoutext.jar",\n\t\t".kts": "kotlinc -script",\n\t\t".dart": "dart",\n\t\t".pas": "cd $dir && fpc $filename && $dir$filenamewithoutext",\n\t\t".pp": "cd $dir && fpc $filename && $dir$filenamewithoutext",\n\t\t".d": "cd $dir && dmd $filename && $dir$filenamewithoutext",\n\t\t".hs": "runhaskell",\n\t\t".nim": "nim compile --verbosity:0 --hints:off --run",\n\t\t".csproj": "dotnet run --project",\n\t\t".fsproj": "dotnet run --project",\n\t\t".lisp": "sbcl --script",\n\t\t".kit": "kitc --run"\n\t},\n\n\t// set the executor by glob.\n\t"code-runner.executormapbyglob": {\n\t\t"pom.xml": "cd $dir && mvn clean package"\n\t},\n\n\t// whether to use the directory of the file to be executed as the working directory.\n\t"code-runner.filedirectoryascwd": false,\n\n\t// whether to ignore selection to always run entire file.\n\t"code-runner.ignoreselection": false,\n\n\t// set the mapping of languageid to file extension.\n\t"code-runner.languageidtofileextensionmap": {\n\t\t"bat": ".bat",\n\t\t"powershell": ".ps1",\n\t\t"typescript": ".ts"\n\t},\n\n\t// whether to preserve focus on code editor after code run is triggered.\n\t"code-runner.preservefocus": true,\n\n\t// whether to respect shebang to run code.\n\t"code-runner.respectshebang": true,\n\n\t// whether to run code in integrated terminal.\n\t"code-runner.runinterminal": false,\n\n\t// whether to save all files before running.\n\t"code-runner.saveallfilesbeforerun": false,\n\n\t// whether to save the current file before running.\n\t"code-runner.savefilebeforerun": false,\n\n\t// whether to show extra execution message like [running] ... and [done] ...\n\t"code-runner.showexecutionmessage": true,\n\n\t// whether to show \'run code\' command in editor context menu.\n\t"code-runner.showruncommandineditorcontextmenu": true,\n\n\t// whether to show \'run code\' command in explorer context menu.\n\t"code-runner.showruncommandinexplorercontextmenu": true,\n\n\t// whether to show \'run code\' icon in editor title menu.\n\t"code-runner.showruniconineditortitlemenu": true,\n\n\t// temporary file name used in running selected code snippet. when it is set as empty, the file name will be random.\n\t"code-runner.temporaryfilename": "tempcoderunnerfile",\n\n\t// for windows system, replaces the windows style drive letter in the command with a unix style root when using a custom shell as the terminal, like bash or cgywin. example: setting this to \'/mnt/\' will replace \'c:\\path\' with \'/mnt/c/path\'\n\t"code-runner.terminalroot": "",\n\n\t// include completion for module export and auto import them\n\t"vetur.completion.autoimport": true,\n\n\t// casing conversion for tag completion\n\t//  - initial: use the key in `components: {...}` as is for tag completion and do not force any casing\n\t//  - kebab: kebab-case completion for <my-tag>\n\t"vetur.completion.tagcasing": "kebab",\n\n\t// enable/disable vetur\'s built-in scaffolding snippets\n\t"vetur.completion.usescaffoldsnippets": true,\n\n\t// log level for vls\n\t//  - info: only log info messages. this is the default.\n\t//  - debug: log info and debug messages.\n\t"vetur.dev.loglevel": "info",\n\n\t// path to vls for vetur developers. there are two ways of using it. \n\t// \n\t// 1. clone vuejs/vetur from github, build it and point it to the absolute path of `/server`.\n\t// 2. `yarn global add vue-language-server` and point vetur to the installed location (`yarn global dir` + node_modules/vue-language-server)\n\t"vetur.dev.vlspath": "",\n\n\t// the port that vls listens to. can be used for attaching to the vls node process for debugging / profiling.\n\t"vetur.dev.vlsport": -1,\n\n\t// enable template interpolation service that offers diagnostics / hover / definition / references.\n\t"vetur.experimental.templateinterpolationservice": false,\n\n\t// default formatter for <style> region\n\t//  - none: disable formatting\n\t//  - prettier: css formatter using css parser from prettier\n\t"vetur.format.defaultformatter.css": "prettier",\n\n\t// default formatter for <template> region\n\t//  - none: disable formatting\n\t//  - prettyhtml: prettyhtml\n\t//  - js-beautify-html: html formatter of js-beautify\n\t//  - prettier: prettier\n\t"vetur.format.defaultformatter.html": "prettyhtml",\n\n\t// default formatter for <script> region\n\t//  - none: disable formatting\n\t//  - prettier: js formatter from prettier\n\t//  - prettier-eslint: prettier-eslint\n\t//  - vscode-typescript: js formatter from typescript\n\t"vetur.format.defaultformatter.js": "prettier",\n\n\t// default formatter for <style lang=\'less\'> region\n\t//  - none: disable formatting\n\t//  - prettier: less formatter using postcss parser from prettier\n\t"vetur.format.defaultformatter.less": "prettier",\n\n\t// default formatter for <style lang=\'postcss\'> region\n\t//  - none: disable formatting\n\t//  - prettier: postcss formatter using css parser from prettier\n\t"vetur.format.defaultformatter.postcss": "prettier",\n\n\t// default formatter for <style lang=\'scss\'> region\n\t//  - none: disable formatting\n\t//  - prettier: scss formatter using scss parser from prettier\n\t"vetur.format.defaultformatter.scss": "prettier",\n\n\t// default formatter for <style lang=\'stylus\'> region\n\t//  - none: disable formatting\n\t//  - stylus-supremacy: stylus formatter from stylus-supremacy\n\t"vetur.format.defaultformatter.stylus": "stylus-supremacy",\n\n\t// default formatter for <script> region\n\t//  - none: disable formatting\n\t//  - prettier: ts formatter using typescript parser from prettier\n\t//  - vscode-typescript: ts formatter from typescript\n\t"vetur.format.defaultformatter.ts": "prettier",\n\n\t// options for all default formatters\n\t"vetur.format.defaultformatteroptions": {\n\t\t"js-beautify-html": {\n\t\t\t"wrap_attributes": "force-expand-multiline"\n\t\t},\n\t\t"prettyhtml": {\n\t\t\t"printwidth": 100,\n\t\t\t"singlequote": false,\n\t\t\t"wrapattributes": false,\n\t\t\t"sortattributes": false\n\t\t}\n\t},\n\n\t// enable/disable the vetur document formatter.\n\t"vetur.format.enable": true,\n\n\t// number of spaces per indentation level. inherited by all formatters.\n\t"vetur.format.options.tabsize": 2,\n\n\t// use tabs for indentation. inherited by all formatters.\n\t"vetur.format.options.usetabs": false,\n\n\t// whether to have initial indent for <script> region\n\t"vetur.format.scriptinitialindent": false,\n\n\t// whether to have initial indent for <style> region\n\t"vetur.format.styleinitialindent": false,\n\n\t// mapping from custom block tag name to language name. used for generating grammar to support syntax highlighting for custom blocks.\n\t"vetur.grammar.customblocks": {\n\t\t"docs": "md",\n\t\t"i18n": "json"\n\t},\n\n\t// traces the communication between vs code and vue language server.\n\t"vetur.trace.server": "off",\n\n\t// use dependencies from workspace. currently only for typescript.\n\t"vetur.useworkspacedependencies": false,\n\n\t// validate js/ts in <script>\n\t"vetur.validation.script": true,\n\n\t// validate css/scss/less/postcss in <style>\n\t"vetur.validation.style": true,\n\n\t// validate vue-html in <template> using eslint-plugin-vue\n\t"vetur.validation.template": true,\n\n\t// css for the active scope. use {color} to match the bracket color. the string types listed at https://code.visualstudio.com/docs/extensionapi/vscode-api#decorationrenderoptions can be used\n\t"bracketpaircolorizer.activescopecss": [\n\t\t"borderstyle : solid",\n\t\t"borderwidth : 1px",\n\t\t"bordercolor : {color}; opacity: 0.5"\n\t],\n\n\t// should different brackets share a color group (consecutive), or use their own color group (independent)\n\t"bracketpaircolorizer.colormode": "consecutive",\n\n\t// define paired characters and their shared color group\n\t"bracketpaircolorizer.consecutivepaircolors": [\n\t\t"()",\n\t\t"[]",\n\t\t"{}",\n\t\t[\n\t\t\t"gold",\n\t\t\t"orchid",\n\t\t\t"lightskyblue"\n\t\t],\n\t\t"red"\n\t],\n\n\t// don\'t colorize files of these languages\n\t"bracketpaircolorizer.excludedlanguages": [],\n\n\t// should opening brackets iterate the color cycle even if they are not nested\n\t"bracketpaircolorizer.forceiterationcolorcycle": false,\n\n\t// ensure that an opening brackets color does not match a previous brackets color\n\t"bracketpaircolorizer.forceuniqueopeningcolor": false,\n\n\t// should the active scope brackets always be highlighted? recommended to disable editor.matchbrackets if using this feature.\n\t"bracketpaircolorizer.highlightactivescope": false,\n\n\t// define paired characters and their color groups\n\t"bracketpaircolorizer.independentpaircolors": [\n\t\t[\n\t\t\t"()",\n\t\t\t[\n\t\t\t\t"gold",\n\t\t\t\t"orchid",\n\t\t\t\t"lightskyblue"\n\t\t\t],\n\t\t\t"red"\n\t\t],\n\t\t[\n\t\t\t"[]",\n\t\t\t[\n\t\t\t\t"gold",\n\t\t\t\t"orchid",\n\t\t\t\t"lightskyblue"\n\t\t\t],\n\t\t\t"red"\n\t\t],\n\t\t[\n\t\t\t"{}",\n\t\t\t[\n\t\t\t\t"gold",\n\t\t\t\t"orchid",\n\t\t\t\t"lightskyblue"\n\t\t\t],\n\t\t\t"red"\n\t\t]\n\t],\n\n\t// show active bracket scope in ruler?\n\t"bracketpaircolorizer.rulerposition": "center",\n\n\t// css for the scope line. use {color} to match the bracket color. the string types listed at https://code.visualstudio.com/docs/extensionapi/vscode-api#decorationrenderoptions can be used\n\t"bracketpaircolorizer.scopelinecss": [\n\t\t"borderstyle : solid",\n\t\t"borderwidth : 1px",\n\t\t"bordercolor : {color}; opacity: 0.5"\n\t],\n\n\t// true: scope line will start from the ending bracket position. false: scope line will always be at column 0\n\t"bracketpaircolorizer.scopelinerelativeposition": true,\n\n\t// show active bracket scope in gutter?\n\t"bracketpaircolorizer.showbracketsingutter": false,\n\n\t// show active bracket scope in ruler?\n\t"bracketpaircolorizer.showbracketsinruler": false,\n\n\t// show a horizontal line to create a block around the active bracket scope?\n\t"bracketpaircolorizer.showhorizontalscopeline": true,\n\n\t// show a vertical line on the left side of the editor representing the active bracket scope?\n\t"bracketpaircolorizer.showverticalscopeline": true,\n\n\t// how long the user should idle for, before the document is colorized. set to 0 to disable\n\t"bracketpaircolorizer.timeout": 200,\n\n\t// 控制是否自动检测 jake 任务。默认开启。\n\t"jake.autodetect": "on",\n\n\t// qiniu accesskey\n\t"markdown-preview-enhanced.accesskey": "",\n\n\t// automatically show preview of markdown being edited.\n\t"markdown-preview-enhanced.automaticallyshowpreviewofmarkdownbeingedited": true,\n\n\t// in markdown, a single newline character doesn\'t cause a line break in the generated html. in github flavored markdown, that is not true. enable this config option to insert line breaks in rendered html for single newlines in markdown source.\n\t"markdown-preview-enhanced.breakonsinglenewline": true,\n\n\t// qiniu bucket\n\t"markdown-preview-enhanced.bucket": "",\n\n\t// code block theme. if `auto.css` is chosen, then the code block theme that best matches the current preview theme will be picked.\n\t"markdown-preview-enhanced.codeblocktheme": "auto.css",\n\n\t// qiniu domain\n\t"markdown-preview-enhanced.domain": "http://",\n\n\t// enable criticmarkup syntax. only works with markdown-it parser. please check http://criticmarkup.com/users-guide.php for more information.\n\t"markdown-preview-enhanced.enablecriticmarkupsyntax": false,\n\n\t// enable emoji & font-awesome plugin. this only works for markdown-it parser, but not pandoc parser.\n\t"markdown-preview-enhanced.enableemojisyntax": true,\n\n\t// enable extended table syntax to support merging table cells.\n\t"markdown-preview-enhanced.enableextendedtablesyntax": false,\n\n\t// enable or disable conversion of url-like text to links in the markdown preview.\n\t"markdown-preview-enhanced.enablelinkify": true,\n\n\t// enables executing code chunks and importing javascript files.\n\t// ⚠️ please use this feature with caution because it may put your security at risk! your machine can get hacked if someone makes you open a markdown with malicious code while script execution is enabled.\n\t"markdown-preview-enhanced.enablescriptexecution": false,\n\n\t// enable smartypants and other sweet transforms.\n\t"markdown-preview-enhanced.enabletypographer": false,\n\n\t// enable wiki link syntax support. more information can be found at https://help.github.com/articles/adding-links-to-wikis/\n\t"markdown-preview-enhanced.enablewikilinksyntax": true,\n\n\t// front matter rendering option\n\t"markdown-preview-enhanced.frontmatterrenderingoption": "none",\n\n\t// when using image helper to copy images, by default images will be copied to root image folder path \'/assets\'\n\t"markdown-preview-enhanced.imagefolderpath": "/assets",\n\n\t// you can choose different image uploader to upload image\n\t"markdown-preview-enhanced.imageuploader": "imgur",\n\n\t// default latex engine for pandoc export and latex code chunk.\n\t"markdown-preview-enhanced.latexengine": "pdflatex",\n\n\t// re-render the preview as the contents of the source changes, without requiring the source buffer to be saved. if disabled, the preview is re-rendered only when the buffer is saved to disk.\n\t"markdown-preview-enhanced.liveupdate": true,\n\n\t// use customized math expression block delimiters.\n\t"markdown-preview-enhanced.mathblockdelimiters": [\n\t\t[\n\t\t\t"$$",\n\t\t\t"$$"\n\t\t],\n\t\t[\n\t\t\t"\\\\[",\n\t\t\t"\\\\]"\n\t\t]\n\t],\n\n\t// use customized math expression inline delimiters.\n\t"markdown-preview-enhanced.mathinlinedelimiters": [\n\t\t[\n\t\t\t"$",\n\t\t\t"$"\n\t\t],\n\t\t[\n\t\t\t"\\\\(",\n\t\t\t"\\\\)"\n\t\t]\n\t],\n\n\t// choose the math expression rendering method option for gfm markdown export (save as markdown).\n\t"markdown-preview-enhanced.mathrenderingonlineservice": "https://latex.codecogs.com/gif.latex",\n\n\t// choose the math expression rendering method here. you can also disable math rendering if you want by choosing \'none\'.\n\t"markdown-preview-enhanced.mathrenderingoption": "katex",\n\n\t// mermaid theme, you can choose one from ["mermaid.css", "mermaid.dark.css", "mermaid.forest.css"]\n\t"markdown-preview-enhanced.mermaidtheme": "mermaid.css",\n\n\t// comma separated pandoc arguments e.g. `--smart, --filter=/bin/exe`. please use long argument names.\n\t"markdown-preview-enhanced.pandocarguments": "",\n\n\t// the pandoc markdown flavor you want\n\t"markdown-preview-enhanced.pandocmarkdownflavor": "markdown-raw_tex+tex_math_single_backslash",\n\n\t// pandoc executable path\n\t"markdown-preview-enhanced.pandocpath": "pandoc",\n\n\t// phantomjs executable path\n\t"markdown-preview-enhanced.phantompath": "phantomjs",\n\n\t// preview theme\n\t"markdown-preview-enhanced.previewtheme": "github-light.css",\n\n\t// whether to print background for file export or not. if set to `false`, then `github-light` preview theme will be used. you can also set `print_background` in front-matter for individual files.\n\t"markdown-preview-enhanced.printbackground": false,\n\n\t// accepted protocols for links.\n\t"markdown-preview-enhanced.protocolswhitelist": "http://, https://, atom://, file://, mailto:, tel:",\n\n\t// revealjs presentation theme\n\t"markdown-preview-enhanced.revealjstheme": "white.css",\n\n\t// automatic scroll sync. this is now partially supported.\n\t"markdown-preview-enhanced.scrollsync": true,\n\n\t// qiniu secretkey\n\t"markdown-preview-enhanced.secretkey": "",\n\n\t// open only one preview.\n\t"markdown-preview-enhanced.singlepreview": true,\n\n\t// enable this option will render markdown by pandoc instead of markdown-it.\n\t"markdown-preview-enhanced.usepandocparser": false,\n\n\t// by default, the extension for wikilink is `.md`. for example: [[test]] will direct to file path `test.md`.\n\t"markdown-preview-enhanced.wikilinkfileextension": ".md",\n\n\t// 在创建时询问 gist 的名称. 能够帮助你识别多个 gist.\n\t"sync.askgistname": false,\n\n\t// 设置为 true 在编辑器打开时自动下载远程配置. [需要重启]\n\t"sync.autodownload": false,\n\n\t// 设置为 true 在编辑器打开时自动上传本地配置. [需要重启]\n\t"sync.autoupload": false,\n\n\t// 设置为 true 将会下载远程配置, 即便本地已有更新的配置.\n\t"sync.forcedownload": false,\n\n\t// 设置同步使用的 github gist id\n\t"sync.gist": "",\n\n\t// 如果设置为 true, 开启静默模式. 上传和下载的概要信息显示在状态栏而非输出面板\n\t"sync.quietsync": false,\n\n\t// 设置为 false 如果你不想在下载时移除扩展.\n\t"sync.removeextensions": true,\n\n\t// 设置为 false 如果你不想上传/下载扩展.\n\t"sync.syncextensions": true,\n\n\t// note: if it is not null, it will override custombrowser and chromedebuggingattachment settings.\n\t// \n\t//  examples : \n\t// chrome --incognito --headless --remote-debugging-port=9222 \n\t//  c:\\\\program files\\\\firefox developer edition\\\\firefox.exe --private-window\n\t"liveserver.settings.advancecustombrowsercmdline": null,\n\n\t// enable chrome debugging attachment to live server at debuging port 9222.\n\t//  note: you have to install \'debugger for chrome\' \n\t// if the value is true, select \'attach to chrome\' from debug window to start debugging. \n\t// \n\t//  caution: if it is true, \'launch chrome against localhost\' may not work.\n\t"liveserver.settings.chromedebuggingattachment": false,\n\n\t// specify custom browser settings for live server. \n\t// by default it will open your default favorite browser.\n\t"liveserver.settings.custombrowser": null,\n\n\t// to disable information pop up messages.\n\t"liveserver.settings.donotshowinfomsg": false,\n\n\t// to turn off prompt warning message if body or head or other supporting tag is missing in your html.\n\t"liveserver.settings.donotverifytags": false,\n\n\t// when set, serve this file (server root relative) for every 404 (useful for single-page applications)\n\t"liveserver.settings.file": "",\n\n\t// by default live server inject css changes without full reloading of browser. you can change this behviour by making this setting as `true`\n\t"liveserver.settings.fullreload": false,\n\n\t// to switch between localhost or 127.0.0.1 or anything else. default is 127.0.0.1\n\t"liveserver.settings.host": "127.0.0.1",\n\n\t// setup https configuration\n\t"liveserver.settings.https": {\n\t\t"enable": false,\n\t\t"cert": "",\n\t\t"key": "",\n\t\t"passphrase": ""\n\t},\n\n\t// to ignore specific file changes\n\t"liveserver.settings.ignorefiles": [\n\t\t".vscode/**",\n\t\t"**/*.scss",\n\t\t"**/*.sass",\n\t\t"**/*.ts"\n\t],\n\n\t// mount a directory to a route. such as [[\'/components\', \'./node_modules\']]\n\t"liveserver.settings.mount": [],\n\n\t// this the entry point of server when you\'re in multiroot workspace\n\t"liveserver.settings.multirootworkspacename": null,\n\n\t// if it is true live server will start without browser opened.\n\t"liveserver.settings.nobrowser": false,\n\n\t// set custom port number of live server. set 0 if you want random port.\n\t"liveserver.settings.port": 5500,\n\n\t// to setup proxy\n\t"liveserver.settings.proxy": {\n\t\t"enable": false,\n\t\t"baseuri": "/",\n\t\t"proxyuri": "http://127.0.0.1:80"\n\t},\n\n\t// set custom root of live server. \n\t// to change root the the server to sub folder of workspace, use \'/\' and relative path from workspace. \n\t// example: /subfolder1/subfolder2\n\t"liveserver.settings.root": "/",\n\n\t// change this to false if you don\'t want the button to show in the statusbar\n\t"liveserver.settings.showonstatusbar": true,\n\n\t// open in browser preview inside vs code, instead of default browser\n\t"liveserver.settings.usebrowserpreview": false,\n\n\t// use local ip as host\n\t"liveserver.settings.uselocalip": false,\n\n\t// you have to install a browser extension. that will be works for your dynamic pages (like php).\n\t"liveserver.settings.usewebext": false,\n\n\t// delay before live reloading. value in milliseconds. default is 100\n\t"liveserver.settings.wait": 100,\n\n\t// 选择一个图标包。\n\t//  - angular: angular的图标。\n\t//  - angular_ngrx: angular和ngrx的图标。\n\t//  - react: react的图标。\n\t//  - react_redux: react和redux的图标。\n\t//  - none: 没有启用图标包。\n\t"material-icon-theme.activeiconpack": "angular",\n\n\t// 设置自定义文件图标关联。\n\t"material-icon-theme.files.associations": {},\n\n\t// 设置自定义文件夹图标关联。\n\t"material-icon-theme.folders.associations": {},\n\n\t// 更改文件夹图标的颜色。\n\t"material-icon-theme.folders.color": "#90a4ae",\n\n\t// 设置文件夹图标的类型。\n\t//  - specific: 选择特定文件夹图标。\n\t//  - classic: 选择经典文件夹图标。\n\t//  - none: 没有文件夹图标。\n\t"material-icon-theme.folders.theme": "specific",\n\n\t// 隐藏该文件夹旁边的箭头。\n\t"material-icon-theme.hidesexplorerarrows": false,\n\n\t// 定义自定义语言映射的图标。\n\t"material-icon-theme.languages.associations": {},\n\n\t// 更改图标的透明度。\n\t"material-icon-theme.opacity": 1,\n\n\t// change the saturation of the icons.\n\t"material-icon-theme.saturation": 1,\n\n\t// 显示重启消息。\n\t"material-icon-theme.showreloadmessage": true,\n\n\t// 更新后显示升级信息。\n\t"material-icon-theme.showupdatemessage": false,\n\n\t// 首次安装后显示欢迎信息。\n\t"material-icon-theme.showwelcomemessage": true,\n\n\t// 当 node.js 从集成终端以调试模式启动时自动附加 node 调试器\n\t//  - disabled: 自动附加被禁用，且不在状态栏中显示。\n\t//  - on: 自动附加已启用。\n\t//  - off: 自动附加未启用。\n\t"debug.node.autoattach": "disabled",\n\n\t// 控制是否自动检测 gulp 任务。默认开启。\n\t"gulp.autodetect": "on",\n\n\t// sets an absolute path to the current workspace\n\t"path-intellisense.absolutepathtoworkspace": true,\n\n\t// automatically adds slash after directory\n\t"path-intellisense.autoslashafterdirectory": false,\n\n\t// adds the file extension to a import statements\n\t"path-intellisense.extensiononimport": false,\n\n\t// mappings for paths\n\t"path-intellisense.mappings": {},\n\n\t// show hidden files\n\t"path-intellisense.showhiddenfiles": false,\n\n\t// override the kind of an extension. `ui` extensions are installed and run on the local machine while `workspace` extensions are run on the remote. by overriding an extension\'s default kind using this setting, you specify if that extension should be installed and enabled locally or remotely.\n\t"remote.extensionkind": {\n\t\t"pub.name": "ui"\n\t},\n\n\t// controls whether \'peek references\' or \'find references\' is invoked when selecting code lens references\n\t//  - peek: show references in peek editor.\n\t//  - view: show references in separate view.\n\t"references.preferredlocation": "peek",\n\n}\n',charsets:{cjk:!0},lastUpdated:"2022/05/10, 10:40:17",lastUpdatedTimestamp:1652179217e3},{title:"2022提高国内访问 Github 速度的 5 种方法！",frontmatter:{title:"2022提高国内访问 Github 速度的 5 种方法！",date:"2021-02-28T20:55:40.000Z",permalink:"/pages/a782fe/",categories:["GitHub"],tags:[null],sticky:1,readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/05.GitHub/01.2022%E6%8F%90%E9%AB%98%E5%9B%BD%E5%86%85%E8%AE%BF%E9%97%AEGithub%E9%80%9F%E5%BA%A6%E7%9A%845%E7%A7%8D%E6%96%B9%E6%B3%95.html",relativePath:"06.工具/05.GitHub/01.2022提高国内访问Github速度的5种方法.md",key:"v-263c2b80",path:"/pages/a782fe/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:35},{level:3,title:"MuaCloud 机场",slug:"muacloud-机场",normalizedTitle:"muacloud 机场",charIndex:42},{level:3,title:"利用第三方镜像下载",slug:"利用第三方镜像下载",normalizedTitle:"利用第三方镜像下载",charIndex:57},{level:3,title:"通过代理网站下载",slug:"通过代理网站下载",normalizedTitle:"通过代理网站下载",charIndex:70},{level:3,title:"Gitee中转fork仓库下载",slug:"gitee中转fork仓库下载",normalizedTitle:"gitee中转fork仓库下载",charIndex:82},{level:3,title:"修改Hosts文件进行加速",slug:"修改hosts文件进行加速",normalizedTitle:"修改hosts文件进行加速",charIndex:1222}],headersStr:"前言 MuaCloud 机场 利用第三方镜像下载 通过代理网站下载 Gitee中转fork仓库下载 修改Hosts文件进行加速",content:"# 2022提高国内访问 Github 速度的 5 种方法！\n\n\n# 前言\n\n * MuaCloud 机场\n * 利用第三方镜像下载\n * 通过代理网站下载\n * Gitee中转fork仓库下载\n * 修改 HOSTS 文件进行加速\n\n\n# MuaCloud 机场\n\nMuaCloud 机场，注册账号，在商店购买套餐然后首页复制订阅地址导入Clash开启代理，访问Google测试是否成功。\n\n\n\n> 教程 https://muacloud.live/user/tutorial?os=Windows&client=Clash\n\nClash工具\n\n * Clash Download 官网\n\n * Clash for Windows 汉化版\n\n * ClashX Pro for Mac\n\nClashX Pro 可开启增强模式下终端会走代理流量，克隆仓库、安装依赖包等可节省70%~90%时间，缺点可能影响到项目开发，添加忽略网站地址。\n\n> Windows用户可以借助Proxifier软件实现全局代理。\n\n\n# 利用第三方镜像下载\n\n第一种 安装油猴插件和脚本\n\n * 油猴插件\n * Github 增强 - 高速下载\n\n为 Github 的 Git Clone、Release、Raw、Code(ZIP) 等文件添加 高速下载（加速下载）。\n\n第二种 安装GitHub加速插件\n\n * GitHub加速\n\n提供Release、Code(ZIP) tag文件加速。\n\n\n\n\n# 通过代理网站下载\n\nRelease、Code(ZIP) 文件加速：\n\n * https://gh.api.99988866.xyz\n * https://github.rc1844.workers.dev\n * https://ghgo.feizhuqwq.workers.dev\n * https://git.yumenaka.net\n * https://github.com.cnpmjs.org\n * https://mirror.ghproxy.com/\n * https://ghproxy.com/\n * https://toolwa.com/github/\n\nGit Clone 加速：\n\n * https://github.do\n * https://gitclone.com\n * https://hub.fastgit.xyz\n * https://ghproxy.com\n * https://hub.0z.gs\n\n具体哪个速度快，请自行找一些大文件来测速。\n\n\n# Gitee中转fork仓库下载\n\n访问 gitee 网站并登录，在顶部选择“从GitHub/GitLab 导入仓库” 如下\n\n\n\n在页面中粘贴你的Github仓库地址，点击导入即可\n\n导入成功，git clone仓库，下载速度可以达到2MB/s，就是有点费事。\n\n\n# 修改Hosts文件进行加速\n\n自从 2021.3 月初某会开始，很多地区已经间歇性无法访问 Github 了。 这种情况无论是改 DNS 还是改 Hosts 都没用，因为对 Github 域名 SNI 干扰/封锁，任意 IP 指向 Github 去访问时，该 IP 的 443 端口就会超时 3 分钟！ 因为是随机干扰的，所以有时候会碰到 “短暂” 可用的 IP\n\n> 有兴趣可以看看这篇详细讲解分析的文章：https://www.v2ex.com/t/758568\n\n所以修改HOSTS文件进行加速方法是否还有效，可以自测。 下载修改HOSTS小工具\n\n * SwitchHosts -修改HOSTS小工具\n\n定时同步\n\n添加一条规则：\n\n * 方案名：GitHub\n * 类型：远程\n * URL 地址：https://gitee.com/ineo6/hosts/raw/master/hosts\n * 自动更新：1个小时\n\n\n\n刷新DNS缓存\n\n打开终端，输入对应命令\n\n// Mac用户\nsudo killall -HUP mDNSResponder\n\n// Win\nipconfig /flushdns\n\n\n> 原文地址：https://github.com/ineo6/hosts\n\n有兴趣可以阅读文章SwitchHosts! 还能这样管理 hosts，后悔没早点用 了解详情，里面有介绍以及各个平台刷新 DNS 缓存的方法。\n\n参考\n\n * https://github.com/ineo6/hosts\n * https://www.beiwangshan.com/205.html\n * https://greasyfork.org/zh-CN/scripts/412245-github-%E5%A2%9E%E5%BC%BA-%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD",normalizedContent:"# 2022提高国内访问 github 速度的 5 种方法！\n\n\n# 前言\n\n * muacloud 机场\n * 利用第三方镜像下载\n * 通过代理网站下载\n * gitee中转fork仓库下载\n * 修改 hosts 文件进行加速\n\n\n# muacloud 机场\n\nmuacloud 机场，注册账号，在商店购买套餐然后首页复制订阅地址导入clash开启代理，访问google测试是否成功。\n\n\n\n> 教程 https://muacloud.live/user/tutorial?os=windows&client=clash\n\nclash工具\n\n * clash download 官网\n\n * clash for windows 汉化版\n\n * clashx pro for mac\n\nclashx pro 可开启增强模式下终端会走代理流量，克隆仓库、安装依赖包等可节省70%~90%时间，缺点可能影响到项目开发，添加忽略网站地址。\n\n> windows用户可以借助proxifier软件实现全局代理。\n\n\n# 利用第三方镜像下载\n\n第一种 安装油猴插件和脚本\n\n * 油猴插件\n * github 增强 - 高速下载\n\n为 github 的 git clone、release、raw、code(zip) 等文件添加 高速下载（加速下载）。\n\n第二种 安装github加速插件\n\n * github加速\n\n提供release、code(zip) tag文件加速。\n\n\n\n\n# 通过代理网站下载\n\nrelease、code(zip) 文件加速：\n\n * https://gh.api.99988866.xyz\n * https://github.rc1844.workers.dev\n * https://ghgo.feizhuqwq.workers.dev\n * https://git.yumenaka.net\n * https://github.com.cnpmjs.org\n * https://mirror.ghproxy.com/\n * https://ghproxy.com/\n * https://toolwa.com/github/\n\ngit clone 加速：\n\n * https://github.do\n * https://gitclone.com\n * https://hub.fastgit.xyz\n * https://ghproxy.com\n * https://hub.0z.gs\n\n具体哪个速度快，请自行找一些大文件来测速。\n\n\n# gitee中转fork仓库下载\n\n访问 gitee 网站并登录，在顶部选择“从github/gitlab 导入仓库” 如下\n\n\n\n在页面中粘贴你的github仓库地址，点击导入即可\n\n导入成功，git clone仓库，下载速度可以达到2mb/s，就是有点费事。\n\n\n# 修改hosts文件进行加速\n\n自从 2021.3 月初某会开始，很多地区已经间歇性无法访问 github 了。 这种情况无论是改 dns 还是改 hosts 都没用，因为对 github 域名 sni 干扰/封锁，任意 ip 指向 github 去访问时，该 ip 的 443 端口就会超时 3 分钟！ 因为是随机干扰的，所以有时候会碰到 “短暂” 可用的 ip\n\n> 有兴趣可以看看这篇详细讲解分析的文章：https://www.v2ex.com/t/758568\n\n所以修改hosts文件进行加速方法是否还有效，可以自测。 下载修改hosts小工具\n\n * switchhosts -修改hosts小工具\n\n定时同步\n\n添加一条规则：\n\n * 方案名：github\n * 类型：远程\n * url 地址：https://gitee.com/ineo6/hosts/raw/master/hosts\n * 自动更新：1个小时\n\n\n\n刷新dns缓存\n\n打开终端，输入对应命令\n\n// mac用户\nsudo killall -hup mdnsresponder\n\n// win\nipconfig /flushdns\n\n\n> 原文地址：https://github.com/ineo6/hosts\n\n有兴趣可以阅读文章switchhosts! 还能这样管理 hosts，后悔没早点用 了解详情，里面有介绍以及各个平台刷新 dns 缓存的方法。\n\n参考\n\n * https://github.com/ineo6/hosts\n * https://www.beiwangshan.com/205.html\n * https://greasyfork.org/zh-cn/scripts/412245-github-%e5%a2%9e%e5%bc%ba-%e9%ab%98%e9%80%9f%e4%b8%8b%e8%bd%bd",charsets:{cjk:!0},lastUpdated:"2022/05/11, 15:37:12",lastUpdatedTimestamp:1652283432e3},{title:"GitHub+jsDelivr+PicGo打造免费图床",frontmatter:{title:"GitHub+jsDelivr+PicGo打造免费图床",date:"2021-7-28",tags:[null],permalink:"/pages/4cf2e1/",categories:["GitHub"],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/05.GitHub/03.GitHub+jsDelivr+PicGo%E6%89%93%E9%80%A0%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A.html",relativePath:"06.工具/05.GitHub/03.GitHub+jsDelivr+PicGo打造免费图床.md",key:"v-19bcd3ab",path:"/pages/4cf2e1/",headers:[{level:2,title:"目前图床优劣",slug:"目前图床优劣",normalizedTitle:"目前图床优劣",charIndex:34},{level:2,title:"搭建教程",slug:"搭建教程",normalizedTitle:"搭建教程",charIndex:338},{level:3,title:"新建 GitHub 仓库",slug:"新建-github-仓库",normalizedTitle:"新建 github 仓库",charIndex:348},{level:3,title:"生成个人访问令牌Token",slug:"生成个人访问令牌token",normalizedTitle:"生成个人访问令牌token",charIndex:452},{level:3,title:"配置 PicGo",slug:"配置-picgo",normalizedTitle:"配置 picgo",charIndex:378},{level:3,title:"上传图片测试",slug:"上传图片测试",normalizedTitle:"上传图片测试",charIndex:827}],headersStr:"目前图床优劣 搭建教程 新建 GitHub 仓库 生成个人访问令牌Token 配置 PicGo 上传图片测试",content:"# GitHub+jsDelivr+PicGo打造免费图床\n\n\n# 目前图床优劣\n\n 1. 微博等博客图床：以前用的人比较多，从 2019 年 4 月开始开启了防盗链，凉凉。\n 2. SM.MS：运营四年多了，也变得越来越慢了，到了晚上直接打不开图片，速度堪忧。\n 3. 其他小众图床：随时有挂掉的风险。\n 4. Imgur等国外图床：国内访问速度太慢，随时有被墙的风险。\n 5. 优质储存服务：例如七牛云、又拍云、腾讯云COS、阿里云OSS等，操作繁琐，又是实名认证又是域名备案的等。说真的以后网站的访问量大的话，还的买带宽等服务，按月收费，费用高。\n 6. GitHub 图床：免费，但是国内访问速度慢（利用 jsDelivr 提供的免费的 CDN 加速，鸡贼）\n\n\n# 搭建教程\n\n 1. 新建 GitHub 仓库\n 2. 创建个人访问令牌\n 3. 配置 PicGo 设置\n 4. 上传图片，获取jsDelivr 地址\n\n\n# 新建 GitHub 仓库\n\n创建一个仓库，用来存放图片。\n\n\n\n\n# 生成个人访问令牌Token\n\n前往设置\n\n作用：授权仓库的操作权限，通过API实现自动化。\n\n\n\n然后填写 Token 描述，勾选 repo、write、read然后点击 Generate token 生成一个 Token\n\n\n\n因为 Token 只会显示一次，所以先保存笔记本等。\n\n\n\n\n# 配置 PicGo\n\n前往PicGo官网\n\n安装好后开始配置图床\n\n 1. 设定仓库名：按照 用户名/仓库名 的格式填写（就是刚才创建的仓库）\n\n 2. 设定分支名：master\n\n 3. 设定 Token：粘贴之前叫你保存的Token。\n\n 4. 设定自定义域名：它的的作用是，在图片上传后，PicGo 会按照自定义域名+上传的图片名的方式生成访问链接，放到粘贴板上。 https://cdn.jsdelivr.net/gh/用户名/仓库名\n\n\n\n\n# 上传图片测试\n\n上传图片后，在相册可以看到刚才的图片，点击复制的URL就是通过jsdelivr CDN加速的。\n\n\n\n此外 PicGo 还有相册功能，可以对已上传的图片进行删除，修改链接等快捷操作，PicGo 还可以生成不同格式的链接、支持批量上传、快捷键上传、自定义链接格式、上传前重命名等，更多功能自己去探索吧！\n\n最后，以上步骤只是通过工具提升效率罢了，了解github地址转化成jsDelivr地址规则，其实就能愉快的撸羊毛。\n\n> 某分支和版本号大小不能超过50M会直接被jsDelivr屏蔽。所以单某个分支接近临界值，换分支继续就得了。\n\n相关文章\n\nGitHub 通过 jsdelivr CDN加持\n\n参考文章\n\n * https://www.cnblogs.com/sitoi/p/11848816.html",normalizedContent:"# github+jsdelivr+picgo打造免费图床\n\n\n# 目前图床优劣\n\n 1. 微博等博客图床：以前用的人比较多，从 2019 年 4 月开始开启了防盗链，凉凉。\n 2. sm.ms：运营四年多了，也变得越来越慢了，到了晚上直接打不开图片，速度堪忧。\n 3. 其他小众图床：随时有挂掉的风险。\n 4. imgur等国外图床：国内访问速度太慢，随时有被墙的风险。\n 5. 优质储存服务：例如七牛云、又拍云、腾讯云cos、阿里云oss等，操作繁琐，又是实名认证又是域名备案的等。说真的以后网站的访问量大的话，还的买带宽等服务，按月收费，费用高。\n 6. github 图床：免费，但是国内访问速度慢（利用 jsdelivr 提供的免费的 cdn 加速，鸡贼）\n\n\n# 搭建教程\n\n 1. 新建 github 仓库\n 2. 创建个人访问令牌\n 3. 配置 picgo 设置\n 4. 上传图片，获取jsdelivr 地址\n\n\n# 新建 github 仓库\n\n创建一个仓库，用来存放图片。\n\n\n\n\n# 生成个人访问令牌token\n\n前往设置\n\n作用：授权仓库的操作权限，通过api实现自动化。\n\n\n\n然后填写 token 描述，勾选 repo、write、read然后点击 generate token 生成一个 token\n\n\n\n因为 token 只会显示一次，所以先保存笔记本等。\n\n\n\n\n# 配置 picgo\n\n前往picgo官网\n\n安装好后开始配置图床\n\n 1. 设定仓库名：按照 用户名/仓库名 的格式填写（就是刚才创建的仓库）\n\n 2. 设定分支名：master\n\n 3. 设定 token：粘贴之前叫你保存的token。\n\n 4. 设定自定义域名：它的的作用是，在图片上传后，picgo 会按照自定义域名+上传的图片名的方式生成访问链接，放到粘贴板上。 https://cdn.jsdelivr.net/gh/用户名/仓库名\n\n\n\n\n# 上传图片测试\n\n上传图片后，在相册可以看到刚才的图片，点击复制的url就是通过jsdelivr cdn加速的。\n\n\n\n此外 picgo 还有相册功能，可以对已上传的图片进行删除，修改链接等快捷操作，picgo 还可以生成不同格式的链接、支持批量上传、快捷键上传、自定义链接格式、上传前重命名等，更多功能自己去探索吧！\n\n最后，以上步骤只是通过工具提升效率罢了，了解github地址转化成jsdelivr地址规则，其实就能愉快的撸羊毛。\n\n> 某分支和版本号大小不能超过50m会直接被jsdelivr屏蔽。所以单某个分支接近临界值，换分支继续就得了。\n\n相关文章\n\ngithub 通过 jsdelivr cdn加持\n\n参考文章\n\n * https://www.cnblogs.com/sitoi/p/11848816.html",charsets:{cjk:!0},lastUpdated:"2022/05/10, 10:40:17",lastUpdatedTimestamp:1652179217e3},{title:"GitHub仓库下载慢几种解决办法",frontmatter:{title:"GitHub仓库下载慢几种解决办法",date:"2021-5-28",permalink:"/pages/95565e/",categories:["GitHub"],tags:[null],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/05.GitHub/05.GitHub%E4%BB%93%E5%BA%93%E4%B8%8B%E8%BD%BD%E6%85%A2%E5%87%A0%E7%A7%8D%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html",relativePath:"06.工具/05.GitHub/05.GitHub仓库下载慢几种解决办法.md",key:"v-6e89be9f",path:"/pages/95565e/",headers:[{level:2,title:"科学的上网",slug:"科学的上网",normalizedTitle:"科学的上网",charIndex:74},{level:2,title:"码云",slug:"码云",normalizedTitle:"码云",charIndex:19},{level:2,title:"cnpmjs 镜像",slug:"cnpmjs-镜像",normalizedTitle:"cnpmjs 镜像",charIndex:205},{level:2,title:"hosts",slug:"hosts",normalizedTitle:"hosts",charIndex:43},{level:3,title:"window",slug:"window",normalizedTitle:"window",charIndex:702},{level:3,title:"MAC",slug:"mac",normalizedTitle:"mac",charIndex:827},{level:3,title:"通过工具快捷修改hosts",slug:"通过工具快捷修改hosts",normalizedTitle:"通过工具快捷修改hosts",charIndex:918},{level:3,title:"刷新 DNS 缓存",slug:"刷新-dns-缓存",normalizedTitle:"刷新 dns 缓存",charIndex:1108},{level:2,title:"GitClone",slug:"gitclone",normalizedTitle:"gitclone",charIndex:53},{level:3,title:"设置git的超时参数",slug:"设置git的超时参数",normalizedTitle:"设置git的超时参数",charIndex:1341},{level:3,title:"方法1：修改URL",slug:"方法1-修改url",normalizedTitle:"方法1：修改url",charIndex:1496},{level:3,title:"方法二 修改git配置",slug:"方法二-修改git配置",normalizedTitle:"方法二 修改git配置",charIndex:1660}],headersStr:"科学的上网 码云 cnpmjs 镜像 hosts window MAC 通过工具快捷修改hosts 刷新 DNS 缓存 GitClone 设置git的超时参数 方法1：修改URL 方法二 修改git配置",content:'目录\n\n 1. vps/代理\n 2. 码云中转下载\n 3. cnpmjs镜像\n 4. hosts\n 5. GitClone 缓存加速(新)\n\n\n# 科学的上网\n\n全局上网后如果下载速度并没有显著提升的话，搭配代理Proxifier等工具。\n\n\n# 码云\n\n登录码云官网后点击 + 选择从GitHub导入仓库。\n\n\n\n然后进入这个页面。\n\n\n\n导入成功，复制url或者地址，用法和github一样。\n\n\n\n\n# cnpmjs 镜像\n\n这个方法更加的简单,只需要修改你的路径github.com为github.com.cnpmjs.org\n\ngit clone https://github.com/qqlcx5/editor.git\n\n#改为\ngit clone https://github.com.cnpmjs.org/qqlcx5/editor.git\n\n\n\n\n# hosts\n\n解决办法\n\n直接找出github域名所对应的IP地址，直接添加在本地host中。这样每次请求gihub时就无须在向DNS查询地址了。\n\nDNS查找IP地址\n\n将下列的IP地址替换成点击对应的地址获取IP地址。\n\n * github.global.ssl.fastly.net\n\n * github.com\n\n * github-cloud.s3.amazonaws.com\n\n例：\n\n199.232.69.194 github.global.ssl.fastly.net \n140.82.112.3 github.com\n52.217.82.236 github-cloud.s3.amazonaws.com\n\n\n\n# window\n\n在我的电脑复制下列地址回车键，看到hosts文件，然后复制我的桌面。\n\nC:\\Windows\\System32\\drivers\\etc\n\n\n将刚才的地址复制进去保存，然后将保存的文件拖拽到刚才的地址进行替换。（需要管理权限）\n\n\n# MAC\n\n按快捷键 shift + option + G弹出对话框，粘贴 /etc/hosts，回车键，看到host复一份修改，然后替换原来文件，类似上面window操作。\n\n\n# 通过工具快捷修改hosts\n\nSwitchHosts开源地址: https://github.com/oldj/SwitchHosts/releases\n\nMacOS下载懒人链接: SwitchHosts._macOS_3.5.4.5517.dmg\n\nWindows下载懒人链接: SwitchHosts._windows_portable_3.5.4.5517.exe\n\n\n# 刷新 DNS 缓存\n\n在终端或CMD中，执行以下命令：\n\nWindow： ipconfig/flushdns\nmac执行：sudo dscacheutil –flushcache\n\n\n\n# GitClone\n\n当开发者经gitclone.com中转clone github上的代码库时，gitclone.com会对代码库进行mirror缓存，以后有开发者clone时，将直接从mirror缓存中获取数据，mirror将在每天夜间从github.com同步。\n\n\n# 设置git的超时参数\n\n首先要设置git的超时参数，防止项目较大时，服务器端mirror时间过长导致git报504（超时）\n\ngit config --global http.lowSpeedLimit 0\ngit config --global http.lowSpeedTime 999999 \n\n\n\n# 方法1：修改URL\n\n该仓库总大小30M左右，拿来作为实验对象。\n\ngithub\nhttps://github.com/qqlcx5/editor\n\nGitClone\ngit clone https://gitclone.com/github.com/qqlcx5/editor\n\n\n大概在10秒内下载完成，觉得不错。\n\n\n# 方法二 修改git配置\n\ngit config --global url."https://gitclone.com/github.com/".insteadOf https://github.com/\n\n\n在这补充一点，官网推荐 git config --global url.“https://gitclone.com/".insteadOf https://，个人觉得不是友好，毕竟还有很多仓库，如果上面这样写的话，估计也会走gitclone通道。估计引发XX问题。\n\n了解更多前往gitclone官网\n\n参考链接\n\nhttps://www.jianshu.com/p/0493dcc15d6f',normalizedContent:'目录\n\n 1. vps/代理\n 2. 码云中转下载\n 3. cnpmjs镜像\n 4. hosts\n 5. gitclone 缓存加速(新)\n\n\n# 科学的上网\n\n全局上网后如果下载速度并没有显著提升的话，搭配代理proxifier等工具。\n\n\n# 码云\n\n登录码云官网后点击 + 选择从github导入仓库。\n\n\n\n然后进入这个页面。\n\n\n\n导入成功，复制url或者地址，用法和github一样。\n\n\n\n\n# cnpmjs 镜像\n\n这个方法更加的简单,只需要修改你的路径github.com为github.com.cnpmjs.org\n\ngit clone https://github.com/qqlcx5/editor.git\n\n#改为\ngit clone https://github.com.cnpmjs.org/qqlcx5/editor.git\n\n\n\n\n# hosts\n\n解决办法\n\n直接找出github域名所对应的ip地址，直接添加在本地host中。这样每次请求gihub时就无须在向dns查询地址了。\n\ndns查找ip地址\n\n将下列的ip地址替换成点击对应的地址获取ip地址。\n\n * github.global.ssl.fastly.net\n\n * github.com\n\n * github-cloud.s3.amazonaws.com\n\n例：\n\n199.232.69.194 github.global.ssl.fastly.net \n140.82.112.3 github.com\n52.217.82.236 github-cloud.s3.amazonaws.com\n\n\n\n# window\n\n在我的电脑复制下列地址回车键，看到hosts文件，然后复制我的桌面。\n\nc:\\windows\\system32\\drivers\\etc\n\n\n将刚才的地址复制进去保存，然后将保存的文件拖拽到刚才的地址进行替换。（需要管理权限）\n\n\n# mac\n\n按快捷键 shift + option + g弹出对话框，粘贴 /etc/hosts，回车键，看到host复一份修改，然后替换原来文件，类似上面window操作。\n\n\n# 通过工具快捷修改hosts\n\nswitchhosts开源地址: https://github.com/oldj/switchhosts/releases\n\nmacos下载懒人链接: switchhosts._macos_3.5.4.5517.dmg\n\nwindows下载懒人链接: switchhosts._windows_portable_3.5.4.5517.exe\n\n\n# 刷新 dns 缓存\n\n在终端或cmd中，执行以下命令：\n\nwindow： ipconfig/flushdns\nmac执行：sudo dscacheutil –flushcache\n\n\n\n# gitclone\n\n当开发者经gitclone.com中转clone github上的代码库时，gitclone.com会对代码库进行mirror缓存，以后有开发者clone时，将直接从mirror缓存中获取数据，mirror将在每天夜间从github.com同步。\n\n\n# 设置git的超时参数\n\n首先要设置git的超时参数，防止项目较大时，服务器端mirror时间过长导致git报504（超时）\n\ngit config --global http.lowspeedlimit 0\ngit config --global http.lowspeedtime 999999 \n\n\n\n# 方法1：修改url\n\n该仓库总大小30m左右，拿来作为实验对象。\n\ngithub\nhttps://github.com/qqlcx5/editor\n\ngitclone\ngit clone https://gitclone.com/github.com/qqlcx5/editor\n\n\n大概在10秒内下载完成，觉得不错。\n\n\n# 方法二 修改git配置\n\ngit config --global url."https://gitclone.com/github.com/".insteadof https://github.com/\n\n\n在这补充一点，官网推荐 git config --global url.“https://gitclone.com/".insteadof https://，个人觉得不是友好，毕竟还有很多仓库，如果上面这样写的话，估计也会走gitclone通道。估计引发xx问题。\n\n了解更多前往gitclone官网\n\n参考链接\n\nhttps://www.jianshu.com/p/0493dcc15d6f',charsets:{cjk:!0},lastUpdated:"2022/05/10, 10:40:17",lastUpdatedTimestamp:1652179217e3},{title:"Mac必备工具 — Homebrew国内源",frontmatter:{title:"Mac必备工具 — Homebrew国内源",date:"2022-01-08T19:41:13.000Z",permalink:"/pages/70e61d/",categories:[null],tags:[null],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/03.Mac/02.Mac%E5%BC%80%E5%8F%91%E5%BF%85%E5%A4%87%E5%B7%A5%E5%85%B7%E2%80%94Homebrew%E5%9B%BD%E5%86%85%E6%BA%90.html",relativePath:"06.工具/03.Mac/02.Mac开发必备工具—Homebrew国内源.md",key:"v-50155f45",path:"/pages/70e61d/",headers:[{level:2,title:"介绍",slug:"介绍",normalizedTitle:"介绍",charIndex:28},{level:2,title:"快速安装",slug:"快速安装",normalizedTitle:"快速安装",charIndex:462},{level:2,title:"卸载",slug:"卸载",normalizedTitle:"卸载",charIndex:658},{level:3,title:"常用命令",slug:"常用命令",normalizedTitle:"常用命令",charIndex:856}],headersStr:"介绍 快速安装 卸载 常用命令",content:'# Mac必备工具 — Homebrew国内源\n\n\n# 介绍\n\nHomebrew是一款包管理工具，目前支持macOS和Linux系统。\n\n由于官方提供下载地址，经常安装等待一段时间之后遇到下面提示\n\n/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"\n\n// 报错\ncurl: (7) Failed to connect to raw.githubusercontent.com port 443: Operation timed out\n\n\n经过多次测试，发现raw.githubusercontent.com访问很不稳定，我们中国大陆用户访问的话经常容易访问不到其资源。\n\n好奇为什么官方不通过JSDelivr等免费的CDN解决该问题？\n\n所以在此基于官方的源码上修改其中raw.githubusercontent.com切换成中科大镜像，亲测速度还不错，哈哈放心食用。\n\n\n# 快速安装\n\nJSDelivr\n\n/bin/bash -c "$(curl -fsSL https://cdn.jsdelivr.net/gh/qqlcx5/homebrew/install.sh)"\n\n\n码云\n\n/bin/bash -c "$(curl -fsSL https://gitee.com/qqlcx5/homebrew/raw/master/install.sh)"\n\n\n\n# 卸载\n\nJSDelivr\n\n/bin/bash -c "$(curl -fsSL https://cdn.jsdelivr.net/gh/qqlcx5/homebrew/uninstall.sh)"\n\n\n码云\n\n/bin/bash -c "$(curl -fsSL https://gitee.com/qqlcx5/homebrew/raw/master/uninstall.sh)"\n\n\n\n# 常用命令\n\n * brew help 查看帮助\n * brew list 列出已安装的软件包\n * brew install <package name> 安装软件包\n * brew uninstall <package name> 卸载软件包\n * brew search <package name> 查找软件包\n * brew info <package name> 查看软件包信息\n * brew -v 查看brew版本\n * brew update 更新brew\n * brew outdated 列出需要更新的软件包\n * brew upgrade [<package name>]可选指定更新某个软件包，默认更新所有软件包',normalizedContent:'# mac必备工具 — homebrew国内源\n\n\n# 介绍\n\nhomebrew是一款包管理工具，目前支持macos和linux系统。\n\n由于官方提供下载地址，经常安装等待一段时间之后遇到下面提示\n\n/bin/bash -c "$(curl -fssl https://raw.githubusercontent.com/homebrew/install/head/install.sh)"\n\n// 报错\ncurl: (7) failed to connect to raw.githubusercontent.com port 443: operation timed out\n\n\n经过多次测试，发现raw.githubusercontent.com访问很不稳定，我们中国大陆用户访问的话经常容易访问不到其资源。\n\n好奇为什么官方不通过jsdelivr等免费的cdn解决该问题？\n\n所以在此基于官方的源码上修改其中raw.githubusercontent.com切换成中科大镜像，亲测速度还不错，哈哈放心食用。\n\n\n# 快速安装\n\njsdelivr\n\n/bin/bash -c "$(curl -fssl https://cdn.jsdelivr.net/gh/qqlcx5/homebrew/install.sh)"\n\n\n码云\n\n/bin/bash -c "$(curl -fssl https://gitee.com/qqlcx5/homebrew/raw/master/install.sh)"\n\n\n\n# 卸载\n\njsdelivr\n\n/bin/bash -c "$(curl -fssl https://cdn.jsdelivr.net/gh/qqlcx5/homebrew/uninstall.sh)"\n\n\n码云\n\n/bin/bash -c "$(curl -fssl https://gitee.com/qqlcx5/homebrew/raw/master/uninstall.sh)"\n\n\n\n# 常用命令\n\n * brew help 查看帮助\n * brew list 列出已安装的软件包\n * brew install <package name> 安装软件包\n * brew uninstall <package name> 卸载软件包\n * brew search <package name> 查找软件包\n * brew info <package name> 查看软件包信息\n * brew -v 查看brew版本\n * brew update 更新brew\n * brew outdated 列出需要更新的软件包\n * brew upgrade [<package name>]可选指定更新某个软件包，默认更新所有软件包',charsets:{cjk:!0},lastUpdated:"2022/05/11, 01:36:55",lastUpdatedTimestamp:1652233015e3},{title:"使用GitHub自建免费小型图床",frontmatter:{title:"使用GitHub自建免费小型图床",date:"2021-1-28",permalink:"/pages/d945b5/",categories:[null],tags:[null],readingShow:"top"},regularPath:"/06.%E5%B7%A5%E5%85%B7/05.GitHub/06.Github%E6%96%87%E4%BB%B6%E8%BD%ACjsdelivr%E5%9C%B0%E5%9D%80.html",relativePath:"06.工具/05.GitHub/06.Github文件转jsdelivr地址.md",key:"v-78a9b73a",path:"/pages/d945b5/",headers:[{level:2,title:"条件限制",slug:"条件限制",normalizedTitle:"条件限制",charIndex:23}],headersStr:"条件限制",content:"# 使用GitHub自建免费小型图床\n\n\n# 条件限制\n\nGitHub 用来作小型图床完美的选择，但是随着文章图片越来越多，势必超过50M\n\n> 程序包大小超出了配置的50 MB限制。 两种引用方式：\n\n * 存入仓库分支里面，直接引用\n * 创建版本号后，在引用\n\n在这是不是很好奇，为什么引用要弄成这么麻烦。网上我看过类似教程，他们总是忽略一个关键的原因避而不谈，因为这点也原因差点坑了我。超过50M jsdelivr就无法访问。为了能免费撸羊毛，建议使用发布版本号方案，只要单次版本号的大小不超过50M即可，多次版本号就可以突破50M限制。\n\n> 程序包大小超出了配置的50 MB限制。\n\n很好奇为什么我会发现这个问题。我作了一个假设，如果仓库存放超多的图片的资源，且能够访问的话，那么这种教程，作为一种免费撸羊毛的手段在中国应该被大佬推荐，不至于到现在还不温不火。终其原因我尝试上传几张超大的图片，就被提示无法访问，分成两次版本号后（单次不超过50M）总大小超过50M却能正常访问。\n\n1. 直接引用\n\n格式为：\n\nhttps://cdn.jsdelivr.net/gh/<用户名>/<仓库名>/<文件及路径>\n\n\n例：\n\nGitHub\n\nhttps://github.com/qqlcx5/figure-bed/blob/master/img/20200710230327.jpg\n\n转成 jsdelivr\n\nhttps://cdn.jsdelivr.net/gh/qqlcx5/figure-bed/img/20200710230327.jpg\n\n\n总结：\n\ngithub.com`替换成cdn.jsdelivr.net/gh\n\n/blob/master 删除\n\n\n版本号\n\n版本号用@符链接。格式：\n\nhttps://cdn.jsdelivr.net/gh/<用户名>/<仓库名>@[版本号]/<文件及路径>\n\n\n例：\n\nGitHub\n\nhttps://github.com/qqlcx5/figure-bed/blob/1.0/img/20200710230327.jpg\n\n转成 jsdelivr\n\nhttps://cdn.jsdelivr.net/gh/qqlcx5/figure-bed@1.0/img/20200710230327.jpg\n\n\n总结：\n\ngithub.com`替换成cdn.jsdelivr.net/gh\n\n/blob/ 替换成 @ \n注：1.0 创建的版本号\n\n\n已发布的版本不会受到仓库内容变化的影响 如何按版本号引用。链接相对稳定也是我特别推荐的原因。",normalizedContent:"# 使用github自建免费小型图床\n\n\n# 条件限制\n\ngithub 用来作小型图床完美的选择，但是随着文章图片越来越多，势必超过50m\n\n> 程序包大小超出了配置的50 mb限制。 两种引用方式：\n\n * 存入仓库分支里面，直接引用\n * 创建版本号后，在引用\n\n在这是不是很好奇，为什么引用要弄成这么麻烦。网上我看过类似教程，他们总是忽略一个关键的原因避而不谈，因为这点也原因差点坑了我。超过50m jsdelivr就无法访问。为了能免费撸羊毛，建议使用发布版本号方案，只要单次版本号的大小不超过50m即可，多次版本号就可以突破50m限制。\n\n> 程序包大小超出了配置的50 mb限制。\n\n很好奇为什么我会发现这个问题。我作了一个假设，如果仓库存放超多的图片的资源，且能够访问的话，那么这种教程，作为一种免费撸羊毛的手段在中国应该被大佬推荐，不至于到现在还不温不火。终其原因我尝试上传几张超大的图片，就被提示无法访问，分成两次版本号后（单次不超过50m）总大小超过50m却能正常访问。\n\n1. 直接引用\n\n格式为：\n\nhttps://cdn.jsdelivr.net/gh/<用户名>/<仓库名>/<文件及路径>\n\n\n例：\n\ngithub\n\nhttps://github.com/qqlcx5/figure-bed/blob/master/img/20200710230327.jpg\n\n转成 jsdelivr\n\nhttps://cdn.jsdelivr.net/gh/qqlcx5/figure-bed/img/20200710230327.jpg\n\n\n总结：\n\ngithub.com`替换成cdn.jsdelivr.net/gh\n\n/blob/master 删除\n\n\n版本号\n\n版本号用@符链接。格式：\n\nhttps://cdn.jsdelivr.net/gh/<用户名>/<仓库名>@[版本号]/<文件及路径>\n\n\n例：\n\ngithub\n\nhttps://github.com/qqlcx5/figure-bed/blob/1.0/img/20200710230327.jpg\n\n转成 jsdelivr\n\nhttps://cdn.jsdelivr.net/gh/qqlcx5/figure-bed@1.0/img/20200710230327.jpg\n\n\n总结：\n\ngithub.com`替换成cdn.jsdelivr.net/gh\n\n/blob/ 替换成 @ \n注：1.0 创建的版本号\n\n\n已发布的版本不会受到仓库内容变化的影响 如何按版本号引用。链接相对稳定也是我特别推荐的原因。",charsets:{cjk:!0},lastUpdated:"2022/05/10, 10:40:17",lastUpdatedTimestamp:1652179217e3},{title:"前端收藏夹",frontmatter:{title:"前端收藏夹",date:"2022-02-28T00:39:24.000Z",permalink:"/bookmarks/",categories:["收藏夹"],tags:[null],readingShow:"top"},regularPath:"/07.%E6%94%B6%E8%97%8F%E5%A4%B9/01.%E6%94%B6%E8%97%8F%E5%A4%B9.html",relativePath:"07.收藏夹/01.收藏夹.md",key:"v-e1d3dcf6",path:"/bookmarks/",headers:[{level:2,title:"前端常用",slug:"前端常用",normalizedTitle:"前端常用",charIndex:91},{level:2,title:"Css && 动画",slug:"css-动画",normalizedTitle:"css &amp;&amp; 动画",charIndex:null},{level:2,title:"Vue",slug:"vue",normalizedTitle:"vue",charIndex:116},{level:2,title:"实践库",slug:"实践库",normalizedTitle:"实践库",charIndex:125},{level:2,title:"文档",slug:"文档",normalizedTitle:"文档",charIndex:134},{level:2,title:"工具库",slug:"工具库",normalizedTitle:"工具库",charIndex:142},{level:2,title:"Node",slug:"node",normalizedTitle:"node",charIndex:151},{level:3,title:"工具库",slug:"工具库-2",normalizedTitle:"工具库",charIndex:142},{level:3,title:"命令行",slug:"命令行",normalizedTitle:"命令行",charIndex:174},{level:3,title:"文件处理",slug:"文件处理",normalizedTitle:"文件处理",charIndex:185},{level:3,title:"调试",slug:"调试",normalizedTitle:"调试",charIndex:197},{level:2,title:"GraphQL",slug:"graphql",normalizedTitle:"graphql",charIndex:205},{level:2,title:"工具",slug:"工具",normalizedTitle:"工具",charIndex:42},{level:2,title:"Webpack",slug:"webpack",normalizedTitle:"webpack",charIndex:226},{level:2,title:"移动端",slug:"移动端",normalizedTitle:"移动端",charIndex:239},{level:2,title:"性能优化",slug:"性能优化",normalizedTitle:"性能优化",charIndex:248},{level:2,title:"请求处理",slug:"请求处理",normalizedTitle:"请求处理",charIndex:258},{level:2,title:"工程",slug:"工程",normalizedTitle:"工程",charIndex:268},{level:2,title:"Mac",slug:"mac",normalizedTitle:"mac",charIndex:276},{level:2,title:"录制",slug:"录制",normalizedTitle:"录制",charIndex:285},{level:2,title:"Chrome 拓展",slug:"chrome-拓展",normalizedTitle:"chrome 拓展",charIndex:293},{level:2,title:"VS Code",slug:"vs-code",normalizedTitle:"vs code",charIndex:308},{level:3,title:"主题",slug:"主题",normalizedTitle:"主题",charIndex:323},{level:3,title:"字体",slug:"字体",normalizedTitle:"字体",charIndex:333},{level:2,title:"编辑器和 Terminal",slug:"编辑器和-terminal",normalizedTitle:"编辑器和 terminal",charIndex:341},{level:3,title:"zsh 插件",slug:"zsh-插件",normalizedTitle:"zsh 插件",charIndex:362},{level:2,title:"开发常用软件",slug:"开发常用软件",normalizedTitle:"开发常用软件",charIndex:374},{level:2,title:"有趣",slug:"有趣",normalizedTitle:"有趣",charIndex:386},{level:2,title:"常看的网站",slug:"常看的网站",normalizedTitle:"常看的网站",charIndex:400},{level:2,title:"Github",slug:"github",normalizedTitle:"github",charIndex:411},{level:2,title:"开发",slug:"开发",normalizedTitle:"开发",charIndex:374},{level:2,title:"设计",slug:"设计",normalizedTitle:"设计",charIndex:431},{level:2,title:"有趣",slug:"有趣-2",normalizedTitle:"有趣",charIndex:386},{level:2,title:"交互",slug:"交互",normalizedTitle:"交互",charIndex:447},{level:2,title:"Css",slug:"css",normalizedTitle:"css",charIndex:101},{level:2,title:"教程",slug:"教程",normalizedTitle:"教程",charIndex:464},{level:2,title:"产品",slug:"产品",normalizedTitle:"产品",charIndex:472},{level:2,title:"实用",slug:"实用",normalizedTitle:"实用",charIndex:480},{level:2,title:"Talk",slug:"talk",normalizedTitle:"talk",charIndex:488},{level:2,title:"算法",slug:"算法",normalizedTitle:"算法",charIndex:498},{level:2,title:"Typescript",slug:"typescript",normalizedTitle:"typescript",charIndex:506}],headersStr:"前端常用 Css && 动画 Vue 实践库 文档 工具库 Node 工具库 命令行 文件处理 调试 GraphQL 工具 Webpack 移动端 性能优化 请求处理 工程 Mac 录制 Chrome 拓展 VS Code 主题 字体 编辑器和 Terminal zsh 插件 开发常用软件 有趣 常看的网站 Github 开发 设计 有趣 交互 Css 教程 产品 实用 Talk 算法 Typescript",content:"本项目为个人技术收藏夹，里面会不定期分享一些作者平时用到的一些库，或者常用的网站和小工具。\n\n如果你有好的推荐你可以提 issue 或者 pr 来告诉作者\n\n * 推荐库\n   * 前端常用\n   * Css && 动画\n   * Vue\n   * 实践库\n   * 文档\n   * 工具库\n   * Node\n     * 工具库\n     * 命令行\n     * 文件处理\n     * 调试\n   * GraphQL\n   * 工具\n   * Webpack\n   * 移动端\n   * 性能优化\n   * 请求处理\n   * 工程\n   * Mac\n   * 录制\n   * Chrome 拓展\n   * VS Code\n     * 主题\n     * 字体\n   * 编辑器和 Terminal\n     * zsh 插件\n   * 开发常用软件\n   * 有趣\n * 网站\n   * 常看的网站\n   * Github\n   * 开发\n   * 设计\n   * 有趣\n   * 交互\n   * Css\n   * 教程\n   * 产品\n   * 实用\n   * Talk\n   * 算法\n   * Typescript\n\n\n# 推荐库\n\n这里主要推荐一下自己平时常用，提高效率的一些库和软件。\n\n\n# 前端常用\n\n * sweetalert2 一个自适应，且自定义性强的弹出框（零依赖）\n * tippy.js 最著名的 tooltip/popover library\n * text-mask 可以让 input 按照规则输入(如电话,email,日期,信用卡等)，特殊格式 input\n * dinero.js 用来创建、计算和格式化货币价值的不可变的框架，支持国际化\n * lerna 大项目版本控制工具，项目中可以有多个 package.json 文件\n * img-2 一个提高图片加载性能和体验的库，懒加载使用 web worker 模糊预览\n * fingerprintjs 是一个快速的浏览器指纹库，通浏览环境的一系列配置生成 id\n * ajv 一个 json schema 验证的库\n * dayjs 一个轻量级类 moment.js API 时间库\n * primjs 让页面支持代码高亮\n * ReLaXed 一个将 document html 转成 PDF 的工具\n * uppy 一个很好看的也很好用的 前端上传库\n * Filepond 一个小巧的文件上传库\n * tui-calendar 功能全面的日程安排日历控件，还支持拖拽\n * tui.editor markdown 所见即所得编辑器\n * tabler 基于 Bootstrap 4 的 Dashboard UI Kit 和美观 高颜值 ui 模板\n * pulltorefresh.js 下个下拉刷新插件\n * lulu 腾讯阅文基于 jQuery，针对 PC 网站 IE8+（peak 主题）的前端 UI 框架\n * chancejs 生成随机数据的库\n * spritejs 360 奇舞团出的跨平台绘图对象模型\n * tui.image-editor 一个功能齐全的在线图片编辑，基于 canvas\n * nanoid 前端轻量 unique string ID 生成库\n * rxdb 一款开源的快速、灵活的客户端数据库，支持各种浏览器以及 NodeJS，Electron、React 等等，是 PouthDB 之上的一个封装库\n * percollate 命令行工具 能将网页转换成 pdf\n * rawact 一个 babel 插件，把 react 组件转为原生 dom\n * irondb 是一个浏览器 key-value 储存的封装库，把 Cookies、IndexedDB、LocalStorage、SessionStorage 统一成一个接口。它的最大特色就是数据冗余机制，即使某种底层储存机制失效，它可以从其他机制恢复数据。\n * big.js 解决 js 浮点数问题。 主要就是 Big Number 或者小数点温柔\n * bignumber.js 同上\n * stickybits CSS 的 position: sticky 是一个很有用的设置，但是老的浏览器不支持。这个 JS 库是该功能的垫片库。\n * react-jsonschema-form Mozilla service 开源了一个通过 JSON 直接生成表单的 React 组件\n * cleave.js 用于在输入时格式化输入内容（信用卡格式、日期等）\n * shiny 在手机设备上模拟光的反射效果。 支持 DeviceMotion 事件\n * cloudquery Turn any website to serverless API\n * A-Programmers-Guide-to-English 专为程序员编写的英语学习指南。\n * rrweb 一个可以记录你页面中所有操作的库\n * nodeppt markdown 写 ppt\n * flexsearch 能让你更加高效和快速的检索文本内容\n * public-apis 汇集了市面上一些对外免费开放的 api，做一些自己练手 app 的时候很好用。\n * scroll-hint 用于提示用户页面可以左右滑动的一个提示库\n * fuse.js 轻量级前端模糊查询库 非常的好用\n * FileSaver.js 文件下载插件 很多时候下载会有兼容性问题，它能帮你解决这些问题\n * instant.page 一个判断用户行为 预测提前加载页面的库\n * screenfull.js 浏览器全屏插件 解决了不少兼容性问题\n * VuePress 本网站就是基于它实现的，简单方便的静态网站生成器\n * selection 可视化选择页面元素的库\n * scroll-out 滚动效果（滚动视差）的框架，框架大小不到 1KB,使用回调的方式将相关动画元素的属性进行实时分配\n * gpu.js 通过将 js 转为特定的 language，利用 GPU 来执行，大大提高了执行性能和速度\n * pressure 前端实现 3D Touch\n * hammer 移动端手势库\n * AlloyFinger 腾讯出的手势库\n * lowdb LowDB 是一个本地 JSON 数据库，基于 Lodash 开发的\n * JSON-server 可以配合 LowDB 使用 快速搭建一个 REST API\n * lunr.js 是个用于浏览器的轻量级 JavaScript 全文搜索引擎,对于一些小型的博客、开发者文档或 Wiki 网站来说,完全可以通过它实现站内离线搜索\n * he 一个前端 encoder/decoder 库\n * grade 一个可以根据你的 图片 调整底色的插件\n * pretty-bytes 将字节转换成可以读的字符串，比如 1337 个字节，会显示成 1.34 KB\n * runkit 一个基于 node 的在线 playground\n * chart.xkcd 手绘风格的图表库\n * sketchviz 手绘风格流程图\n * pagemap Mini map for web pages 页面导航图\n * commonmark.js parser and renderer markdown\n * body-scroll-lock 解决滚动穿透问题\n * lodash 前端工具函数集合\n * dayjs 时间处理库，不过大部分情况下我还是用自己的封装的函数\n * lightgallery 图片预览组件\n * photoswipe 图片预览组件，支持移动端\n * darken 页面黑夜模式切换\n * mitt 轻量级 pub/sub\n * sanitize-html html 过滤库，防 xss\n * DOMPurify 比 sanitize-html 更轻量，建议一般业务用这个\n\n\n# Css && 动画\n\n * animate.css 最有名的动画效果库\n * magic.css css 动画效果库 类似 animate.css\n * popmotion 一个函数式声明前端动画库\n * NES.css 任天堂主题风格 css 库\n * particles.js 前端实现颗粒粒子的动画效果库，比较炫酷，但相对的也比较吃性能\n * PaperCSS 手绘风格感觉 css 库\n * rough 基于 Canvas 的手绘风格图形库\n * wired-elements 基于 rough.js 分装 button input radio 等组件。它的底层是 Web components\n * roughViz rough 风格的图表库 手绘风格的图表库\n * matter-js web 物理引擎\n * micron 通过在元素上绑定属性从而实现动画效果的库\n * direction-reveal 根据鼠标进入位置，展现从不同方向 展现 hover 效果\n * laxxx 滚动特效库 轻量级 压缩完 2kb\n * cssfx 优雅的 CSS 动画效果，开箱即用\n * zdog 3D engine 引擎\n * leonsans 酷炫的 字体 动画 geometric sans-serif typeface made with code\n * css-doodle A web component for drawing patterns with CSS 一个用于使用 CSS 绘制图案的 Web 组件\n\n\n# Vue\n\n * vue-multiselect select 组件 目前 vue 里面用过最好用的\n * Vue.Draggable DnD 拖拽组件 基于 Sortable.js 的 vue 版本\n * vue-sauce 一个可以展示 vue 源码的指令\n * vue-smooth-dnd Vue wrappers components for smooth-dnd\n * vuegg 一个 vue 可视化拖拽界面生成器\n * vee-validate 基于 vue 的验证，能验证的内容比较全\n * vuesax 一个很漂亮的基于 vue 的 ui 框架\n * vue-analytics 基于 vue 的 谷歌统计封装\n * vue-virtual-scroller 基于 vue 的虚拟列表无限滚动\n * vue-content-placeholders 页面龙骨 skeleton\n * buefy 适配移动端的 vue 组件库 看着还挺舒服的\n * vxe-tablevue 表格解决方案，还没具体用过看着的确解决了其它 table 组件的一些问题\n * Vue 测试指南 vue 测试指南\n\n\n# 实践库\n\n * Jasonette 一个用 json 来构建 hybrid App 的框架\n * crate 一个 react 全栈练习(pc,mobile,rn,api) demo，适合入门拿来练手\n * react-in-patterns 一本开源教你如何写 react 的书\n * hocs react 相关 hoc 收集库\n\n\n# 文档\n\n * vuepress vue 官方出品的文档工具\n * docsify 轻量级文档工具，但其是运行时编译的，所以 seo 不好\n * GitBook 除了编译慢没啥毛病\n * mdx jsx + markdown\n * docz\n * storybook\n\n\n# 工具库\n\n * live-server 可以快速启一个本地 dev 服务 并且支持自动刷新的 http server\n * serve 快速起本地静态服务\n * picojs js 人脸识别库\n * es-checker 检查当前环境对 ES6 支持的情况。支持浏览器和 node.js\n * merge-images 图片合成，利用canvas能将几张图片合成一张\n * fabric.js 基于 canvas 创建交互式的图片编辑界面非常适合用来做图片合成类工作。\n * phaser 这是一个为桌面和移动浏览器开发 HTML5 游戏的快速开源框架。 你可以为 iOS、 Android 和不同的本地应用程序创建游戏。\n * purifycss 移除没使用到的 css\n * dropcss 同上\n * fast-cli 命令行测试下载上传速度\n * @pika/web 让你不需要在本地 webpack 中 import，直接在游览器里面运行 npm 包\n * pinyin 汉字拼音转换工具\n * JavaScript Obfuscator Tool js 代码混淆工具\n * tesseract 图像识别，它能识别图片中的文字，支持中文\n * gka 一款高效、高性能的帧动画生成工具。只需一行命令，快速图片优化、生成动画文件，支持效果预览。\n * recast 前端 ast 库\n * jscodeshift 将 js 内容解析成 AST 语法树，然后提供一些便利的操作接口，方便我们对各个节点进行更改\n * stats.js 前端性能监控 如 FPS、内存使用情况等\n * PapaParse 解析 csv excel\n * mddir 生成 markdown file/folder structure 目录结构 tree\n * imagemin 图片压缩库\n * inline-css css covert to inline style 在生成 email 格式 html 的时候特别有用\n * babel-plugin-try-catch-error-report 全局自动 catch 错误进行数据上报\n * StreamSaver.js 大文件下载，不用像 saveAs 那样先读到内存中再下载\n * mammoth.js Convert Word documents (.docx files) to HTML\n * npkill 列出所有 node_modules，并支持删除\n * strapi 开源的解决方案来创建、部署和管理自己的 API，通过图形化界面进行操作\n\n\n# Node\n\n\n# 工具库\n\n * cheerio 用类 jQuery 语法处理 HTML\n * node-semver node 版本验证库\n * live-server 一个简单的 http server 带有 reload 功能\n * node-portfinder 一个端口嗅探工具\n * update-notifiernode 依赖升级提醒工具\n * fastscan node 敏感词库\n * hygen 快速方便的创建代码 可以命令行创建预设的 template\n * plop 同上，代码生成工具\n * ink 是一个 React 的命令行渲染器，命令行界面可以像写页面那么写了\n * dotenv 通过.env 设置环境部变量 vue-cli 也依赖它\n * patch-package 优雅的修改 node_modules 中的依赖库\n * Playwright 同 Puppeteer 团队出品，但区别是它支持 Chrome、Safari、Firefox、Edge\n * tree-cli node 根据目录结构生成 tree\n * tree-node-cli node 根据目录结构生成 tree\n * open node 打开浏览器\n\n\n# 命令行\n\n * signale 一个 Node 的日志格式库，自带 16 个级别，可以定制颜色和 Emoji，可扩展的日志记录器\n * consola 优雅的命令行 console logger vuepress 也使用了它\n * chalk 命令行着色美化库\n * progress-estimator 命令行 progress bar 进度条模拟库\n * ora Elegant terminal spinner 命令行 loading\n * listr Terminal task 命令行任务列表\n * yargs 命令行参数解析\n * y18n yargs 基于 i18n 的一个包\n * commander.js 自动的解析命令和参数，合并多选项，处理短参，等等，功能强大，上手简单\n * Inquirer.js A collection of common interactive command line user interfaces. 命令行询问库\n * enquirer 命令行 prompt 询问库，写 cli 的时候很有用\n * Qoa 同上\n * cli-progress Terminal Progress Bar\n * cli-table tables for the CLI\n * node-notifier 在 NodeJS 环境中，可以很方便的唤起 notifier 通知\n\n\n# 文件处理\n\n * rimraf 删除文件\n * globby 用于模式匹配目录文件\n * glob 文件查找\n * tiny-glob 文件查找\n * chokidar node 监听文件变化的库\n * fs-extra fs-extra 模块是系统 fs 模块的扩展，提供了更多便利的 API，并继承了 fs 模块的 API\n * execa 比 child_process 好用，返回 Promise\n * npm-run-all 一个 CLI 工具可以并行或者串行执行 script 指令\n * memfs memory-fs 的替代品，将文件放在内存中优化读写，webpack 依赖\n\n\n# 调试\n\n * fx 命令行优化 JSON 输出\n * dumper.js 能让你的 node console 更加的规整，方便调试\n * ndb node 调试\n * why-is-node-running 查看 node 为什么在运行\n * siege 压测工具\n * node-in-debugging node.js 调试指南\n * node-best-practices node 最佳实践\n * Node.js 最佳实践\n\n\n# GraphQL\n\n * prisma 让前端也能快速的写出\n * Apollo GraphQL 是基于 GraphQL 的全栈解决方案集合。从后端到前端提供了对应的 lib 使得开发使用 GraphQL 更加的方便\n * dataloader 解决 Graphql 中的 N+1 查询问题\n\n\n# 工具\n\n * high-speed-downloader 百度网盘不限速下载 支持 Windows 和 Mac\n * hyper 前端命令行\n * yapi 是一个可本地部署的、打通前后端及 QA 的、可视化的接口管理平台\n * sway 一个微软自己出的在线 ppt 很强大\n * Ascii Art Generator 在线生成 Ascii 图案\n * Winds 开源 RSS\n * JSUI 一个用来控制管理前端项目的客户端\n * docz 让你能快速写文档的一个库\n * hiper 性能统计分析工具\n * verdaccio 私有 npm\n * git-guide git 入门指南\n * git-tips git 进阶\n * bit 实现了项目之间的代码共享 可以自建私有\n * simpread 简悦 ( SimpRead ) 让你瞬间进入沉浸式阅读的扩展\n * mkcert 一键命令 让本地也支持 https\n * termtosvg 录制 命令操作转成 svg 基于 python\n * gh-polls 可以在 github issue 中添加投票\n * eruda 移动端调试工具\n * vConsole 也是一个移动端调试工具 腾讯出品\n * terminalizer 命令行录制工具 基于 node\n * badgen 快速构建和 shields 一样的 svg badge 但速度更快\n * readability 移除页面非正文部分 基于 jsdom\n * WeChatPlugin-MacOS 一款功能强大的 macOS 版微信小助手\n * puppeteer-recorder 一个 chrome 插件 能够根据你的操作 自动生成 puppeteer 相关代码\n * mdx-deck 用 markdown 编写演示文稿\n * code-surfer 基于 mdx-deck 的一个插件 让你更好的在文稿中展示 code\n * Progressive Tooling 前端性能优化工具集合\n * https://github.com/artf/grapesjs 可视化建站工具 不需要写代码就能写一个页面，前端再次再次要下岗了\n * image-charts 该服务通过 URL 接受参数，然后生成图表，以图片形式返回\n * eagle.js 一个用 vue 来制作 PPT 的库\n * Optimizely A/B Test\n * appadhoc 一个国内的 A/B Test 服务\n * glorious-demo 通过编写代码的方式构建一个命令行的演示例子\n * nginxconfig 可视化配置 nginx 提供了多个基础模板\n * bundlephobia 一个可以查看某个库的大小，并且分析它的依赖\n * jsperf 一个提供在线 test case 的网站，主要用来比较性能。可以比较如： forEach vs for 的性能\n * perflink 与 jsperf 类似的一个比较 js 性能的网站\n * algorithm-visualizer 算法代码可视化\n * An-English-Guide-for-Programmers 专为程序员编写的英语学习指南\n * Webhint 用于检查代码的可访问性、性能和安全的开源检查（Linting）工具\n * airtap 测试浏览器兼容性，可覆盖 800 多种浏览器\n * jsonstore 供免费，安全且基于 JSON 的云数据存储，自己玩的小项目神器\n * git-history 可视化查看一个文件的历史变化\n * x-spreadsheet 一个基于 Canvas 的 JS 电子表格库 excel\n * imgcook 阿里出品，一键通过设计稿生成代码\n * majestic jest 可视化\n * leon 你开源项目的 ai 个人助手\n * js-code-to-svg-flowchart 将代码逻辑用流程图的方式展现出来\n * xterm.js 一个 web terminal\n * pixelmatch diff 两张图片不一样的地方\n * readme-md-generator 一个命令行脚本帮你快速的创建一个 README\n * build-tracker 构建大小追踪 记录你多个版本构建后文件大小的变化\n * zan-proxy 本地调试线上环境的工具\n * mjml 一个让发 email 更简单的框架。定义了一套自己的语法，你用这套语法写邮件，然后编译成 HTML。\n * any-rule 正则大全\n * outline 一个免费开源的库，能让你快速搭建自己的 wiki\n\n\n# Webpack\n\n * webpackbar webpack 打包进度条\n * jarvis webpack dashboard\n * webpack-chain 通过 chain 风格 api 的方式修改 webpack 配置\n * speed-measure-webpack-plugin 统计 webpack 各阶段的耗时\n * obsolete-webpack-plugin 基于 browserslist 做浏览器升级提示\n * mini-css-extract-plugin 提取 CSS 为单独文件\n * copy-webpack-plugin 复制额外的文件到输出目录\n * duplicate-package-checker-webpack-plugin 检查是否存在重复依赖\n * cssnano CSS 压缩\n * bundle-buddy webpack bundle 依赖分析\n\n\n# 移动端\n\n * fastclick 解决移动端一些点击问题\n\n\n# 性能优化\n\n * workbox PWA 方案，Google 出品\n\n\n# 请求处理\n\n * axios 目前最常见的请求库\n * got http 请求库 如果你觉得 request 太多的话 这是一个不错的选择\n * request 老牌请求库 -*whatwg-fetch** fetch 请求库\n * grpc-web 前端直连 gRPC 服务\n * node-fetch node 环境下轻量级 fetch 请求库\n * reqwest\n\n\n# 工程\n\n * lerna monorepo 管理\n * lerna-changelog 为 lerna 项目自动生成 changelog\n * eslint JS 风格约束\n * eslint-config-airbnb airbnb 约束风格\n * xo 封装自 eslint\n * prettier 更主观的风格自动修改\n * yeoman-generator 脚手架工具\n * serve 本地静态服务器\n * np npm publish 辅助，自动 push、打 tag、升版本等\n * lint-staged eslint 提速，只 lint 提交的代码\n * coveralls 覆盖率\n * husky 添加 git hooks\n * cross-env 跨平台的环境变量声明\n * nvm 管理 node 版本\n * concurrently 在 npm scripts 里并行执行命令\n * @zeit/ncc 打包为 npm 包为一个文件\n * npm-check 检测依赖升级情况，我会和 yarn upgrade-interactive 配合着用，主要用来检测冗余依赖\n * cpx 复制，支持 glob，并且可以 watch\n * onchange 监听文件变动然后做一些事\n * tasksfile 在 node 中执行 script 脚本\n\n\n# Mac\n\n * get-plain-text 能清除剪贴板里的格式 很实用\n * IINA mac 平台感觉免费最好的播放器 强推\n * magnet 分屏管理\n * Xnip 方便好用的截图工具-支持截长图\n * Spectacle 窗口管理工具\n * vanilla 顶栏图标管理工具\n * Dozer 一个开源的顶栏管理\n * 腾讯电脑管家 反正我用下来好觉得蛮好用的\n * mos 鼠标平滑滚动软件，很好用。免费开源\n * sequel pro mysql 客户端 好用\n * Microsoft Remote Desktop Beta Mac 远程登录 Windows 调试神器\n * pap.er 专为 Mac 设计的壁纸应用\n * The Unarchive Mac 目前感觉最好用的免费解压软件\n * Tickeys 让你用 Mac 键盘也能打出机械键盘的感觉\n * Beaker Browser P2P 开源浏览器 支持点对点发布文件，成为了文件传输工具，支持 DAT 对等协议\n * Gifski 视频转 gif 工具\n * more 更多优秀的 mac app 介绍\n * Motrix 支持 HTTP、FTP、BT、磁力链、百度网盘的下载工具\n * iPic这个应用可以让你方便地上传图片到各种图床\n * Image2Icon\n * hidden 是用来帮助你隐藏 macOS 菜单栏上那些不常用的应用图标\n\n\n# 录制\n\n * licecap gif 录制，简洁好用，之前都用这个录制\n * kap 现在都用这个录制 gif，还支持导出 mp4，录制的 fps 很高\n * KeyCastr 按键显示，录制的时候显示你的按键\n\n\n# Chrome 拓展\n\n * Tampermonkey 油猴 神器\n * 扩展管理器 轻松管理扩展，就不用担心安装太多扩展了\n * visbug 它可以帮助你改变 css，移动元素等等一系类强大的功能,页面调试神器。当然有些时候还是 DevTools 更好用\n * refined-github 优化 github 默认功能和样式的 chrome 插件\n * ADB chrome 真机调试安卓神器\n * Adblock Plus 免费广告拦截程序 这个应该不用说了，装机必备\n * Axure RP Extension 看原型必备\n * JSON Formatter JSON 格式化 程序员必备\n * Lighthouse 谷歌出品，检查网页综合性能评分，分析不足\n * 二维码(QR 码)生成器 手机扫码神器\n * Octotree github 上看代码必备神器\n * OctoLinker 能在 github 上看代码的时候 快速链接跳转到依赖的库\n * The Great Suspender chrome 太吃内存了，当页面开的很多时候会很卡，它就完美的解决了这个问题。它将几分钟没浏览过的页面都挂载了，当你想看是再重新加载\n * WEB 前端助手 支持 JSON 格式化、二维码生成与解码、代码压缩、Markdown 与 HTML 互转、网页滚动截屏、正则表达式、时间转换工具、JSON 比对工具等\n * 掘金 目前我默认新开 tab 的默认页，可以刷刷新的文章或者项目，还不错。\n * 沙拉查词 划词翻译插件\n * npmhub在 README 下方显示 npm 依赖信息\n\n\n# VS Code\n\n * Import Cost 查看你引入的依赖模块大小\n * Auto Close Tag 自动补全 html 标签，如输入<a>将自动补全</a>\n * Auto Rename Tag 自动重命名 html 标签，如修改<a>为<b>，将自动修改结尾标签</a>为</b>\n * polacode 生产代码图片快照插件\n * vscode-leetcode 一个能让你在 vscode 中刷 LeetCode 的插件 算一个划水神器吧\n * vscode-icons VS Code 必备吧，为文件添加炫图标\n * CodeSnap 生产代码截图\n\n\n# 主题\n\n官方主题页 可以选择自己喜欢的主题 one-monokai 我用的是这个主题，很多年了\n\n\n# 字体\n\n * FiraCode\n * Dank Mono\n * Operator Mono\n\n\n# 编辑器和 Terminal\n\n * Go2shell 在当前文件夹打开 shell\n * Terminal 用 iTerm2 + zsh + oh-my-zsh 的组合，主题是 robbyrussell\n\n\n# zsh 插件\n\n * Homebrew 必装\n * autojump 实现目录间快速跳转，想去哪个目录直接 j + 目录名，不用在频繁的 cd 了\n * zsh-autosuggestions 命令自动建议和补全\n * zsh-syntax-highlighting 命令行语法高亮\n * history 命令行记录\n * zsh-git-prompt git 分支信息提示\n\n\n# 开发常用软件\n\n * Github Desktop管理 github 仓库的变更和 PR\n * runjs js 运行沙盒，写 test case 或者面试当场写代码的时候很有用\n * Charles 抓包用，支持 https\n * Google Chrome 前端必备没啥好说的\n * ColorSnapper2 取色工具\n * postman api 调试工具\n * Sequel Pro MySQL 界面管理工具\n * KeepingYouAwake 可保证系统不自动休眠，挂机跑脚本很有用\n\n\n# 有趣\n\n * the-bread-code 使用程序员的思维制作面包 ，比如制作中使用 A/B test, 来比较那种做法更好。\n * build-your-own-x 教你用各种语言实现 Bot Database Neural Network\n * **javascript-algorithms ** 教你用前端知识认识各种算法\n * not-paid 如果你给人做网站，交过去以后对方没有付款，那么这个 JS 会把网站的透明度一天调低一点，直到看不见\n * nsfwjs 前端图片鉴黄，基于 Tensorflow\n * elevator.js 我很喜欢的一个库，让一个 back-to-top 的效果有了一种坐复古电梯的感觉\n * app-ideas 很多年轻人苦于缺少练手的项目，这个项目收集了不少点子，每个点子都有明确的目标和复杂资源。\n * WebGL-Fluid-Simulation 很酷的 WebGL 交互\n * react-kawaii 一个非常可爱的 React 卡通人脸库，很有意思\n * chart-race-react 图表竞赛 长条图赛跑动画 在微博或者 b 站这种类型视频很火\n * 98.css windows 98 主题分格 css\n\n\n# 网站\n\n\n# 常看的网站\n\n * overreacted react Dan 的个人博客，更新频率很高（redux 作者，react 核心开发）\n * DailyJS\n * codeburst\n * 阮一峰的网络日志 阮老师出的东西还是值得一读的\n * InfoQ 文章的质量比一般网站的高不少\n * 鱼塘 划水网站 收集了很多网站 当天热门文章\n * 每日时报 定期会分享一些库和工具\n * awesome-f2e-libs sorrycc 整理的个人关注使用的前端库\n\n\n# Github\n\n * github 短域名服务\n * shields Github README 里面的装逼小图标\n * Emoji 方便平时写查找 emoji\n * emoji.muan 同上 而且更全\n * git-awards github ranking 没事可以查着玩玩\n * http://githubrank.com/ github 按照 followers 排名\n * github-rank同上，githubrank 基本算挂了已经，只能用这个新的\n * star-history 展示一个项目 Stars 增长规矩曲线\n * probot 基于 github 做一个小机器人。可以做很多 workflow 的事情\n\n\n# 开发\n\n * 产品/设计师/独立开发者的资源库 很全很强大\n * can i use 前端常用网站了 查看不同属性和方法的兼容性\n * Squoosh 谷歌出品在线免费图片压缩工具 神器\n * codesandbox-client - 在线 web 开发容器\n * astexplorer - 一个在线 ast 生成器\n * 30 seconds of code 收集了许多有用的代码小片段\n * zeplin 前端和设计师神器，有标注、Style Guide、版本管理、简单的团队协作，重点是前端不用写 css 了，复制就可以了。\n * iconfont 阿里出的图标库，非常实用，支持 svg、font、png 多种格式，基本现在所有图标都在上面找。\n * cssicon 所有的 icon 都是纯 css 画的 缺点：icon 不够多\n * 智图 腾讯出品 在线图片压缩 支持转成 webP 处理静态图片时候很好用\n * picdiet 另一个图片压缩网站\n * CSS triangle generator 帮你快速用 css 做出三角形\n * cssarrowplease 帮你做对话框三角的\n * clippy 在线帮你使用 css clip-path 做出各种形状的图形\n * Regular Expressions 在线正则网站\n * jex 正则可视化网站，配合上面的 Regular Expressions，写正则方便很多\n * cyrilex 正则可视化网站\n * jsfiddle 在线运行代码网站 很不错，可惜要翻墙\n * codepan 在线运行代码网站 不用翻墙，可以自己部署\n * fiddle.md 一个方便的在线共享 markdown 在线笔试题一般都用这个\n * jsdelivr cdn 服务\n * unpkg cdn 服务\n * coderpad 远程面试的神器，可以让面试者远程写代码 不过需要翻墙\n * icode 有赞团队出品的 coderpad 可以互补，它不需要翻墙\n * codeadvice 又一个让面试者远程写代码的网址\n * snipper 一个代码协同的网站。你新建一个代码片段，然后把网址分享给其他人，就可以看到他们的实时编辑。\n * codesandbox 一个可以在线编辑且提供在线 demo 的网站 支持 vue react angular 多种框架 神器\n * codrops 上面的交互都非常酷炫\n * bgremover 在线图片去底工具\n * photopea 一个网页端 Photoshop 很变态\n * bestofjs 查看一个项目增长经历，Star 数变化的网站，辅助你判断这个库的质量\n * stackblitz 一款在线 IDE,主要面向 Web 开发者,移植了很多 VS Code 的特性与功能\n * **programmingfonts.org ** 一个专门介绍编程字体的网站\n * 早报 一个个人开发者的前端开发的分享日报\n * emoji-search 帮你快速找到能表达你情感的 emoji\n * gitmoji 通过 emoji 表达 git 的操作内容\n * starcharts 可以把你一个项目的 stars 增长轨迹当做 svg 放在 readme 中\n * mockapi 一个还不错的在线 mock 服务（可在线可视化编辑），可以满足大部分简单需求了\n * coder 在线版 VS Code\n * browserstack 远程调整各种版本浏览器 兼容性问题\n * carbon 根据代码块生成图片 主要作用是让你打代码片段分享的时候更好看一点\n * clipboard2markdown 将你所有复制进去的内容都转化为 markdown\n * grammarly 英语写作检查工具\n * quickchart 通过 URL 生成图表的开源服务\n * hipdf 一站式在线 PDF 解决方案\n * whimsical 画路程图\n * Lorem Picsum 提供免费的占位图\n * sm.ms 免费图床\n * webpagetest 前端性能分析工具\n * 网络安全的教程\n * Ananas Analytics Desktop 一站式 数据可视化\n * “零宽” 长度的短网址服务 利用“零宽字符”来缩短 url，还支持统计\n * hotjar 用户调研 支持用户反馈 录屏 heatMap\n * 狼叔：如何正确的学习 Node.js\n * 独角兽公司榜单 感觉大家想去大公司的时候，可以看看排名\n * 中国传统颜色手册\n * coderlane 远程视频面试，目前使用的是牛客，这个工具待考察\n * excalidraw 手绘风格流程图，强推\n\n\n# 设计\n\n * uimovement 能从这个网站找到不少动画交互的灵感\n * awwwards是一个一个专门为设计精美的网站以及富有创意的网站颁奖的网站\n * dribbble 经常能在上面找到很多有创意好看的 gif 或者图片，基本上我所有的图都是上面招的\n * Bēhance dribbble 是设计师的微博，Bēhance 是设计师的博客\n * Logojoy 使用 ai 做 logo 的网站，做出来的 logo 质量还不错。\n * brandmark 另一个在线制作 logo 网站\n * instant 又一个 logo 制作网站\n * logo-maker 又一个 logo 制作网站 这个更简单点 就是选模板之后微调\n * coolors 帮你在线配色的网站 你能找到不少配色灵感\n * colorhunt 另一个配色网站\n * uigradients 渐变色网站\n * designcap 在线海报设计\n * Flat UI 色表 Flat UI 色表\n * 0to255 颜色梯度\n * Ikonate 提供免费的图标 icons\n * remixicon 又一个提供免费图标 icons\n * feather 免费的 icons\n * **nord ** 北欧性冷淡风主题配色\n * Unsplash 提供免费的高清图片\n * colorkitty 从你的图片中提取配色\n * design.youzan 有赞设计原则\n * undraw 一个免费的插图网站，可以在上面寻找合适的插图，用于商业用途。\n\n\n# 有趣\n\n * 帮你百度一下 可以 点我测试一下**-\n * 国际版 同帮我百度一下-点我测试一下**-\n * wallhaven 壁纸网站-\n * URL 地址播放 Emojis 动画 在地址栏里面播放 emoji\n * Can't Unsee 强烈建议前端、客户端、UI 开发的同学玩下，检查一下自己对设计稿的敏感度怎么样\n * ggtalk 平时一直在听的一个技术博客\n * awesome-comment 里面收集了很多有趣的代码注释\n * text-img 都将图片转化为 ascii 用来写注释\n * weird-fonts 将普通字母转化为 特殊 unicode\n * snake 在地址栏里面玩贪吃蛇\n * zero-width-lib 利用零宽度字符实现 隐形水印、加密信息分享、逃脱词匹配，很有创意\n * abbreviations 查看一个简写是什么意思的网站\n * magi ai 搜索神器，超屌\n * 诺基亚短信图片生成器\n\n\n# 交互\n\n * 微交互 里面收集了市面上很多很好的微交互例子 值得学习\n * Little Big Details 同上，一个国外微交互汇集网站\n * cruip 登录页的各种页面设计，可以免费下载模板\n * Comixify 一个波兰团队做了非常好玩的工具，可以把视频自动转成漫画，上图是他们提供的 demo，效果很棒。\n * taiko-web 太鼓达人网页版 只能说很 6\n\n\n# Css\n\n * css-tricks 一个学习 css 不错的网站 有很多有意思的 demo\n\n\n# 教程\n\n * npx 教你怎么合理的使用 npx\n * hacksplaining 网络安全学习网站\n * mobile-web-best-practice 移动 web 最佳实践\n * vanillawebprojects 通过纯前端的手段实现一些小项目，适合入门\n * Think Python 还不错的 Python 入门教程\n * Node.js CLI Apps Best Practices 叫你如何写好一个 node cli 工具\n * SQL Murder Mystery 一个英文的 SQL 初级教程，以游戏的方式，让你利用学到的 SQL 概念和命令来找出谋杀凶手\n * html-dom 一些常用的 dom 或者原生 js 操作判断，挺实用的\n * TypeScript TypeScript 入门教程，很不错，推荐初学者学习\n * Webpack 知识图谱 webpack 相关教程和原理分析还不错\n\n\n# 产品\n\n * 产品大牛 什么有很多完整的产品原型可以借鉴\n * 磨刀 快速出 ui 原型\n\n\n# 实用\n\n * 写作猫 可以通过 AI 的方式，帮你检查错别字，很有效的一个工具\n * draw 在线 web 画流程图\n * typeform 一个国外的在线调查问卷网站\n * VideoFk VideoFk 视频在线解析下载\n * 全历史 历史内容聚合网站\n * UzerMe 云端办公工具\n * SoBooks 强大的电子书资源网站\n * 稿定设计 键式设计工具+智能抠图\n * pichance 一个将低分辨率图片增强为高分辨率的工具，可以将分辨率增加 4 倍（即长和宽各增加一倍）\n * bigjpg 放大图片的神器 通过神经网络可以放大图片并能降噪\n * 大力盘 百度网盘搜索\n * ENFI 下载器 不限速下载器\n * 来画视频 像做 PPT 一样做短视频\n * Arkie 海报制作工具\n * 优品 PPT\n * 比格 PPT\n * 高清免费图片\n * 高清免费图片 2\n * 历史价格查询 淘宝，京东等商品历史价格，能更清晰了解商家的活动是否为虚假促销以及促销的力度。神器\n * Firefox Send 文件分享服务，下载一次或者到期即焚，在当前网络监管下很实用的服务\n * time.graphics 在线 milestone timeline 生成器\n * processon 免费在线作图，支持流程图、思维导图、原型图、UML、网络拓扑图、组织结构图等\n * 龙轩导航 一个总结了不少实用网站的导航\n\n\n# Talk\n\n * peerigon-talks 收集了不少有意思的 talks\n\n\n# 算法\n\n * leetcode 用 js 刷 leetcode\n\n\n# Typescript\n\n * TypeScript 入门教程 推荐阅读\n * 深入理解 TypeScript 深入理解 ts",normalizedContent:"本项目为个人技术收藏夹，里面会不定期分享一些作者平时用到的一些库，或者常用的网站和小工具。\n\n如果你有好的推荐你可以提 issue 或者 pr 来告诉作者\n\n * 推荐库\n   * 前端常用\n   * css && 动画\n   * vue\n   * 实践库\n   * 文档\n   * 工具库\n   * node\n     * 工具库\n     * 命令行\n     * 文件处理\n     * 调试\n   * graphql\n   * 工具\n   * webpack\n   * 移动端\n   * 性能优化\n   * 请求处理\n   * 工程\n   * mac\n   * 录制\n   * chrome 拓展\n   * vs code\n     * 主题\n     * 字体\n   * 编辑器和 terminal\n     * zsh 插件\n   * 开发常用软件\n   * 有趣\n * 网站\n   * 常看的网站\n   * github\n   * 开发\n   * 设计\n   * 有趣\n   * 交互\n   * css\n   * 教程\n   * 产品\n   * 实用\n   * talk\n   * 算法\n   * typescript\n\n\n# 推荐库\n\n这里主要推荐一下自己平时常用，提高效率的一些库和软件。\n\n\n# 前端常用\n\n * sweetalert2 一个自适应，且自定义性强的弹出框（零依赖）\n * tippy.js 最著名的 tooltip/popover library\n * text-mask 可以让 input 按照规则输入(如电话,email,日期,信用卡等)，特殊格式 input\n * dinero.js 用来创建、计算和格式化货币价值的不可变的框架，支持国际化\n * lerna 大项目版本控制工具，项目中可以有多个 package.json 文件\n * img-2 一个提高图片加载性能和体验的库，懒加载使用 web worker 模糊预览\n * fingerprintjs 是一个快速的浏览器指纹库，通浏览环境的一系列配置生成 id\n * ajv 一个 json schema 验证的库\n * dayjs 一个轻量级类 moment.js api 时间库\n * primjs 让页面支持代码高亮\n * relaxed 一个将 document html 转成 pdf 的工具\n * uppy 一个很好看的也很好用的 前端上传库\n * filepond 一个小巧的文件上传库\n * tui-calendar 功能全面的日程安排日历控件，还支持拖拽\n * tui.editor markdown 所见即所得编辑器\n * tabler 基于 bootstrap 4 的 dashboard ui kit 和美观 高颜值 ui 模板\n * pulltorefresh.js 下个下拉刷新插件\n * lulu 腾讯阅文基于 jquery，针对 pc 网站 ie8+（peak 主题）的前端 ui 框架\n * chancejs 生成随机数据的库\n * spritejs 360 奇舞团出的跨平台绘图对象模型\n * tui.image-editor 一个功能齐全的在线图片编辑，基于 canvas\n * nanoid 前端轻量 unique string id 生成库\n * rxdb 一款开源的快速、灵活的客户端数据库，支持各种浏览器以及 nodejs，electron、react 等等，是 pouthdb 之上的一个封装库\n * percollate 命令行工具 能将网页转换成 pdf\n * rawact 一个 babel 插件，把 react 组件转为原生 dom\n * irondb 是一个浏览器 key-value 储存的封装库，把 cookies、indexeddb、localstorage、sessionstorage 统一成一个接口。它的最大特色就是数据冗余机制，即使某种底层储存机制失效，它可以从其他机制恢复数据。\n * big.js 解决 js 浮点数问题。 主要就是 big number 或者小数点温柔\n * bignumber.js 同上\n * stickybits css 的 position: sticky 是一个很有用的设置，但是老的浏览器不支持。这个 js 库是该功能的垫片库。\n * react-jsonschema-form mozilla service 开源了一个通过 json 直接生成表单的 react 组件\n * cleave.js 用于在输入时格式化输入内容（信用卡格式、日期等）\n * shiny 在手机设备上模拟光的反射效果。 支持 devicemotion 事件\n * cloudquery turn any website to serverless api\n * a-programmers-guide-to-english 专为程序员编写的英语学习指南。\n * rrweb 一个可以记录你页面中所有操作的库\n * nodeppt markdown 写 ppt\n * flexsearch 能让你更加高效和快速的检索文本内容\n * public-apis 汇集了市面上一些对外免费开放的 api，做一些自己练手 app 的时候很好用。\n * scroll-hint 用于提示用户页面可以左右滑动的一个提示库\n * fuse.js 轻量级前端模糊查询库 非常的好用\n * filesaver.js 文件下载插件 很多时候下载会有兼容性问题，它能帮你解决这些问题\n * instant.page 一个判断用户行为 预测提前加载页面的库\n * screenfull.js 浏览器全屏插件 解决了不少兼容性问题\n * vuepress 本网站就是基于它实现的，简单方便的静态网站生成器\n * selection 可视化选择页面元素的库\n * scroll-out 滚动效果（滚动视差）的框架，框架大小不到 1kb,使用回调的方式将相关动画元素的属性进行实时分配\n * gpu.js 通过将 js 转为特定的 language，利用 gpu 来执行，大大提高了执行性能和速度\n * pressure 前端实现 3d touch\n * hammer 移动端手势库\n * alloyfinger 腾讯出的手势库\n * lowdb lowdb 是一个本地 json 数据库，基于 lodash 开发的\n * json-server 可以配合 lowdb 使用 快速搭建一个 rest api\n * lunr.js 是个用于浏览器的轻量级 javascript 全文搜索引擎,对于一些小型的博客、开发者文档或 wiki 网站来说,完全可以通过它实现站内离线搜索\n * he 一个前端 encoder/decoder 库\n * grade 一个可以根据你的 图片 调整底色的插件\n * pretty-bytes 将字节转换成可以读的字符串，比如 1337 个字节，会显示成 1.34 kb\n * runkit 一个基于 node 的在线 playground\n * chart.xkcd 手绘风格的图表库\n * sketchviz 手绘风格流程图\n * pagemap mini map for web pages 页面导航图\n * commonmark.js parser and renderer markdown\n * body-scroll-lock 解决滚动穿透问题\n * lodash 前端工具函数集合\n * dayjs 时间处理库，不过大部分情况下我还是用自己的封装的函数\n * lightgallery 图片预览组件\n * photoswipe 图片预览组件，支持移动端\n * darken 页面黑夜模式切换\n * mitt 轻量级 pub/sub\n * sanitize-html html 过滤库，防 xss\n * dompurify 比 sanitize-html 更轻量，建议一般业务用这个\n\n\n# css && 动画\n\n * animate.css 最有名的动画效果库\n * magic.css css 动画效果库 类似 animate.css\n * popmotion 一个函数式声明前端动画库\n * nes.css 任天堂主题风格 css 库\n * particles.js 前端实现颗粒粒子的动画效果库，比较炫酷，但相对的也比较吃性能\n * papercss 手绘风格感觉 css 库\n * rough 基于 canvas 的手绘风格图形库\n * wired-elements 基于 rough.js 分装 button input radio 等组件。它的底层是 web components\n * roughviz rough 风格的图表库 手绘风格的图表库\n * matter-js web 物理引擎\n * micron 通过在元素上绑定属性从而实现动画效果的库\n * direction-reveal 根据鼠标进入位置，展现从不同方向 展现 hover 效果\n * laxxx 滚动特效库 轻量级 压缩完 2kb\n * cssfx 优雅的 css 动画效果，开箱即用\n * zdog 3d engine 引擎\n * leonsans 酷炫的 字体 动画 geometric sans-serif typeface made with code\n * css-doodle a web component for drawing patterns with css 一个用于使用 css 绘制图案的 web 组件\n\n\n# vue\n\n * vue-multiselect select 组件 目前 vue 里面用过最好用的\n * vue.draggable dnd 拖拽组件 基于 sortable.js 的 vue 版本\n * vue-sauce 一个可以展示 vue 源码的指令\n * vue-smooth-dnd vue wrappers components for smooth-dnd\n * vuegg 一个 vue 可视化拖拽界面生成器\n * vee-validate 基于 vue 的验证，能验证的内容比较全\n * vuesax 一个很漂亮的基于 vue 的 ui 框架\n * vue-analytics 基于 vue 的 谷歌统计封装\n * vue-virtual-scroller 基于 vue 的虚拟列表无限滚动\n * vue-content-placeholders 页面龙骨 skeleton\n * buefy 适配移动端的 vue 组件库 看着还挺舒服的\n * vxe-tablevue 表格解决方案，还没具体用过看着的确解决了其它 table 组件的一些问题\n * vue 测试指南 vue 测试指南\n\n\n# 实践库\n\n * jasonette 一个用 json 来构建 hybrid app 的框架\n * crate 一个 react 全栈练习(pc,mobile,rn,api) demo，适合入门拿来练手\n * react-in-patterns 一本开源教你如何写 react 的书\n * hocs react 相关 hoc 收集库\n\n\n# 文档\n\n * vuepress vue 官方出品的文档工具\n * docsify 轻量级文档工具，但其是运行时编译的，所以 seo 不好\n * gitbook 除了编译慢没啥毛病\n * mdx jsx + markdown\n * docz\n * storybook\n\n\n# 工具库\n\n * live-server 可以快速启一个本地 dev 服务 并且支持自动刷新的 http server\n * serve 快速起本地静态服务\n * picojs js 人脸识别库\n * es-checker 检查当前环境对 es6 支持的情况。支持浏览器和 node.js\n * merge-images 图片合成，利用canvas能将几张图片合成一张\n * fabric.js 基于 canvas 创建交互式的图片编辑界面非常适合用来做图片合成类工作。\n * phaser 这是一个为桌面和移动浏览器开发 html5 游戏的快速开源框架。 你可以为 ios、 android 和不同的本地应用程序创建游戏。\n * purifycss 移除没使用到的 css\n * dropcss 同上\n * fast-cli 命令行测试下载上传速度\n * @pika/web 让你不需要在本地 webpack 中 import，直接在游览器里面运行 npm 包\n * pinyin 汉字拼音转换工具\n * javascript obfuscator tool js 代码混淆工具\n * tesseract 图像识别，它能识别图片中的文字，支持中文\n * gka 一款高效、高性能的帧动画生成工具。只需一行命令，快速图片优化、生成动画文件，支持效果预览。\n * recast 前端 ast 库\n * jscodeshift 将 js 内容解析成 ast 语法树，然后提供一些便利的操作接口，方便我们对各个节点进行更改\n * stats.js 前端性能监控 如 fps、内存使用情况等\n * papaparse 解析 csv excel\n * mddir 生成 markdown file/folder structure 目录结构 tree\n * imagemin 图片压缩库\n * inline-css css covert to inline style 在生成 email 格式 html 的时候特别有用\n * babel-plugin-try-catch-error-report 全局自动 catch 错误进行数据上报\n * streamsaver.js 大文件下载，不用像 saveas 那样先读到内存中再下载\n * mammoth.js convert word documents (.docx files) to html\n * npkill 列出所有 node_modules，并支持删除\n * strapi 开源的解决方案来创建、部署和管理自己的 api，通过图形化界面进行操作\n\n\n# node\n\n\n# 工具库\n\n * cheerio 用类 jquery 语法处理 html\n * node-semver node 版本验证库\n * live-server 一个简单的 http server 带有 reload 功能\n * node-portfinder 一个端口嗅探工具\n * update-notifiernode 依赖升级提醒工具\n * fastscan node 敏感词库\n * hygen 快速方便的创建代码 可以命令行创建预设的 template\n * plop 同上，代码生成工具\n * ink 是一个 react 的命令行渲染器，命令行界面可以像写页面那么写了\n * dotenv 通过.env 设置环境部变量 vue-cli 也依赖它\n * patch-package 优雅的修改 node_modules 中的依赖库\n * playwright 同 puppeteer 团队出品，但区别是它支持 chrome、safari、firefox、edge\n * tree-cli node 根据目录结构生成 tree\n * tree-node-cli node 根据目录结构生成 tree\n * open node 打开浏览器\n\n\n# 命令行\n\n * signale 一个 node 的日志格式库，自带 16 个级别，可以定制颜色和 emoji，可扩展的日志记录器\n * consola 优雅的命令行 console logger vuepress 也使用了它\n * chalk 命令行着色美化库\n * progress-estimator 命令行 progress bar 进度条模拟库\n * ora elegant terminal spinner 命令行 loading\n * listr terminal task 命令行任务列表\n * yargs 命令行参数解析\n * y18n yargs 基于 i18n 的一个包\n * commander.js 自动的解析命令和参数，合并多选项，处理短参，等等，功能强大，上手简单\n * inquirer.js a collection of common interactive command line user interfaces. 命令行询问库\n * enquirer 命令行 prompt 询问库，写 cli 的时候很有用\n * qoa 同上\n * cli-progress terminal progress bar\n * cli-table tables for the cli\n * node-notifier 在 nodejs 环境中，可以很方便的唤起 notifier 通知\n\n\n# 文件处理\n\n * rimraf 删除文件\n * globby 用于模式匹配目录文件\n * glob 文件查找\n * tiny-glob 文件查找\n * chokidar node 监听文件变化的库\n * fs-extra fs-extra 模块是系统 fs 模块的扩展，提供了更多便利的 api，并继承了 fs 模块的 api\n * execa 比 child_process 好用，返回 promise\n * npm-run-all 一个 cli 工具可以并行或者串行执行 script 指令\n * memfs memory-fs 的替代品，将文件放在内存中优化读写，webpack 依赖\n\n\n# 调试\n\n * fx 命令行优化 json 输出\n * dumper.js 能让你的 node console 更加的规整，方便调试\n * ndb node 调试\n * why-is-node-running 查看 node 为什么在运行\n * siege 压测工具\n * node-in-debugging node.js 调试指南\n * node-best-practices node 最佳实践\n * node.js 最佳实践\n\n\n# graphql\n\n * prisma 让前端也能快速的写出\n * apollo graphql 是基于 graphql 的全栈解决方案集合。从后端到前端提供了对应的 lib 使得开发使用 graphql 更加的方便\n * dataloader 解决 graphql 中的 n+1 查询问题\n\n\n# 工具\n\n * high-speed-downloader 百度网盘不限速下载 支持 windows 和 mac\n * hyper 前端命令行\n * yapi 是一个可本地部署的、打通前后端及 qa 的、可视化的接口管理平台\n * sway 一个微软自己出的在线 ppt 很强大\n * ascii art generator 在线生成 ascii 图案\n * winds 开源 rss\n * jsui 一个用来控制管理前端项目的客户端\n * docz 让你能快速写文档的一个库\n * hiper 性能统计分析工具\n * verdaccio 私有 npm\n * git-guide git 入门指南\n * git-tips git 进阶\n * bit 实现了项目之间的代码共享 可以自建私有\n * simpread 简悦 ( simpread ) 让你瞬间进入沉浸式阅读的扩展\n * mkcert 一键命令 让本地也支持 https\n * termtosvg 录制 命令操作转成 svg 基于 python\n * gh-polls 可以在 github issue 中添加投票\n * eruda 移动端调试工具\n * vconsole 也是一个移动端调试工具 腾讯出品\n * terminalizer 命令行录制工具 基于 node\n * badgen 快速构建和 shields 一样的 svg badge 但速度更快\n * readability 移除页面非正文部分 基于 jsdom\n * wechatplugin-macos 一款功能强大的 macos 版微信小助手\n * puppeteer-recorder 一个 chrome 插件 能够根据你的操作 自动生成 puppeteer 相关代码\n * mdx-deck 用 markdown 编写演示文稿\n * code-surfer 基于 mdx-deck 的一个插件 让你更好的在文稿中展示 code\n * progressive tooling 前端性能优化工具集合\n * https://github.com/artf/grapesjs 可视化建站工具 不需要写代码就能写一个页面，前端再次再次要下岗了\n * image-charts 该服务通过 url 接受参数，然后生成图表，以图片形式返回\n * eagle.js 一个用 vue 来制作 ppt 的库\n * optimizely a/b test\n * appadhoc 一个国内的 a/b test 服务\n * glorious-demo 通过编写代码的方式构建一个命令行的演示例子\n * nginxconfig 可视化配置 nginx 提供了多个基础模板\n * bundlephobia 一个可以查看某个库的大小，并且分析它的依赖\n * jsperf 一个提供在线 test case 的网站，主要用来比较性能。可以比较如： foreach vs for 的性能\n * perflink 与 jsperf 类似的一个比较 js 性能的网站\n * algorithm-visualizer 算法代码可视化\n * an-english-guide-for-programmers 专为程序员编写的英语学习指南\n * webhint 用于检查代码的可访问性、性能和安全的开源检查（linting）工具\n * airtap 测试浏览器兼容性，可覆盖 800 多种浏览器\n * jsonstore 供免费，安全且基于 json 的云数据存储，自己玩的小项目神器\n * git-history 可视化查看一个文件的历史变化\n * x-spreadsheet 一个基于 canvas 的 js 电子表格库 excel\n * imgcook 阿里出品，一键通过设计稿生成代码\n * majestic jest 可视化\n * leon 你开源项目的 ai 个人助手\n * js-code-to-svg-flowchart 将代码逻辑用流程图的方式展现出来\n * xterm.js 一个 web terminal\n * pixelmatch diff 两张图片不一样的地方\n * readme-md-generator 一个命令行脚本帮你快速的创建一个 readme\n * build-tracker 构建大小追踪 记录你多个版本构建后文件大小的变化\n * zan-proxy 本地调试线上环境的工具\n * mjml 一个让发 email 更简单的框架。定义了一套自己的语法，你用这套语法写邮件，然后编译成 html。\n * any-rule 正则大全\n * outline 一个免费开源的库，能让你快速搭建自己的 wiki\n\n\n# webpack\n\n * webpackbar webpack 打包进度条\n * jarvis webpack dashboard\n * webpack-chain 通过 chain 风格 api 的方式修改 webpack 配置\n * speed-measure-webpack-plugin 统计 webpack 各阶段的耗时\n * obsolete-webpack-plugin 基于 browserslist 做浏览器升级提示\n * mini-css-extract-plugin 提取 css 为单独文件\n * copy-webpack-plugin 复制额外的文件到输出目录\n * duplicate-package-checker-webpack-plugin 检查是否存在重复依赖\n * cssnano css 压缩\n * bundle-buddy webpack bundle 依赖分析\n\n\n# 移动端\n\n * fastclick 解决移动端一些点击问题\n\n\n# 性能优化\n\n * workbox pwa 方案，google 出品\n\n\n# 请求处理\n\n * axios 目前最常见的请求库\n * got http 请求库 如果你觉得 request 太多的话 这是一个不错的选择\n * request 老牌请求库 -*whatwg-fetch** fetch 请求库\n * grpc-web 前端直连 grpc 服务\n * node-fetch node 环境下轻量级 fetch 请求库\n * reqwest\n\n\n# 工程\n\n * lerna monorepo 管理\n * lerna-changelog 为 lerna 项目自动生成 changelog\n * eslint js 风格约束\n * eslint-config-airbnb airbnb 约束风格\n * xo 封装自 eslint\n * prettier 更主观的风格自动修改\n * yeoman-generator 脚手架工具\n * serve 本地静态服务器\n * np npm publish 辅助，自动 push、打 tag、升版本等\n * lint-staged eslint 提速，只 lint 提交的代码\n * coveralls 覆盖率\n * husky 添加 git hooks\n * cross-env 跨平台的环境变量声明\n * nvm 管理 node 版本\n * concurrently 在 npm scripts 里并行执行命令\n * @zeit/ncc 打包为 npm 包为一个文件\n * npm-check 检测依赖升级情况，我会和 yarn upgrade-interactive 配合着用，主要用来检测冗余依赖\n * cpx 复制，支持 glob，并且可以 watch\n * onchange 监听文件变动然后做一些事\n * tasksfile 在 node 中执行 script 脚本\n\n\n# mac\n\n * get-plain-text 能清除剪贴板里的格式 很实用\n * iina mac 平台感觉免费最好的播放器 强推\n * magnet 分屏管理\n * xnip 方便好用的截图工具-支持截长图\n * spectacle 窗口管理工具\n * vanilla 顶栏图标管理工具\n * dozer 一个开源的顶栏管理\n * 腾讯电脑管家 反正我用下来好觉得蛮好用的\n * mos 鼠标平滑滚动软件，很好用。免费开源\n * sequel pro mysql 客户端 好用\n * microsoft remote desktop beta mac 远程登录 windows 调试神器\n * pap.er 专为 mac 设计的壁纸应用\n * the unarchive mac 目前感觉最好用的免费解压软件\n * tickeys 让你用 mac 键盘也能打出机械键盘的感觉\n * beaker browser p2p 开源浏览器 支持点对点发布文件，成为了文件传输工具，支持 dat 对等协议\n * gifski 视频转 gif 工具\n * more 更多优秀的 mac app 介绍\n * motrix 支持 http、ftp、bt、磁力链、百度网盘的下载工具\n * ipic这个应用可以让你方便地上传图片到各种图床\n * image2icon\n * hidden 是用来帮助你隐藏 macos 菜单栏上那些不常用的应用图标\n\n\n# 录制\n\n * licecap gif 录制，简洁好用，之前都用这个录制\n * kap 现在都用这个录制 gif，还支持导出 mp4，录制的 fps 很高\n * keycastr 按键显示，录制的时候显示你的按键\n\n\n# chrome 拓展\n\n * tampermonkey 油猴 神器\n * 扩展管理器 轻松管理扩展，就不用担心安装太多扩展了\n * visbug 它可以帮助你改变 css，移动元素等等一系类强大的功能,页面调试神器。当然有些时候还是 devtools 更好用\n * refined-github 优化 github 默认功能和样式的 chrome 插件\n * adb chrome 真机调试安卓神器\n * adblock plus 免费广告拦截程序 这个应该不用说了，装机必备\n * axure rp extension 看原型必备\n * json formatter json 格式化 程序员必备\n * lighthouse 谷歌出品，检查网页综合性能评分，分析不足\n * 二维码(qr 码)生成器 手机扫码神器\n * octotree github 上看代码必备神器\n * octolinker 能在 github 上看代码的时候 快速链接跳转到依赖的库\n * the great suspender chrome 太吃内存了，当页面开的很多时候会很卡，它就完美的解决了这个问题。它将几分钟没浏览过的页面都挂载了，当你想看是再重新加载\n * web 前端助手 支持 json 格式化、二维码生成与解码、代码压缩、markdown 与 html 互转、网页滚动截屏、正则表达式、时间转换工具、json 比对工具等\n * 掘金 目前我默认新开 tab 的默认页，可以刷刷新的文章或者项目，还不错。\n * 沙拉查词 划词翻译插件\n * npmhub在 readme 下方显示 npm 依赖信息\n\n\n# vs code\n\n * import cost 查看你引入的依赖模块大小\n * auto close tag 自动补全 html 标签，如输入<a>将自动补全</a>\n * auto rename tag 自动重命名 html 标签，如修改<a>为<b>，将自动修改结尾标签</a>为</b>\n * polacode 生产代码图片快照插件\n * vscode-leetcode 一个能让你在 vscode 中刷 leetcode 的插件 算一个划水神器吧\n * vscode-icons vs code 必备吧，为文件添加炫图标\n * codesnap 生产代码截图\n\n\n# 主题\n\n官方主题页 可以选择自己喜欢的主题 one-monokai 我用的是这个主题，很多年了\n\n\n# 字体\n\n * firacode\n * dank mono\n * operator mono\n\n\n# 编辑器和 terminal\n\n * go2shell 在当前文件夹打开 shell\n * terminal 用 iterm2 + zsh + oh-my-zsh 的组合，主题是 robbyrussell\n\n\n# zsh 插件\n\n * homebrew 必装\n * autojump 实现目录间快速跳转，想去哪个目录直接 j + 目录名，不用在频繁的 cd 了\n * zsh-autosuggestions 命令自动建议和补全\n * zsh-syntax-highlighting 命令行语法高亮\n * history 命令行记录\n * zsh-git-prompt git 分支信息提示\n\n\n# 开发常用软件\n\n * github desktop管理 github 仓库的变更和 pr\n * runjs js 运行沙盒，写 test case 或者面试当场写代码的时候很有用\n * charles 抓包用，支持 https\n * google chrome 前端必备没啥好说的\n * colorsnapper2 取色工具\n * postman api 调试工具\n * sequel pro mysql 界面管理工具\n * keepingyouawake 可保证系统不自动休眠，挂机跑脚本很有用\n\n\n# 有趣\n\n * the-bread-code 使用程序员的思维制作面包 ，比如制作中使用 a/b test, 来比较那种做法更好。\n * build-your-own-x 教你用各种语言实现 bot database neural network\n * **javascript-algorithms ** 教你用前端知识认识各种算法\n * not-paid 如果你给人做网站，交过去以后对方没有付款，那么这个 js 会把网站的透明度一天调低一点，直到看不见\n * nsfwjs 前端图片鉴黄，基于 tensorflow\n * elevator.js 我很喜欢的一个库，让一个 back-to-top 的效果有了一种坐复古电梯的感觉\n * app-ideas 很多年轻人苦于缺少练手的项目，这个项目收集了不少点子，每个点子都有明确的目标和复杂资源。\n * webgl-fluid-simulation 很酷的 webgl 交互\n * react-kawaii 一个非常可爱的 react 卡通人脸库，很有意思\n * chart-race-react 图表竞赛 长条图赛跑动画 在微博或者 b 站这种类型视频很火\n * 98.css windows 98 主题分格 css\n\n\n# 网站\n\n\n# 常看的网站\n\n * overreacted react dan 的个人博客，更新频率很高（redux 作者，react 核心开发）\n * dailyjs\n * codeburst\n * 阮一峰的网络日志 阮老师出的东西还是值得一读的\n * infoq 文章的质量比一般网站的高不少\n * 鱼塘 划水网站 收集了很多网站 当天热门文章\n * 每日时报 定期会分享一些库和工具\n * awesome-f2e-libs sorrycc 整理的个人关注使用的前端库\n\n\n# github\n\n * github 短域名服务\n * shields github readme 里面的装逼小图标\n * emoji 方便平时写查找 emoji\n * emoji.muan 同上 而且更全\n * git-awards github ranking 没事可以查着玩玩\n * http://githubrank.com/ github 按照 followers 排名\n * github-rank同上，githubrank 基本算挂了已经，只能用这个新的\n * star-history 展示一个项目 stars 增长规矩曲线\n * probot 基于 github 做一个小机器人。可以做很多 workflow 的事情\n\n\n# 开发\n\n * 产品/设计师/独立开发者的资源库 很全很强大\n * can i use 前端常用网站了 查看不同属性和方法的兼容性\n * squoosh 谷歌出品在线免费图片压缩工具 神器\n * codesandbox-client - 在线 web 开发容器\n * astexplorer - 一个在线 ast 生成器\n * 30 seconds of code 收集了许多有用的代码小片段\n * zeplin 前端和设计师神器，有标注、style guide、版本管理、简单的团队协作，重点是前端不用写 css 了，复制就可以了。\n * iconfont 阿里出的图标库，非常实用，支持 svg、font、png 多种格式，基本现在所有图标都在上面找。\n * cssicon 所有的 icon 都是纯 css 画的 缺点：icon 不够多\n * 智图 腾讯出品 在线图片压缩 支持转成 webp 处理静态图片时候很好用\n * picdiet 另一个图片压缩网站\n * css triangle generator 帮你快速用 css 做出三角形\n * cssarrowplease 帮你做对话框三角的\n * clippy 在线帮你使用 css clip-path 做出各种形状的图形\n * regular expressions 在线正则网站\n * jex 正则可视化网站，配合上面的 regular expressions，写正则方便很多\n * cyrilex 正则可视化网站\n * jsfiddle 在线运行代码网站 很不错，可惜要翻墙\n * codepan 在线运行代码网站 不用翻墙，可以自己部署\n * fiddle.md 一个方便的在线共享 markdown 在线笔试题一般都用这个\n * jsdelivr cdn 服务\n * unpkg cdn 服务\n * coderpad 远程面试的神器，可以让面试者远程写代码 不过需要翻墙\n * icode 有赞团队出品的 coderpad 可以互补，它不需要翻墙\n * codeadvice 又一个让面试者远程写代码的网址\n * snipper 一个代码协同的网站。你新建一个代码片段，然后把网址分享给其他人，就可以看到他们的实时编辑。\n * codesandbox 一个可以在线编辑且提供在线 demo 的网站 支持 vue react angular 多种框架 神器\n * codrops 上面的交互都非常酷炫\n * bgremover 在线图片去底工具\n * photopea 一个网页端 photoshop 很变态\n * bestofjs 查看一个项目增长经历，star 数变化的网站，辅助你判断这个库的质量\n * stackblitz 一款在线 ide,主要面向 web 开发者,移植了很多 vs code 的特性与功能\n * **programmingfonts.org ** 一个专门介绍编程字体的网站\n * 早报 一个个人开发者的前端开发的分享日报\n * emoji-search 帮你快速找到能表达你情感的 emoji\n * gitmoji 通过 emoji 表达 git 的操作内容\n * starcharts 可以把你一个项目的 stars 增长轨迹当做 svg 放在 readme 中\n * mockapi 一个还不错的在线 mock 服务（可在线可视化编辑），可以满足大部分简单需求了\n * coder 在线版 vs code\n * browserstack 远程调整各种版本浏览器 兼容性问题\n * carbon 根据代码块生成图片 主要作用是让你打代码片段分享的时候更好看一点\n * clipboard2markdown 将你所有复制进去的内容都转化为 markdown\n * grammarly 英语写作检查工具\n * quickchart 通过 url 生成图表的开源服务\n * hipdf 一站式在线 pdf 解决方案\n * whimsical 画路程图\n * lorem picsum 提供免费的占位图\n * sm.ms 免费图床\n * webpagetest 前端性能分析工具\n * 网络安全的教程\n * ananas analytics desktop 一站式 数据可视化\n * “零宽” 长度的短网址服务 利用“零宽字符”来缩短 url，还支持统计\n * hotjar 用户调研 支持用户反馈 录屏 heatmap\n * 狼叔：如何正确的学习 node.js\n * 独角兽公司榜单 感觉大家想去大公司的时候，可以看看排名\n * 中国传统颜色手册\n * coderlane 远程视频面试，目前使用的是牛客，这个工具待考察\n * excalidraw 手绘风格流程图，强推\n\n\n# 设计\n\n * uimovement 能从这个网站找到不少动画交互的灵感\n * awwwards是一个一个专门为设计精美的网站以及富有创意的网站颁奖的网站\n * dribbble 经常能在上面找到很多有创意好看的 gif 或者图片，基本上我所有的图都是上面招的\n * behance dribbble 是设计师的微博，behance 是设计师的博客\n * logojoy 使用 ai 做 logo 的网站，做出来的 logo 质量还不错。\n * brandmark 另一个在线制作 logo 网站\n * instant 又一个 logo 制作网站\n * logo-maker 又一个 logo 制作网站 这个更简单点 就是选模板之后微调\n * coolors 帮你在线配色的网站 你能找到不少配色灵感\n * colorhunt 另一个配色网站\n * uigradients 渐变色网站\n * designcap 在线海报设计\n * flat ui 色表 flat ui 色表\n * 0to255 颜色梯度\n * ikonate 提供免费的图标 icons\n * remixicon 又一个提供免费图标 icons\n * feather 免费的 icons\n * **nord ** 北欧性冷淡风主题配色\n * unsplash 提供免费的高清图片\n * colorkitty 从你的图片中提取配色\n * design.youzan 有赞设计原则\n * undraw 一个免费的插图网站，可以在上面寻找合适的插图，用于商业用途。\n\n\n# 有趣\n\n * 帮你百度一下 可以 点我测试一下**-\n * 国际版 同帮我百度一下-点我测试一下**-\n * wallhaven 壁纸网站-\n * url 地址播放 emojis 动画 在地址栏里面播放 emoji\n * can't unsee 强烈建议前端、客户端、ui 开发的同学玩下，检查一下自己对设计稿的敏感度怎么样\n * ggtalk 平时一直在听的一个技术博客\n * awesome-comment 里面收集了很多有趣的代码注释\n * text-img 都将图片转化为 ascii 用来写注释\n * weird-fonts 将普通字母转化为 特殊 unicode\n * snake 在地址栏里面玩贪吃蛇\n * zero-width-lib 利用零宽度字符实现 隐形水印、加密信息分享、逃脱词匹配，很有创意\n * abbreviations 查看一个简写是什么意思的网站\n * magi ai 搜索神器，超屌\n * 诺基亚短信图片生成器\n\n\n# 交互\n\n * 微交互 里面收集了市面上很多很好的微交互例子 值得学习\n * little big details 同上，一个国外微交互汇集网站\n * cruip 登录页的各种页面设计，可以免费下载模板\n * comixify 一个波兰团队做了非常好玩的工具，可以把视频自动转成漫画，上图是他们提供的 demo，效果很棒。\n * taiko-web 太鼓达人网页版 只能说很 6\n\n\n# css\n\n * css-tricks 一个学习 css 不错的网站 有很多有意思的 demo\n\n\n# 教程\n\n * npx 教你怎么合理的使用 npx\n * hacksplaining 网络安全学习网站\n * mobile-web-best-practice 移动 web 最佳实践\n * vanillawebprojects 通过纯前端的手段实现一些小项目，适合入门\n * think python 还不错的 python 入门教程\n * node.js cli apps best practices 叫你如何写好一个 node cli 工具\n * sql murder mystery 一个英文的 sql 初级教程，以游戏的方式，让你利用学到的 sql 概念和命令来找出谋杀凶手\n * html-dom 一些常用的 dom 或者原生 js 操作判断，挺实用的\n * typescript typescript 入门教程，很不错，推荐初学者学习\n * webpack 知识图谱 webpack 相关教程和原理分析还不错\n\n\n# 产品\n\n * 产品大牛 什么有很多完整的产品原型可以借鉴\n * 磨刀 快速出 ui 原型\n\n\n# 实用\n\n * 写作猫 可以通过 ai 的方式，帮你检查错别字，很有效的一个工具\n * draw 在线 web 画流程图\n * typeform 一个国外的在线调查问卷网站\n * videofk videofk 视频在线解析下载\n * 全历史 历史内容聚合网站\n * uzerme 云端办公工具\n * sobooks 强大的电子书资源网站\n * 稿定设计 键式设计工具+智能抠图\n * pichance 一个将低分辨率图片增强为高分辨率的工具，可以将分辨率增加 4 倍（即长和宽各增加一倍）\n * bigjpg 放大图片的神器 通过神经网络可以放大图片并能降噪\n * 大力盘 百度网盘搜索\n * enfi 下载器 不限速下载器\n * 来画视频 像做 ppt 一样做短视频\n * arkie 海报制作工具\n * 优品 ppt\n * 比格 ppt\n * 高清免费图片\n * 高清免费图片 2\n * 历史价格查询 淘宝，京东等商品历史价格，能更清晰了解商家的活动是否为虚假促销以及促销的力度。神器\n * firefox send 文件分享服务，下载一次或者到期即焚，在当前网络监管下很实用的服务\n * time.graphics 在线 milestone timeline 生成器\n * processon 免费在线作图，支持流程图、思维导图、原型图、uml、网络拓扑图、组织结构图等\n * 龙轩导航 一个总结了不少实用网站的导航\n\n\n# talk\n\n * peerigon-talks 收集了不少有意思的 talks\n\n\n# 算法\n\n * leetcode 用 js 刷 leetcode\n\n\n# typescript\n\n * typescript 入门教程 推荐阅读\n * 深入理解 typescript 深入理解 ts",charsets:{cjk:!0},lastUpdated:"2022/02/28, 02:13:56",lastUpdatedTimestamp:1646014436e3},{title:"前端收藏夹2",frontmatter:{title:"前端收藏夹2",date:"2022-02-28T00:42:04.000Z",permalink:"/pages/9abd62/",categories:["收藏夹"],tags:[null],readingShow:"top"},regularPath:"/07.%E6%94%B6%E8%97%8F%E5%A4%B9/02.%E6%94%B6%E8%97%8F%E5%A4%B92.html",relativePath:"07.收藏夹/02.收藏夹2.md",key:"v-383c8ffe",path:"/pages/9abd62/",headers:[{level:2,title:"文档",slug:"文档",normalizedTitle:"文档",charIndex:2},{level:2,title:"社区",slug:"社区",normalizedTitle:"社区",charIndex:210},{level:2,title:"博客",slug:"博客",normalizedTitle:"博客",charIndex:401},{level:2,title:"电子书",slug:"电子书",normalizedTitle:"电子书",charIndex:465},{level:2,title:"文章",slug:"文章",normalizedTitle:"文章",charIndex:353},{level:2,title:"梯子",slug:"梯子",normalizedTitle:"梯子",charIndex:557},{level:2,title:"视频",slug:"视频",normalizedTitle:"视频",charIndex:613},{level:3,title:"电视直播",slug:"电视直播",normalizedTitle:"电视直播",charIndex:746},{level:2,title:"Github",slug:"github",normalizedTitle:"github",charIndex:217},{level:2,title:"在线工具",slug:"在线工具",normalizedTitle:"在线工具",charIndex:867},{level:3,title:"开发",slug:"开发",normalizedTitle:"开发",charIndex:53},{level:3,title:"代码编辑",slug:"代码编辑",normalizedTitle:"代码编辑",charIndex:945},{level:3,title:"Emoji表情",slug:"emoji表情",normalizedTitle:"emoji表情",charIndex:1006},{level:3,title:"图片工具",slug:"图片工具",normalizedTitle:"图片工具",charIndex:1106},{level:3,title:"作图",slug:"作图",normalizedTitle:"作图",charIndex:1340},{level:3,title:"CSS",slug:"css",normalizedTitle:"css",charIndex:545},{level:3,title:"CDN加速",slug:"cdn加速",normalizedTitle:"cdn加速",charIndex:1636},{level:3,title:"网站托管",slug:"网站托管",normalizedTitle:"网站托管",charIndex:1696},{level:3,title:"正则",slug:"正则",normalizedTitle:"正则",charIndex:1726},{level:3,title:"其他",slug:"其他",normalizedTitle:"其他",charIndex:1787},{level:2,title:"设计",slug:"设计",normalizedTitle:"设计",charIndex:379},{level:3,title:"图库",slug:"图库",normalizedTitle:"图库",charIndex:2888},{level:2,title:"有趣",slug:"有趣",normalizedTitle:"有趣",charIndex:3049},{level:2,title:"交互",slug:"交互",normalizedTitle:"交互",charIndex:1966},{level:2,title:"教程",slug:"教程",normalizedTitle:"教程",charIndex:86},{level:2,title:"产品",slug:"产品",normalizedTitle:"产品",charIndex:2875},{level:2,title:"实用",slug:"实用",normalizedTitle:"实用",charIndex:3856},{level:2,title:"Talk",slug:"talk",normalizedTitle:"talk",charIndex:4229},{level:2,title:"算法",slug:"算法",normalizedTitle:"算法",charIndex:1876},{level:2,title:"生活",slug:"生活",normalizedTitle:"生活",charIndex:4309}],headersStr:"文档 社区 博客 电子书 文章 梯子 视频 电视直播 Github 在线工具 开发 代码编辑 Emoji表情 图片工具 作图 CSS CDN加速 网站托管 正则 其他 设计 图库 有趣 交互 教程 产品 实用 Talk 算法 生活",content:"# 文档\n\n * MDN | MDN-JS标准内置对象 Web技术权威文档\n * DevDocs Web 开发技术文档，非常不错的学习手册！\n * 现代JavaScript教程 以最新标准为基准的JS教程\n * ES5教程 阮一峰的JS教程\n * ES6教程 阮一峰的ES6教程\n * Bash 脚本教程 阮一峰编写\n * ECMA ECMA官网\n * 菜鸟教程 涵盖多种语言的初级教程\n * 腾讯云开发者手册\n\n\n# 社区\n\n * Github 程序员同性交友社区\n * 掘金 一个帮助开发者成长的社区\n * 简书 有很多频道的创作社区\n * 思否 解决技术问题的社区\n * stack overflow 同上，外网的\n * InfoQ\n * V2EX\n * 鱼塘热榜 划水网站，收集了很多网站，当天热门文章\n * 码力全开资源库 很全很强大，独立开发者/设计干货/优质利器/工具资源...\n\n\n# 博客\n\n * 阮一峰的网络日志\n * samanthaming 对前端小知识点的总结，并为每个知识点制作精美的小卡片。\n\n\n# 电子书\n\n * 高教书苑 高等教育出版社的书籍，包含多种学科。\n * 前端电子书收集\n * SoBooks 免费的电子书资源网站\n\n\n# 文章\n\n * 灵活运用CSS开发技巧\n\n\n# 梯子\n\n * 谷歌chrome商店访问助手\n\n * 谷歌云(GCP)一键搭建 V2Ray 让你畅快梯子\n\n\n# 视频\n\n * 慕课网 实战视频教程\n * 妙味课堂 比较系统的前端入门视频教程\n * 中国大学MOOC 涵盖计算机、外语、心理学等专业免费课程\n * bilibili B站，上面也有一些可供学习的免费视频\n * egghead 质量还不错的短视频教程，外网\n\n\n# 电视直播\n\n * CCTV、卫视高清直播\n\n\n# Github\n\n * github 短域名服务\n * shields 徽章图标\n * followers 全球排名\n * star-history 展示一个项目 Stars 增长曲线\n\n\n# 在线工具\n\n\n# 开发\n\n * Can I use 查看属性和方法的兼容性\n * 30 seconds of code 收集了许多有用的代码小片段\n\n\n# 代码编辑\n\n * codepen 在线代码编辑与演示\n * codesandbox 内嵌VSCode的在线IDE\n\n\n# Emoji表情\n\n * emoji表情\n * emoji表情备忘录\n * gitmoji 通过 emoji 表达 git 的操作内容\n\n> windows系统下按Win+.快速打开表情选择框\n\n\n# 图片工具\n\n * tinypng图片压缩 压缩png很有用\n * Squoosh 谷歌出品在线免费图片压缩工具（jpg、png等,压缩效果比tinypng稍好）\n * waifu2x 通过卷积网络放大图片\n * vectormagic 转换矢量图\n * vectorizer 真正的 png 转 svg 神器\n * 在线AI图片处理 黑白修复、无损放大、动漫化、铅笔画等。\n * remove AI抠图\n * backgroundremover 又一个抠图的\n\n\n# 作图\n\n * processon在线作图 流程图、思维导图、原型图等\n * 百度脑图 思维导图\n\n\n# CSS\n\n * CSS Tricks CSS技巧收集与演示\n * CSS生成器\n * CSS渐变生成器\n * CSS3-Box Shadow(阴影)\n * 贝塞尔曲线生成器\n * 花纹背景生成器\n * 花纹背景-pattern.css\n * 3D字体\n * css-tricks css技巧文章\n * You-need-to-know-css CSS的各种DEMO，很全\n * animista CSS动画可视化工具，复制代码就能用\n * navnav 各种炫酷的CSS动画组件\n\n\n# CDN加速\n\n * jsDelivr 国外的一家优秀的公共 CDN 服务提供商\n * unpkg cdn 服务\n\n\n# 网站托管\n\n * vercel 好用的网站托管服务\n\n\n# 正则\n\n * 正则可视化\n * iHateRegex 正则搜索，细节做得很好\n * 正则迷你书 学习正则的小手册\n\n\n# 其他\n\n * Linux命令手册\n * carbon代码图片生成器 生成好看的代码图片\n\n\n# 设计\n\n * 创造师导航\n * 设计师网址导航\n * remove AI抠图，抠图算法很厉害\n * Manypixels 插画\n * Undraw 插画\n * storytale 插画，种类丰富，包含3D插画\n * uimovement 能从这个网站找到不少动画交互的灵感\n * awwwards是一个一个专门为设计精美的网站以及富有创意的网站颁奖的网站\n * dribbble 经常能在上面找到很多有创意好看的 gif 或者图片\n * Bēhance dribbble 是设计师的微博，Bēhance 是设计师的博客\n * Logojoy 使用 ai 做 logo 的网站，做出来的 logo 质量还不错。\n * brandmark 另一个在线制作 logo 网站\n * instant 又一个 logo 制作网站\n * namecheap又一个 logo 制作网站\n * logo-maker 又一个 logo 制作网站 这个更简单点 就是选模板之后微调\n * coolors 帮你在线配色的网站 你能找到不少配色灵感\n * colorhunt 另一个配色网站\n * uigradients 渐变色网站\n * designcap 在线海报设计\n * Flat UI 色表 Flat UI 色表\n * 0to255 颜色梯度\n * Ikonate 提供免费的图标 icons\n * remixicon 又一个提供免费图标 icons\n * feather 免费的 icons\n * nord 北欧性冷淡风主题配色\n * Unsplash 提供免费的高清图片\n * Pexels 提供免费的高清图片\n * colorkitty 从你的图片中提取配色\n * design.youzan 有赞设计原则\n * iconfont 阿里巴巴矢量图标库\n * undraw 免费的矢量插画\n * icomoon 矢量图标库\n * cssicon 所有的 icon 都是纯 css 画的 缺点：icon 不够多\n * CSS triangle generator 帮你快速用 css 做出三角形\n * clippy 在线帮你使用 css clip-path 做出各种形状的图形\n * Lorem Picsum 提供免费的占位图\n * Canva 可画 生成插画、封面、海报、头像等\n * 404页 404页素材\n * collectui 按功能组件分类的设计图\n * smartmockups 产品模板生成工具\n\n\n# 图库\n\n * uigradients 渐变色生成工具\n * freepik banner 图库\n * 觅元素一天免费下载十张 psd\n * 搞定设计 可以抠图\n * vectorizer 真正的 png 转 svg 神器\n * 站酷\n * 花瓣\n * 虎克 Ps 学习教程\n * beTheme\n * UI 中国\n\n\n# 有趣\n\n * 奇趣网站收藏家 收藏了很多有趣的网站\n * FC在线模拟器(小霸王游戏机) 童年回忆\n * 帮你百度一下 可以 点我测试一下-\n * 国际版 同帮我百度一下-点我测试一下-\n * wallhaven 壁纸网站-\n * URL 地址播放 Emojis 动画 在地址栏里面播放 emoji\n * Can't Unsee 强烈建议前端、客户端、UI 开发的同学玩下，检查一下自己对设计稿的敏感度怎么样\n * ggtalk 平时一直在听的一个技术博客\n * awesome-comment 里面收集了很多有趣的代码注释\n * text-img 都将图片转化为 ascii 用来写注释\n * weird-fonts 将普通字母转化为 特殊 unicode\n * snake 在地址栏里面玩贪吃蛇\n * zero-width-lib 利用零宽度字符实现 隐形水印、加密信息分享、逃脱词匹配，很有创意\n * abbreviations 查看一个简写是什么意思的网站\n * magi ai 搜索神器，超屌\n * 诺基亚短信图片生成器\n\n\n# 交互\n\n * 微交互 里面收集了市面上很多很好的微交互例子 值得学习\n * Little Big Details 同上，一个国外微交互汇集网站\n * cruip 登录页的各种页面设计，可以免费下载模板\n * Comixify 一个波兰团队做了非常好玩的工具，可以把视频自动转成漫画，上图是他们提供的 demo，效果很棒。\n * taiko-web 太鼓达人网页版 只能说很 6\n\n\n# 教程\n\n * npx 教你怎么合理的使用 npx\n * hacksplaining 网络安全学习网站\n * mobile-web-best-practice 移动 web 最佳实践\n\n\n# 产品\n\n * 产品大牛 什么有很多完整的产品原型可以借鉴\n * 磨刀 快速出 ui 原型\n\n\n# 实用\n\n * webden 在线网页编辑器，轻便快捷\n * browser-update 浏览器版本更新提示插件\n * typeform 一个国外的在线调查问卷网站\n * VideoFk VideoFk 视频在线解析下载\n * 全历史 历史内容聚合网站\n * UzerMe 云端办公工具\n * SoBooks 强大的电子书资源网站\n * 稿定设计 键式设计工具+智能抠图\n * 大力盘 百度网盘搜索\n * ENFI 下载器 不限速下载器\n * 来画视频 像做 PPT 一样做短视频\n * Arkie 海报制作工具\n * 优品 PPT\n * 比格 PPT\n * 高清免费图片\n * 高清免费图片 2\n * shapedivider 生成波浪分隔线\n * Notion 知识库、快速笔记、TaskList、日记、读书清单，各种类型，应有尽有\n\n\n# Talk\n\n * peerigon-talks 收集了不少有意思的 talks\n\n\n# 算法\n\n * leetcode 用 js 刷 leetcode\n\n\n# 生活\n\n * Ventusky 风雨气温图",normalizedContent:"# 文档\n\n * mdn | mdn-js标准内置对象 web技术权威文档\n * devdocs web 开发技术文档，非常不错的学习手册！\n * 现代javascript教程 以最新标准为基准的js教程\n * es5教程 阮一峰的js教程\n * es6教程 阮一峰的es6教程\n * bash 脚本教程 阮一峰编写\n * ecma ecma官网\n * 菜鸟教程 涵盖多种语言的初级教程\n * 腾讯云开发者手册\n\n\n# 社区\n\n * github 程序员同性交友社区\n * 掘金 一个帮助开发者成长的社区\n * 简书 有很多频道的创作社区\n * 思否 解决技术问题的社区\n * stack overflow 同上，外网的\n * infoq\n * v2ex\n * 鱼塘热榜 划水网站，收集了很多网站，当天热门文章\n * 码力全开资源库 很全很强大，独立开发者/设计干货/优质利器/工具资源...\n\n\n# 博客\n\n * 阮一峰的网络日志\n * samanthaming 对前端小知识点的总结，并为每个知识点制作精美的小卡片。\n\n\n# 电子书\n\n * 高教书苑 高等教育出版社的书籍，包含多种学科。\n * 前端电子书收集\n * sobooks 免费的电子书资源网站\n\n\n# 文章\n\n * 灵活运用css开发技巧\n\n\n# 梯子\n\n * 谷歌chrome商店访问助手\n\n * 谷歌云(gcp)一键搭建 v2ray 让你畅快梯子\n\n\n# 视频\n\n * 慕课网 实战视频教程\n * 妙味课堂 比较系统的前端入门视频教程\n * 中国大学mooc 涵盖计算机、外语、心理学等专业免费课程\n * bilibili b站，上面也有一些可供学习的免费视频\n * egghead 质量还不错的短视频教程，外网\n\n\n# 电视直播\n\n * cctv、卫视高清直播\n\n\n# github\n\n * github 短域名服务\n * shields 徽章图标\n * followers 全球排名\n * star-history 展示一个项目 stars 增长曲线\n\n\n# 在线工具\n\n\n# 开发\n\n * can i use 查看属性和方法的兼容性\n * 30 seconds of code 收集了许多有用的代码小片段\n\n\n# 代码编辑\n\n * codepen 在线代码编辑与演示\n * codesandbox 内嵌vscode的在线ide\n\n\n# emoji表情\n\n * emoji表情\n * emoji表情备忘录\n * gitmoji 通过 emoji 表达 git 的操作内容\n\n> windows系统下按win+.快速打开表情选择框\n\n\n# 图片工具\n\n * tinypng图片压缩 压缩png很有用\n * squoosh 谷歌出品在线免费图片压缩工具（jpg、png等,压缩效果比tinypng稍好）\n * waifu2x 通过卷积网络放大图片\n * vectormagic 转换矢量图\n * vectorizer 真正的 png 转 svg 神器\n * 在线ai图片处理 黑白修复、无损放大、动漫化、铅笔画等。\n * remove ai抠图\n * backgroundremover 又一个抠图的\n\n\n# 作图\n\n * processon在线作图 流程图、思维导图、原型图等\n * 百度脑图 思维导图\n\n\n# css\n\n * css tricks css技巧收集与演示\n * css生成器\n * css渐变生成器\n * css3-box shadow(阴影)\n * 贝塞尔曲线生成器\n * 花纹背景生成器\n * 花纹背景-pattern.css\n * 3d字体\n * css-tricks css技巧文章\n * you-need-to-know-css css的各种demo，很全\n * animista css动画可视化工具，复制代码就能用\n * navnav 各种炫酷的css动画组件\n\n\n# cdn加速\n\n * jsdelivr 国外的一家优秀的公共 cdn 服务提供商\n * unpkg cdn 服务\n\n\n# 网站托管\n\n * vercel 好用的网站托管服务\n\n\n# 正则\n\n * 正则可视化\n * ihateregex 正则搜索，细节做得很好\n * 正则迷你书 学习正则的小手册\n\n\n# 其他\n\n * linux命令手册\n * carbon代码图片生成器 生成好看的代码图片\n\n\n# 设计\n\n * 创造师导航\n * 设计师网址导航\n * remove ai抠图，抠图算法很厉害\n * manypixels 插画\n * undraw 插画\n * storytale 插画，种类丰富，包含3d插画\n * uimovement 能从这个网站找到不少动画交互的灵感\n * awwwards是一个一个专门为设计精美的网站以及富有创意的网站颁奖的网站\n * dribbble 经常能在上面找到很多有创意好看的 gif 或者图片\n * behance dribbble 是设计师的微博，behance 是设计师的博客\n * logojoy 使用 ai 做 logo 的网站，做出来的 logo 质量还不错。\n * brandmark 另一个在线制作 logo 网站\n * instant 又一个 logo 制作网站\n * namecheap又一个 logo 制作网站\n * logo-maker 又一个 logo 制作网站 这个更简单点 就是选模板之后微调\n * coolors 帮你在线配色的网站 你能找到不少配色灵感\n * colorhunt 另一个配色网站\n * uigradients 渐变色网站\n * designcap 在线海报设计\n * flat ui 色表 flat ui 色表\n * 0to255 颜色梯度\n * ikonate 提供免费的图标 icons\n * remixicon 又一个提供免费图标 icons\n * feather 免费的 icons\n * nord 北欧性冷淡风主题配色\n * unsplash 提供免费的高清图片\n * pexels 提供免费的高清图片\n * colorkitty 从你的图片中提取配色\n * design.youzan 有赞设计原则\n * iconfont 阿里巴巴矢量图标库\n * undraw 免费的矢量插画\n * icomoon 矢量图标库\n * cssicon 所有的 icon 都是纯 css 画的 缺点：icon 不够多\n * css triangle generator 帮你快速用 css 做出三角形\n * clippy 在线帮你使用 css clip-path 做出各种形状的图形\n * lorem picsum 提供免费的占位图\n * canva 可画 生成插画、封面、海报、头像等\n * 404页 404页素材\n * collectui 按功能组件分类的设计图\n * smartmockups 产品模板生成工具\n\n\n# 图库\n\n * uigradients 渐变色生成工具\n * freepik banner 图库\n * 觅元素一天免费下载十张 psd\n * 搞定设计 可以抠图\n * vectorizer 真正的 png 转 svg 神器\n * 站酷\n * 花瓣\n * 虎克 ps 学习教程\n * betheme\n * ui 中国\n\n\n# 有趣\n\n * 奇趣网站收藏家 收藏了很多有趣的网站\n * fc在线模拟器(小霸王游戏机) 童年回忆\n * 帮你百度一下 可以 点我测试一下-\n * 国际版 同帮我百度一下-点我测试一下-\n * wallhaven 壁纸网站-\n * url 地址播放 emojis 动画 在地址栏里面播放 emoji\n * can't unsee 强烈建议前端、客户端、ui 开发的同学玩下，检查一下自己对设计稿的敏感度怎么样\n * ggtalk 平时一直在听的一个技术博客\n * awesome-comment 里面收集了很多有趣的代码注释\n * text-img 都将图片转化为 ascii 用来写注释\n * weird-fonts 将普通字母转化为 特殊 unicode\n * snake 在地址栏里面玩贪吃蛇\n * zero-width-lib 利用零宽度字符实现 隐形水印、加密信息分享、逃脱词匹配，很有创意\n * abbreviations 查看一个简写是什么意思的网站\n * magi ai 搜索神器，超屌\n * 诺基亚短信图片生成器\n\n\n# 交互\n\n * 微交互 里面收集了市面上很多很好的微交互例子 值得学习\n * little big details 同上，一个国外微交互汇集网站\n * cruip 登录页的各种页面设计，可以免费下载模板\n * comixify 一个波兰团队做了非常好玩的工具，可以把视频自动转成漫画，上图是他们提供的 demo，效果很棒。\n * taiko-web 太鼓达人网页版 只能说很 6\n\n\n# 教程\n\n * npx 教你怎么合理的使用 npx\n * hacksplaining 网络安全学习网站\n * mobile-web-best-practice 移动 web 最佳实践\n\n\n# 产品\n\n * 产品大牛 什么有很多完整的产品原型可以借鉴\n * 磨刀 快速出 ui 原型\n\n\n# 实用\n\n * webden 在线网页编辑器，轻便快捷\n * browser-update 浏览器版本更新提示插件\n * typeform 一个国外的在线调查问卷网站\n * videofk videofk 视频在线解析下载\n * 全历史 历史内容聚合网站\n * uzerme 云端办公工具\n * sobooks 强大的电子书资源网站\n * 稿定设计 键式设计工具+智能抠图\n * 大力盘 百度网盘搜索\n * enfi 下载器 不限速下载器\n * 来画视频 像做 ppt 一样做短视频\n * arkie 海报制作工具\n * 优品 ppt\n * 比格 ppt\n * 高清免费图片\n * 高清免费图片 2\n * shapedivider 生成波浪分隔线\n * notion 知识库、快速笔记、tasklist、日记、读书清单，各种类型，应有尽有\n\n\n# talk\n\n * peerigon-talks 收集了不少有意思的 talks\n\n\n# 算法\n\n * leetcode 用 js 刷 leetcode\n\n\n# 生活\n\n * ventusky 风雨气温图",charsets:{cjk:!0},lastUpdated:"2022/05/09, 16:36:37",lastUpdatedTimestamp:1652114197e3},{title:"面试相关",frontmatter:{title:"面试相关",date:"2022-02-28T00:38:04.000Z",permalink:"/pages/6a0e2e/",categories:["收藏夹"],tags:[null],readingShow:"top"},regularPath:"/07.%E6%94%B6%E8%97%8F%E5%A4%B9/03.%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3.html",relativePath:"07.收藏夹/03.面试相关.md",key:"v-4c048038",path:"/pages/6a0e2e/",headersStr:null,content:"# 面试相关\n\n提示\n\n你的简历是自己工作的答卷，项目经历是你给面试官出的考纲。所以，我的面试一定是与我的简历、工作经历相关的，一些面试题并不一定适用于任何人，但是你可以从中了解他们考察的点，以及侧重点。基础知识可以查漏补缺。\n\n这里不太适合前端初学者，因为我面试的时候默认你至少有一定的前端基础了，我不会问你最基本的 html 有什么标签 ==和===有什么区别\n\n前端工程师手册\n\n30-seconds-of-interviews\n\nfront-end-interview-handbook\n\n33-js-concepts\n\n33-js-concepts 中国国情版\n\nGit 飞行规则 看了这个常规的 git 应该没什么问题了\n\nnode-interview\n\nNode.js-Troubleshooting-Guide Node.js 应用线上/线下故障、压测问题和性能调优指南手册\n\n2018 大厂高级前端面试题汇总\n\nDaily-Interview-Question 每天一道前端大厂面试题\n\nhttps://github.com/forthealllight/blog/issues\n\nreverse-interview 反向面试\n\nJavaScript 深入系列 强烈推荐看一遍\n\nFront-End-Interview-Notebook 比较基础适合实习生或者应届生看，可以快速的过一遍查漏补缺\n\n想成为一个好的前端工程师，光有强大的编程能力是远远不够的，还有很多软知识需要知道。\n\n学会与人沟通。\n\n前端是一个承上启下的工作，在实际业务之中你除了要面对代码之外还需要对接 UI、产品、后端和其它前端有时候经常也会和运营啊广告销售打交道。因此怎么与其他角色很好的沟通也是一个非常重要的能力，代码写的再好，但不满足需求也是白搭。\n\n需求明确再动手；发现问题尽快解决；意见分歧不要拒绝沟通；学会换位思考，不要总站在自己的角度想当然；",normalizedContent:"# 面试相关\n\n提示\n\n你的简历是自己工作的答卷，项目经历是你给面试官出的考纲。所以，我的面试一定是与我的简历、工作经历相关的，一些面试题并不一定适用于任何人，但是你可以从中了解他们考察的点，以及侧重点。基础知识可以查漏补缺。\n\n这里不太适合前端初学者，因为我面试的时候默认你至少有一定的前端基础了，我不会问你最基本的 html 有什么标签 ==和===有什么区别\n\n前端工程师手册\n\n30-seconds-of-interviews\n\nfront-end-interview-handbook\n\n33-js-concepts\n\n33-js-concepts 中国国情版\n\ngit 飞行规则 看了这个常规的 git 应该没什么问题了\n\nnode-interview\n\nnode.js-troubleshooting-guide node.js 应用线上/线下故障、压测问题和性能调优指南手册\n\n2018 大厂高级前端面试题汇总\n\ndaily-interview-question 每天一道前端大厂面试题\n\nhttps://github.com/forthealllight/blog/issues\n\nreverse-interview 反向面试\n\njavascript 深入系列 强烈推荐看一遍\n\nfront-end-interview-notebook 比较基础适合实习生或者应届生看，可以快速的过一遍查漏补缺\n\n想成为一个好的前端工程师，光有强大的编程能力是远远不够的，还有很多软知识需要知道。\n\n学会与人沟通。\n\n前端是一个承上启下的工作，在实际业务之中你除了要面对代码之外还需要对接 ui、产品、后端和其它前端有时候经常也会和运营啊广告销售打交道。因此怎么与其他角色很好的沟通也是一个非常重要的能力，代码写的再好，但不满足需求也是白搭。\n\n需求明确再动手；发现问题尽快解决；意见分歧不要拒绝沟通；学会换位思考，不要总站在自己的角度想当然；",charsets:{cjk:!0},lastUpdated:"2022/02/27, 16:55:52",lastUpdatedTimestamp:1645980952e3},{title:"关于 - 我",frontmatter:{title:"关于 - 我",date:"2022-04-16T17:52:59.000Z",permalink:"/about/me/",categories:[null],tags:[null],readingShow:"top"},regularPath:"/08.%E5%85%B3%E4%BA%8E/01.%E5%85%B3%E4%BA%8E-%E6%88%91.html",relativePath:"08.关于/01.关于-我.md",key:"v-66bef6ac",path:"/about/me/",headers:[{level:2,title:"读者的问题与回答",slug:"读者的问题与回答",normalizedTitle:"读者的问题与回答",charIndex:15},{level:3,title:"QA - 做这个网站的初衷是什么",slug:"qa-做这个网站的初衷是什么",normalizedTitle:"qa - 做这个网站的初衷是什么",charIndex:29},{level:3,title:"QA - 是否可以有机会合作",slug:"qa-是否可以有机会合作",normalizedTitle:"qa - 是否可以有机会合作",charIndex:51},{level:3,title:"QA - 是否可以提供技术支持",slug:"qa-是否可以提供技术支持",normalizedTitle:"qa - 是否可以提供技术支持",charIndex:71},{level:3,title:"QA - 是否考虑变现",slug:"qa-是否考虑变现",normalizedTitle:"qa - 是否考虑变现",charIndex:92},{level:3,title:"QA - 网站运营",slug:"qa-网站运营",normalizedTitle:"qa - 网站运营",charIndex:109},{level:3,title:"我的三观",slug:"我的三观",normalizedTitle:"我的三观",charIndex:124},{level:3,title:"联系我",slug:"联系我",normalizedTitle:"联系我",charIndex:134},{level:3,title:"更多",slug:"更多",normalizedTitle:"更多",charIndex:143}],headersStr:"读者的问题与回答 QA - 做这个网站的初衷是什么 QA - 是否可以有机会合作 QA - 是否可以提供技术支持 QA - 是否考虑变现 QA - 网站运营 我的三观 联系我 更多",content:"# 关于 - 我\n\n\n\n * 读者的问题与回答\n   * QA - 做这个网站的初衷是什么\n   * QA - 是否可以有机会合作\n   * QA - 是否可以提供技术支持\n   * QA - 是否考虑变现\n   * QA - 网站运营\n   * 我的三观\n   * 联系我\n   * 更多\n\n\n\n\n# 读者的问题与回答\n\n\n# QA - 做这个网站的初衷是什么\n\n兴趣使然，将学到的东西都记录下来。\n\n * 知识碎片化，对知识没有形成体系。\n * 忙于业务代码，忙到忘记思考。\n * 在焦虑中心态焦灼学习中艰难前行。\n\n\n# QA - 是否可以有机会合作\n\n当然可以，你可以在本页找到我。\n\n\n# QA - 是否可以提供技术支持\n\n当然可以，如果我刚好不忙的话，很愿意互相交流一下。\n\n\n# QA - 是否考虑变现\n\n暂不会考虑将网站及内容作为商业用途，后期也尽可能不加入广告。\n\n\n# QA - 网站运营\n\n免费服务器储存GitHub Pages，缓存Cloudflare，图片使用OSS确保资源不丢失，域名续费10年以维持网站长期存在。\n\n\n# 我的三观\n\n我是性格内向，喜欢独处，懒惰的人，也是一个空闲之余喜欢编程的人，喜欢学习新技术，喜欢分享知识，喜欢分享生活。\n\n\n\n\n# 联系我\n\n\n\n# 更多\n\n> 加入学习交流群。\n\n一起学习和技术交流，请添加我微信，我会直接将你拉进前端有道交流群。合作意向，请表明来意。",normalizedContent:"# 关于 - 我\n\n\n\n * 读者的问题与回答\n   * qa - 做这个网站的初衷是什么\n   * qa - 是否可以有机会合作\n   * qa - 是否可以提供技术支持\n   * qa - 是否考虑变现\n   * qa - 网站运营\n   * 我的三观\n   * 联系我\n   * 更多\n\n\n\n\n# 读者的问题与回答\n\n\n# qa - 做这个网站的初衷是什么\n\n兴趣使然，将学到的东西都记录下来。\n\n * 知识碎片化，对知识没有形成体系。\n * 忙于业务代码，忙到忘记思考。\n * 在焦虑中心态焦灼学习中艰难前行。\n\n\n# qa - 是否可以有机会合作\n\n当然可以，你可以在本页找到我。\n\n\n# qa - 是否可以提供技术支持\n\n当然可以，如果我刚好不忙的话，很愿意互相交流一下。\n\n\n# qa - 是否考虑变现\n\n暂不会考虑将网站及内容作为商业用途，后期也尽可能不加入广告。\n\n\n# qa - 网站运营\n\n免费服务器储存github pages，缓存cloudflare，图片使用oss确保资源不丢失，域名续费10年以维持网站长期存在。\n\n\n# 我的三观\n\n我是性格内向，喜欢独处，懒惰的人，也是一个空闲之余喜欢编程的人，喜欢学习新技术，喜欢分享知识，喜欢分享生活。\n\n\n\n\n# 联系我\n\n\n\n# 更多\n\n> 加入学习交流群。\n\n一起学习和技术交流，请添加我微信，我会直接将你拉进前端有道交流群。合作意向，请表明来意。",charsets:{cjk:!0},lastUpdated:"2022/05/20, 09:51:16",lastUpdatedTimestamp:1653040276e3},{title:"推荐前端常用库",frontmatter:{title:"推荐前端常用库",date:"2022-02-28T00:36:54.000Z",permalink:"/pages/797db9/",categories:["收藏夹"],tags:[null],readingShow:"top"},regularPath:"/07.%E6%94%B6%E8%97%8F%E5%A4%B9/04.%E6%8E%A8%E8%8D%90%E5%89%8D%E7%AB%AF%E5%B8%B8%E7%94%A8%E5%BA%93.html",relativePath:"07.收藏夹/04.推荐前端常用库.md",key:"v-307e096c",path:"/pages/797db9/",headers:[{level:2,title:"前端常用",slug:"前端常用",normalizedTitle:"前端常用",charIndex:4},{level:2,title:"Css && 动画",slug:"css-动画",normalizedTitle:"css &amp;&amp; 动画",charIndex:null},{level:2,title:"Vue",slug:"vue",normalizedTitle:"vue",charIndex:1882},{level:2,title:"实践库",slug:"实践库",normalizedTitle:"实践库",charIndex:4005},{level:2,title:"文档",slug:"文档",normalizedTitle:"文档",charIndex:2269},{level:2,title:"工具库",slug:"工具库",normalizedTitle:"工具库",charIndex:4312},{level:2,title:"Node",slug:"node",normalizedTitle:"node",charIndex:914},{level:3,title:"工具库",slug:"工具库-2",normalizedTitle:"工具库",charIndex:4312},{level:3,title:"命令行",slug:"命令行",normalizedTitle:"命令行",charIndex:972},{level:3,title:"文件处理",slug:"文件处理",normalizedTitle:"文件处理",charIndex:6558},{level:3,title:"调试",slug:"调试",normalizedTitle:"调试",charIndex:6858},{level:2,title:"GraphQL",slug:"graphql",normalizedTitle:"graphql",charIndex:7078},{level:2,title:"工具",slug:"工具",normalizedTitle:"工具",charIndex:245},{level:2,title:"Webpack",slug:"webpack",normalizedTitle:"webpack",charIndex:9195},{level:2,title:"移动端",slug:"移动端",normalizedTitle:"移动端",charIndex:2096},{level:2,title:"性能优化",slug:"性能优化",normalizedTitle:"性能优化",charIndex:8082},{level:2,title:"请求处理",slug:"请求处理",normalizedTitle:"请求处理",charIndex:9673},{level:2,title:"工程",slug:"工程",normalizedTitle:"工程",charIndex:9863},{level:2,title:"Mac",slug:"mac",normalizedTitle:"mac",charIndex:7279},{level:2,title:"录制",slug:"录制",normalizedTitle:"录制",charIndex:7655},{level:2,title:"Chrome 拓展",slug:"chrome-拓展",normalizedTitle:"chrome 拓展",charIndex:11183},{level:2,title:"VS Code",slug:"vs-code",normalizedTitle:"vs code",charIndex:11882},{level:3,title:"主题",slug:"主题",normalizedTitle:"主题",charIndex:733},{level:3,title:"字体",slug:"字体",normalizedTitle:"字体",charIndex:3358},{level:2,title:"编辑器和 Terminal",slug:"编辑器和-terminal",normalizedTitle:"编辑器和 terminal",charIndex:12272},{level:3,title:"zsh 插件",slug:"zsh-插件",normalizedTitle:"zsh 插件",charIndex:12378},{level:2,title:"开发常用软件",slug:"开发常用软件",normalizedTitle:"开发常用软件",charIndex:12570},{level:2,title:"有趣",slug:"有趣",normalizedTitle:"有趣",charIndex:12823}],headersStr:"前端常用 Css && 动画 Vue 实践库 文档 工具库 Node 工具库 命令行 文件处理 调试 GraphQL 工具 Webpack 移动端 性能优化 请求处理 工程 Mac 录制 Chrome 拓展 VS Code 主题 字体 编辑器和 Terminal zsh 插件 开发常用软件 有趣",content:"# 推荐前端常用库\n\n这里主要推荐一下自己平时常用，提高效率的一些库和软件。\n\n\n# 前端常用\n\n * sweetalert2 一个自适应，且自定义性强的弹出框（零依赖）\n * tippy.js 最著名的 tooltip/popover library\n * text-mask 可以让 input 按照规则输入(如电话,email,日期,信用卡等)，特殊格式 input\n * dinero.js 用来创建、计算和格式化货币价值的不可变的框架，支持国际化\n * lerna 大项目版本控制工具，项目中可以有多个 package.json 文件\n * img-2 一个提高图片加载性能和体验的库，懒加载使用 web worker 模糊预览\n * fingerprintjs 是一个快速的浏览器指纹库，通浏览环境的一系列配置生成 id\n * ajv 一个 json schema 验证的库\n * dayjs 一个轻量级类 moment.js API 时间库\n * primjs 让页面支持代码高亮\n * ReLaXed 一个将 document html 转成 PDF 的工具\n * uppy 一个很好看的也很好用的 前端上传库\n * Filepond 一个小巧的文件上传库\n * tui-calendar 功能全面的日程安排日历控件，还支持拖拽\n * tui.editor markdown 所见即所得编辑器\n * tabler 基于 Bootstrap 4 的 Dashboard UI Kit 和美观 高颜值 ui 模板\n * pulltorefresh.js 下个下拉刷新插件\n * lulu 腾讯阅文基于 jQuery，针对 PC 网站 IE8+（peak 主题）的前端 UI 框架\n * chancejs 生成随机数据的库\n * spritejs 360 奇舞团出的跨平台绘图对象模型\n * tui.image-editor 一个功能齐全的在线图片编辑，基于 canvas\n * nanoid 前端轻量 unique string ID 生成库\n * rxdb 一款开源的快速、灵活的客户端数据库，支持各种浏览器以及 NodeJS，Electron、React 等等，是 PouthDB 之上的一个封装库\n * percollate 命令行工具 能将网页转换成 pdf\n * rawact 一个 babel 插件，把 react 组件转为原生 dom\n * irondb 是一个浏览器 key-value 储存的封装库，把 Cookies、IndexedDB、LocalStorage、SessionStorage 统一成一个接口。它的最大特色就是数据冗余机制，即使某种底层储存机制失效，它可以从其他机制恢复数据。\n * big.js 解决 js 浮点数问题。 主要就是 Big Number 或者小数点温柔\n * bignumber.js 同上\n * stickybits CSS 的 position: sticky 是一个很有用的设置，但是老的浏览器不支持。这个 JS 库是该功能的垫片库。\n * react-jsonschema-form Mozilla service 开源了一个通过 JSON 直接生成表单的 React 组件\n * cleave.js 用于在输入时格式化输入内容（信用卡格式、日期等）\n * shiny 在手机设备上模拟光的反射效果。 支持 DeviceMotion 事件\n * cloudquery Turn any website to serverless API\n * A-Programmers-Guide-to-English 专为程序员编写的英语学习指南。\n * rrweb 一个可以记录你页面中所有操作的库\n * nodeppt markdown 写 ppt\n * flexsearch 能让你更加高效和快速的检索文本内容\n * public-apis 汇集了市面上一些对外免费开放的 api，做一些自己练手 app 的时候很好用。\n * scroll-hint 用于提示用户页面可以左右滑动的一个提示库\n * fuse.js 轻量级前端模糊查询库 非常的好用\n * FileSaver.js 文件下载插件 很多时候下载会有兼容性问题，它能帮你解决这些问题\n * instant.page 一个判断用户行为 预测提前加载页面的库\n * screenfull.js 浏览器全屏插件 解决了不少兼容性问题\n * VuePress 本网站就是基于它实现的，简单方便的静态网站生成器\n * selection 可视化选择页面元素的库\n * scroll-out 滚动效果（滚动视差）的框架，框架大小不到 1KB,使用回调的方式将相关动画元素的属性进行实时分配\n * gpu.js 通过将 js 转为特定的 language，利用 GPU 来执行，大大提高了执行性能和速度\n * pressure 前端实现 3D Touch\n * hammer 移动端手势库\n * AlloyFinger 腾讯出的手势库\n * lowdb LowDB 是一个本地 JSON 数据库，基于 Lodash 开发的\n * JSON-server 可以配合 LowDB 使用 快速搭建一个 REST API\n * lunr.js 是个用于浏览器的轻量级 JavaScript 全文搜索引擎,对于一些小型的博客、开发者文档或 Wiki 网站来说,完全可以通过它实现站内离线搜索\n * he 一个前端 encoder/decoder 库\n * grade 一个可以根据你的 图片 调整底色的插件\n * pretty-bytes 将字节转换成可以读的字符串，比如 1337 个字节，会显示成 1.34 KB\n * runkit 一个基于 node 的在线 playground\n * chart.xkcd 手绘风格的图表库\n * sketchviz 手绘风格流程图\n * pagemap Mini map for web pages 页面导航图\n * commonmark.js parser and renderer markdown\n * body-scroll-lock 解决滚动穿透问题\n * lodash 前端工具函数集合\n * dayjs 时间处理库，不过大部分情况下我还是用自己的封装的函数\n * lightgallery 图片预览组件\n * photoswipe 图片预览组件，支持移动端\n * darken 页面黑夜模式切换\n * mitt 轻量级 pub/sub\n * sanitize-html html 过滤库，防 xss\n * DOMPurify 比 sanitize-html 更轻量，建议一般业务用这个\n\n\n# Css && 动画\n\n * animate.css 最有名的动画效果库\n * magic.css css 动画效果库 类似 animate.css\n * popmotion 一个函数式声明前端动画库\n * NES.css 任天堂主题风格 css 库\n * particles.js 前端实现颗粒粒子的动画效果库，比较炫酷，但相对的也比较吃性能\n * PaperCSS 手绘风格感觉 css 库\n * rough 基于 Canvas 的手绘风格图形库\n * wired-elements 基于 rough.js 分装 button input radio 等组件。它的底层是 Web components\n * roughViz rough 风格的图表库 手绘风格的图表库\n * matter-js web 物理引擎\n * micron 通过在元素上绑定属性从而实现动画效果的库\n * direction-reveal 根据鼠标进入位置，展现从不同方向 展现 hover 效果\n * laxxx 滚动特效库 轻量级 压缩完 2kb\n * cssfx 优雅的 CSS 动画效果，开箱即用\n * zdog 3D engine 引擎\n * leonsans 酷炫的 字体 动画 geometric sans-serif typeface made with code\n * css-doodle A web component for drawing patterns with CSS 一个用于使用 CSS 绘制图案的 Web 组件\n\n\n# Vue\n\n * vue-multiselect select 组件 目前 vue 里面用过最好用的\n * Vue.Draggable DnD 拖拽组件 基于 Sortable.js 的 vue 版本\n * vue-sauce 一个可以展示 vue 源码的指令\n * vue-smooth-dnd Vue wrappers components for smooth-dnd\n * vuegg 一个 vue 可视化拖拽界面生成器\n * vee-validate 基于 vue 的验证，能验证的内容比较全\n * vuesax 一个很漂亮的基于 vue 的 ui 框架\n * vue-analytics 基于 vue 的 谷歌统计封装\n * vue-virtual-scroller 基于 vue 的虚拟列表无限滚动\n * vue-content-placeholders 页面龙骨 skeleton\n * buefy 适配移动端的 vue 组件库 看着还挺舒服的\n * vxe-tablevue 表格解决方案，还没具体用过看着的确解决了其它 table 组件的一些问题\n * Vue 测试指南 vue 测试指南\n\n\n# 实践库\n\n * Jasonette 一个用 json 来构建 hybrid App 的框架\n * crate 一个 react 全栈练习(pc,mobile,rn,api) demo，适合入门拿来练手\n * react-in-patterns 一本开源教你如何写 react 的书\n * hocs react 相关 hoc 收集库\n\n\n# 文档\n\n * vuepress vue 官方出品的文档工具\n * docsify 轻量级文档工具，但其是运行时编译的，所以 seo 不好\n * GitBook 除了编译慢没啥毛病\n * mdx jsx + markdown\n * docz\n * storybook\n\n\n# 工具库\n\n * live-server 可以快速启一个本地 dev 服务 并且支持自动刷新的 http server\n * serve 快速起本地静态服务\n * picojs js 人脸识别库\n * es-checker 检查当前环境对 ES6 支持的情况。支持浏览器和 node.js\n * merge-images 图片合成，利用canvas能将几张图片合成一张\n * fabric.js 基于 canvas 创建交互式的图片编辑界面非常适合用来做图片合成类工作。\n * phaser 这是一个为桌面和移动浏览器开发 HTML5 游戏的快速开源框架。 你可以为 iOS、 Android 和不同的本地应用程序创建游戏。\n * purifycss 移除没使用到的 css\n * dropcss 同上\n * fast-cli 命令行测试下载上传速度\n * @pika/web 让你不需要在本地 webpack 中 import，直接在游览器里面运行 npm 包\n * pinyin 汉字拼音转换工具\n * JavaScript Obfuscator Tool js 代码混淆工具\n * tesseract 图像识别，它能识别图片中的文字，支持中文\n * gka 一款高效、高性能的帧动画生成工具。只需一行命令，快速图片优化、生成动画文件，支持效果预览。\n * recast 前端 ast 库\n * jscodeshift 将 js 内容解析成 AST 语法树，然后提供一些便利的操作接口，方便我们对各个节点进行更改\n * stats.js 前端性能监控 如 FPS、内存使用情况等\n * PapaParse 解析 csv excel\n * mddir 生成 markdown file/folder structure 目录结构 tree\n * imagemin 图片压缩库\n * inline-css css covert to inline style 在生成 email 格式 html 的时候特别有用\n * babel-plugin-try-catch-error-report 全局自动 catch 错误进行数据上报\n * StreamSaver.js 大文件下载，不用像 saveAs 那样先读到内存中再下载\n * mammoth.js Convert Word documents (.docx files) to HTML\n * npkill 列出所有 node_modules，并支持删除\n * strapi 开源的解决方案来创建、部署和管理自己的 API，通过图形化界面进行操作\n\n\n# Node\n\n\n# 工具库\n\n * cheerio 用类 jQuery 语法处理 HTML\n * node-semver node 版本验证库\n * live-server 一个简单的 http server 带有 reload 功能\n * node-portfinder 一个端口嗅探工具\n * update-notifiernode 依赖升级提醒工具\n * fastscan node 敏感词库\n * hygen 快速方便的创建代码 可以命令行创建预设的 template\n * plop 同上，代码生成工具\n * ink 是一个 React 的命令行渲染器，命令行界面可以像写页面那么写了\n * dotenv 通过.env 设置环境部变量 vue-cli 也依赖它\n * patch-package 优雅的修改 node_modules 中的依赖库\n * Playwright 同 Puppeteer 团队出品，但区别是它支持 Chrome、Safari、Firefox、Edge\n * tree-cli node 根据目录结构生成 tree\n * tree-node-cli node 根据目录结构生成 tree\n * open node 打开浏览器\n\n\n# 命令行\n\n * signale 一个 Node 的日志格式库，自带 16 个级别，可以定制颜色和 Emoji，可扩展的日志记录器\n * consola 优雅的命令行 console logger vuepress 也使用了它\n * chalk 命令行着色美化库\n * progress-estimator 命令行 progress bar 进度条模拟库\n * ora Elegant terminal spinner 命令行 loading\n * listr Terminal task 命令行任务列表\n * yargs 命令行参数解析\n * y18n yargs 基于 i18n 的一个包\n * commander.js 自动的解析命令和参数，合并多选项，处理短参，等等，功能强大，上手简单\n * Inquirer.js A collection of common interactive command line user interfaces. 命令行询问库\n * enquirer 命令行 prompt 询问库，写 cli 的时候很有用\n * Qoa 同上\n * cli-progress Terminal Progress Bar\n * cli-table tables for the CLI\n * node-notifier 在 NodeJS 环境中，可以很方便的唤起 notifier 通知\n\n\n# 文件处理\n\n * rimraf 删除文件\n * globby 用于模式匹配目录文件\n * glob 文件查找\n * tiny-glob 文件查找\n * chokidar node 监听文件变化的库\n * fs-extra fs-extra 模块是系统 fs 模块的扩展，提供了更多便利的 API，并继承了 fs 模块的 API\n * execa 比 child_process 好用，返回 Promise\n * npm-run-all 一个 CLI 工具可以并行或者串行执行 script 指令\n * memfs memory-fs 的替代品，将文件放在内存中优化读写，webpack 依赖\n\n\n# 调试\n\n * fx 命令行优化 JSON 输出\n * dumper.js 能让你的 node console 更加的规整，方便调试\n * ndb node 调试\n * why-is-node-running 查看 node 为什么在运行\n * siege 压测工具\n * node-in-debugging node.js 调试指南\n * node-best-practices node 最佳实践\n * Node.js 最佳实践\n\n\n# GraphQL\n\n * prisma 让前端也能快速的写出\n * Apollo GraphQL 是基于 GraphQL 的全栈解决方案集合。从后端到前端提供了对应的 lib 使得开发使用 GraphQL 更加的方便\n * dataloader 解决 Graphql 中的 N+1 查询问题\n\n\n# 工具\n\n * high-speed-downloader 百度网盘不限速下载 支持 Windows 和 Mac\n * hyper 前端命令行\n * yapi 是一个可本地部署的、打通前后端及 QA 的、可视化的接口管理平台\n * sway 一个微软自己出的在线 ppt 很强大\n * Ascii Art Generator 在线生成 Ascii 图案\n * Winds 开源 RSS\n * JSUI 一个用来控制管理前端项目的客户端\n * docz 让你能快速写文档的一个库\n * hiper 性能统计分析工具\n * verdaccio 私有 npm\n * git-guide git 入门指南\n * git-tips git 进阶\n * bit 实现了项目之间的代码共享 可以自建私有\n * simpread 简悦 ( SimpRead ) 让你瞬间进入沉浸式阅读的扩展\n * mkcert 一键命令 让本地也支持 https\n * termtosvg 录制 命令操作转成 svg 基于 python\n * gh-polls 可以在 github issue 中添加投票\n * eruda 移动端调试工具\n * vConsole 也是一个移动端调试工具 腾讯出品\n * terminalizer 命令行录制工具 基于 node\n * badgen 快速构建和 shields 一样的 svg badge 但速度更快\n * readability 移除页面非正文部分 基于 jsdom\n * WeChatPlugin-MacOS 一款功能强大的 macOS 版微信小助手\n * puppeteer-recorder 一个 chrome 插件 能够根据你的操作 自动生成 puppeteer 相关代码\n * mdx-deck 用 markdown 编写演示文稿\n * code-surfer 基于 mdx-deck 的一个插件 让你更好的在文稿中展示 code\n * Progressive Tooling 前端性能优化工具集合\n * https://github.com/artf/grapesjs 可视化建站工具 不需要写代码就能写一个页面，前端再次再次要下岗了\n * image-charts 该服务通过 URL 接受参数，然后生成图表，以图片形式返回\n * eagle.js 一个用 vue 来制作 PPT 的库\n * Optimizely A/B Test\n * appadhoc 一个国内的 A/B Test 服务\n * glorious-demo 通过编写代码的方式构建一个命令行的演示例子\n * nginxconfig 可视化配置 nginx 提供了多个基础模板\n * bundlephobia 一个可以查看某个库的大小，并且分析它的依赖\n * jsperf 一个提供在线 test case 的网站，主要用来比较性能。可以比较如： forEach vs for 的性能\n * perflink 与 jsperf 类似的一个比较 js 性能的网站\n * algorithm-visualizer 算法代码可视化\n * An-English-Guide-for-Programmers 专为程序员编写的英语学习指南\n * Webhint 用于检查代码的可访问性、性能和安全的开源检查（Linting）工具\n * airtap 测试浏览器兼容性，可覆盖 800 多种浏览器\n * jsonstore 供免费，安全且基于 JSON 的云数据存储，自己玩的小项目神器\n * git-history 可视化查看一个文件的历史变化\n * x-spreadsheet 一个基于 Canvas 的 JS 电子表格库 excel\n * imgcook 阿里出品，一键通过设计稿生成代码\n * majestic jest 可视化\n * leon 你开源项目的 ai 个人助手\n * js-code-to-svg-flowchart 将代码逻辑用流程图的方式展现出来\n * xterm.js 一个 web terminal\n * pixelmatch diff 两张图片不一样的地方\n * readme-md-generator 一个命令行脚本帮你快速的创建一个 README\n * build-tracker 构建大小追踪 记录你多个版本构建后文件大小的变化\n * zan-proxy 本地调试线上环境的工具\n * mjml 一个让发 email 更简单的框架。定义了一套自己的语法，你用这套语法写邮件，然后编译成 HTML。\n * any-rule 正则大全\n * outline 一个免费开源的库，能让你快速搭建自己的 wiki\n\n\n# Webpack\n\n * webpackbar webpack 打包进度条\n * jarvis webpack dashboard\n * webpack-chain 通过 chain 风格 api 的方式修改 webpack 配置\n * speed-measure-webpack-plugin 统计 webpack 各阶段的耗时\n * obsolete-webpack-plugin 基于 browserslist 做浏览器升级提示\n * mini-css-extract-plugin 提取 CSS 为单独文件\n * copy-webpack-plugin 复制额外的文件到输出目录\n * duplicate-package-checker-webpack-plugin 检查是否存在重复依赖\n * cssnano CSS 压缩\n * bundle-buddy webpack bundle 依赖分析\n\n\n# 移动端\n\n * fastclick 解决移动端一些点击问题\n\n\n# 性能优化\n\n * workbox PWA 方案，Google 出品\n\n\n# 请求处理\n\n * axios 目前最常见的请求库\n * got http 请求库 如果你觉得 request 太多的话 这是一个不错的选择\n * request 老牌请求库 -*whatwg-fetch** fetch 请求库\n * grpc-web 前端直连 gRPC 服务\n * node-fetch node 环境下轻量级 fetch 请求库\n * reqwest\n\n\n# 工程\n\n * lerna monorepo 管理\n * lerna-changelog 为 lerna 项目自动生成 changelog\n * eslint JS 风格约束\n * eslint-config-airbnb airbnb 约束风格\n * xo 封装自 eslint\n * prettier 更主观的风格自动修改\n * yeoman-generator 脚手架工具\n * serve 本地静态服务器\n * np npm publish 辅助，自动 push、打 tag、升版本等\n * lint-staged eslint 提速，只 lint 提交的代码\n * coveralls 覆盖率\n * husky 添加 git hooks\n * cross-env 跨平台的环境变量声明\n * nvm 管理 node 版本\n * concurrently 在 npm scripts 里并行执行命令\n * @zeit/ncc 打包为 npm 包为一个文件\n * npm-check 检测依赖升级情况，我会和 yarn upgrade-interactive 配合着用，主要用来检测冗余依赖\n * cpx 复制，支持 glob，并且可以 watch\n * onchange 监听文件变动然后做一些事\n * tasksfile 在 node 中执行 script 脚本\n\n\n# Mac\n\n * get-plain-text 能清除剪贴板里的格式 很实用\n * IINA mac 平台感觉免费最好的播放器 强推\n * magnet 分屏管理\n * Xnip 方便好用的截图工具-支持截长图\n * Spectacle 窗口管理工具\n * vanilla 顶栏图标管理工具\n * Dozer 一个开源的顶栏管理\n * 腾讯电脑管家 反正我用下来好觉得蛮好用的\n * mos 鼠标平滑滚动软件，很好用。免费开源\n * sequel pro mysql 客户端 好用\n * Microsoft Remote Desktop Beta Mac 远程登录 Windows 调试神器\n * pap.er 专为 Mac 设计的壁纸应用\n * The Unarchive Mac 目前感觉最好用的免费解压软件\n * Tickeys 让你用 Mac 键盘也能打出机械键盘的感觉\n * Beaker Browser P2P 开源浏览器 支持点对点发布文件，成为了文件传输工具，支持 DAT 对等协议\n * Gifski 视频转 gif 工具\n * more 更多优秀的 mac app 介绍\n * Motrix 支持 HTTP、FTP、BT、磁力链、百度网盘的下载工具\n * iPic这个应用可以让你方便地上传图片到各种图床\n * Image2Icon\n * hidden 是用来帮助你隐藏 macOS 菜单栏上那些不常用的应用图标\n\n\n# 录制\n\n * licecap gif 录制，简洁好用，之前都用这个录制\n * kap 现在都用这个录制 gif，还支持导出 mp4，录制的 fps 很高\n * KeyCastr 按键显示，录制的时候显示你的按键\n\n\n# Chrome 拓展\n\n * Tampermonkey 油猴 神器\n * 扩展管理器 轻松管理扩展，就不用担心安装太多扩展了\n * visbug 它可以帮助你改变 css，移动元素等等一系类强大的功能,页面调试神器。当然有些时候还是 DevTools 更好用\n * refined-github 优化 github 默认功能和样式的 chrome 插件\n * ADB chrome 真机调试安卓神器\n * Adblock Plus 免费广告拦截程序 这个应该不用说了，装机必备\n * Axure RP Extension 看原型必备\n * JSON Formatter JSON 格式化 程序员必备\n * Lighthouse 谷歌出品，检查网页综合性能评分，分析不足\n * 二维码(QR 码)生成器 手机扫码神器\n * Octotree github 上看代码必备神器\n * OctoLinker 能在 github 上看代码的时候 快速链接跳转到依赖的库\n * The Great Suspender chrome 太吃内存了，当页面开的很多时候会很卡，它就完美的解决了这个问题。它将几分钟没浏览过的页面都挂载了，当你想看是再重新加载\n * WEB 前端助手 支持 JSON 格式化、二维码生成与解码、代码压缩、Markdown 与 HTML 互转、网页滚动截屏、正则表达式、时间转换工具、JSON 比对工具等\n * 掘金 目前我默认新开 tab 的默认页，可以刷刷新的文章或者项目，还不错。\n * 沙拉查词 划词翻译插件\n * npmhub在 README 下方显示 npm 依赖信息\n\n\n# VS Code\n\n * Import Cost 查看你引入的依赖模块大小\n * Auto Close Tag 自动补全 html 标签，如输入<a>将自动补全</a>\n * Auto Rename Tag 自动重命名 html 标签，如修改<a>为<b>，将自动修改结尾标签</a>为</b>\n * polacode 生产代码图片快照插件\n * vscode-leetcode 一个能让你在 vscode 中刷 LeetCode 的插件 算一个划水神器吧\n * vscode-icons VS Code 必备吧，为文件添加炫图标\n * CodeSnap 生产代码截图\n\n\n# 主题\n\n官方主题页 可以选择自己喜欢的主题 one-monokai 我用的是这个主题，很多年了\n\n\n# 字体\n\n * FiraCode\n * Dank Mono\n * Operator Mono\n\n\n# 编辑器和 Terminal\n\n * Go2shell 在当前文件夹打开 shell\n * Terminal 用 iTerm2 + zsh + oh-my-zsh 的组合，主题是 robbyrussell\n\n\n# zsh 插件\n\n * Homebrew 必装\n * autojump 实现目录间快速跳转，想去哪个目录直接 j + 目录名，不用在频繁的 cd 了\n * zsh-autosuggestions 命令自动建议和补全\n * zsh-syntax-highlighting 命令行语法高亮\n * history 命令行记录\n * zsh-git-prompt git 分支信息提示\n\n\n# 开发常用软件\n\n * Github Desktop管理 github 仓库的变更和 PR\n * runjs js 运行沙盒，写 test case 或者面试当场写代码的时候很有用\n * Charles 抓包用，支持 https\n * Google Chrome 前端必备没啥好说的\n * ColorSnapper2 取色工具\n * postman api 调试工具\n * Sequel Pro MySQL 界面管理工具\n * KeepingYouAwake 可保证系统不自动休眠，挂机跑脚本很有用\n\n\n# 有趣\n\n * the-bread-code 使用程序员的思维制作面包 ，比如制作中使用 A/B test, 来比较那种做法更好。\n * build-your-own-x 教你用各种语言实现 Bot Database Neural Network\n * **javascript-algorithms ** 教你用前端知识认识各种算法\n * not-paid 如果你给人做网站，交过去以后对方没有付款，那么这个 JS 会把网站的透明度一天调低一点，直到看不见\n * nsfwjs 前端图片鉴黄，基于 Tensorflow\n * elevator.js 我很喜欢的一个库，让一个 back-to-top 的效果有了一种坐复古电梯的感觉\n * app-ideas 很多年轻人苦于缺少练手的项目，这个项目收集了不少点子，每个点子都有明确的目标和复杂资源。\n * WebGL-Fluid-Simulation 很酷的 WebGL 交互\n * react-kawaii 一个非常可爱的 React 卡通人脸库，很有意思\n * chart-race-react 图表竞赛 长条图赛跑动画 在微博或者 b 站这种类型视频很火\n * 98.css windows 98 主题分格 css",normalizedContent:"# 推荐前端常用库\n\n这里主要推荐一下自己平时常用，提高效率的一些库和软件。\n\n\n# 前端常用\n\n * sweetalert2 一个自适应，且自定义性强的弹出框（零依赖）\n * tippy.js 最著名的 tooltip/popover library\n * text-mask 可以让 input 按照规则输入(如电话,email,日期,信用卡等)，特殊格式 input\n * dinero.js 用来创建、计算和格式化货币价值的不可变的框架，支持国际化\n * lerna 大项目版本控制工具，项目中可以有多个 package.json 文件\n * img-2 一个提高图片加载性能和体验的库，懒加载使用 web worker 模糊预览\n * fingerprintjs 是一个快速的浏览器指纹库，通浏览环境的一系列配置生成 id\n * ajv 一个 json schema 验证的库\n * dayjs 一个轻量级类 moment.js api 时间库\n * primjs 让页面支持代码高亮\n * relaxed 一个将 document html 转成 pdf 的工具\n * uppy 一个很好看的也很好用的 前端上传库\n * filepond 一个小巧的文件上传库\n * tui-calendar 功能全面的日程安排日历控件，还支持拖拽\n * tui.editor markdown 所见即所得编辑器\n * tabler 基于 bootstrap 4 的 dashboard ui kit 和美观 高颜值 ui 模板\n * pulltorefresh.js 下个下拉刷新插件\n * lulu 腾讯阅文基于 jquery，针对 pc 网站 ie8+（peak 主题）的前端 ui 框架\n * chancejs 生成随机数据的库\n * spritejs 360 奇舞团出的跨平台绘图对象模型\n * tui.image-editor 一个功能齐全的在线图片编辑，基于 canvas\n * nanoid 前端轻量 unique string id 生成库\n * rxdb 一款开源的快速、灵活的客户端数据库，支持各种浏览器以及 nodejs，electron、react 等等，是 pouthdb 之上的一个封装库\n * percollate 命令行工具 能将网页转换成 pdf\n * rawact 一个 babel 插件，把 react 组件转为原生 dom\n * irondb 是一个浏览器 key-value 储存的封装库，把 cookies、indexeddb、localstorage、sessionstorage 统一成一个接口。它的最大特色就是数据冗余机制，即使某种底层储存机制失效，它可以从其他机制恢复数据。\n * big.js 解决 js 浮点数问题。 主要就是 big number 或者小数点温柔\n * bignumber.js 同上\n * stickybits css 的 position: sticky 是一个很有用的设置，但是老的浏览器不支持。这个 js 库是该功能的垫片库。\n * react-jsonschema-form mozilla service 开源了一个通过 json 直接生成表单的 react 组件\n * cleave.js 用于在输入时格式化输入内容（信用卡格式、日期等）\n * shiny 在手机设备上模拟光的反射效果。 支持 devicemotion 事件\n * cloudquery turn any website to serverless api\n * a-programmers-guide-to-english 专为程序员编写的英语学习指南。\n * rrweb 一个可以记录你页面中所有操作的库\n * nodeppt markdown 写 ppt\n * flexsearch 能让你更加高效和快速的检索文本内容\n * public-apis 汇集了市面上一些对外免费开放的 api，做一些自己练手 app 的时候很好用。\n * scroll-hint 用于提示用户页面可以左右滑动的一个提示库\n * fuse.js 轻量级前端模糊查询库 非常的好用\n * filesaver.js 文件下载插件 很多时候下载会有兼容性问题，它能帮你解决这些问题\n * instant.page 一个判断用户行为 预测提前加载页面的库\n * screenfull.js 浏览器全屏插件 解决了不少兼容性问题\n * vuepress 本网站就是基于它实现的，简单方便的静态网站生成器\n * selection 可视化选择页面元素的库\n * scroll-out 滚动效果（滚动视差）的框架，框架大小不到 1kb,使用回调的方式将相关动画元素的属性进行实时分配\n * gpu.js 通过将 js 转为特定的 language，利用 gpu 来执行，大大提高了执行性能和速度\n * pressure 前端实现 3d touch\n * hammer 移动端手势库\n * alloyfinger 腾讯出的手势库\n * lowdb lowdb 是一个本地 json 数据库，基于 lodash 开发的\n * json-server 可以配合 lowdb 使用 快速搭建一个 rest api\n * lunr.js 是个用于浏览器的轻量级 javascript 全文搜索引擎,对于一些小型的博客、开发者文档或 wiki 网站来说,完全可以通过它实现站内离线搜索\n * he 一个前端 encoder/decoder 库\n * grade 一个可以根据你的 图片 调整底色的插件\n * pretty-bytes 将字节转换成可以读的字符串，比如 1337 个字节，会显示成 1.34 kb\n * runkit 一个基于 node 的在线 playground\n * chart.xkcd 手绘风格的图表库\n * sketchviz 手绘风格流程图\n * pagemap mini map for web pages 页面导航图\n * commonmark.js parser and renderer markdown\n * body-scroll-lock 解决滚动穿透问题\n * lodash 前端工具函数集合\n * dayjs 时间处理库，不过大部分情况下我还是用自己的封装的函数\n * lightgallery 图片预览组件\n * photoswipe 图片预览组件，支持移动端\n * darken 页面黑夜模式切换\n * mitt 轻量级 pub/sub\n * sanitize-html html 过滤库，防 xss\n * dompurify 比 sanitize-html 更轻量，建议一般业务用这个\n\n\n# css && 动画\n\n * animate.css 最有名的动画效果库\n * magic.css css 动画效果库 类似 animate.css\n * popmotion 一个函数式声明前端动画库\n * nes.css 任天堂主题风格 css 库\n * particles.js 前端实现颗粒粒子的动画效果库，比较炫酷，但相对的也比较吃性能\n * papercss 手绘风格感觉 css 库\n * rough 基于 canvas 的手绘风格图形库\n * wired-elements 基于 rough.js 分装 button input radio 等组件。它的底层是 web components\n * roughviz rough 风格的图表库 手绘风格的图表库\n * matter-js web 物理引擎\n * micron 通过在元素上绑定属性从而实现动画效果的库\n * direction-reveal 根据鼠标进入位置，展现从不同方向 展现 hover 效果\n * laxxx 滚动特效库 轻量级 压缩完 2kb\n * cssfx 优雅的 css 动画效果，开箱即用\n * zdog 3d engine 引擎\n * leonsans 酷炫的 字体 动画 geometric sans-serif typeface made with code\n * css-doodle a web component for drawing patterns with css 一个用于使用 css 绘制图案的 web 组件\n\n\n# vue\n\n * vue-multiselect select 组件 目前 vue 里面用过最好用的\n * vue.draggable dnd 拖拽组件 基于 sortable.js 的 vue 版本\n * vue-sauce 一个可以展示 vue 源码的指令\n * vue-smooth-dnd vue wrappers components for smooth-dnd\n * vuegg 一个 vue 可视化拖拽界面生成器\n * vee-validate 基于 vue 的验证，能验证的内容比较全\n * vuesax 一个很漂亮的基于 vue 的 ui 框架\n * vue-analytics 基于 vue 的 谷歌统计封装\n * vue-virtual-scroller 基于 vue 的虚拟列表无限滚动\n * vue-content-placeholders 页面龙骨 skeleton\n * buefy 适配移动端的 vue 组件库 看着还挺舒服的\n * vxe-tablevue 表格解决方案，还没具体用过看着的确解决了其它 table 组件的一些问题\n * vue 测试指南 vue 测试指南\n\n\n# 实践库\n\n * jasonette 一个用 json 来构建 hybrid app 的框架\n * crate 一个 react 全栈练习(pc,mobile,rn,api) demo，适合入门拿来练手\n * react-in-patterns 一本开源教你如何写 react 的书\n * hocs react 相关 hoc 收集库\n\n\n# 文档\n\n * vuepress vue 官方出品的文档工具\n * docsify 轻量级文档工具，但其是运行时编译的，所以 seo 不好\n * gitbook 除了编译慢没啥毛病\n * mdx jsx + markdown\n * docz\n * storybook\n\n\n# 工具库\n\n * live-server 可以快速启一个本地 dev 服务 并且支持自动刷新的 http server\n * serve 快速起本地静态服务\n * picojs js 人脸识别库\n * es-checker 检查当前环境对 es6 支持的情况。支持浏览器和 node.js\n * merge-images 图片合成，利用canvas能将几张图片合成一张\n * fabric.js 基于 canvas 创建交互式的图片编辑界面非常适合用来做图片合成类工作。\n * phaser 这是一个为桌面和移动浏览器开发 html5 游戏的快速开源框架。 你可以为 ios、 android 和不同的本地应用程序创建游戏。\n * purifycss 移除没使用到的 css\n * dropcss 同上\n * fast-cli 命令行测试下载上传速度\n * @pika/web 让你不需要在本地 webpack 中 import，直接在游览器里面运行 npm 包\n * pinyin 汉字拼音转换工具\n * javascript obfuscator tool js 代码混淆工具\n * tesseract 图像识别，它能识别图片中的文字，支持中文\n * gka 一款高效、高性能的帧动画生成工具。只需一行命令，快速图片优化、生成动画文件，支持效果预览。\n * recast 前端 ast 库\n * jscodeshift 将 js 内容解析成 ast 语法树，然后提供一些便利的操作接口，方便我们对各个节点进行更改\n * stats.js 前端性能监控 如 fps、内存使用情况等\n * papaparse 解析 csv excel\n * mddir 生成 markdown file/folder structure 目录结构 tree\n * imagemin 图片压缩库\n * inline-css css covert to inline style 在生成 email 格式 html 的时候特别有用\n * babel-plugin-try-catch-error-report 全局自动 catch 错误进行数据上报\n * streamsaver.js 大文件下载，不用像 saveas 那样先读到内存中再下载\n * mammoth.js convert word documents (.docx files) to html\n * npkill 列出所有 node_modules，并支持删除\n * strapi 开源的解决方案来创建、部署和管理自己的 api，通过图形化界面进行操作\n\n\n# node\n\n\n# 工具库\n\n * cheerio 用类 jquery 语法处理 html\n * node-semver node 版本验证库\n * live-server 一个简单的 http server 带有 reload 功能\n * node-portfinder 一个端口嗅探工具\n * update-notifiernode 依赖升级提醒工具\n * fastscan node 敏感词库\n * hygen 快速方便的创建代码 可以命令行创建预设的 template\n * plop 同上，代码生成工具\n * ink 是一个 react 的命令行渲染器，命令行界面可以像写页面那么写了\n * dotenv 通过.env 设置环境部变量 vue-cli 也依赖它\n * patch-package 优雅的修改 node_modules 中的依赖库\n * playwright 同 puppeteer 团队出品，但区别是它支持 chrome、safari、firefox、edge\n * tree-cli node 根据目录结构生成 tree\n * tree-node-cli node 根据目录结构生成 tree\n * open node 打开浏览器\n\n\n# 命令行\n\n * signale 一个 node 的日志格式库，自带 16 个级别，可以定制颜色和 emoji，可扩展的日志记录器\n * consola 优雅的命令行 console logger vuepress 也使用了它\n * chalk 命令行着色美化库\n * progress-estimator 命令行 progress bar 进度条模拟库\n * ora elegant terminal spinner 命令行 loading\n * listr terminal task 命令行任务列表\n * yargs 命令行参数解析\n * y18n yargs 基于 i18n 的一个包\n * commander.js 自动的解析命令和参数，合并多选项，处理短参，等等，功能强大，上手简单\n * inquirer.js a collection of common interactive command line user interfaces. 命令行询问库\n * enquirer 命令行 prompt 询问库，写 cli 的时候很有用\n * qoa 同上\n * cli-progress terminal progress bar\n * cli-table tables for the cli\n * node-notifier 在 nodejs 环境中，可以很方便的唤起 notifier 通知\n\n\n# 文件处理\n\n * rimraf 删除文件\n * globby 用于模式匹配目录文件\n * glob 文件查找\n * tiny-glob 文件查找\n * chokidar node 监听文件变化的库\n * fs-extra fs-extra 模块是系统 fs 模块的扩展，提供了更多便利的 api，并继承了 fs 模块的 api\n * execa 比 child_process 好用，返回 promise\n * npm-run-all 一个 cli 工具可以并行或者串行执行 script 指令\n * memfs memory-fs 的替代品，将文件放在内存中优化读写，webpack 依赖\n\n\n# 调试\n\n * fx 命令行优化 json 输出\n * dumper.js 能让你的 node console 更加的规整，方便调试\n * ndb node 调试\n * why-is-node-running 查看 node 为什么在运行\n * siege 压测工具\n * node-in-debugging node.js 调试指南\n * node-best-practices node 最佳实践\n * node.js 最佳实践\n\n\n# graphql\n\n * prisma 让前端也能快速的写出\n * apollo graphql 是基于 graphql 的全栈解决方案集合。从后端到前端提供了对应的 lib 使得开发使用 graphql 更加的方便\n * dataloader 解决 graphql 中的 n+1 查询问题\n\n\n# 工具\n\n * high-speed-downloader 百度网盘不限速下载 支持 windows 和 mac\n * hyper 前端命令行\n * yapi 是一个可本地部署的、打通前后端及 qa 的、可视化的接口管理平台\n * sway 一个微软自己出的在线 ppt 很强大\n * ascii art generator 在线生成 ascii 图案\n * winds 开源 rss\n * jsui 一个用来控制管理前端项目的客户端\n * docz 让你能快速写文档的一个库\n * hiper 性能统计分析工具\n * verdaccio 私有 npm\n * git-guide git 入门指南\n * git-tips git 进阶\n * bit 实现了项目之间的代码共享 可以自建私有\n * simpread 简悦 ( simpread ) 让你瞬间进入沉浸式阅读的扩展\n * mkcert 一键命令 让本地也支持 https\n * termtosvg 录制 命令操作转成 svg 基于 python\n * gh-polls 可以在 github issue 中添加投票\n * eruda 移动端调试工具\n * vconsole 也是一个移动端调试工具 腾讯出品\n * terminalizer 命令行录制工具 基于 node\n * badgen 快速构建和 shields 一样的 svg badge 但速度更快\n * readability 移除页面非正文部分 基于 jsdom\n * wechatplugin-macos 一款功能强大的 macos 版微信小助手\n * puppeteer-recorder 一个 chrome 插件 能够根据你的操作 自动生成 puppeteer 相关代码\n * mdx-deck 用 markdown 编写演示文稿\n * code-surfer 基于 mdx-deck 的一个插件 让你更好的在文稿中展示 code\n * progressive tooling 前端性能优化工具集合\n * https://github.com/artf/grapesjs 可视化建站工具 不需要写代码就能写一个页面，前端再次再次要下岗了\n * image-charts 该服务通过 url 接受参数，然后生成图表，以图片形式返回\n * eagle.js 一个用 vue 来制作 ppt 的库\n * optimizely a/b test\n * appadhoc 一个国内的 a/b test 服务\n * glorious-demo 通过编写代码的方式构建一个命令行的演示例子\n * nginxconfig 可视化配置 nginx 提供了多个基础模板\n * bundlephobia 一个可以查看某个库的大小，并且分析它的依赖\n * jsperf 一个提供在线 test case 的网站，主要用来比较性能。可以比较如： foreach vs for 的性能\n * perflink 与 jsperf 类似的一个比较 js 性能的网站\n * algorithm-visualizer 算法代码可视化\n * an-english-guide-for-programmers 专为程序员编写的英语学习指南\n * webhint 用于检查代码的可访问性、性能和安全的开源检查（linting）工具\n * airtap 测试浏览器兼容性，可覆盖 800 多种浏览器\n * jsonstore 供免费，安全且基于 json 的云数据存储，自己玩的小项目神器\n * git-history 可视化查看一个文件的历史变化\n * x-spreadsheet 一个基于 canvas 的 js 电子表格库 excel\n * imgcook 阿里出品，一键通过设计稿生成代码\n * majestic jest 可视化\n * leon 你开源项目的 ai 个人助手\n * js-code-to-svg-flowchart 将代码逻辑用流程图的方式展现出来\n * xterm.js 一个 web terminal\n * pixelmatch diff 两张图片不一样的地方\n * readme-md-generator 一个命令行脚本帮你快速的创建一个 readme\n * build-tracker 构建大小追踪 记录你多个版本构建后文件大小的变化\n * zan-proxy 本地调试线上环境的工具\n * mjml 一个让发 email 更简单的框架。定义了一套自己的语法，你用这套语法写邮件，然后编译成 html。\n * any-rule 正则大全\n * outline 一个免费开源的库，能让你快速搭建自己的 wiki\n\n\n# webpack\n\n * webpackbar webpack 打包进度条\n * jarvis webpack dashboard\n * webpack-chain 通过 chain 风格 api 的方式修改 webpack 配置\n * speed-measure-webpack-plugin 统计 webpack 各阶段的耗时\n * obsolete-webpack-plugin 基于 browserslist 做浏览器升级提示\n * mini-css-extract-plugin 提取 css 为单独文件\n * copy-webpack-plugin 复制额外的文件到输出目录\n * duplicate-package-checker-webpack-plugin 检查是否存在重复依赖\n * cssnano css 压缩\n * bundle-buddy webpack bundle 依赖分析\n\n\n# 移动端\n\n * fastclick 解决移动端一些点击问题\n\n\n# 性能优化\n\n * workbox pwa 方案，google 出品\n\n\n# 请求处理\n\n * axios 目前最常见的请求库\n * got http 请求库 如果你觉得 request 太多的话 这是一个不错的选择\n * request 老牌请求库 -*whatwg-fetch** fetch 请求库\n * grpc-web 前端直连 grpc 服务\n * node-fetch node 环境下轻量级 fetch 请求库\n * reqwest\n\n\n# 工程\n\n * lerna monorepo 管理\n * lerna-changelog 为 lerna 项目自动生成 changelog\n * eslint js 风格约束\n * eslint-config-airbnb airbnb 约束风格\n * xo 封装自 eslint\n * prettier 更主观的风格自动修改\n * yeoman-generator 脚手架工具\n * serve 本地静态服务器\n * np npm publish 辅助，自动 push、打 tag、升版本等\n * lint-staged eslint 提速，只 lint 提交的代码\n * coveralls 覆盖率\n * husky 添加 git hooks\n * cross-env 跨平台的环境变量声明\n * nvm 管理 node 版本\n * concurrently 在 npm scripts 里并行执行命令\n * @zeit/ncc 打包为 npm 包为一个文件\n * npm-check 检测依赖升级情况，我会和 yarn upgrade-interactive 配合着用，主要用来检测冗余依赖\n * cpx 复制，支持 glob，并且可以 watch\n * onchange 监听文件变动然后做一些事\n * tasksfile 在 node 中执行 script 脚本\n\n\n# mac\n\n * get-plain-text 能清除剪贴板里的格式 很实用\n * iina mac 平台感觉免费最好的播放器 强推\n * magnet 分屏管理\n * xnip 方便好用的截图工具-支持截长图\n * spectacle 窗口管理工具\n * vanilla 顶栏图标管理工具\n * dozer 一个开源的顶栏管理\n * 腾讯电脑管家 反正我用下来好觉得蛮好用的\n * mos 鼠标平滑滚动软件，很好用。免费开源\n * sequel pro mysql 客户端 好用\n * microsoft remote desktop beta mac 远程登录 windows 调试神器\n * pap.er 专为 mac 设计的壁纸应用\n * the unarchive mac 目前感觉最好用的免费解压软件\n * tickeys 让你用 mac 键盘也能打出机械键盘的感觉\n * beaker browser p2p 开源浏览器 支持点对点发布文件，成为了文件传输工具，支持 dat 对等协议\n * gifski 视频转 gif 工具\n * more 更多优秀的 mac app 介绍\n * motrix 支持 http、ftp、bt、磁力链、百度网盘的下载工具\n * ipic这个应用可以让你方便地上传图片到各种图床\n * image2icon\n * hidden 是用来帮助你隐藏 macos 菜单栏上那些不常用的应用图标\n\n\n# 录制\n\n * licecap gif 录制，简洁好用，之前都用这个录制\n * kap 现在都用这个录制 gif，还支持导出 mp4，录制的 fps 很高\n * keycastr 按键显示，录制的时候显示你的按键\n\n\n# chrome 拓展\n\n * tampermonkey 油猴 神器\n * 扩展管理器 轻松管理扩展，就不用担心安装太多扩展了\n * visbug 它可以帮助你改变 css，移动元素等等一系类强大的功能,页面调试神器。当然有些时候还是 devtools 更好用\n * refined-github 优化 github 默认功能和样式的 chrome 插件\n * adb chrome 真机调试安卓神器\n * adblock plus 免费广告拦截程序 这个应该不用说了，装机必备\n * axure rp extension 看原型必备\n * json formatter json 格式化 程序员必备\n * lighthouse 谷歌出品，检查网页综合性能评分，分析不足\n * 二维码(qr 码)生成器 手机扫码神器\n * octotree github 上看代码必备神器\n * octolinker 能在 github 上看代码的时候 快速链接跳转到依赖的库\n * the great suspender chrome 太吃内存了，当页面开的很多时候会很卡，它就完美的解决了这个问题。它将几分钟没浏览过的页面都挂载了，当你想看是再重新加载\n * web 前端助手 支持 json 格式化、二维码生成与解码、代码压缩、markdown 与 html 互转、网页滚动截屏、正则表达式、时间转换工具、json 比对工具等\n * 掘金 目前我默认新开 tab 的默认页，可以刷刷新的文章或者项目，还不错。\n * 沙拉查词 划词翻译插件\n * npmhub在 readme 下方显示 npm 依赖信息\n\n\n# vs code\n\n * import cost 查看你引入的依赖模块大小\n * auto close tag 自动补全 html 标签，如输入<a>将自动补全</a>\n * auto rename tag 自动重命名 html 标签，如修改<a>为<b>，将自动修改结尾标签</a>为</b>\n * polacode 生产代码图片快照插件\n * vscode-leetcode 一个能让你在 vscode 中刷 leetcode 的插件 算一个划水神器吧\n * vscode-icons vs code 必备吧，为文件添加炫图标\n * codesnap 生产代码截图\n\n\n# 主题\n\n官方主题页 可以选择自己喜欢的主题 one-monokai 我用的是这个主题，很多年了\n\n\n# 字体\n\n * firacode\n * dank mono\n * operator mono\n\n\n# 编辑器和 terminal\n\n * go2shell 在当前文件夹打开 shell\n * terminal 用 iterm2 + zsh + oh-my-zsh 的组合，主题是 robbyrussell\n\n\n# zsh 插件\n\n * homebrew 必装\n * autojump 实现目录间快速跳转，想去哪个目录直接 j + 目录名，不用在频繁的 cd 了\n * zsh-autosuggestions 命令自动建议和补全\n * zsh-syntax-highlighting 命令行语法高亮\n * history 命令行记录\n * zsh-git-prompt git 分支信息提示\n\n\n# 开发常用软件\n\n * github desktop管理 github 仓库的变更和 pr\n * runjs js 运行沙盒，写 test case 或者面试当场写代码的时候很有用\n * charles 抓包用，支持 https\n * google chrome 前端必备没啥好说的\n * colorsnapper2 取色工具\n * postman api 调试工具\n * sequel pro mysql 界面管理工具\n * keepingyouawake 可保证系统不自动休眠，挂机跑脚本很有用\n\n\n# 有趣\n\n * the-bread-code 使用程序员的思维制作面包 ，比如制作中使用 a/b test, 来比较那种做法更好。\n * build-your-own-x 教你用各种语言实现 bot database neural network\n * **javascript-algorithms ** 教你用前端知识认识各种算法\n * not-paid 如果你给人做网站，交过去以后对方没有付款，那么这个 js 会把网站的透明度一天调低一点，直到看不见\n * nsfwjs 前端图片鉴黄，基于 tensorflow\n * elevator.js 我很喜欢的一个库，让一个 back-to-top 的效果有了一种坐复古电梯的感觉\n * app-ideas 很多年轻人苦于缺少练手的项目，这个项目收集了不少点子，每个点子都有明确的目标和复杂资源。\n * webgl-fluid-simulation 很酷的 webgl 交互\n * react-kawaii 一个非常可爱的 react 卡通人脸库，很有意思\n * chart-race-react 图表竞赛 长条图赛跑动画 在微博或者 b 站这种类型视频很火\n * 98.css windows 98 主题分格 css",charsets:{cjk:!0},lastUpdated:"2022/02/27, 16:55:52",lastUpdatedTimestamp:1645980952e3},{title:"关于 - 网站错误反馈",frontmatter:{title:"关于 - 网站错误反馈",date:"2022-05-10T22:13:44.000Z",permalink:"/about/error/",categories:[null],tags:[null],readingShow:"top"},regularPath:"/08.%E5%85%B3%E4%BA%8E/03.%E5%85%B3%E4%BA%8E-%E7%BD%91%E7%AB%99%E9%94%99%E8%AF%AF%E5%8F%8D%E9%A6%88.html",relativePath:"08.关于/03.关于-网站错误反馈.md",key:"v-46fdb1f6",path:"/about/error/",headers:[{level:2,title:"错误反馈",slug:"错误反馈",normalizedTitle:"错误反馈",charIndex:2}],headersStr:"错误反馈",content:"# 错误反馈\n\n如有错误和问题，请在如下问题处反馈给我。或者添加我的微信反馈给我。\n\n反馈问题时：\n\n请指出哪篇文章，哪个处，给出链接； 请指出存在什么问题，谢谢！",normalizedContent:"# 错误反馈\n\n如有错误和问题，请在如下问题处反馈给我。或者添加我的微信反馈给我。\n\n反馈问题时：\n\n请指出哪篇文章，哪个处，给出链接； 请指出存在什么问题，谢谢！",charsets:{cjk:!0},lastUpdated:"2022/05/10, 14:36:14",lastUpdatedTimestamp:1652193374e3},{title:"关于 - 本站",frontmatter:{title:"关于 - 本站",date:"2022-04-16T17:52:59.000Z",permalink:"/about/site/",categories:[null],tags:[null],readingShow:"top"},regularPath:"/08.%E5%85%B3%E4%BA%8E/10.%E5%85%B3%E4%BA%8E-%E6%9C%AC%E7%AB%99.html",relativePath:"08.关于/10.关于-本站.md",key:"v-005f32f6",path:"/about/site/",headers:[{level:2,title:"由来",slug:"由来",normalizedTitle:"由来",charIndex:87},{level:2,title:"VuePress介绍",slug:"vuepress介绍",normalizedTitle:"vuepress介绍",charIndex:167},{level:3,title:"为什么不是...?",slug:"为什么不是",normalizedTitle:"为什么不是...?",charIndex:232},{level:3,title:"Nuxt",slug:"nuxt",normalizedTitle:"nuxt",charIndex:246},{level:3,title:"Docsify / Docute",slug:"docsify-docute",normalizedTitle:"docsify / docute",charIndex:357},{level:3,title:"Hexo",slug:"hexo",normalizedTitle:"hexo",charIndex:97},{level:3,title:"GitBook",slug:"gitbook",normalizedTitle:"gitbook",charIndex:638}],headersStr:"由来 VuePress介绍 为什么不是...? Nuxt Docsify / Docute Hexo GitBook",content:"# 关于 - 本站\n\n第一次搭建网站，很多内容目录并不是很合理，偶然间看到《Java 全栈知识体系》网站，对于这个网站的目录进行了一些修改，并且添加了一些新的内容。\n\n\n# 由来\n\n早期博客基于Hexo搭建，由于Hexo太老了，很多主题写的并不规范，想对其二次优化，无从下手，写着写着慢慢的停更了，后来发现VuePress。\n\n\n# VuePress介绍\n\n一个基于 Vue SSR 的静态站生成器，它的诞生初衷是为了支持 Vue 及其子项目的文档需求。\n\n\n# 为什么不是...?\n\n\n# Nuxt\n\nVuePress 能做的事情，Nuxt 理论上确实能够胜任，但 Nuxt 是为构建应用程序而生的，而 VuePress 则专注在以内容为中心的静态网站上，同时提供了一些为技术文档定制的开箱即用的特性。\n\n\n# Docsify / Docute\n\n这两个项目同样都是基于 Vue，然而它们都是完全的运行时驱动，因此对 SEO 不够友好。如果你并不关注 SEO，同时也不想安装大量依赖，它们仍然是非常好的选择！\n\n\n# Hexo\n\nHexo 一直驱动着 Vue 的文档 —— 事实上，在把我们的主站从 Hexo 迁移到 VuePress 之前，我们可能还有很长的路要走。Hexo 最大的问题在于他的主题系统太过于静态以及过度地依赖纯字符串，而我们十分希望能够好好地利用 Vue 来处理我们的布局和交互，同时，Hexo 的 Markdown 渲染的配置也不是最灵活的。\n\n\n# GitBook\n\n我们的子项目文档一直都在使用 GitBook。GitBook 最大的问题在于当文件很多时，每次编辑后的重新加载时间长得令人无法忍受。它的默认主题导航结构也比较有限制性，并且，主题系统也不是 Vue 驱动的。GitBook 背后的团队如今也更专注于将其打造为一个商业产品而不是开源工具。",normalizedContent:"# 关于 - 本站\n\n第一次搭建网站，很多内容目录并不是很合理，偶然间看到《java 全栈知识体系》网站，对于这个网站的目录进行了一些修改，并且添加了一些新的内容。\n\n\n# 由来\n\n早期博客基于hexo搭建，由于hexo太老了，很多主题写的并不规范，想对其二次优化，无从下手，写着写着慢慢的停更了，后来发现vuepress。\n\n\n# vuepress介绍\n\n一个基于 vue ssr 的静态站生成器，它的诞生初衷是为了支持 vue 及其子项目的文档需求。\n\n\n# 为什么不是...?\n\n\n# nuxt\n\nvuepress 能做的事情，nuxt 理论上确实能够胜任，但 nuxt 是为构建应用程序而生的，而 vuepress 则专注在以内容为中心的静态网站上，同时提供了一些为技术文档定制的开箱即用的特性。\n\n\n# docsify / docute\n\n这两个项目同样都是基于 vue，然而它们都是完全的运行时驱动，因此对 seo 不够友好。如果你并不关注 seo，同时也不想安装大量依赖，它们仍然是非常好的选择！\n\n\n# hexo\n\nhexo 一直驱动着 vue 的文档 —— 事实上，在把我们的主站从 hexo 迁移到 vuepress 之前，我们可能还有很长的路要走。hexo 最大的问题在于他的主题系统太过于静态以及过度地依赖纯字符串，而我们十分希望能够好好地利用 vue 来处理我们的布局和交互，同时，hexo 的 markdown 渲染的配置也不是最灵活的。\n\n\n# gitbook\n\n我们的子项目文档一直都在使用 gitbook。gitbook 最大的问题在于当文件很多时，每次编辑后的重新加载时间长得令人无法忍受。它的默认主题导航结构也比较有限制性，并且，主题系统也不是 vue 驱动的。gitbook 背后的团队如今也更专注于将其打造为一个商业产品而不是开源工具。",charsets:{cjk:!0},lastUpdated:"2022/05/10, 14:36:14",lastUpdatedTimestamp:1652193374e3},{title:"Markdown语法",frontmatter:{title:"Markdown语法",date:"2018-12-28T00:00:00.000Z",tags:["VuePress"],permalink:"/pages/36f5a2/",categories:["Vuepress"],readingShow:"top"},regularPath:"/08.%E5%85%B3%E4%BA%8E/99.Vuepress/01.Markdown%E8%AF%AD%E6%B3%95.html",relativePath:"08.关于/99.Vuepress/01.Markdown语法.md",key:"v-a7db34b8",path:"/pages/36f5a2/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"标题",slug:"标题",normalizedTitle:"标题",charIndex:195},{level:2,title:"二级标题",slug:"二级标题",normalizedTitle:"二级标题",charIndex:232},{level:3,title:"三级标题",slug:"三级标题",normalizedTitle:"三级标题",charIndex:241},{level:2,title:"字体",slug:"字体",normalizedTitle:"字体",charIndex:339},{level:3,title:"列表",slug:"列表",normalizedTitle:"列表",charIndex:1118}],headersStr:"前言 标题 二级标题 三级标题 字体 列表",content:"# 前言\n\nMarkdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。\n\n> 小提示：以下各种符号后面需要加个空格。\n\n\n# 标题\n\n写法 # 开头，# 越多表示越小，最多六个\n\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n\n\n效果\n\n\n# 一级标题\n\n\n# 二级标题\n\n\n# 三级标题\n\n# 四级标题\n\n# 五级标题\n\n# 六级标题\n\n\n# 字体\n\n加粗文本\n\n写法：\n\n**加粗文本**\n\n\n斜体\n\n写法：\n\n*斜体*\n\n\n斜体加粗\n\n写法：\n\n***斜体加粗***\n\n\n删除线\n\n写法：\n\n~~删除线~~\n\n\n引用文本\n\n> 过去一星期，我一直在整理自己生活遇到觉得不错工具，现在终于写完了。\n\n写法：\n\n> 过去一星期，我一直在整理自己生活遇到觉得不错工具，现在终于写完了。\n\n\n添加待办事项\n\n * [x] 待办事项1\n * [ ] 待办事项2\n * [ ] 待办事项3\n\n写法：\n\n* [x] 待办事项1\n* [ ] 待办事项2\n* [ ] 待办事项3\n\n\n超链接\n\nGitHub\n\n写法：\n\n[标题](地址)\n[GitHub](https://github.com/qqlcx5)\n\n\n显示图片\n\n\n\n写法：\n\n![标题](图片url地址)\n![GitHub](https://github.com/qqlcx5)\n\n\n表格\n\n帐户类型   免费帐户   标准帐户   高级帐户\n帐户流量   60M    1GB    10GB\n设备数目   2台     无限制    无限制\n\n写法：\n\n| 帐户类型 | 免费帐户 | 标准帐户 | 高级帐户 |\n| --- | --- | --- | --- |\n| 帐户流量 | 60M | 1GB | 10GB |\n| 设备数目 | 2台 | 无限制 | 无限制 |\n\n\n行内代码或代码块\n\n行内代码\n\n\n// 订单更新监听\nSET_WSORDERLISTEN: (state, wsOrderListen) => {\nstate.wsOrderListen = wsOrderListen;\n}\n\n\n\n\n写法：\n\n单行代码：代码之间分别用一个反引号包起来。\n\n代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行。\n\n\n\n\n# 列表\n\n写法 * + - 开头\n\n无序列表\n\n* 无序列表\n+ 无序列表\n- 无序列表\n    - 子列表\n\n\n效果如下：\n\n * 无序列表\n\n * 无序列表\n\n * 无序列表\n   * 子列表\n\n有序列表\n\n写法：数字加小数点\n\n1. 列表内容\n2. 列表内容\n3. 列表内容\n\n\n效果\n\n 1. 列表内容\n 2. 列表内容\n 3. 列表内容",normalizedContent:"# 前言\n\nmarkdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 html 标记语言来说，markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。\n\n> 小提示：以下各种符号后面需要加个空格。\n\n\n# 标题\n\n写法 # 开头，# 越多表示越小，最多六个\n\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n\n\n效果\n\n\n# 一级标题\n\n\n# 二级标题\n\n\n# 三级标题\n\n# 四级标题\n\n# 五级标题\n\n# 六级标题\n\n\n# 字体\n\n加粗文本\n\n写法：\n\n**加粗文本**\n\n\n斜体\n\n写法：\n\n*斜体*\n\n\n斜体加粗\n\n写法：\n\n***斜体加粗***\n\n\n删除线\n\n写法：\n\n~~删除线~~\n\n\n引用文本\n\n> 过去一星期，我一直在整理自己生活遇到觉得不错工具，现在终于写完了。\n\n写法：\n\n> 过去一星期，我一直在整理自己生活遇到觉得不错工具，现在终于写完了。\n\n\n添加待办事项\n\n * [x] 待办事项1\n * [ ] 待办事项2\n * [ ] 待办事项3\n\n写法：\n\n* [x] 待办事项1\n* [ ] 待办事项2\n* [ ] 待办事项3\n\n\n超链接\n\ngithub\n\n写法：\n\n[标题](地址)\n[github](https://github.com/qqlcx5)\n\n\n显示图片\n\n\n\n写法：\n\n![标题](图片url地址)\n![github](https://github.com/qqlcx5)\n\n\n表格\n\n帐户类型   免费帐户   标准帐户   高级帐户\n帐户流量   60m    1gb    10gb\n设备数目   2台     无限制    无限制\n\n写法：\n\n| 帐户类型 | 免费帐户 | 标准帐户 | 高级帐户 |\n| --- | --- | --- | --- |\n| 帐户流量 | 60m | 1gb | 10gb |\n| 设备数目 | 2台 | 无限制 | 无限制 |\n\n\n行内代码或代码块\n\n行内代码\n\n\n// 订单更新监听\nset_wsorderlisten: (state, wsorderlisten) => {\nstate.wsorderlisten = wsorderlisten;\n}\n\n\n\n\n写法：\n\n单行代码：代码之间分别用一个反引号包起来。\n\n代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行。\n\n\n\n\n# 列表\n\n写法 * + - 开头\n\n无序列表\n\n* 无序列表\n+ 无序列表\n- 无序列表\n    - 子列表\n\n\n效果如下：\n\n * 无序列表\n\n * 无序列表\n\n * 无序列表\n   * 子列表\n\n有序列表\n\n写法：数字加小数点\n\n1. 列表内容\n2. 列表内容\n3. 列表内容\n\n\n效果\n\n 1. 列表内容\n 2. 列表内容\n 3. 列表内容",charsets:{cjk:!0},lastUpdated:"2022/05/18, 09:51:09",lastUpdatedTimestamp:1652867469e3},{title:"MarkDown 常用表情",frontmatter:{title:"MarkDown 常用表情",date:"2021-7-28",tags:["MarkDown"],permalink:"/pages/05db39/",categories:[null],readingShow:"top"},regularPath:"/08.%E5%85%B3%E4%BA%8E/99.Vuepress/02.MarkDown%E5%B8%B8%E7%94%A8%E8%A1%A8%E6%83%85.html",relativePath:"08.关于/99.Vuepress/02.MarkDown常用表情.md",key:"v-186c337d",path:"/pages/05db39/",headers:[{level:2,title:"目录",slug:"目录",normalizedTitle:"目录",charIndex:20},{level:2,title:"People",slug:"people",normalizedTitle:"people",charIndex:27},{level:2,title:"Nature",slug:"nature",normalizedTitle:"nature",charIndex:37},{level:2,title:"Objects",slug:"objects",normalizedTitle:"objects",charIndex:47},{level:2,title:"Places",slug:"places",normalizedTitle:"places",charIndex:58},{level:2,title:"Symbols",slug:"symbols",normalizedTitle:"symbols",charIndex:68}],headersStr:"目录 People Nature Objects Places Symbols",content:"# MarkDown 常用表情\n\n\n# 目录\n\n * People\n * Nature\n * Objects\n * Places\n * Symbols\n\n\n# People\n\n                                                                        \n:bowtie: :bowtie:                   😄 :smile:                          😆 :laughing:\n😊 :blush:                          😃 :smiley:                         ☺️ :relaxed:\n😏 :smirk:                          😍 :heart_eyes:                     😘 :kissing_heart:\n😚 :kissing_closed_eyes:            😳 :flushed:                        😌 :relieved:\n😆 :satisfied:                      😁 :grin:                           😉 :wink:\n😜 :stuck_out_tongue_winking_eye:   😝 :stuck_out_tongue_closed_eyes:   😀 :grinning:\n😗 :kissing:                        😙 :kissing_smiling_eyes:           😛 :stuck_out_tongue:\n😴 :sleeping:                       😟 :worried:                        😦 :frowning:\n😧 :anguished:                      😮 :open_mouth:                     😬 :grimacing:\n😕 :confused:                       😯 :hushed:                         😑 :expressionless:\n😒 :unamused:                       😅 :sweat_smile:                    😓 :sweat:\n😥 :disappointed_relieved:          😩 :weary:                          😔 :pensive:\n😞 :disappointed:                   😖 :confounded:                     😨 :fearful:\n😰 :cold_sweat:                     😣 :persevere:                      😢 :cry:\n😭 :sob:                            😂 :joy:                            😲 :astonished:\n😱 :scream:                         :neckbeard: :neckbeard:             😫 :tired_face:\n😠 :angry:                          😡 :rage:                           😤 :triumph:\n😪 :sleepy:                         😋 :yum:                            😷 :mask:\n😎 :sunglasses:                     😵 :dizzy_face:                     👿 :imp:\n😈 :smiling_imp:                    😐 :neutral_face:                   😶 :no_mouth:\n😇 :innocent:                       👽 :alien:                          💛 :yellow_heart:\n💙 :blue_heart:                     💜 :purple_heart:                   ❤️ :heart:\n💚 :green_heart:                    💔 :broken_heart:                   💓 :heartbeat:\n💗 :heartpulse:                     💕 :two_hearts:                     💞 :revolving_hearts:\n💘 :cupid:                          💖 :sparkling_heart:                ✨ :sparkles:\n⭐️ :star:                           🌟 :star2:                          💫 :dizzy:\n💥 :boom:                           💥 :collision:                      💢 :anger:\n❗️ :exclamation:                    ❓ :question:                        ❕ :grey_exclamation:\n❔ :grey_question:                   💤 :zzz:                            💨 :dash:\n💦 :sweat_drops:                    🎶 :notes:                          🎵 :musical_note:\n🔥 :fire:                           💩 :hankey:                         💩 :poop:\n💩 :shit:                           👍 :+1:                             👍 :thumbsup:\n👎 :-1:                             👎 :thumbsdown:                     👌 :ok_hand:\n👊 :punch:                          👊 :facepunch:                      ✊ :fist:\n✌️ :v:                              👋 :wave:                           ✋ :hand:\n✋ :raised_hand:                     👐 :open_hands:                     ☝️ :point_up:\n👇 :point_down:                     👈 :point_left:                     👉 :point_right:\n🙌 :raised_hands:                   🙏 :pray:                           👆 :point_up_2:\n👏 :clap:                           💪 :muscle:                         🤘 :metal:\n🖕 :fu:                             🚶 :walking:                        🏃 :runner:\n🏃 :running:                        👫 :couple:                         👪 :family:\n👬 :two_men_holding_hands:          👭 :two_women_holding_hands:        💃 :dancer:\n👯 :dancers:                        🙆 :ok_woman:                       🙅 :no_good:\n💁 :information_desk_person:        🙋 :raising_hand:                   👰 :bride_with_veil:\n:trollface: :trollface:             🙍 :person_frowning:                🙇 :bow:\n:couplekiss: :couplekiss:           💑 :couple_with_heart:              💆 :massage:\n💇 :haircut:                        💅 :nail_care:                      👦 :boy:\n👧 :girl:                           👩 :woman:                          👨 :man:\n👶 :baby:                           👵 :older_woman:                    👴 :older_man:\n👱 :person_with_blond_hair:         👲 :man_with_gua_pi_mao:            👳 :man_with_turban:\n👷 :construction_worker:            👮 :cop:                            👼 :angel:\n👸 :princess:                       😺 :smiley_cat:                     😸 :smile_cat:\n😻 :heart_eyes_cat:                 😽 :kissing_cat:                    😼 :smirk_cat:\n🙀 :scream_cat:                     😿 :crying_cat_face:                😹 :joy_cat:\n😾 :pouting_cat:                    👹 :japanese_ogre:                  👺 :japanese_goblin:\n🙈 :see_no_evil:                    🙉 :hear_no_evil:                   🙊 :speak_no_evil:\n💂 :guardsman:                      💀 :skull:                          🐾 :feet:\n👄 :lips:                           💋 :kiss:                           💧 :droplet:\n👂 :ear:                            👀 :eyes:                           👃 :nose:\n👅 :tongue:                         💌 :love_letter:                    👤 :bust_in_silhouette:\n👥 :busts_in_silhouette:            💬 :speech_balloon:                 💭 :thought_balloon:\n:feelsgood: :feelsgood:             :finnadie: :finnadie:               :goberserk: :goberserk:\n:godmode: :godmode:                 :hurtrealbad: :hurtrealbad:         :rage1: :rage1:\n:rage2: :rage2:                     :rage3: :rage3:                     :rage4: :rage4:\n:suspect: :suspect:                                                     \n\n\n# Nature\n\n                                                                \n☀️ :sunny:                          ☔️ :umbrella:               ☁️ :cloud:\n❄️ :snowflake:                      ⛄️ :snowman:                ⚡️ :zap:\n🌀 :cyclone:                        🌁 :foggy:                  🌊 :ocean:\n🐱 :cat:                            🐶 :dog:                    🐭 :mouse:\n🐹 :hamster:                        🐰 :rabbit:                 🐺 :wolf:\n🐸 :frog:                           🐯 :tiger:                  🐨 :koala:\n🐻 :bear:                           🐷 :pig:                    🐽 :pig_nose:\n🐮 :cow:                            🐗 :boar:                   🐵 :monkey_face:\n🐒 :monkey:                         🐴 :horse:                  🐎 :racehorse:\n🐫 :camel:                          🐑 :sheep:                  🐘 :elephant:\n🐼 :panda_face:                     🐍 :snake:                  🐦 :bird:\n🐤 :baby_chick:                     🐥 :hatched_chick:          🐣 :hatching_chick:\n🐔 :chicken:                        🐧 :penguin:                🐢 :turtle:\n🐛 :bug:                            🐝 :honeybee:               🐜 :ant:\n🐞 :beetle:                         🐌 :snail:                  🐙 :octopus:\n🐠 :tropical_fish:                  🐟 :fish:                   🐳 :whale:\n🐋 :whale2:                         🐬 :dolphin:                🐄 :cow2:\n🐏 :ram:                            🐀 :rat:                    🐃 :water_buffalo:\n🐅 :tiger2:                         🐇 :rabbit2:                🐉 :dragon:\n🐐 :goat:                           🐓 :rooster:                🐕 :dog2:\n🐖 :pig2:                           🐁 :mouse2:                 🐂 :ox:\n🐲 :dragon_face:                    🐡 :blowfish:               🐊 :crocodile:\n🐪 :dromedary_camel:                🐆 :leopard:                🐈 :cat2:\n🐩 :poodle:                         🐾 :paw_prints:             💐 :bouquet:\n🌸 :cherry_blossom:                 🌷 :tulip:                  🍀 :four_leaf_clover:\n🌹 :rose:                           🌻 :sunflower:              🌺 :hibiscus:\n🍁 :maple_leaf:                     🍃 :leaves:                 🍂 :fallen_leaf:\n🌿 :herb:                           🍄 :mushroom:               🌵 :cactus:\n🌴 :palm_tree:                      🌲 :evergreen_tree:         🌳 :deciduous_tree:\n🌰 :chestnut:                       🌱 :seedling:               🌼 :blossom:\n🌾 :ear_of_rice:                    🐚 :shell:                  🌐 :globe_with_meridians:\n🌞 :sun_with_face:                  🌝 :full_moon_with_face:    🌚 :new_moon_with_face:\n🌑 :new_moon:                       🌒 :waxing_crescent_moon:   🌓 :first_quarter_moon:\n🌔 :waxing_gibbous_moon:            🌕 :full_moon:              🌖 :waning_gibbous_moon:\n🌗 :last_quarter_moon:              🌘 :waning_crescent_moon:   🌜 :last_quarter_moon_with_face:\n🌛 :first_quarter_moon_with_face:   🌔 :moon:                   🌍 :earth_africa:\n🌎 :earth_americas:                 🌏 :earth_asia:             🌋 :volcano:\n🌌 :milky_way:                      ⛅️ :partly_sunny:           :octocat: :octocat:\n:squirrel: :squirrel:                                           \n\n\n# Objects\n\n                                                                        \n🎍 :bamboo:                           💝 :gift_heart:                   🎎 :dolls:\n🎒 :school_satchel:                   🎓 :mortar_board:                 🎏 :flags:\n🎆 :fireworks:                        🎇 :sparkler:                     🎐 :wind_chime:\n🎑 :rice_scene:                       🎃 :jack_o_lantern:               👻 :ghost:\n🎅 :santa:                            🎄 :christmas_tree:               🎁 :gift:\n🔔 :bell:                             🔕 :no_bell:                      🎋 :tanabata_tree:\n🎉 :tada:                             🎊 :confetti_ball:                🎈 :balloon:\n🔮 :crystal_ball:                     💿 :cd:                           📀 :dvd:\n💾 :floppy_disk:                      📷 :camera:                       📹 :video_camera:\n🎥 :movie_camera:                     💻 :computer:                     📺 :tv:\n📱 :iphone:                           ☎️ :phone:                        ☎️ :telephone:\n📞 :telephone_receiver:               📟 :pager:                        📠 :fax:\n💽 :minidisc:                         📼 :vhs:                          🔉 :sound:\n🔈 :speaker:                          🔇 :mute:                         📢 :loudspeaker:\n📣 :mega:                             ⌛️ :hourglass:                    ⏳ :hourglass_flowing_sand:\n⏰ :alarm_clock:                       ⌚️ :watch:                        📻 :radio:\n📡 :satellite:                        ➿ :loop:                          🔍 :mag:\n🔎 :mag_right:                        🔓 :unlock:                       🔒 :lock:\n🔏 :lock_with_ink_pen:                🔐 :closed_lock_with_key:         🔑 :key:\n💡 :bulb:                             🔦 :flashlight:                   🔆 :high_brightness:\n🔅 :low_brightness:                   🔌 :electric_plug:                🔋 :battery:\n📲 :calling:                          ✉️ :email:                        📫 :mailbox:\n📮 :postbox:                          🛀 :bath:                         🛁 :bathtub:\n🚿 :shower:                           🚽 :toilet:                       🔧 :wrench:\n🔩 :nut_and_bolt:                     🔨 :hammer:                       💺 :seat:\n💰 :moneybag:                         💴 :yen:                          💵 :dollar:\n💷 :pound:                            💶 :euro:                         💳 :credit_card:\n💸 :money_with_wings:                 📧 :e-mail:                       📥 :inbox_tray:\n📤 :outbox_tray:                      ✉️ :envelope:                     📨 :incoming_envelope:\n📯 :postal_horn:                      📪 :mailbox_closed:               📬 :mailbox_with_mail:\n📭 :mailbox_with_no_mail:             🚪 :door:                         🚬 :smoking:\n💣 :bomb:                             🔫 :gun:                          🔪 :hocho:\n💊 :pill:                             💉 :syringe:                      📄 :page_facing_up:\n📃 :page_with_curl:                   📑 :bookmark_tabs:                📊 :bar_chart:\n📈 :chart_with_upwards_trend:         📉 :chart_with_downwards_trend:   📜 :scroll:\n📋 :clipboard:                        📆 :calendar:                     📅 :date:\n📇 :card_index:                       📁 :file_folder:                  📂 :open_file_folder:\n✂️ :scissors:                         📌 :pushpin:                      📎 :paperclip:\n✒️ :black_nib:                        ✏️ :pencil2:                      📏 :straight_ruler:\n📐 :triangular_ruler:                 📕 :closed_book:                  📗 :green_book:\n📘 :blue_book:                        📙 :orange_book:                  📓 :notebook:\n📔 :notebook_with_decorative_cover:   📒 :ledger:                       📚 :books:\n🔖 :bookmark:                         📛 :name_badge:                   🔬 :microscope:\n🔭 :telescope:                        📰 :newspaper:                    🏈 :football:\n🏀 :basketball:                       ⚽️ :soccer:                       ⚾️ :baseball:\n🎾 :tennis:                           🎱 :8ball:                        🏉 :rugby_football:\n🎳 :bowling:                          ⛳️ :golf:                         🚵 :mountain_bicyclist:\n🚴 :bicyclist:                        🏇 :horse_racing:                 🏂 :snowboarder:\n🏊 :swimmer:                          🏄 :surfer:                       🎿 :ski:\n♠️ :spades:                           ♥️ :hearts:                       ♣️ :clubs:\n♦️ :diamonds:                         💎 :gem:                          💍 :ring:\n🏆 :trophy:                           🎼 :musical_score:                🎹 :musical_keyboard:\n🎻 :violin:                           👾 :space_invader:                🎮 :video_game:\n🃏 :black_joker:                      🎴 :flower_playing_cards:         🎲 :game_die:\n🎯 :dart:                             🀄️ :mahjong:                     🎬 :clapper:\n📝 :memo:                             📝 :pencil:                       📖 :book:\n🎨 :art:                              🎤 :microphone:                   🎧 :headphones:\n🎺 :trumpet:                          🎷 :saxophone:                    🎸 :guitar:\n👞 :shoe:                             👡 :sandal:                       👠 :high_heel:\n💄 :lipstick:                         👢 :boot:                         👕 :shirt:\n👕 :tshirt:                           👔 :necktie:                      👚 :womans_clothes:\n👗 :dress:                            🎽 :running_shirt_with_sash:      👖 :jeans:\n👘 :kimono:                           👙 :bikini:                       🎀 :ribbon:\n🎩 :tophat:                           👑 :crown:                        👒 :womans_hat:\n👞 :mans_shoe:                        🌂 :closed_umbrella:              💼 :briefcase:\n👜 :handbag:                          👝 :pouch:                        👛 :purse:\n👓 :eyeglasses:                       🎣 :fishing_pole_and_fish:        ☕️ :coffee:\n🍵 :tea:                              🍶 :sake:                         🍼 :baby_bottle:\n🍺 :beer:                             🍻 :beers:                        🍸 :cocktail:\n🍹 :tropical_drink:                   🍷 :wine_glass:                   🍴 :fork_and_knife:\n🍕 :pizza:                            🍔 :hamburger:                    🍟 :fries:\n🍗 :poultry_leg:                      🍖 :meat_on_bone:                 🍝 :spaghetti:\n🍛 :curry:                            🍤 :fried_shrimp:                 🍱 :bento:\n🍣 :sushi:                            🍥 :fish_cake:                    🍙 :rice_ball:\n🍘 :rice_cracker:                     🍚 :rice:                         🍜 :ramen:\n🍲 :stew:                             🍢 :oden:                         🍡 :dango:\n🥚 :egg:                              🍞 :bread:                        🍩 :doughnut:\n🍮 :custard:                          🍦 :icecream:                     🍨 :ice_cream:\n🍧 :shaved_ice:                       🎂 :birthday:                     🍰 :cake:\n🍪 :cookie:                           🍫 :chocolate_bar:                🍬 :candy:\n🍭 :lollipop:                         🍯 :honey_pot:                    🍎 :apple:\n🍏 :green_apple:                      🍊 :tangerine:                    🍋 :lemon:\n🍒 :cherries:                         🍇 :grapes:                       🍉 :watermelon:\n🍓 :strawberry:                       🍑 :peach:                        🍈 :melon:\n🍌 :banana:                           🍐 :pear:                         🍍 :pineapple:\n🍠 :sweet_potato:                     🍆 :eggplant:                     🍅 :tomato:\n🌽 :corn:                                                               \n\n\n# Places\n\n                                                          \n🏠 :house:                 🏡 :house_with_garden:         🏫 :school:\n🏢 :office:                🏣 :post_office:               🏥 :hospital:\n🏦 :bank:                  🏪 :convenience_store:         🏩 :love_hotel:\n🏨 :hotel:                 💒 :wedding:                   ⛪️ :church:\n🏬 :department_store:      🏤 :european_post_office:      🌇 :city_sunrise:\n🌆 :city_sunset:           🏯 :japanese_castle:           🏰 :european_castle:\n⛺️ :tent:                  🏭 :factory:                   🗼 :tokyo_tower:\n🗾 :japan:                 🗻 :mount_fuji:                🌄 :sunrise_over_mountains:\n🌅 :sunrise:               🌠 :stars:                     🗽 :statue_of_liberty:\n🌉 :bridge_at_night:       🎠 :carousel_horse:            🌈 :rainbow:\n🎡 :ferris_wheel:          ⛲️ :fountain:                  🎢 :roller_coaster:\n🚢 :ship:                  🚤 :speedboat:                 ⛵️ :boat:\n⛵️ :sailboat:              🚣 :rowboat:                   ⚓️ :anchor:\n🚀 :rocket:                ✈️ :airplane:                  🚁 :helicopter:\n🚂 :steam_locomotive:      🚊 :tram:                      🚞 :mountain_railway:\n🚲 :bike:                  🚡 :aerial_tramway:            🚟 :suspension_railway:\n🚠 :mountain_cableway:     🚜 :tractor:                   🚙 :blue_car:\n🚘 :oncoming_automobile:   🚗 :car:                       🚗 :red_car:\n🚕 :taxi:                  🚖 :oncoming_taxi:             🚛 :articulated_lorry:\n🚌 :bus:                   🚍 :oncoming_bus:              🚨 :rotating_light:\n🚓 :police_car:            🚔 :oncoming_police_car:       🚒 :fire_engine:\n🚑 :ambulance:             🚐 :minibus:                   🚚 :truck:\n🚋 :train:                 🚉 :station:                   🚆 :train2:\n🚅 :bullettrain_front:     🚄 :bullettrain_side:          🚈 :light_rail:\n🚝 :monorail:              🚃 :railway_car:               🚎 :trolleybus:\n🎫 :ticket:                ⛽️ :fuelpump:                  🚦 :vertical_traffic_light:\n🚥 :traffic_light:         ⚠️ :warning:                   🚧 :construction:\n🔰 :beginner:              🏧 :atm:                       🎰 :slot_machine:\n🚏 :busstop:               💈 :barber:                    ♨️ :hotsprings:\n🏁 :checkered_flag:        🎌 :crossed_flags:             🏮 :izakaya_lantern:\n🗿 :moyai:                 🎪 :circus_tent:               🎭 :performing_arts:\n📍 :round_pushpin:         🚩 :triangular_flag_on_post:   🇯🇵 :jp:\n🇰🇷 :kr:                  🇨🇳 :cn:                      🇺🇸 :us:\n🇫🇷 :fr:                  🇪🇸 :es:                      🇮🇹 :it:\n🇷🇺 :ru:                  🇬🇧 :gb:                      🇬🇧 :uk:\n🇩🇪 :de:                                                 \n\n\n# Symbols\n\n                                                                 \n1️⃣ :one:                      2️⃣ :two:                         3️⃣ :three:\n4️⃣ :four:                     5️⃣ :five:                        6️⃣ :six:\n7️⃣ :seven:                    8️⃣ :eight:                       9️⃣ :nine:\n🔟 :keycap_ten:                🔢 :1234:                         0️⃣ :zero:\n#️⃣ :hash:                     🔣 :symbols:                      ◀️ :arrow_backward:\n⬇️ :arrow_down:                ▶️ :arrow_forward:                ⬅️ :arrow_left:\n🔠 :capital_abcd:              🔡 :abcd:                         🔤 :abc:\n↙️ :arrow_lower_left:          ↘️ :arrow_lower_right:            ➡️ :arrow_right:\n⬆️ :arrow_up:                  ↖️ :arrow_upper_left:             ↗️ :arrow_upper_right:\n⏬ :arrow_double_down:          ⏫ :arrow_double_up:               🔽 :arrow_down_small:\n⤵️ :arrow_heading_down:        ⤴️ :arrow_heading_up:             ↩️ :leftwards_arrow_with_hook:\n↪️ :arrow_right_hook:          ↔️ :left_right_arrow:             ↕️ :arrow_up_down:\n🔼 :arrow_up_small:            🔃 :arrows_clockwise:             🔄 :arrows_counterclockwise:\n⏪ :rewind:                     ⏩ :fast_forward:                  ℹ️ :information_source:\n🆗 :ok:                        🔀 :twisted_rightwards_arrows:    🔁 :repeat:\n🔂 :repeat_one:                🆕 :new:                          🔝 :top:\n🆙 :up:                        🆒 :cool:                         🆓 :free:\n🆖 :ng:                        🎦 :cinema:                       🈁 :koko:\n📶 :signal_strength:           :u5272: :u5272:                   :u5408: :u5408:\n:u55b6: :u55b6:                :u6307: :u6307:                   :u6708: :u6708:\n:u6709: :u6709:                🈵 :u6e80:                        :u7121: :u7121:\n:u7533: :u7533:                :u7a7a: :u7a7a:                   :u7981: :u7981:\n🈂️ :sa:                       🚻 :restroom:                     🚹 :mens:\n🚺 :womens:                    🚼 :baby_symbol:                  🚭 :no_smoking:\n🅿️ :parking:                  ♿️ :wheelchair:                   🚇 :metro:\n🛄 :baggage_claim:             🉑 :accept:                       🚾 :wc:\n🚰 :potable_water:             🚮 :put_litter_in_its_place:      ㊙️ :secret:\n㊗️ :congratulations:           Ⓜ️ :m:                            🛂 :passport_control:\n🛅 :left_luggage:              🛃 :customs:                      🉐 :ideograph_advantage:\n🆑 :cl:                        🆘 :sos:                          🆔 :id:\n🚫 :no_entry_sign:             🔞 :underage:                     📵 :no_mobile_phones:\n🚯 :do_not_litter:             🚱 :non-potable_water:            🚳 :no_bicycles:\n🚷 :no_pedestrians:            🚸 :children_crossing:            ⛔️ :no_entry:\n✳️ :eight_spoked_asterisk:     ✴️ :eight_pointed_black_star:     💟 :heart_decoration:\n🆚 :vs:                        📳 :vibration_mode:               📴 :mobile_phone_off:\n💹 :chart:                     💱 :currency_exchange:            ♈️ :aries:\n♉️ :taurus:                    ♊️ :gemini:                       ♋️ :cancer:\n♌️ :leo:                       ♍️ :virgo:                        ♎️ :libra:\n♏️ :scorpius:                  ♐️ :sagittarius:                  ♑️ :capricorn:\n♒️ :aquarius:                  ♓️ :pisces:                       ⛎ :ophiuchus:\n🔯 :six_pointed_star:          ❎ :negative_squared_cross_mark:   🅰️ :a:\n🅱️ :b:                        🆎 :ab:                           🅾️ :o2:\n:shipit: :shipit:              ♻️ :recycle:                      🔚 :end:\n🔛 :on:                        🔜 :soon:                         🕐 :clock1:\n🕜 :clock130:                  🕙 :clock10:                      🕥 :clock1030:\n🕚 :clock11:                   🕦 :clock1130:                    🕛 :clock12:\n🕧 :clock1230:                 🕑 :clock2:                       🕝 :clock230:\n🕒 :clock3:                    🕞 :clock330:                     🕓 :clock4:\n🕟 :clock430:                  🕔 :clock5:                       🕠 :clock530:\n🕕 :clock6:                    🕡 :clock630:                     🕖 :clock7:\n🕢 :clock730:                  🕗 :clock8:                       🕣 :clock830:\n🕘 :clock9:                    🕤 :clock930:                     💲 :heavy_dollar_sign:\n©️ :copyright:                 ®️ :registered:                   ™️ :tm:\n❌ :x:                          ❗️ :heavy_exclamation_mark:       ‼️ :bangbang:\n⁉️ :interrobang:               ⭕️ :o:                            ✖️ :heavy_multiplication_x:\n➕ :heavy_plus_sign:            ➖ :heavy_minus_sign:              ➗ :heavy_division_sign:\n💮 :white_flower:              💯 :100:                          ✔️ :heavy_check_mark:\n☑️ :ballot_box_with_check:     🔘 :radio_button:                 🔗 :link:\n➰ :curly_loop:                 〰️ :wavy_dash:                    〽️ :part_alternation_mark:\n🔱 :trident:                   :black_square: :black_square:     :white_square: :white_square:\n✅ :white_check_mark:           🔲 :black_square_button:          🔳 :white_square_button:\n⚫️ :black_circle:              ⚪️ :white_circle:                 🔴 :red_circle:\n🔵 :large_blue_circle:         🔷 :large_blue_diamond:           🔶 :large_orange_diamond:\n🔹 :small_blue_diamond:        🔸 :small_orange_diamond:         🔺 :small_red_triangle:\n🔻 :small_red_triangle_down:                                     ",normalizedContent:"# markdown 常用表情\n\n\n# 目录\n\n * people\n * nature\n * objects\n * places\n * symbols\n\n\n# people\n\n                                                                        \n:bowtie: :bowtie:                   😄 :smile:                          😆 :laughing:\n😊 :blush:                          😃 :smiley:                         ☺️ :relaxed:\n😏 :smirk:                          😍 :heart_eyes:                     😘 :kissing_heart:\n😚 :kissing_closed_eyes:            😳 :flushed:                        😌 :relieved:\n😆 :satisfied:                      😁 :grin:                           😉 :wink:\n😜 :stuck_out_tongue_winking_eye:   😝 :stuck_out_tongue_closed_eyes:   😀 :grinning:\n😗 :kissing:                        😙 :kissing_smiling_eyes:           😛 :stuck_out_tongue:\n😴 :sleeping:                       😟 :worried:                        😦 :frowning:\n😧 :anguished:                      😮 :open_mouth:                     😬 :grimacing:\n😕 :confused:                       😯 :hushed:                         😑 :expressionless:\n😒 :unamused:                       😅 :sweat_smile:                    😓 :sweat:\n😥 :disappointed_relieved:          😩 :weary:                          😔 :pensive:\n😞 :disappointed:                   😖 :confounded:                     😨 :fearful:\n😰 :cold_sweat:                     😣 :persevere:                      😢 :cry:\n😭 :sob:                            😂 :joy:                            😲 :astonished:\n😱 :scream:                         :neckbeard: :neckbeard:             😫 :tired_face:\n😠 :angry:                          😡 :rage:                           😤 :triumph:\n😪 :sleepy:                         😋 :yum:                            😷 :mask:\n😎 :sunglasses:                     😵 :dizzy_face:                     👿 :imp:\n😈 :smiling_imp:                    😐 :neutral_face:                   😶 :no_mouth:\n😇 :innocent:                       👽 :alien:                          💛 :yellow_heart:\n💙 :blue_heart:                     💜 :purple_heart:                   ❤️ :heart:\n💚 :green_heart:                    💔 :broken_heart:                   💓 :heartbeat:\n💗 :heartpulse:                     💕 :two_hearts:                     💞 :revolving_hearts:\n💘 :cupid:                          💖 :sparkling_heart:                ✨ :sparkles:\n⭐️ :star:                           🌟 :star2:                          💫 :dizzy:\n💥 :boom:                           💥 :collision:                      💢 :anger:\n❗️ :exclamation:                    ❓ :question:                        ❕ :grey_exclamation:\n❔ :grey_question:                   💤 :zzz:                            💨 :dash:\n💦 :sweat_drops:                    🎶 :notes:                          🎵 :musical_note:\n🔥 :fire:                           💩 :hankey:                         💩 :poop:\n💩 :shit:                           👍 :+1:                             👍 :thumbsup:\n👎 :-1:                             👎 :thumbsdown:                     👌 :ok_hand:\n👊 :punch:                          👊 :facepunch:                      ✊ :fist:\n✌️ :v:                              👋 :wave:                           ✋ :hand:\n✋ :raised_hand:                     👐 :open_hands:                     ☝️ :point_up:\n👇 :point_down:                     👈 :point_left:                     👉 :point_right:\n🙌 :raised_hands:                   🙏 :pray:                           👆 :point_up_2:\n👏 :clap:                           💪 :muscle:                         🤘 :metal:\n🖕 :fu:                             🚶 :walking:                        🏃 :runner:\n🏃 :running:                        👫 :couple:                         👪 :family:\n👬 :two_men_holding_hands:          👭 :two_women_holding_hands:        💃 :dancer:\n👯 :dancers:                        🙆 :ok_woman:                       🙅 :no_good:\n💁 :information_desk_person:        🙋 :raising_hand:                   👰 :bride_with_veil:\n:trollface: :trollface:             🙍 :person_frowning:                🙇 :bow:\n:couplekiss: :couplekiss:           💑 :couple_with_heart:              💆 :massage:\n💇 :haircut:                        💅 :nail_care:                      👦 :boy:\n👧 :girl:                           👩 :woman:                          👨 :man:\n👶 :baby:                           👵 :older_woman:                    👴 :older_man:\n👱 :person_with_blond_hair:         👲 :man_with_gua_pi_mao:            👳 :man_with_turban:\n👷 :construction_worker:            👮 :cop:                            👼 :angel:\n👸 :princess:                       😺 :smiley_cat:                     😸 :smile_cat:\n😻 :heart_eyes_cat:                 😽 :kissing_cat:                    😼 :smirk_cat:\n🙀 :scream_cat:                     😿 :crying_cat_face:                😹 :joy_cat:\n😾 :pouting_cat:                    👹 :japanese_ogre:                  👺 :japanese_goblin:\n🙈 :see_no_evil:                    🙉 :hear_no_evil:                   🙊 :speak_no_evil:\n💂 :guardsman:                      💀 :skull:                          🐾 :feet:\n👄 :lips:                           💋 :kiss:                           💧 :droplet:\n👂 :ear:                            👀 :eyes:                           👃 :nose:\n👅 :tongue:                         💌 :love_letter:                    👤 :bust_in_silhouette:\n👥 :busts_in_silhouette:            💬 :speech_balloon:                 💭 :thought_balloon:\n:feelsgood: :feelsgood:             :finnadie: :finnadie:               :goberserk: :goberserk:\n:godmode: :godmode:                 :hurtrealbad: :hurtrealbad:         :rage1: :rage1:\n:rage2: :rage2:                     :rage3: :rage3:                     :rage4: :rage4:\n:suspect: :suspect:                                                     \n\n\n# nature\n\n                                                                \n☀️ :sunny:                          ☔️ :umbrella:               ☁️ :cloud:\n❄️ :snowflake:                      ⛄️ :snowman:                ⚡️ :zap:\n🌀 :cyclone:                        🌁 :foggy:                  🌊 :ocean:\n🐱 :cat:                            🐶 :dog:                    🐭 :mouse:\n🐹 :hamster:                        🐰 :rabbit:                 🐺 :wolf:\n🐸 :frog:                           🐯 :tiger:                  🐨 :koala:\n🐻 :bear:                           🐷 :pig:                    🐽 :pig_nose:\n🐮 :cow:                            🐗 :boar:                   🐵 :monkey_face:\n🐒 :monkey:                         🐴 :horse:                  🐎 :racehorse:\n🐫 :camel:                          🐑 :sheep:                  🐘 :elephant:\n🐼 :panda_face:                     🐍 :snake:                  🐦 :bird:\n🐤 :baby_chick:                     🐥 :hatched_chick:          🐣 :hatching_chick:\n🐔 :chicken:                        🐧 :penguin:                🐢 :turtle:\n🐛 :bug:                            🐝 :honeybee:               🐜 :ant:\n🐞 :beetle:                         🐌 :snail:                  🐙 :octopus:\n🐠 :tropical_fish:                  🐟 :fish:                   🐳 :whale:\n🐋 :whale2:                         🐬 :dolphin:                🐄 :cow2:\n🐏 :ram:                            🐀 :rat:                    🐃 :water_buffalo:\n🐅 :tiger2:                         🐇 :rabbit2:                🐉 :dragon:\n🐐 :goat:                           🐓 :rooster:                🐕 :dog2:\n🐖 :pig2:                           🐁 :mouse2:                 🐂 :ox:\n🐲 :dragon_face:                    🐡 :blowfish:               🐊 :crocodile:\n🐪 :dromedary_camel:                🐆 :leopard:                🐈 :cat2:\n🐩 :poodle:                         🐾 :paw_prints:             💐 :bouquet:\n🌸 :cherry_blossom:                 🌷 :tulip:                  🍀 :four_leaf_clover:\n🌹 :rose:                           🌻 :sunflower:              🌺 :hibiscus:\n🍁 :maple_leaf:                     🍃 :leaves:                 🍂 :fallen_leaf:\n🌿 :herb:                           🍄 :mushroom:               🌵 :cactus:\n🌴 :palm_tree:                      🌲 :evergreen_tree:         🌳 :deciduous_tree:\n🌰 :chestnut:                       🌱 :seedling:               🌼 :blossom:\n🌾 :ear_of_rice:                    🐚 :shell:                  🌐 :globe_with_meridians:\n🌞 :sun_with_face:                  🌝 :full_moon_with_face:    🌚 :new_moon_with_face:\n🌑 :new_moon:                       🌒 :waxing_crescent_moon:   🌓 :first_quarter_moon:\n🌔 :waxing_gibbous_moon:            🌕 :full_moon:              🌖 :waning_gibbous_moon:\n🌗 :last_quarter_moon:              🌘 :waning_crescent_moon:   🌜 :last_quarter_moon_with_face:\n🌛 :first_quarter_moon_with_face:   🌔 :moon:                   🌍 :earth_africa:\n🌎 :earth_americas:                 🌏 :earth_asia:             🌋 :volcano:\n🌌 :milky_way:                      ⛅️ :partly_sunny:           :octocat: :octocat:\n:squirrel: :squirrel:                                           \n\n\n# objects\n\n                                                                        \n🎍 :bamboo:                           💝 :gift_heart:                   🎎 :dolls:\n🎒 :school_satchel:                   🎓 :mortar_board:                 🎏 :flags:\n🎆 :fireworks:                        🎇 :sparkler:                     🎐 :wind_chime:\n🎑 :rice_scene:                       🎃 :jack_o_lantern:               👻 :ghost:\n🎅 :santa:                            🎄 :christmas_tree:               🎁 :gift:\n🔔 :bell:                             🔕 :no_bell:                      🎋 :tanabata_tree:\n🎉 :tada:                             🎊 :confetti_ball:                🎈 :balloon:\n🔮 :crystal_ball:                     💿 :cd:                           📀 :dvd:\n💾 :floppy_disk:                      📷 :camera:                       📹 :video_camera:\n🎥 :movie_camera:                     💻 :computer:                     📺 :tv:\n📱 :iphone:                           ☎️ :phone:                        ☎️ :telephone:\n📞 :telephone_receiver:               📟 :pager:                        📠 :fax:\n💽 :minidisc:                         📼 :vhs:                          🔉 :sound:\n🔈 :speaker:                          🔇 :mute:                         📢 :loudspeaker:\n📣 :mega:                             ⌛️ :hourglass:                    ⏳ :hourglass_flowing_sand:\n⏰ :alarm_clock:                       ⌚️ :watch:                        📻 :radio:\n📡 :satellite:                        ➿ :loop:                          🔍 :mag:\n🔎 :mag_right:                        🔓 :unlock:                       🔒 :lock:\n🔏 :lock_with_ink_pen:                🔐 :closed_lock_with_key:         🔑 :key:\n💡 :bulb:                             🔦 :flashlight:                   🔆 :high_brightness:\n🔅 :low_brightness:                   🔌 :electric_plug:                🔋 :battery:\n📲 :calling:                          ✉️ :email:                        📫 :mailbox:\n📮 :postbox:                          🛀 :bath:                         🛁 :bathtub:\n🚿 :shower:                           🚽 :toilet:                       🔧 :wrench:\n🔩 :nut_and_bolt:                     🔨 :hammer:                       💺 :seat:\n💰 :moneybag:                         💴 :yen:                          💵 :dollar:\n💷 :pound:                            💶 :euro:                         💳 :credit_card:\n💸 :money_with_wings:                 📧 :e-mail:                       📥 :inbox_tray:\n📤 :outbox_tray:                      ✉️ :envelope:                     📨 :incoming_envelope:\n📯 :postal_horn:                      📪 :mailbox_closed:               📬 :mailbox_with_mail:\n📭 :mailbox_with_no_mail:             🚪 :door:                         🚬 :smoking:\n💣 :bomb:                             🔫 :gun:                          🔪 :hocho:\n💊 :pill:                             💉 :syringe:                      📄 :page_facing_up:\n📃 :page_with_curl:                   📑 :bookmark_tabs:                📊 :bar_chart:\n📈 :chart_with_upwards_trend:         📉 :chart_with_downwards_trend:   📜 :scroll:\n📋 :clipboard:                        📆 :calendar:                     📅 :date:\n📇 :card_index:                       📁 :file_folder:                  📂 :open_file_folder:\n✂️ :scissors:                         📌 :pushpin:                      📎 :paperclip:\n✒️ :black_nib:                        ✏️ :pencil2:                      📏 :straight_ruler:\n📐 :triangular_ruler:                 📕 :closed_book:                  📗 :green_book:\n📘 :blue_book:                        📙 :orange_book:                  📓 :notebook:\n📔 :notebook_with_decorative_cover:   📒 :ledger:                       📚 :books:\n🔖 :bookmark:                         📛 :name_badge:                   🔬 :microscope:\n🔭 :telescope:                        📰 :newspaper:                    🏈 :football:\n🏀 :basketball:                       ⚽️ :soccer:                       ⚾️ :baseball:\n🎾 :tennis:                           🎱 :8ball:                        🏉 :rugby_football:\n🎳 :bowling:                          ⛳️ :golf:                         🚵 :mountain_bicyclist:\n🚴 :bicyclist:                        🏇 :horse_racing:                 🏂 :snowboarder:\n🏊 :swimmer:                          🏄 :surfer:                       🎿 :ski:\n♠️ :spades:                           ♥️ :hearts:                       ♣️ :clubs:\n♦️ :diamonds:                         💎 :gem:                          💍 :ring:\n🏆 :trophy:                           🎼 :musical_score:                🎹 :musical_keyboard:\n🎻 :violin:                           👾 :space_invader:                🎮 :video_game:\n🃏 :black_joker:                      🎴 :flower_playing_cards:         🎲 :game_die:\n🎯 :dart:                             🀄️ :mahjong:                     🎬 :clapper:\n📝 :memo:                             📝 :pencil:                       📖 :book:\n🎨 :art:                              🎤 :microphone:                   🎧 :headphones:\n🎺 :trumpet:                          🎷 :saxophone:                    🎸 :guitar:\n👞 :shoe:                             👡 :sandal:                       👠 :high_heel:\n💄 :lipstick:                         👢 :boot:                         👕 :shirt:\n👕 :tshirt:                           👔 :necktie:                      👚 :womans_clothes:\n👗 :dress:                            🎽 :running_shirt_with_sash:      👖 :jeans:\n👘 :kimono:                           👙 :bikini:                       🎀 :ribbon:\n🎩 :tophat:                           👑 :crown:                        👒 :womans_hat:\n👞 :mans_shoe:                        🌂 :closed_umbrella:              💼 :briefcase:\n👜 :handbag:                          👝 :pouch:                        👛 :purse:\n👓 :eyeglasses:                       🎣 :fishing_pole_and_fish:        ☕️ :coffee:\n🍵 :tea:                              🍶 :sake:                         🍼 :baby_bottle:\n🍺 :beer:                             🍻 :beers:                        🍸 :cocktail:\n🍹 :tropical_drink:                   🍷 :wine_glass:                   🍴 :fork_and_knife:\n🍕 :pizza:                            🍔 :hamburger:                    🍟 :fries:\n🍗 :poultry_leg:                      🍖 :meat_on_bone:                 🍝 :spaghetti:\n🍛 :curry:                            🍤 :fried_shrimp:                 🍱 :bento:\n🍣 :sushi:                            🍥 :fish_cake:                    🍙 :rice_ball:\n🍘 :rice_cracker:                     🍚 :rice:                         🍜 :ramen:\n🍲 :stew:                             🍢 :oden:                         🍡 :dango:\n🥚 :egg:                              🍞 :bread:                        🍩 :doughnut:\n🍮 :custard:                          🍦 :icecream:                     🍨 :ice_cream:\n🍧 :shaved_ice:                       🎂 :birthday:                     🍰 :cake:\n🍪 :cookie:                           🍫 :chocolate_bar:                🍬 :candy:\n🍭 :lollipop:                         🍯 :honey_pot:                    🍎 :apple:\n🍏 :green_apple:                      🍊 :tangerine:                    🍋 :lemon:\n🍒 :cherries:                         🍇 :grapes:                       🍉 :watermelon:\n🍓 :strawberry:                       🍑 :peach:                        🍈 :melon:\n🍌 :banana:                           🍐 :pear:                         🍍 :pineapple:\n🍠 :sweet_potato:                     🍆 :eggplant:                     🍅 :tomato:\n🌽 :corn:                                                               \n\n\n# places\n\n                                                          \n🏠 :house:                 🏡 :house_with_garden:         🏫 :school:\n🏢 :office:                🏣 :post_office:               🏥 :hospital:\n🏦 :bank:                  🏪 :convenience_store:         🏩 :love_hotel:\n🏨 :hotel:                 💒 :wedding:                   ⛪️ :church:\n🏬 :department_store:      🏤 :european_post_office:      🌇 :city_sunrise:\n🌆 :city_sunset:           🏯 :japanese_castle:           🏰 :european_castle:\n⛺️ :tent:                  🏭 :factory:                   🗼 :tokyo_tower:\n🗾 :japan:                 🗻 :mount_fuji:                🌄 :sunrise_over_mountains:\n🌅 :sunrise:               🌠 :stars:                     🗽 :statue_of_liberty:\n🌉 :bridge_at_night:       🎠 :carousel_horse:            🌈 :rainbow:\n🎡 :ferris_wheel:          ⛲️ :fountain:                  🎢 :roller_coaster:\n🚢 :ship:                  🚤 :speedboat:                 ⛵️ :boat:\n⛵️ :sailboat:              🚣 :rowboat:                   ⚓️ :anchor:\n🚀 :rocket:                ✈️ :airplane:                  🚁 :helicopter:\n🚂 :steam_locomotive:      🚊 :tram:                      🚞 :mountain_railway:\n🚲 :bike:                  🚡 :aerial_tramway:            🚟 :suspension_railway:\n🚠 :mountain_cableway:     🚜 :tractor:                   🚙 :blue_car:\n🚘 :oncoming_automobile:   🚗 :car:                       🚗 :red_car:\n🚕 :taxi:                  🚖 :oncoming_taxi:             🚛 :articulated_lorry:\n🚌 :bus:                   🚍 :oncoming_bus:              🚨 :rotating_light:\n🚓 :police_car:            🚔 :oncoming_police_car:       🚒 :fire_engine:\n🚑 :ambulance:             🚐 :minibus:                   🚚 :truck:\n🚋 :train:                 🚉 :station:                   🚆 :train2:\n🚅 :bullettrain_front:     🚄 :bullettrain_side:          🚈 :light_rail:\n🚝 :monorail:              🚃 :railway_car:               🚎 :trolleybus:\n🎫 :ticket:                ⛽️ :fuelpump:                  🚦 :vertical_traffic_light:\n🚥 :traffic_light:         ⚠️ :warning:                   🚧 :construction:\n🔰 :beginner:              🏧 :atm:                       🎰 :slot_machine:\n🚏 :busstop:               💈 :barber:                    ♨️ :hotsprings:\n🏁 :checkered_flag:        🎌 :crossed_flags:             🏮 :izakaya_lantern:\n🗿 :moyai:                 🎪 :circus_tent:               🎭 :performing_arts:\n📍 :round_pushpin:         🚩 :triangular_flag_on_post:   🇯🇵 :jp:\n🇰🇷 :kr:                  🇨🇳 :cn:                      🇺🇸 :us:\n🇫🇷 :fr:                  🇪🇸 :es:                      🇮🇹 :it:\n🇷🇺 :ru:                  🇬🇧 :gb:                      🇬🇧 :uk:\n🇩🇪 :de:                                                 \n\n\n# symbols\n\n                                                                 \n1️⃣ :one:                      2️⃣ :two:                         3️⃣ :three:\n4️⃣ :four:                     5️⃣ :five:                        6️⃣ :six:\n7️⃣ :seven:                    8️⃣ :eight:                       9️⃣ :nine:\n🔟 :keycap_ten:                🔢 :1234:                         0️⃣ :zero:\n#️⃣ :hash:                     🔣 :symbols:                      ◀️ :arrow_backward:\n⬇️ :arrow_down:                ▶️ :arrow_forward:                ⬅️ :arrow_left:\n🔠 :capital_abcd:              🔡 :abcd:                         🔤 :abc:\n↙️ :arrow_lower_left:          ↘️ :arrow_lower_right:            ➡️ :arrow_right:\n⬆️ :arrow_up:                  ↖️ :arrow_upper_left:             ↗️ :arrow_upper_right:\n⏬ :arrow_double_down:          ⏫ :arrow_double_up:               🔽 :arrow_down_small:\n⤵️ :arrow_heading_down:        ⤴️ :arrow_heading_up:             ↩️ :leftwards_arrow_with_hook:\n↪️ :arrow_right_hook:          ↔️ :left_right_arrow:             ↕️ :arrow_up_down:\n🔼 :arrow_up_small:            🔃 :arrows_clockwise:             🔄 :arrows_counterclockwise:\n⏪ :rewind:                     ⏩ :fast_forward:                  ℹ️ :information_source:\n🆗 :ok:                        🔀 :twisted_rightwards_arrows:    🔁 :repeat:\n🔂 :repeat_one:                🆕 :new:                          🔝 :top:\n🆙 :up:                        🆒 :cool:                         🆓 :free:\n🆖 :ng:                        🎦 :cinema:                       🈁 :koko:\n📶 :signal_strength:           :u5272: :u5272:                   :u5408: :u5408:\n:u55b6: :u55b6:                :u6307: :u6307:                   :u6708: :u6708:\n:u6709: :u6709:                🈵 :u6e80:                        :u7121: :u7121:\n:u7533: :u7533:                :u7a7a: :u7a7a:                   :u7981: :u7981:\n🈂️ :sa:                       🚻 :restroom:                     🚹 :mens:\n🚺 :womens:                    🚼 :baby_symbol:                  🚭 :no_smoking:\n🅿️ :parking:                  ♿️ :wheelchair:                   🚇 :metro:\n🛄 :baggage_claim:             🉑 :accept:                       🚾 :wc:\n🚰 :potable_water:             🚮 :put_litter_in_its_place:      ㊙️ :secret:\n㊗️ :congratulations:           ⓜ️ :m:                            🛂 :passport_control:\n🛅 :left_luggage:              🛃 :customs:                      🉐 :ideograph_advantage:\n🆑 :cl:                        🆘 :sos:                          🆔 :id:\n🚫 :no_entry_sign:             🔞 :underage:                     📵 :no_mobile_phones:\n🚯 :do_not_litter:             🚱 :non-potable_water:            🚳 :no_bicycles:\n🚷 :no_pedestrians:            🚸 :children_crossing:            ⛔️ :no_entry:\n✳️ :eight_spoked_asterisk:     ✴️ :eight_pointed_black_star:     💟 :heart_decoration:\n🆚 :vs:                        📳 :vibration_mode:               📴 :mobile_phone_off:\n💹 :chart:                     💱 :currency_exchange:            ♈️ :aries:\n♉️ :taurus:                    ♊️ :gemini:                       ♋️ :cancer:\n♌️ :leo:                       ♍️ :virgo:                        ♎️ :libra:\n♏️ :scorpius:                  ♐️ :sagittarius:                  ♑️ :capricorn:\n♒️ :aquarius:                  ♓️ :pisces:                       ⛎ :ophiuchus:\n🔯 :six_pointed_star:          ❎ :negative_squared_cross_mark:   🅰️ :a:\n🅱️ :b:                        🆎 :ab:                           🅾️ :o2:\n:shipit: :shipit:              ♻️ :recycle:                      🔚 :end:\n🔛 :on:                        🔜 :soon:                         🕐 :clock1:\n🕜 :clock130:                  🕙 :clock10:                      🕥 :clock1030:\n🕚 :clock11:                   🕦 :clock1130:                    🕛 :clock12:\n🕧 :clock1230:                 🕑 :clock2:                       🕝 :clock230:\n🕒 :clock3:                    🕞 :clock330:                     🕓 :clock4:\n🕟 :clock430:                  🕔 :clock5:                       🕠 :clock530:\n🕕 :clock6:                    🕡 :clock630:                     🕖 :clock7:\n🕢 :clock730:                  🕗 :clock8:                       🕣 :clock830:\n🕘 :clock9:                    🕤 :clock930:                     💲 :heavy_dollar_sign:\n©️ :copyright:                 ®️ :registered:                   ™️ :tm:\n❌ :x:                          ❗️ :heavy_exclamation_mark:       ‼️ :bangbang:\n⁉️ :interrobang:               ⭕️ :o:                            ✖️ :heavy_multiplication_x:\n➕ :heavy_plus_sign:            ➖ :heavy_minus_sign:              ➗ :heavy_division_sign:\n💮 :white_flower:              💯 :100:                          ✔️ :heavy_check_mark:\n☑️ :ballot_box_with_check:     🔘 :radio_button:                 🔗 :link:\n➰ :curly_loop:                 〰️ :wavy_dash:                    〽️ :part_alternation_mark:\n🔱 :trident:                   :black_square: :black_square:     :white_square: :white_square:\n✅ :white_check_mark:           🔲 :black_square_button:          🔳 :white_square_button:\n⚫️ :black_circle:              ⚪️ :white_circle:                 🔴 :red_circle:\n🔵 :large_blue_circle:         🔷 :large_blue_diamond:           🔶 :large_orange_diamond:\n🔹 :small_blue_diamond:        🔸 :small_orange_diamond:         🔺 :small_red_triangle:\n🔻 :small_red_triangle_down:                                     ",charsets:{cjk:!0},lastUpdated:"2022/05/18, 09:51:09",lastUpdatedTimestamp:1652867469e3},{title:"Vuepress 模版",frontmatter:{title:"Vuepress 模版",date:"2018-12-28T00:00:00.000Z",tags:["VuePress"],permalink:"/pages/f55287/",categories:["Vuepress"],readingShow:"top"},regularPath:"/08.%E5%85%B3%E4%BA%8E/99.Vuepress/03.Vuepress%E6%A8%A1%E7%89%88.html",relativePath:"08.关于/99.Vuepress/03.Vuepress模版.md",key:"v-29c86f27",path:"/pages/f55287/",headers:[{level:2,title:"目录",slug:"目录",normalizedTitle:"目录",charIndex:2},{level:2,title:"安装环境",slug:"安装环境",normalizedTitle:"安装环境",charIndex:9},{level:2,title:"目录结构",slug:"目录结构",normalizedTitle:"目录结构",charIndex:17},{level:2,title:"运行项目",slug:"运行项目",normalizedTitle:"运行项目",charIndex:25}],headersStr:"目录 安装环境 目录结构 运行项目",content:"# 目录\n\n * 安装环境\n * 目录结构\n * 运行项目\n\nvuepress-template 是一个为编写技术文档而诞生的，它基于vuePress实现，内置自动生成侧边栏，\b动漫模型、自动打包部署GitHub Actions、Gitee Page同步更新（原Plus会员的功能）、还有听歌组件等。\n\n快速的搭建属于自己的静态页面，只要转移自己的文章目录和配置导航栏页面就行。\n\n\n# 安装环境\n\n你需要在本地安装 node和`- vuepress-template\n\n，如果你本机没有node` 点击下面地址跳转到官网下载安装。\n\n * node 官网\n * git 官网\n\n\n# 目录结构\n\n├── docs\n│   ├── .vuepress\n│   │   ├── components\n│   │   ├── config\n│   │   │   ├── theme.js (导航和侧边栏)\n│   │   │   └── plugins.js (插件的)\n│   │   ├── theme\n│   │   │   └── Layout.vue\n│   │   ├── public\n│   │   ├── styles\n│   │   │   ├── index.styl\n│   │   │   └── palette.styl\n│   │   ├── config.js (可选的)\n│   │\n│   ├── README.md\n│   ├── 指南\n│   │   └── 介绍.md\n│   └── config.md\n│\n└── package.json\n\n\n\n# 运行项目\n\n# 克隆项目\ngit clone https://github.com/qqlcx5/vuepress-template.git\n\n# 进入项目目录\ncd vuepress-template\n\n# 安装依赖\nnpm install\n\n# npm 下载速度慢 可以指定 registry 来解决 npm 安装速度慢的问题。\nnpm install --registry=https://registry.npm.taobao.org\n\n# 本地开发 启动项目\nnpm run docs:dev\n\n\n启动完成后打开浏览器访问 http://localhost:8080， 你看到下面的页面就代表操作成功了。",normalizedContent:"# 目录\n\n * 安装环境\n * 目录结构\n * 运行项目\n\nvuepress-template 是一个为编写技术文档而诞生的，它基于vuepress实现，内置自动生成侧边栏，\b动漫模型、自动打包部署github actions、gitee page同步更新（原plus会员的功能）、还有听歌组件等。\n\n快速的搭建属于自己的静态页面，只要转移自己的文章目录和配置导航栏页面就行。\n\n\n# 安装环境\n\n你需要在本地安装 node和`- vuepress-template\n\n，如果你本机没有node` 点击下面地址跳转到官网下载安装。\n\n * node 官网\n * git 官网\n\n\n# 目录结构\n\n├── docs\n│   ├── .vuepress\n│   │   ├── components\n│   │   ├── config\n│   │   │   ├── theme.js (导航和侧边栏)\n│   │   │   └── plugins.js (插件的)\n│   │   ├── theme\n│   │   │   └── layout.vue\n│   │   ├── public\n│   │   ├── styles\n│   │   │   ├── index.styl\n│   │   │   └── palette.styl\n│   │   ├── config.js (可选的)\n│   │\n│   ├── readme.md\n│   ├── 指南\n│   │   └── 介绍.md\n│   └── config.md\n│\n└── package.json\n\n\n\n# 运行项目\n\n# 克隆项目\ngit clone https://github.com/qqlcx5/vuepress-template.git\n\n# 进入项目目录\ncd vuepress-template\n\n# 安装依赖\nnpm install\n\n# npm 下载速度慢 可以指定 registry 来解决 npm 安装速度慢的问题。\nnpm install --registry=https://registry.npm.taobao.org\n\n# 本地开发 启动项目\nnpm run docs:dev\n\n\n启动完成后打开浏览器访问 http://localhost:8080， 你看到下面的页面就代表操作成功了。",charsets:{cjk:!0},lastUpdated:"2022/05/18, 09:51:09",lastUpdatedTimestamp:1652867469e3},{title:"GitHub Actions部署Vuepress",frontmatter:{title:"GitHub Actions部署Vuepress",date:"2018-12-28T00:00:00.000Z",tags:["VuePress"],permalink:"/pages/4369fc/",categories:["Vuepress"],readingShow:"top"},regularPath:"/08.%E5%85%B3%E4%BA%8E/99.Vuepress/05.GitHub%20Actions%E9%83%A8%E7%BD%B2Vuepress.html",relativePath:"08.关于/99.Vuepress/05.GitHub Actions部署Vuepress.md",key:"v-8fe1d638",path:"/pages/4369fc/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:3,title:"脚本部署",slug:"脚本部署",normalizedTitle:"脚本部署",charIndex:155},{level:3,title:"GitHub Actions",slug:"github-actions",normalizedTitle:"github actions",charIndex:521},{level:3,title:"验证",slug:"验证",normalizedTitle:"验证",charIndex:2145}],headersStr:"前言 脚本部署 GitHub Actions 验证",content:"# 前言\n\n假设你有一个Vuepress的项目，分支 master 存放文章，分支gh-pages 存放VuePress生成的静态文件。\n\n正常部署VuePress的流程是：\n\n * 项目打包生成静态文件：npm run build\n * 切换打包dist目录下\n * 上传到 gh-pages分支下\n\n\n# 脚本部署\n\n在项目目录下创建一个 deploy.sh文件，复制下面代码，执行打包及提交静态文件到仓库的gh-pages分支下。\n\n# 打包及切换到dist目录下\nnpm run docs:build && cd docs/.vuepress/dist\n# 部署到github gh-pages\ngit init\ngit add -A\ngit commit -m 'deploy'\ngit push -f git@github.com:qqlcx5/qqlcx5.github.io.git gh-pages // 修改成自己仓库地址\ncd -\n\n\n通过deploy.sh命令省去操作部分，但是等待项目打包和上传仓库的时间。\n\n如果我把文章写好，提交代码，就可以部署gh-pages岂不美哉。\n\n接下来就是我要开始介绍部分。\n\n\n# GitHub Actions\n\nGitHub Actions 是 GitHub 的持续集成服务，于2018年10月推出。\n\n# 生成个人访问令牌token\n\n跳转到个人访问令牌页面\n\n\n\n填写 Token 描述，勾选 repo、write、read然后点击 Generate token 生成一个 Token\n\n\n\n因为 Token 只会显示一次，所以先保存笔记本上。\n\n\n\n# 设置 仓库的Secrets\n\n在存放博客仓库里，添加个人访问令牌。\n\n\n\n令牌名字取名为：ACCESS_TOKEN，复制个人访问令牌密钥进去，保存。\n\n# 编写workflow流程\n\n在编辑器中打开Vuepress项目，在项目的根目录下创建一个.github/workflows/main.yml文件，内容如下：\n\nname: Deploy GitHub Pages\n\n# 触发条件：在 push 到 master 分支后\non:\n  push:\n    branches:\n      - master\n\n# 任务\njobs:\n  build-and-deploy:\n    # 服务器环境：最新版 Ubuntu\n    runs-on: ubuntu-latest\n    steps:\n      # 拉取代码\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          persist-credentials: false\n\n      # 生成静态文件\n      - name: Build\n        run: npm install && npm run docs:build\n\n      # 部署到 GitHub Pages\n      - name: Deploy\n        uses: JamesIves/github-pages-deploy-action@releases/v3\n        with:\n          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}\n          BRANCH: gh-pages\n          FOLDER: docs/.vuepress/dist\n\n\n这里我写了三步：\n\n 1. 拉取代码。用到了一个 GitHub 官方 action：actions/checkout 。\n 2. 生成静态文件。直接运行脚本，如果你不是用的 VuePress 或者脚本不一样，要修改成你自己的。\n 3. 部署到 GitHub Pages。使用了第三方作者的 action：JamesIves/github-pages-deploy-action@releases/v3。我详细介绍下这个 action：\n\n使用 with 参数向环境中传入了三个环境变量：\n\n 1. ACCESS_TOKEN：读取 GitHub 仓库 secrets 的 ACCESS_TOKEN 变量，也就是我们前面设置的\n 2. BRANCH：部署分支 gh-pages（GitHub Pages 读取的分支）\n 3. FOLDER：需要部署的文件在 docs/.vuepress/dist 路径，也就是我们使用 npm run docs:build 生成的静态文件的位置\n\n> 这里有一点需要注意：我使用的是 v3 版本，需要使用 with 参数传入环境变量，且需要自行构建；网上常见的教程使用的是 v2 版本，使用 env 参数传入环境变量，不需要自行构建，可使用 BUILD_SCRIPT 环境变量传入构建脚本。\n\n至此，配置工作均已完成。提交你的代码，就会开启自动构建。\n\n以后，你每次有代码 push 到 master 分支时，GitHub 都会开始自动构建。\n\n\n# 验证\n\n通过Action可以查看项目的部署流程。\n\n\n\n部署失败，会接收到GitHub发送的邮件，点击图片的标题进入页面查看日志。\n\n\n\n正常来说没什么问题。享受 GitHub Actions 带来的愉快体验吧~\n\n参考链接：\n\n * 使用 GitHub Actions 自动部署博客",normalizedContent:"# 前言\n\n假设你有一个vuepress的项目，分支 master 存放文章，分支gh-pages 存放vuepress生成的静态文件。\n\n正常部署vuepress的流程是：\n\n * 项目打包生成静态文件：npm run build\n * 切换打包dist目录下\n * 上传到 gh-pages分支下\n\n\n# 脚本部署\n\n在项目目录下创建一个 deploy.sh文件，复制下面代码，执行打包及提交静态文件到仓库的gh-pages分支下。\n\n# 打包及切换到dist目录下\nnpm run docs:build && cd docs/.vuepress/dist\n# 部署到github gh-pages\ngit init\ngit add -a\ngit commit -m 'deploy'\ngit push -f git@github.com:qqlcx5/qqlcx5.github.io.git gh-pages // 修改成自己仓库地址\ncd -\n\n\n通过deploy.sh命令省去操作部分，但是等待项目打包和上传仓库的时间。\n\n如果我把文章写好，提交代码，就可以部署gh-pages岂不美哉。\n\n接下来就是我要开始介绍部分。\n\n\n# github actions\n\ngithub actions 是 github 的持续集成服务，于2018年10月推出。\n\n# 生成个人访问令牌token\n\n跳转到个人访问令牌页面\n\n\n\n填写 token 描述，勾选 repo、write、read然后点击 generate token 生成一个 token\n\n\n\n因为 token 只会显示一次，所以先保存笔记本上。\n\n\n\n# 设置 仓库的secrets\n\n在存放博客仓库里，添加个人访问令牌。\n\n\n\n令牌名字取名为：access_token，复制个人访问令牌密钥进去，保存。\n\n# 编写workflow流程\n\n在编辑器中打开vuepress项目，在项目的根目录下创建一个.github/workflows/main.yml文件，内容如下：\n\nname: deploy github pages\n\n# 触发条件：在 push 到 master 分支后\non:\n  push:\n    branches:\n      - master\n\n# 任务\njobs:\n  build-and-deploy:\n    # 服务器环境：最新版 ubuntu\n    runs-on: ubuntu-latest\n    steps:\n      # 拉取代码\n      - name: checkout\n        uses: actions/checkout@v2\n        with:\n          persist-credentials: false\n\n      # 生成静态文件\n      - name: build\n        run: npm install && npm run docs:build\n\n      # 部署到 github pages\n      - name: deploy\n        uses: jamesives/github-pages-deploy-action@releases/v3\n        with:\n          access_token: ${{ secrets.access_token }}\n          branch: gh-pages\n          folder: docs/.vuepress/dist\n\n\n这里我写了三步：\n\n 1. 拉取代码。用到了一个 github 官方 action：actions/checkout 。\n 2. 生成静态文件。直接运行脚本，如果你不是用的 vuepress 或者脚本不一样，要修改成你自己的。\n 3. 部署到 github pages。使用了第三方作者的 action：jamesives/github-pages-deploy-action@releases/v3。我详细介绍下这个 action：\n\n使用 with 参数向环境中传入了三个环境变量：\n\n 1. access_token：读取 github 仓库 secrets 的 access_token 变量，也就是我们前面设置的\n 2. branch：部署分支 gh-pages（github pages 读取的分支）\n 3. folder：需要部署的文件在 docs/.vuepress/dist 路径，也就是我们使用 npm run docs:build 生成的静态文件的位置\n\n> 这里有一点需要注意：我使用的是 v3 版本，需要使用 with 参数传入环境变量，且需要自行构建；网上常见的教程使用的是 v2 版本，使用 env 参数传入环境变量，不需要自行构建，可使用 build_script 环境变量传入构建脚本。\n\n至此，配置工作均已完成。提交你的代码，就会开启自动构建。\n\n以后，你每次有代码 push 到 master 分支时，github 都会开始自动构建。\n\n\n# 验证\n\n通过action可以查看项目的部署流程。\n\n\n\n部署失败，会接收到github发送的邮件，点击图片的标题进入页面查看日志。\n\n\n\n正常来说没什么问题。享受 github actions 带来的愉快体验吧~\n\n参考链接：\n\n * 使用 github actions 自动部署博客",charsets:{cjk:!0},lastUpdated:"2022/05/18, 09:51:09",lastUpdatedTimestamp:1652867469e3},{title:"VuePress 搭建个人博客",frontmatter:{title:"VuePress 搭建个人博客",date:"2018-12-28T00:00:00.000Z",tags:["VuePress"],permalink:"/pages/f5def0/",categories:["Vuepress"],readingShow:"top"},regularPath:"/08.%E5%85%B3%E4%BA%8E/99.Vuepress/06.VuePress%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html",relativePath:"08.关于/99.Vuepress/06.VuePress搭建个人博客.md",key:"v-65c8431a",path:"/pages/f5def0/",headers:[{level:2,title:"项目的亮点",slug:"项目的亮点",normalizedTitle:"项目的亮点",charIndex:2},{level:2,title:"快速上手",slug:"快速上手",normalizedTitle:"快速上手",charIndex:210},{level:3,title:"全局安装",slug:"全局安装",normalizedTitle:"全局安装",charIndex:219},{level:2,title:"目录的结构",slug:"目录的结构",normalizedTitle:"目录的结构",charIndex:798},{level:2,title:"主题基本配置",slug:"主题基本配置",normalizedTitle:"主题基本配置",charIndex:1023},{level:3,title:"配置文件",slug:"配置文件",normalizedTitle:"配置文件",charIndex:936},{level:3,title:"导航栏",slug:"导航栏",normalizedTitle:"导航栏",charIndex:1269},{level:2,title:"侧边栏分组",slug:"侧边栏分组",normalizedTitle:"侧边栏分组",charIndex:1737},{level:3,title:"自动生成侧边栏",slug:"自动生成侧边栏",normalizedTitle:"自动生成侧边栏",charIndex:156},{level:2,title:"部署",slug:"部署",normalizedTitle:"部署",charIndex:188}],headersStr:"项目的亮点 快速上手 全局安装 目录的结构 主题基本配置 配置文件 导航栏 侧边栏分组 自动生成侧边栏 部署",content:"# 项目的亮点\n\nVuepress诞生时候我就入手体验了，也有很多大神写过这方面的文章写的也很不错。起初并不打算想写的，想到或许可以帮助一些人更快更轻松的搭建博客。我搭建的VuePress作为模版，介绍其中一些必要的配置项，更快的了解VuePress，顺便在上面爽爽写文章文档就行。\n\n本项目一些优点\n\n 1. 自动生成侧边栏和分组\n 2. GitHub Actions 自动部署\n 3. 集合一些有趣的插件库\n\n\n# 快速上手\n\n\n# 全局安装\n\n在命令行或者控制台、终端执行以下操作。\n\n# 创建项目目录\nmkdir vuepress && cd vuepress   // 生成一个vuepress文件夹，然后进入该文件夹\n\n# 初始化项目\nnpm init\n\n# 将 VuePress 作为一个本地依赖安装\nyarn add -D vuepress # 或者：npm install -D vuepress\n\n# 新建一个 docs 文件夹\nmkdir docs\n\n# 新建一个 markdown 文件\necho '# Hello VuePress!' > docs/README.md\n\n\n\n接着，在 package.json 里加一些脚本:\n\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"docs:dev\": \"vuepress dev docs\",\n    \"docs:build\": \"vuepress build docs\"\n  },\n\n\n然后就可以运行本项目\n\nyarn docs:dev # 或者：npm run docs:dev\n\n\n打包部署到GitHub服务器上\n\nyarn docs:build # 或者：npm run docs:build\n\n\n\n# 目录的结构\n\nvuepress\n├── docs\n│   ├── .vuepress\n│   │   ├── components (Vue 组件将会被自动注册为全局组件)\n│   │   ├── public (静态资源目录)\n│   │   ├── config.js (配置文件的入口文件)\n│   ├── README.md\n│   ├── guide\n│      └── README.md\n└── package.json\n\n\n\n\n# 主题基本配置\n\n\n# 配置文件\n\n首先在你的文档目录下创建一个 .vuepress 目录，所有 VuePress 相关的文件都将会被放在这里。\n\n一个 VuePress 网站必要的配置文件是 .vuepress/config.js，它应该导出一个 JavaScript 对象：\n\nmodule.exports = {\n  title: 'Hello VuePress', //网站的标题\n  description: 'Just playing around' //网站的描述\n}\n\n\n\n# 导航栏\n\n// .vuepress/config.js\nmodule.exports = {\n  themeConfig: {\n    nav: [\n      { text: '首页', link: '/' },\n      { text: '指南', link: '/guide/' },\n      { text: 'Google', link: 'https://google.com' },\n    ]\n  }\n}\n\n\n当你提供了一个 items 数组而不是一个单一的 link 时，它将显示为一个 下拉列表：\n\nmodule.exports = {\n  themeConfig: {\n    nav: [\n      {\n        text: '语言',\n        items: [\n          { text: '中文', link: '/cn/' },\n          { text: '英语', link: '/en/' }\n        ]\n      }\n    ]\n  }\n}\n\n\n\n# 侧边栏分组\n\n// .vuepress/config.js\nmodule.exports = {\n  themeConfig: {\n    sidebar: [\n      {\n        title: 'Group 1',   // 必要的\n        path: '/foo/',      // 可选的, 标题的跳转链接，应为绝对路径且必须存在\n        collapsable: false, // 可选的, 默认值是 true,\n        sidebarDepth: 1,    // 可选的, 默认值是 1\n        children: [\n          '/'\n        ]\n      },\n      {\n        title: 'Group 2',\n        children: [ /* ... */ ]\n      }\n    ]\n  }\n}\n\n\n> 看到这里，有没有发现一件事，你写的文章可能存在guide目录或者其它目录下，可能几篇文章还好，但是考虑到后续有几百篇的文章，存放在侧边栏上，需要手动去配置路径，后续文章修改文件名和路径的情况下，一不下心操作失误可能博客就废的差不多的。难维护。\n\n接下来就介绍一下，如何把文章存在目录下文章就自动生成侧边栏有没有觉得非常棒！！！\n\n\n# 自动生成侧边栏\n\n在.vuepress 目录下创建一个utils目录，然后创建initPage.js和index.js 文件\n\ninitPage.js文件\n\nconst fs = require('fs');\n// 排除检查的文件\nlet excludes = ['.DS_Store'];\n\nlet filehelper = {\n  getFileName: function(rpath,otherPath) {\n    let filenames = [];\n    let fileTypes = /\\.md$/; //只匹配以md结尾的文件\n    fs.readdirSync(rpath).forEach((file) => {\n      if (excludes.indexOf(file) < 0) {\n        fullpath = rpath + '/' + file;\n        let fileinfo = fs.statSync(fullpath);\n        if (fileinfo.isFile()) {\n          if (fileTypes.test(file) > 0) {\n            if (file === 'README.md') {\n              file = '';\n            } else {\n              file = file.replace('.md', '');\n            }\n            file = otherPath ? otherPath + file : file\n            filenames.push(file);\n          }\n        }\n      }\n    });\n    filenames.sort(); // 排序\n    return filenames;\n  },\n};\nmodule.exports = filehelper;\n\n\n\nindex.js 文件\n\nindex.js 主要是接收参数，将参数转换成对象格式，方便在 config.js 里使用。\n\nconst utils = {\n  genSidebar: function (title, children = [''], collapsable = true, sidebarDepth = 2) {\n    let arr = new Array();\n    arr.push({\n      title,\n      children,\n      collapsable,\n      sidebarDepth\n    })\n    return arr;\n  }\n};\n\nmodule.exports = utils;\n\n\n在.vuepress 目录下创建一个themeConfig.js文件\n\nconst path = require('path');\nconst rootpath = path.dirname(__dirname);\nconst utils = require('./utils/index');\nconst filehelper = require('./utils/initPage.js');\n\nconst themeConfig = {\n  nav: [\n    {\n      text: '面试',\n      link: '/Interview/',\n    },\n    {\n      text: 'JavaScript',\n      link: '/JavaScript/',\n    },\n    {\n      text: 'Vuejs',\n      link: '/vue/',\n    },\n    {\n      text: 'CSS',\n      link: '/css/',\n    },\n    {\n      text: '其它',\n      ariaLabel: 'Menu',\n      items: [\n        { text: 'VuePress', link: '/other/vuepress/' },\n        { text: '开发工具', link: '/other/ide/' }\n      ]\n    },\n    {\n      text: '主页',\n      ariaLabel: 'Menu',\n      items: [\n        { text: '主页一', link: '/404/' },\n        { text: '主页二', link: '/404/Personal' }\n      ]\n    },\n  ],\n  \n  sidebar: {\n    '/JavaScript/': concatJs(),\n  },\n};\n\n// JavaScript\nfunction concatJs() {\n  const arr = utils.genSidebar( 'JStst', filehelper.getFileName(rootpath + '/JavaScript/'), false);\n  arr.push(...utils.genSidebar('Js-Vue',filehelper.getFileName(rootpath + '/JavaScript/vue/', 'vue/'),false));\n  return arr;\n}\n\nmodule.exports = themeConfig;\n\n\n\n通过themeConfig.js 把一些配置项调整放在这里，这样.vuepress/config.js 就可以如下代码这样写。避免文件过于太长而且代码更加优雅一些，今后一些目录调整在themeConfig.js稍作调整就行。\n\nconst themeConfig = require('./themeConfig');\n\nmodule.exports = {\n  title: '廖纯鑫博客',\n  description: '前端、前端教程、小程序、个人博客、廖纯鑫博客',\n  themeConfig\n};\n\n\n参考文献：\n\n 1. vuepress自动生成侧边栏\n 2. VuePress 中文文档\n\n\n# 部署\n\n在项目目录下创建一个 deploy.sh文件，复制以下代码。\n\n# 确保脚本抛出遇到的错误\n# 上传vuepress源码及文章到码云备份\nset -e\ngit add -A\ngit commit -m 'blogCode'\ngit push git@gitee.com:qqlcx5/vuePressCode.git master\n# 打包及切换到打包后文件夹\nnpm run docs:build && cd docs/.vuepress/dist\n\n# 部署到码云\ngit init\ngit add -A\ngit commit -m 'deploy'\ngit push -f git@gitee.com:qqlcx5/qqlcx5.git master\n\n# 部署到github Page\n# 删除 .git目录重新上传，目前只有想的这种方法\nrm -rf .git\ngit init\ngit add -A\ngit commit -m 'deploy'\ngit push -f git@github.com:qqlcx5/qqlcx5.github.io.git master\ncd -\n\n\n仓库地址自行更换。\n\nwindow用户双击deploy.sh 文件便会将上传文章到码云备份，及部署到GitHub Page。\n\n# 在终端且进入vuepress项目中输入：\n\n./deploy.sh\n\n# 如果出现permission denied，就重新设置一下权限再运行，\n\nchmod 777 deploy.sh\n\n./deploy.sh\n",normalizedContent:"# 项目的亮点\n\nvuepress诞生时候我就入手体验了，也有很多大神写过这方面的文章写的也很不错。起初并不打算想写的，想到或许可以帮助一些人更快更轻松的搭建博客。我搭建的vuepress作为模版，介绍其中一些必要的配置项，更快的了解vuepress，顺便在上面爽爽写文章文档就行。\n\n本项目一些优点\n\n 1. 自动生成侧边栏和分组\n 2. github actions 自动部署\n 3. 集合一些有趣的插件库\n\n\n# 快速上手\n\n\n# 全局安装\n\n在命令行或者控制台、终端执行以下操作。\n\n# 创建项目目录\nmkdir vuepress && cd vuepress   // 生成一个vuepress文件夹，然后进入该文件夹\n\n# 初始化项目\nnpm init\n\n# 将 vuepress 作为一个本地依赖安装\nyarn add -d vuepress # 或者：npm install -d vuepress\n\n# 新建一个 docs 文件夹\nmkdir docs\n\n# 新建一个 markdown 文件\necho '# hello vuepress!' > docs/readme.md\n\n\n\n接着，在 package.json 里加一些脚本:\n\n  \"scripts\": {\n    \"test\": \"echo \\\"error: no test specified\\\" && exit 1\",\n    \"docs:dev\": \"vuepress dev docs\",\n    \"docs:build\": \"vuepress build docs\"\n  },\n\n\n然后就可以运行本项目\n\nyarn docs:dev # 或者：npm run docs:dev\n\n\n打包部署到github服务器上\n\nyarn docs:build # 或者：npm run docs:build\n\n\n\n# 目录的结构\n\nvuepress\n├── docs\n│   ├── .vuepress\n│   │   ├── components (vue 组件将会被自动注册为全局组件)\n│   │   ├── public (静态资源目录)\n│   │   ├── config.js (配置文件的入口文件)\n│   ├── readme.md\n│   ├── guide\n│      └── readme.md\n└── package.json\n\n\n\n\n# 主题基本配置\n\n\n# 配置文件\n\n首先在你的文档目录下创建一个 .vuepress 目录，所有 vuepress 相关的文件都将会被放在这里。\n\n一个 vuepress 网站必要的配置文件是 .vuepress/config.js，它应该导出一个 javascript 对象：\n\nmodule.exports = {\n  title: 'hello vuepress', //网站的标题\n  description: 'just playing around' //网站的描述\n}\n\n\n\n# 导航栏\n\n// .vuepress/config.js\nmodule.exports = {\n  themeconfig: {\n    nav: [\n      { text: '首页', link: '/' },\n      { text: '指南', link: '/guide/' },\n      { text: 'google', link: 'https://google.com' },\n    ]\n  }\n}\n\n\n当你提供了一个 items 数组而不是一个单一的 link 时，它将显示为一个 下拉列表：\n\nmodule.exports = {\n  themeconfig: {\n    nav: [\n      {\n        text: '语言',\n        items: [\n          { text: '中文', link: '/cn/' },\n          { text: '英语', link: '/en/' }\n        ]\n      }\n    ]\n  }\n}\n\n\n\n# 侧边栏分组\n\n// .vuepress/config.js\nmodule.exports = {\n  themeconfig: {\n    sidebar: [\n      {\n        title: 'group 1',   // 必要的\n        path: '/foo/',      // 可选的, 标题的跳转链接，应为绝对路径且必须存在\n        collapsable: false, // 可选的, 默认值是 true,\n        sidebardepth: 1,    // 可选的, 默认值是 1\n        children: [\n          '/'\n        ]\n      },\n      {\n        title: 'group 2',\n        children: [ /* ... */ ]\n      }\n    ]\n  }\n}\n\n\n> 看到这里，有没有发现一件事，你写的文章可能存在guide目录或者其它目录下，可能几篇文章还好，但是考虑到后续有几百篇的文章，存放在侧边栏上，需要手动去配置路径，后续文章修改文件名和路径的情况下，一不下心操作失误可能博客就废的差不多的。难维护。\n\n接下来就介绍一下，如何把文章存在目录下文章就自动生成侧边栏有没有觉得非常棒！！！\n\n\n# 自动生成侧边栏\n\n在.vuepress 目录下创建一个utils目录，然后创建initpage.js和index.js 文件\n\ninitpage.js文件\n\nconst fs = require('fs');\n// 排除检查的文件\nlet excludes = ['.ds_store'];\n\nlet filehelper = {\n  getfilename: function(rpath,otherpath) {\n    let filenames = [];\n    let filetypes = /\\.md$/; //只匹配以md结尾的文件\n    fs.readdirsync(rpath).foreach((file) => {\n      if (excludes.indexof(file) < 0) {\n        fullpath = rpath + '/' + file;\n        let fileinfo = fs.statsync(fullpath);\n        if (fileinfo.isfile()) {\n          if (filetypes.test(file) > 0) {\n            if (file === 'readme.md') {\n              file = '';\n            } else {\n              file = file.replace('.md', '');\n            }\n            file = otherpath ? otherpath + file : file\n            filenames.push(file);\n          }\n        }\n      }\n    });\n    filenames.sort(); // 排序\n    return filenames;\n  },\n};\nmodule.exports = filehelper;\n\n\n\nindex.js 文件\n\nindex.js 主要是接收参数，将参数转换成对象格式，方便在 config.js 里使用。\n\nconst utils = {\n  gensidebar: function (title, children = [''], collapsable = true, sidebardepth = 2) {\n    let arr = new array();\n    arr.push({\n      title,\n      children,\n      collapsable,\n      sidebardepth\n    })\n    return arr;\n  }\n};\n\nmodule.exports = utils;\n\n\n在.vuepress 目录下创建一个themeconfig.js文件\n\nconst path = require('path');\nconst rootpath = path.dirname(__dirname);\nconst utils = require('./utils/index');\nconst filehelper = require('./utils/initpage.js');\n\nconst themeconfig = {\n  nav: [\n    {\n      text: '面试',\n      link: '/interview/',\n    },\n    {\n      text: 'javascript',\n      link: '/javascript/',\n    },\n    {\n      text: 'vuejs',\n      link: '/vue/',\n    },\n    {\n      text: 'css',\n      link: '/css/',\n    },\n    {\n      text: '其它',\n      arialabel: 'menu',\n      items: [\n        { text: 'vuepress', link: '/other/vuepress/' },\n        { text: '开发工具', link: '/other/ide/' }\n      ]\n    },\n    {\n      text: '主页',\n      arialabel: 'menu',\n      items: [\n        { text: '主页一', link: '/404/' },\n        { text: '主页二', link: '/404/personal' }\n      ]\n    },\n  ],\n  \n  sidebar: {\n    '/javascript/': concatjs(),\n  },\n};\n\n// javascript\nfunction concatjs() {\n  const arr = utils.gensidebar( 'jstst', filehelper.getfilename(rootpath + '/javascript/'), false);\n  arr.push(...utils.gensidebar('js-vue',filehelper.getfilename(rootpath + '/javascript/vue/', 'vue/'),false));\n  return arr;\n}\n\nmodule.exports = themeconfig;\n\n\n\n通过themeconfig.js 把一些配置项调整放在这里，这样.vuepress/config.js 就可以如下代码这样写。避免文件过于太长而且代码更加优雅一些，今后一些目录调整在themeconfig.js稍作调整就行。\n\nconst themeconfig = require('./themeconfig');\n\nmodule.exports = {\n  title: '廖纯鑫博客',\n  description: '前端、前端教程、小程序、个人博客、廖纯鑫博客',\n  themeconfig\n};\n\n\n参考文献：\n\n 1. vuepress自动生成侧边栏\n 2. vuepress 中文文档\n\n\n# 部署\n\n在项目目录下创建一个 deploy.sh文件，复制以下代码。\n\n# 确保脚本抛出遇到的错误\n# 上传vuepress源码及文章到码云备份\nset -e\ngit add -a\ngit commit -m 'blogcode'\ngit push git@gitee.com:qqlcx5/vuepresscode.git master\n# 打包及切换到打包后文件夹\nnpm run docs:build && cd docs/.vuepress/dist\n\n# 部署到码云\ngit init\ngit add -a\ngit commit -m 'deploy'\ngit push -f git@gitee.com:qqlcx5/qqlcx5.git master\n\n# 部署到github page\n# 删除 .git目录重新上传，目前只有想的这种方法\nrm -rf .git\ngit init\ngit add -a\ngit commit -m 'deploy'\ngit push -f git@github.com:qqlcx5/qqlcx5.github.io.git master\ncd -\n\n\n仓库地址自行更换。\n\nwindow用户双击deploy.sh 文件便会将上传文章到码云备份，及部署到github page。\n\n# 在终端且进入vuepress项目中输入：\n\n./deploy.sh\n\n# 如果出现permission denied，就重新设置一下权限再运行，\n\nchmod 777 deploy.sh\n\n./deploy.sh\n",charsets:{cjk:!0},lastUpdated:"2022/05/18, 09:51:09",lastUpdatedTimestamp:1652867469e3},{title:"关于 - 赞赏❤️的用途",frontmatter:{title:"关于 - 赞赏❤️的用途",date:"2022-05-10T21:46:33.000Z",permalink:"/about/appreciate/",categories:[null],tags:[null],readingShow:"top"},regularPath:"/08.%E5%85%B3%E4%BA%8E/02.%E5%85%B3%E4%BA%8E-%E8%B5%9E%E8%B5%8F%E7%9A%84%E7%94%A8%E9%80%94.html",relativePath:"08.关于/02.关于-赞赏的用途.md",key:"v-a2ef8514",path:"/about/appreciate/",headers:[{level:2,title:"感谢赞赏",slug:"感谢赞赏",normalizedTitle:"感谢赞赏",charIndex:2}],headersStr:"感谢赞赏",content:"# 感谢赞赏\n\n> 感谢各位读者的支持，能感受到每个留言和每一笔赞赏背后的热情❤️，这是我莫大的功力。后续每一笔超过20元的赞赏和留言都会持续记录...\n\n暂无。\n\n赞赏者   金额   留言\n           ",normalizedContent:"# 感谢赞赏\n\n> 感谢各位读者的支持，能感受到每个留言和每一笔赞赏背后的热情❤️，这是我莫大的功力。后续每一笔超过20元的赞赏和留言都会持续记录...\n\n暂无。\n\n赞赏者   金额   留言\n           ",charsets:{cjk:!0},lastUpdated:"2022/05/20, 09:51:16",lastUpdatedTimestamp:1653040276e3},{title:"Vuepress插件推荐",frontmatter:{title:"Vuepress插件推荐",date:"2022-02-28T00:43:09.000Z",permalink:"/pages/30933c/",categories:["Vuepress"],tags:[null],readingShow:"top"},regularPath:"/08.%E5%85%B3%E4%BA%8E/99.Vuepress/08.Vuepress%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90.html",relativePath:"08.关于/99.Vuepress/08.Vuepress插件推荐.md",key:"v-64aacaa9",path:"/pages/30933c/",headers:[{level:2,title:"vuepress插件",slug:"vuepress插件",normalizedTitle:"vuepress插件",charIndex:2},{level:3,title:"vuepress-plugin-tabs",slug:"vuepress-plugin-tabs",normalizedTitle:"vuepress-plugin-tabs",charIndex:80},{level:3,title:"vuepress-plugin-demo-block",slug:"vuepress-plugin-demo-block",normalizedTitle:"vuepress-plugin-demo-block",charIndex:420},{level:3,title:"vuepress-plugin-reading-progress",slug:"vuepress-plugin-reading-progress",normalizedTitle:"vuepress-plugin-reading-progress",charIndex:589},{level:3,title:"vuepress-plugin-meting",slug:"vuepress-plugin-meting",normalizedTitle:"vuepress-plugin-meting",charIndex:702},{level:3,title:"vuepress-plugin-cursor-effects",slug:"vuepress-plugin-cursor-effects",normalizedTitle:"vuepress-plugin-cursor-effects",charIndex:809},{level:3,title:"vuepress-plugin-dynamic-title",slug:"vuepress-plugin-dynamic-title",normalizedTitle:"vuepress-plugin-dynamic-title",charIndex:932},{level:3,title:"vuepress-plugin-fulltext-search",slug:"vuepress-plugin-fulltext-search",normalizedTitle:"vuepress-plugin-fulltext-search",charIndex:1062}],headersStr:"vuepress插件 vuepress-plugin-tabs vuepress-plugin-demo-block vuepress-plugin-reading-progress vuepress-plugin-meting vuepress-plugin-cursor-effects vuepress-plugin-dynamic-title vuepress-plugin-fulltext-search",content:'# vuepress插件\n\nVuepress 的社区所有插件：https://github.com/vuepress/awesome-vuepress\n\n\n# vuepress-plugin-tabs\n\n实现切换 tab。\n\n官网：https://github.com/pskordilakis/vuepress-plugin-tabs\n\n安装：https://notes.youngkbt.cn/about/mdskill/#tabs插件\n\n效果：\n\n:::: tabs cache-lifetime="5" :options="{ useUrlFragment: false }"\n\n::: tab title\n\nmarkdown content\n\n:::\n\n::: tab javascript\n\n() => {\n\n console.log(\'Javascript code example\')\n\n}\n\n\n:::\n\n::::\n\n\n# vuepress-plugin-demo-block\n\n官网：https://github.com/xiguaxigua/vuepress-plugin-demo-block/\n\n功能：既能看代码，也能看代码运行的效果。\n\nDemo：https://notes.youngkbt.cn/about/mdskill/#demo插件\n\n\n# vuepress-plugin-reading-progress\n\n顶部的阅读进度插件。\n\n官网：https://github.com/tolking/vuepress-plugin-reading-progress\n\n\n# vuepress-plugin-meting\n\n左小角的音乐播放器插件。\n\n官网：https://moefyit.github.io/moefy-vuepress/packages/meting.html\n\n\n# vuepress-plugin-cursor-effects\n\n鼠标点击页面的爆炸效果。\n\n官网：https://moefyit.github.io/moefy-vuepress/packages/cursor-effects.html\n\n\n# vuepress-plugin-dynamic-title\n\n动态标题，离开和回来网页后的标题发生变化。\n\n官网：https://moefyit.github.io/moefy-vuepress/packages/dynamic-title.html\n\n\n# vuepress-plugin-fulltext-search\n\n网站搜索插件，能搜索到文章的具体内容。\n\n官网：https://github.com/leo-buneev/vuepress-plugin-fulltext-search',normalizedContent:'# vuepress插件\n\nvuepress 的社区所有插件：https://github.com/vuepress/awesome-vuepress\n\n\n# vuepress-plugin-tabs\n\n实现切换 tab。\n\n官网：https://github.com/pskordilakis/vuepress-plugin-tabs\n\n安装：https://notes.youngkbt.cn/about/mdskill/#tabs插件\n\n效果：\n\n:::: tabs cache-lifetime="5" :options="{ useurlfragment: false }"\n\n::: tab title\n\nmarkdown content\n\n:::\n\n::: tab javascript\n\n() => {\n\n console.log(\'javascript code example\')\n\n}\n\n\n:::\n\n::::\n\n\n# vuepress-plugin-demo-block\n\n官网：https://github.com/xiguaxigua/vuepress-plugin-demo-block/\n\n功能：既能看代码，也能看代码运行的效果。\n\ndemo：https://notes.youngkbt.cn/about/mdskill/#demo插件\n\n\n# vuepress-plugin-reading-progress\n\n顶部的阅读进度插件。\n\n官网：https://github.com/tolking/vuepress-plugin-reading-progress\n\n\n# vuepress-plugin-meting\n\n左小角的音乐播放器插件。\n\n官网：https://moefyit.github.io/moefy-vuepress/packages/meting.html\n\n\n# vuepress-plugin-cursor-effects\n\n鼠标点击页面的爆炸效果。\n\n官网：https://moefyit.github.io/moefy-vuepress/packages/cursor-effects.html\n\n\n# vuepress-plugin-dynamic-title\n\n动态标题，离开和回来网页后的标题发生变化。\n\n官网：https://moefyit.github.io/moefy-vuepress/packages/dynamic-title.html\n\n\n# vuepress-plugin-fulltext-search\n\n网站搜索插件，能搜索到文章的具体内容。\n\n官网：https://github.com/leo-buneev/vuepress-plugin-fulltext-search',charsets:{cjk:!0},lastUpdated:"2022/05/18, 09:51:09",lastUpdatedTimestamp:1652867469e3},{title:"2022最新免费影视网站推荐",frontmatter:{title:"2022最新免费影视网站推荐",date:"2022-01-08T19:49:49.000Z",permalink:"/pages/88bc78/",categories:["影视"],tags:[null],sticky:3,readingShow:"top"},regularPath:"/09.%E5%A8%B1%E4%B9%90/02.%E5%BD%B1%E8%A7%86/01.2022%E6%9C%80%E6%96%B0%E5%85%8D%E8%B4%B9%E5%BD%B1%E8%A7%86%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90.html",relativePath:"09.娱乐/02.影视/01.2022最新免费影视网站推荐.md",key:"v-d4fad862",path:"/pages/88bc78/",headers:[{level:3,title:"影视网站",slug:"影视网站",normalizedTitle:"影视网站",charIndex:7},{level:2,title:"电影推荐",slug:"电影推荐",normalizedTitle:"电影推荐",charIndex:46},{level:2,title:"APP 观看",slug:"app-观看",normalizedTitle:"app 观看",charIndex:64},{level:2,title:"BT 下载",slug:"bt-下载",normalizedTitle:"bt 下载",charIndex:104},{level:2,title:"失效网站",slug:"失效网站",normalizedTitle:"失效网站",charIndex:146}],headersStr:"影视网站 电影推荐 APP 观看 BT 下载 失效网站",content:"收集一些免费的影视网站，如果你有更好的网站推荐，可以在评论留言。\n\n\n# 影视网站\n\n\n# 电影推荐\n\n * 豆瓣电影\n\n\n# APP 观看\n\n * https://www.wanmeikk.me/\n\n\n# BT 下载\n\n * 比特大雄 https://www.btdx8.com/\n\n\n# 失效网站\n\n * http://www.haitum.com/\n * https://www.nfmovies.com/\n * https://www.zhenbuka.com/\n * https://nfstar.net\n * https://kanju.me/\n * https://www.k1080.net/\n * https://www.subaibai.com/\n * https://www.nicemov.com/\n * https://www.hktvyb.com/\n * https://www.yunbtv.com/\n * 蛋蛋赞影院 https://www.dandanzan.com/\n * 片库 2 https://www.piaku.cc/\n * 阿房影视 https://bwl87.com/",normalizedContent:"收集一些免费的影视网站，如果你有更好的网站推荐，可以在评论留言。\n\n\n# 影视网站\n\n\n# 电影推荐\n\n * 豆瓣电影\n\n\n# app 观看\n\n * https://www.wanmeikk.me/\n\n\n# bt 下载\n\n * 比特大雄 https://www.btdx8.com/\n\n\n# 失效网站\n\n * http://www.haitum.com/\n * https://www.nfmovies.com/\n * https://www.zhenbuka.com/\n * https://nfstar.net\n * https://kanju.me/\n * https://www.k1080.net/\n * https://www.subaibai.com/\n * https://www.nicemov.com/\n * https://www.hktvyb.com/\n * https://www.yunbtv.com/\n * 蛋蛋赞影院 https://www.dandanzan.com/\n * 片库 2 https://www.piaku.cc/\n * 阿房影视 https://bwl87.com/",charsets:{cjk:!0},lastUpdated:"2022/06/17, 02:41:44",lastUpdatedTimestamp:1655433704e3},{title:"漫画app合集【解锁付费 去广告】",frontmatter:{title:"漫画app合集【解锁付费 去广告】",date:"2022-01-08T19:56:36.000Z",permalink:"/pages/add5e2/",categories:[null],tags:[null],readingShow:"top"},regularPath:"/09.%E5%A8%B1%E4%B9%90/03.%E6%BC%AB%E7%94%BB/01.%E6%BC%AB%E7%94%BBapp%E5%90%88%E9%9B%86.html",relativePath:"09.娱乐/03.漫画/01.漫画app合集.md",key:"v-187bc2f1",path:"/pages/add5e2/",headers:[{level:3,title:"网盘下载",slug:"网盘下载",normalizedTitle:"网盘下载",charIndex:1226},{level:3,title:"备用地址",slug:"备用地址",normalizedTitle:"备用地址",charIndex:1282}],headersStr:"网盘下载 备用地址",content:"———— 以下 App 来自网络，App的相关简介请自行百度 ————\n\n * 异次元 v2.3.1\n * 古风漫画 v3.5.6\n * 爱优漫 v3.0.0【解锁付费漫画、漫画软件】\n * 动漫社 v1.0.8 去广告版\n * 好多动漫 v5.1.1 会员版（兼容华为、去更新）\n * 多彩动漫 v5.0.8\n * 嘀嘀动漫 v1.3.8 破解版（去更新）\n * 风车动漫 v9.191 去广告版\n * 黑马动漫 v4.4.7\n * 樱花动漫 v.5.1.9 追番利器 去广告版\n * 天使动漫 v1.6.0 去广告版（5月最新）【Bh-Vip】\n * 新世界动漫 v3.6.0 耗子修改★去广告版(精简优化去更新)\n * 火星漫画 v1.0.54 小说动漫影视 多源 去广告版 [粥粥]\n * 樱花动漫 v1.5.2.8\n * 风车动漫 v2.0.20200701\n * mimei漫画 v1.1.31 漫画动漫 VIP解锁版\n * 动漫之家社区 v2.6.1\n * 动漫之家 v3.6.3\n * 荔枝动漫 v1.0.2\n * 好多动漫 v5.0.5 会员版（支持华为）\n * 拷贝漫画 v1.2.0\n * 看漫画 v3.7.5\n * 全是漫画 v1.1.2 去广告版\n * 亲亲漫画 v1.0.41\n * 知音漫客 v6.2.6\n * 海绵漫画 v1.17.6\n * 36漫画 v9.0.198 纯净版\n * Cimoc 漫画聚合源 v1.7.25\n * 奇奇动画 v3.7\n * 绵羊漫画 v1.45\n * 次元站 v1.2.0.6 去广告版\n * 元气漫画 v2.3.0 会员破解版【阿巴】\n * 漫客栈 v9.2.4.0 会员版\n * 漫画世界 Manga World v4.5.7\n * 谜漫画 v1.1.31-373_久\n * 爱漫画 v2.4.1 解锁会员 [bhvip]\n * 哔咔漫画 v2.2.1.3.3.4\n * 布卡漫画 v2.4.1.6\n * 春草漫画 v1.0.5 耗子修改大破解版（免登录、精简去更新）\n * 酷比追番_v1.6_vip\n * 漫畫迷 v8.1.8 Mod\n * 漫画岛 v4.9.12\n * 漫画台 v3.1.0 会员版（免付费、精简去广告）\n * 漫漫漫画 v5.2.22 去广告版（看正版漫画）\n * 扑飞漫画 v3.3.8 去广告版【押尾猫】\n * 赏金漫画 v1.4\n * 酷漫屋 v1.4.1 无广告版\n * 神漫画 v2.8.4 纯净版 汇聚全网漫画资源\n * 神漫画 v9.9.9 (基于2.6.6) 去广告 解锁漫画\n * 异次元 v2.1.9 免会员版★宇宙最强免费看漫画\n * 追追漫画 v2.6.4 VIP版 押尾猫修改\n * 追追漫画 v2.6.6\n * 哔哩哔哩漫画 v3.3.0 去广告版 –久情修改\n * 喵喵番 v3.0\n * 飒漫画 v3.3.5 VIP版\n\n\n# 网盘下载\n\n * https://wwx.lanzoui.com/b04b0nxna 提取码：4uv4\n\n\n# 备用地址\n\n * https://qqlcx5.lanzouy.com/b0ca1422h 提取码：d36f",normalizedContent:"———— 以下 app 来自网络，app的相关简介请自行百度 ————\n\n * 异次元 v2.3.1\n * 古风漫画 v3.5.6\n * 爱优漫 v3.0.0【解锁付费漫画、漫画软件】\n * 动漫社 v1.0.8 去广告版\n * 好多动漫 v5.1.1 会员版（兼容华为、去更新）\n * 多彩动漫 v5.0.8\n * 嘀嘀动漫 v1.3.8 破解版（去更新）\n * 风车动漫 v9.191 去广告版\n * 黑马动漫 v4.4.7\n * 樱花动漫 v.5.1.9 追番利器 去广告版\n * 天使动漫 v1.6.0 去广告版（5月最新）【bh-vip】\n * 新世界动漫 v3.6.0 耗子修改★去广告版(精简优化去更新)\n * 火星漫画 v1.0.54 小说动漫影视 多源 去广告版 [粥粥]\n * 樱花动漫 v1.5.2.8\n * 风车动漫 v2.0.20200701\n * mimei漫画 v1.1.31 漫画动漫 vip解锁版\n * 动漫之家社区 v2.6.1\n * 动漫之家 v3.6.3\n * 荔枝动漫 v1.0.2\n * 好多动漫 v5.0.5 会员版（支持华为）\n * 拷贝漫画 v1.2.0\n * 看漫画 v3.7.5\n * 全是漫画 v1.1.2 去广告版\n * 亲亲漫画 v1.0.41\n * 知音漫客 v6.2.6\n * 海绵漫画 v1.17.6\n * 36漫画 v9.0.198 纯净版\n * cimoc 漫画聚合源 v1.7.25\n * 奇奇动画 v3.7\n * 绵羊漫画 v1.45\n * 次元站 v1.2.0.6 去广告版\n * 元气漫画 v2.3.0 会员破解版【阿巴】\n * 漫客栈 v9.2.4.0 会员版\n * 漫画世界 manga world v4.5.7\n * 谜漫画 v1.1.31-373_久\n * 爱漫画 v2.4.1 解锁会员 [bhvip]\n * 哔咔漫画 v2.2.1.3.3.4\n * 布卡漫画 v2.4.1.6\n * 春草漫画 v1.0.5 耗子修改大破解版（免登录、精简去更新）\n * 酷比追番_v1.6_vip\n * 漫畫迷 v8.1.8 mod\n * 漫画岛 v4.9.12\n * 漫画台 v3.1.0 会员版（免付费、精简去广告）\n * 漫漫漫画 v5.2.22 去广告版（看正版漫画）\n * 扑飞漫画 v3.3.8 去广告版【押尾猫】\n * 赏金漫画 v1.4\n * 酷漫屋 v1.4.1 无广告版\n * 神漫画 v2.8.4 纯净版 汇聚全网漫画资源\n * 神漫画 v9.9.9 (基于2.6.6) 去广告 解锁漫画\n * 异次元 v2.1.9 免会员版★宇宙最强免费看漫画\n * 追追漫画 v2.6.4 vip版 押尾猫修改\n * 追追漫画 v2.6.6\n * 哔哩哔哩漫画 v3.3.0 去广告版 –久情修改\n * 喵喵番 v3.0\n * 飒漫画 v3.3.5 vip版\n\n\n# 网盘下载\n\n * https://wwx.lanzoui.com/b04b0nxna 提取码：4uv4\n\n\n# 备用地址\n\n * https://qqlcx5.lanzouy.com/b0ca1422h 提取码：d36f",charsets:{cjk:!0},lastUpdated:"2022/05/18, 09:51:09",lastUpdatedTimestamp:1652867469e3},{title:"在线音乐下载",frontmatter:{title:"在线音乐下载",date:"2022-01-09T17:55:07.000Z",permalink:"/pages/ca521c/",categories:["音乐"],tags:[null],readingShow:"top"},regularPath:"/09.%E5%A8%B1%E4%B9%90/04.%E9%9F%B3%E4%B9%90/01.%E5%9C%A8%E7%BA%BF%E9%9F%B3%E4%B9%90%E4%B8%8B%E8%BD%BD.html",relativePath:"09.娱乐/04.音乐/01.在线音乐下载.md",key:"v-388052e8",path:"/pages/ca521c/",headersStr:null,content:"# 在线音乐下载\n\n测试\n旋转动画1\n旋转动画2\n\n\n\n\n\n\n\n\n\n弹性动画\n曲线弹性",normalizedContent:"# 在线音乐下载\n\n测试\n旋转动画1\n旋转动画2\n\n\n\n\n\n\n\n\n\n弹性动画\n曲线弹性",charsets:{cjk:!0},lastUpdated:"2022/05/18, 09:51:09",lastUpdatedTimestamp:1652867469e3},{title:"归档",frontmatter:{archivesPage:!0,title:"归档",permalink:"/archives/",article:!1,readingShow:"top"},regularPath:"/@pages/archivesPage.html",relativePath:"@pages/archivesPage.md",key:"v-53104ef6",path:"/archives/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2021/12/28, 08:41:24",lastUpdatedTimestamp:1640680884e3},{title:"分类",frontmatter:{categoriesPage:!0,title:"分类",permalink:"/categories/",article:!1,readingShow:"top"},regularPath:"/@pages/categoriesPage.html",relativePath:"@pages/categoriesPage.md",key:"v-1a9d53e5",path:"/categories/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2021/12/28, 08:41:24",lastUpdatedTimestamp:1640680884e3},{title:"Vuepress 手写自动生成侧边栏函数",frontmatter:{title:"Vuepress 手写自动生成侧边栏函数",date:"2018-12-28T00:00:00.000Z",permalink:"/pages/3c34a0/",categories:["VuePress"],tags:["VuePress"],readingShow:"top"},regularPath:"/08.%E5%85%B3%E4%BA%8E/99.Vuepress/04.Vuepress%E6%89%8B%E5%86%99%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%87%BD%E6%95%B0.html",relativePath:"08.关于/99.Vuepress/04.Vuepress手写自动生成侧边栏函数.md",key:"v-9b21b728",path:"/pages/3c34a0/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:27},{level:3,title:"Usage",slug:"usage",normalizedTitle:"usage",charIndex:134},{level:3,title:"深入了解",slug:"深入了解",normalizedTitle:"深入了解",charIndex:860}],headersStr:"前言 Usage 深入了解",content:"# Vuepress 手写自动生成侧边栏函数\n\n\n# 前言\n\n手动配置侧边栏过于繁琐，文件名和目录调整，有需要重新修改文件路径，实在麻烦的很，所以我写了一个自动生成侧边栏的函数，可以自动生成侧边栏，不需要手动配置，只需要指向要生成目录就可以自动生成侧边栏了。\n\n\n# Usage\n\n通常文章的目录分为两种，单目录结构，和多目录结构。 下面简单阐述的，如何使用工具函数，生成目录。\n\n感兴趣同学，又不想手动配置文件繁琐，可以运行配置好的项目，运行或者用来调试学习。点击跳转GitHub仓库，不懂地方可以微信问我\n\n单目录结构，如图所示\n\n\n\n配置sidebar 在config.js 中配置sidebar项目\n\n效果\n\ntips\n\n * 文件名切记注意大小写，别问为啥，被坑过\n * 工具函数和文章路径记得对应上，不然会报错\n\n如果一直报错或者查看生成数据目录，可以开启调试模式，在package.josn运行命令后缀添加--debug\n\n在console.log(vue)，可以在终端中查看打印的数据，如图所示\n\n多目录\n\n\n\n配置sidebar\n\n效果如图\n\n\n\n文章排序 我是有追求的人，造出来数据目录要按照我想要的顺序来排序，不然生成目录瞎放影响我博客的美观，强迫症患者，耶安排。\n\n在目录前缀添加序号不就得了，我开始也是这么想的，当我写的文章超过十篇以上，发现怎么10.CSS.md排在01.CSS.md的后面，不应该在最后面吗？查看数据发现，读取的文件不是按照目录顺序排序的，竟然发现这个问题就解决这个问题。\n\n给数据进行sort排序一下，好了顺序终于对了，巴适得很。\n\n可以按照这样的命名来定义文件规范，后面调整比较灵活点。\n\n * 文件夹可以取10，20，30顺序开头，假如后面如果想在10~20之间插入新的目录，这样只要写11，12就行，\n * 文件可以按照这样来命名，如果考虑到后面文件有100多篇，可以采用100，200，300开头，这样可以在中间插入更多文件而又不用重新编辑后面的文件名。\n\n\n# 深入了解\n\n首先我们了解我们要什么样的数据结构。\n\n目录\n\n我们要得到下面这样的数据。\n\n  sidebar: {\n    '/frontend/': [\n      '', // README可以不用写文件名\n      {\n        title: 'HTML',\n        collapsable: false,\n        children: [\n          ['HTML/HTML快速入门', 'HTML快速入门'],\n          ['HTML/HTML基础知识', 'HTML基础知识'],\n        ],\n      },\n      {\n        title: 'CSS',\n        collapsable: false,\n        children: [\n          ['CSS/01.CSS基础', 'CSS基础'],\n          ['CSS/02.CSS美化', 'CSS美化'],\n        ],\n      },\n    ],\n  },\n\n\n那么我们当然的通过node中fs.readdirSyncAPI来读取文件，得到一个数组，数组中的数据如图下\n\n这样的数据肯定不能直接使用，那么我们可以将每个字符串分割成数组，得到[\"Vue Popover组件开发\",\"md\"] 由于考虑到文件可能有序列号，不想在目录中展示那么我们通过[文件路径， 文件名]格式来重置，又考虑到README文件比较特殊，不能写成['README', 'README']形式，所以遇到README时，写成''推到数组第一项为主，最终的数据\n\n[\n  {\n    title: 'Vue.js',\n    collapsable: false,\n    children: [\n      '',      \n      [Array], [Array]\n      [Array], [Array],\n      [Array], [Array],\n      [Array], [Array],\n      [Array], [Array],\n      [Array] \n    ]\n  }\n]\n\n\n如果我们想通过一个父文件夹来包含多个子文件夹的话，显然上面的方法不适用这种情况，我们要得到数据应该一个文件夹一个归类，如下面这种数据\n\n[\n  {\n    title: 'Vue.js',\n    collapsable: false,\n    children: [\n      '',      \n      [Array], [Array]\n      [Array], [Array],\n      [Array], [Array],\n      [Array], [Array],\n      [Array], [Array],\n      [Array] \n    ]\n  },\n  {\n    title: 'Vue3.js',\n    collapsable: false,\n    children: [\n      '',      \n      [Array], [Array]\n      [Array], [Array],\n      [Array], [Array],\n      [Array], [Array],\n      [Array], [Array],\n      [Array] \n    ]\n  }\n]\n\n\n所以当我们通过stat.isDirectory()方法来读取的文件是文件夹情况，那我们就定义一个对象，里面children属性是一个空数组，然后通过递归的方法重新调用该方法将读取到文件push到children数组里面。哈哈大功告成。\n\nconst fs = require('fs') // 文件模块\nconst path = require('path') // 路径模块\nconst docsRoot = path.join(__dirname, '..', '..', '..') // docs文件路径\nconst chalk = require('chalk') // 命令行打印美化\nconst log = console.log\n\nfunction ReadFile(dir = docsRoot, filesList = [], fpath = '') {\n  let files = fs.readdirSync(dir)\n  // 10 1排序错误\n  if(Array.isArray(files)){\n    files.sort((item1, item2) => {\n      let c1 = item1.split('.')[0]\n      let c2 = item2.split('.')[0]\n      return c1 - c2\n    })\n  }\n  console.log('------');\n  console.log(files);\n  files.forEach((item, index) => {\n    let filePath = path.join(dir, item)\n    const stat = fs.statSync(filePath)\n    // log('isDirectory-------------------', stat.isDirectory(), item)\n    // isDirectory 返回是否文件夹, 4.file.md dir:/Users/xx/reg-rules-js-site/docs/regular\n    const fileNameArr = path.basename(filePath).split('.')\n    if (stat.isDirectory() && item !== '.vuepress') {\n      // 生成目录名\n      let title = fileNameArr.length > 1 ? fileNameArr[1] : fileNameArr[0]\n      if(!title){\n        log(chalk.yellow(`warning: 该文件夹 \"${filePath}\" 没有按照约定命名，将忽略生成相应数据。`))\n        return\n      }\n      filesList.push({\n        title,\n        collapsable: false,\n        children: [],\n      })\n      // log('递归读取文件夹的文件', path.join(dir, item), filesList[index].children, item)\n      // 递归读取文件夹的文件 /Users/another/Documents/self-study/reg-rules-js-site/docs/test/test2 [] test2\n      ReadFile(path.join(dir, item), filesList[index].children, item)\n    } else {\n      // 生成文件名数组\n      let name = null\n      title = null\n      typeFile = null\n      pathName = null\n      let cloneArr = [...fileNameArr]\n      typeFile = cloneArr[cloneArr.length - 1]\n      if (fileNameArr.length > 1) {\n        cloneArr.pop()\n        name = cloneArr.join('.')\n        pathName = fpath ? `${fpath}/${name}` : name\n        title = cloneArr.length > 1 ? cloneArr[1] : cloneArr[0]\n      } else {\n        log(chalk.yellow(`warning: 该文件 \"${filePath}\" 没有按照约定命名，将忽略生成相应数据。`))\n        return\n      }\n\n      log('name', name, pathName, typeFile, title)\n      // 过滤非md文件\n      if (typeFile === 'md') {\n        if(name === 'README') return filesList.unshift('')\n        filesList.push([pathName, title])\n      }\n    }\n  })\n  return filesList\n}\n\nmodule.exports = ReadFile\n\n\n最开始本来是一个简单的功能，用来处理单目录结构，后面想着单目录如果多的情况下，nav肯定不放下，要么肯定不好看，后解决多目录文件，线上一看，有的文件名长短不一样，越看越觉得变扭，然后就重新写，架构新数据格式，嗯，现在看好多了。",normalizedContent:"# vuepress 手写自动生成侧边栏函数\n\n\n# 前言\n\n手动配置侧边栏过于繁琐，文件名和目录调整，有需要重新修改文件路径，实在麻烦的很，所以我写了一个自动生成侧边栏的函数，可以自动生成侧边栏，不需要手动配置，只需要指向要生成目录就可以自动生成侧边栏了。\n\n\n# usage\n\n通常文章的目录分为两种，单目录结构，和多目录结构。 下面简单阐述的，如何使用工具函数，生成目录。\n\n感兴趣同学，又不想手动配置文件繁琐，可以运行配置好的项目，运行或者用来调试学习。点击跳转github仓库，不懂地方可以微信问我\n\n单目录结构，如图所示\n\n\n\n配置sidebar 在config.js 中配置sidebar项目\n\n效果\n\ntips\n\n * 文件名切记注意大小写，别问为啥，被坑过\n * 工具函数和文章路径记得对应上，不然会报错\n\n如果一直报错或者查看生成数据目录，可以开启调试模式，在package.josn运行命令后缀添加--debug\n\n在console.log(vue)，可以在终端中查看打印的数据，如图所示\n\n多目录\n\n\n\n配置sidebar\n\n效果如图\n\n\n\n文章排序 我是有追求的人，造出来数据目录要按照我想要的顺序来排序，不然生成目录瞎放影响我博客的美观，强迫症患者，耶安排。\n\n在目录前缀添加序号不就得了，我开始也是这么想的，当我写的文章超过十篇以上，发现怎么10.css.md排在01.css.md的后面，不应该在最后面吗？查看数据发现，读取的文件不是按照目录顺序排序的，竟然发现这个问题就解决这个问题。\n\n给数据进行sort排序一下，好了顺序终于对了，巴适得很。\n\n可以按照这样的命名来定义文件规范，后面调整比较灵活点。\n\n * 文件夹可以取10，20，30顺序开头，假如后面如果想在10~20之间插入新的目录，这样只要写11，12就行，\n * 文件可以按照这样来命名，如果考虑到后面文件有100多篇，可以采用100，200，300开头，这样可以在中间插入更多文件而又不用重新编辑后面的文件名。\n\n\n# 深入了解\n\n首先我们了解我们要什么样的数据结构。\n\n目录\n\n我们要得到下面这样的数据。\n\n  sidebar: {\n    '/frontend/': [\n      '', // readme可以不用写文件名\n      {\n        title: 'html',\n        collapsable: false,\n        children: [\n          ['html/html快速入门', 'html快速入门'],\n          ['html/html基础知识', 'html基础知识'],\n        ],\n      },\n      {\n        title: 'css',\n        collapsable: false,\n        children: [\n          ['css/01.css基础', 'css基础'],\n          ['css/02.css美化', 'css美化'],\n        ],\n      },\n    ],\n  },\n\n\n那么我们当然的通过node中fs.readdirsyncapi来读取文件，得到一个数组，数组中的数据如图下\n\n这样的数据肯定不能直接使用，那么我们可以将每个字符串分割成数组，得到[\"vue popover组件开发\",\"md\"] 由于考虑到文件可能有序列号，不想在目录中展示那么我们通过[文件路径， 文件名]格式来重置，又考虑到readme文件比较特殊，不能写成['readme', 'readme']形式，所以遇到readme时，写成''推到数组第一项为主，最终的数据\n\n[\n  {\n    title: 'vue.js',\n    collapsable: false,\n    children: [\n      '',      \n      [array], [array]\n      [array], [array],\n      [array], [array],\n      [array], [array],\n      [array], [array],\n      [array] \n    ]\n  }\n]\n\n\n如果我们想通过一个父文件夹来包含多个子文件夹的话，显然上面的方法不适用这种情况，我们要得到数据应该一个文件夹一个归类，如下面这种数据\n\n[\n  {\n    title: 'vue.js',\n    collapsable: false,\n    children: [\n      '',      \n      [array], [array]\n      [array], [array],\n      [array], [array],\n      [array], [array],\n      [array], [array],\n      [array] \n    ]\n  },\n  {\n    title: 'vue3.js',\n    collapsable: false,\n    children: [\n      '',      \n      [array], [array]\n      [array], [array],\n      [array], [array],\n      [array], [array],\n      [array], [array],\n      [array] \n    ]\n  }\n]\n\n\n所以当我们通过stat.isdirectory()方法来读取的文件是文件夹情况，那我们就定义一个对象，里面children属性是一个空数组，然后通过递归的方法重新调用该方法将读取到文件push到children数组里面。哈哈大功告成。\n\nconst fs = require('fs') // 文件模块\nconst path = require('path') // 路径模块\nconst docsroot = path.join(__dirname, '..', '..', '..') // docs文件路径\nconst chalk = require('chalk') // 命令行打印美化\nconst log = console.log\n\nfunction readfile(dir = docsroot, fileslist = [], fpath = '') {\n  let files = fs.readdirsync(dir)\n  // 10 1排序错误\n  if(array.isarray(files)){\n    files.sort((item1, item2) => {\n      let c1 = item1.split('.')[0]\n      let c2 = item2.split('.')[0]\n      return c1 - c2\n    })\n  }\n  console.log('------');\n  console.log(files);\n  files.foreach((item, index) => {\n    let filepath = path.join(dir, item)\n    const stat = fs.statsync(filepath)\n    // log('isdirectory-------------------', stat.isdirectory(), item)\n    // isdirectory 返回是否文件夹, 4.file.md dir:/users/xx/reg-rules-js-site/docs/regular\n    const filenamearr = path.basename(filepath).split('.')\n    if (stat.isdirectory() && item !== '.vuepress') {\n      // 生成目录名\n      let title = filenamearr.length > 1 ? filenamearr[1] : filenamearr[0]\n      if(!title){\n        log(chalk.yellow(`warning: 该文件夹 \"${filepath}\" 没有按照约定命名，将忽略生成相应数据。`))\n        return\n      }\n      fileslist.push({\n        title,\n        collapsable: false,\n        children: [],\n      })\n      // log('递归读取文件夹的文件', path.join(dir, item), fileslist[index].children, item)\n      // 递归读取文件夹的文件 /users/another/documents/self-study/reg-rules-js-site/docs/test/test2 [] test2\n      readfile(path.join(dir, item), fileslist[index].children, item)\n    } else {\n      // 生成文件名数组\n      let name = null\n      title = null\n      typefile = null\n      pathname = null\n      let clonearr = [...filenamearr]\n      typefile = clonearr[clonearr.length - 1]\n      if (filenamearr.length > 1) {\n        clonearr.pop()\n        name = clonearr.join('.')\n        pathname = fpath ? `${fpath}/${name}` : name\n        title = clonearr.length > 1 ? clonearr[1] : clonearr[0]\n      } else {\n        log(chalk.yellow(`warning: 该文件 \"${filepath}\" 没有按照约定命名，将忽略生成相应数据。`))\n        return\n      }\n\n      log('name', name, pathname, typefile, title)\n      // 过滤非md文件\n      if (typefile === 'md') {\n        if(name === 'readme') return fileslist.unshift('')\n        fileslist.push([pathname, title])\n      }\n    }\n  })\n  return fileslist\n}\n\nmodule.exports = readfile\n\n\n最开始本来是一个简单的功能，用来处理单目录结构，后面想着单目录如果多的情况下，nav肯定不放下，要么肯定不好看，后解决多目录文件，线上一看，有的文件名长短不一样，越看越觉得变扭，然后就重新写，架构新数据格式，嗯，现在看好多了。",charsets:{cjk:!0},lastUpdated:"2022/05/18, 09:51:09",lastUpdatedTimestamp:1652867469e3},{title:"标签",frontmatter:{tagsPage:!0,title:"标签",permalink:"/tags/",article:!1,readingShow:"top"},regularPath:"/@pages/tagsPage.html",relativePath:"@pages/tagsPage.md",key:"v-150b83f6",path:"/tags/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2021/12/28, 08:41:24",lastUpdatedTimestamp:1640680884e3},{title:"Home",frontmatter:{home:!0,pageClass:"vdoing-index-class",footer:"MIT Licensed | Copyright © 2018-present Evan You",readingShow:!1},regularPath:"/",relativePath:"index.md",key:"v-a113e2c4",path:"/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/05/20, 09:51:16",lastUpdatedTimestamp:1653040276e3}],themeConfig:{nav:[{text:"导航",link:"/nav/"},{text:"算法",link:"/algorithm/",items:[]},{text:"开发",link:"/web/",items:[]},{text:"工具",link:"/tools/",items:[{text:"Git",items:[{text:"Git导读",link:"/pages/af5021/"}]}]},{text:"收藏夹",link:"/bookmarks/",items:[{text:"收藏夹",link:"https://feyoudao.cn/coder-bookmarks/"},{text:"工具库",link:"https://feyoudao.cn/nutils-js-site/"},{text:"netlify Vuepress",link:"https://feyoudao.netlify.app/"},{text:"vercel Vuepress",link:"https://feyoudao.vercel.app/"},{text:"Vuepress2.0",link:"https://feyoudao.cn/vuepress-next/"},{text:"netlify Vuepress2.0",link:"https://feyoudao-next.netlify.app/"}]},{text:"留言区",link:"/message-area/",items:[]},{text:"娱乐",link:"/entertainment/",items:[]},{text:"关于",link:"/about/me/"},{text:"索引",link:"/archives/",items:[{text:"时间轴",link:"/archives/"},{text:"标签",link:"/tags/"},{text:"分类",link:"/categories/"}]}],sidebarDepth:2,logo:"https://feyoudao.oss-cn-hongkong.aliyuncs.com/site/star_field.ico",searchMaxSuggestions:10,lastUpdated:"上次更新",docsDir:"docs",editLinks:!0,editLinkText:"编辑",bodyBgImg:"https://npm.elemecdn.com/youthlql@1.0.10/lql_bg/00045.webp",bodyBgImgOpacity:.88,rightMenuBar:!0,sidebar:{"/00.目录页/":[["02.开发.md","开发目录","/web"],["03.算法.md","算法目录","/algorithm"],["06.工具.md","工具目录","/tools"],["08.留言区.md","留言区","/message-area"],["09.娱乐.md","休闲娱乐","/entertainment"]],catalogue:{"开发":"/web","算法":"/algorithm","工具":"/tools","娱乐":"/entertainment"},"/01.导航/":[["01.导航-资源导航.md","开发百宝箱","/nav"],["02.导航-技术社区.md","导航-技术社区","/nav/community"],["03.导航-组件库.md","导航-技术社区","/nav/ui"],["99.导航-资料福利.md","资料福利","/pages/a15787/"]],"/02.开发/":[{title:"基础知识",collapsable:!0,children:[["01.基础知识/01.JS中数组有多少种遍历的方法.md","JS中数组有多少种遍历的方法","/pages/a1a15e/"]]},{title:"工程化",collapsable:!0,children:[["02.工程化/02.正则速查表.md","正则速查表","/pages/97fe24/"],["02.工程化/03.npm&yarn操作命令都在这了.md","npm&yarn操作命令都在这了","/pages/b89816/"]]},{title:"组件库",collapsable:!0,children:[["03.组件库/01.手写el-form表单组件.md","手写el-form表单组件","/pages/eb8ac7/"],["03.组件库/02.Vue Toast组件开发.md","Vue Toast组件开发","/pages/8b7457/"],["03.组件库/04.Vue button组件开发.md","Vue button组件开发","/pages/8ea1aa/"],["03.组件库/05.Vue icon组件开发.md","Vue icon组件开发","/pages/46ca1d/"],["03.组件库/06.Vue input组件开发.md","Vue input组件开发","/pages/689ad5/"],["03.组件库/07.Vue message组件开发.md","Vue message组件开发","/pages/db6289/"],["03.组件库/08.Vue Popover组件开发.md","Vue Popover组件开发","/pages/915ee7/"]]},{title:"CSS",collapsable:!0,children:[["04.CSS/01.必备的CSS小技巧.md","CSS小技巧","/pages/d43f57/"],["04.CSS/02.移动端1px问题.md","移动端1px问题","/pages/0c3675/"],["04.CSS/03.CSS 实现多行文本“展开收起”.md","CSS 实现多行文本“展开收起”","/pages/5aae97/"]]},{title:"ES6-ES12",collapsable:!0,children:[["05.ES6-ES12/01.代码被吐槽有什么好的优化方案.md","代码被吐槽有什么好的优化方案","/pages/6eff02/"],["05.ES6-ES12/02.ES12令人期待的新特性.md","ES12令人期待的新特性","/pages/a3ded1/"]]},{title:"JavaScript",collapsable:!0,children:[["06.JavaScript/01.代码中大量的if-else你有什么优化方案.md","代码中大量的if/else你有什么优化方案","/pages/6f1790/"],["06.JavaScript/02.慎用NumbertoFixed.md","慎用Number.toFixed()","/pages/db36f6/"],["06.JavaScript/03.nutils-js 前端开发的工具类库.md","nutils-js 前端开发的工具类库","/pages/46fd38/"],["06.JavaScript/05.13个JS一行代码，它们会让你看起来像个大佬.md","13个JS一行代码，它们会让你看起来像个大佬","/pages/18fdc2/"]]},{title:"Vue2",collapsable:!0,children:[["07.Vue2/01.令人眼前一亮的Vue实战技巧.md","令人眼前一亮的Vue实战技巧","/pages/8466b6/"],["07.Vue2/02.助你开发更高效的10个Vue指令.md","助你开发更高效的10个Vue指令","/pages/d765c6/"],["07.Vue2/03.理解Vue响应式数据变化.md","理解Vue响应式数据变化","/pages/4c7316/"],["07.Vue2/04.Vue父子组件的生命周期.md","Vue父子组件的生命周期","/pages/40f989/"]]},{title:"Vue3",collapsable:!0,children:[["08.Vue3/01.Vue3开发知乎日报.md","Vue3开发知乎日报","/pages/03d760/"],["08.Vue3/02.Vue3入门.md","Vue3入门","/pages/1182d2/"]]},{title:"webpack",collapsable:!0,children:[["09.webpack/01.Webpack4入门.md","Webpack4入门","/pages/e8445a/"]]},{title:"浏览器",collapsable:!0,children:[["10.浏览器/01.浏览器存储那些事.md","浏览器存储那些事","/pages/647c21/"],["10.浏览器/02.如何使console更具可读性.md","如何使console更具可读性","/pages/22d46a/"]]}],"/03.算法/":[{title:"二叉树",collapsable:!0,children:[["01.二叉树/94. 二叉树的中序遍历.md","二叉树的中序遍历 - 简单","/pages/27447f/"]]},{title:"数组",collapsable:!0,children:[["02.数组/01.两数之和.md","两数之和","/pages/6dc9e7/"]]}],"/06.工具/":[{title:"浏览器",collapsable:!0,children:[["01.浏览器/01.Chrome插件推荐.md","Chrome插件推荐","/pages/b08cab/"]]},{title:"Git",collapsable:!0,children:[["02.Git/01.Git导读.md","Git导读","/pages/af5021/"],["02.Git/02.Git常用操作命令.md","常用Git命令清单","/pages/9d41b5/"],["02.Git/03.Git思维导图.md","Git思维导图","/pages/afbd7c/"],["02.Git/04.Git分支开发模型规范.md","Git分支开发模型规范","/pages/c5d2f8/"],["02.Git/05.图解Git.md","图解Git","/pages/20730e/"],["02.Git/50.Git变基合并.md","Git变基合并","/pages/e223b5/"],["02.Git/100.Git在macOS中忽略所有DS_Store文件.md","Git 在 macOS 中忽略所有 .DS_Store 文件","/pages/9f8029/"],["02.Git/101.Git本地仓库关联多个远程仓库.md","Git本地仓库关联多个远程仓库","/pages/1115dc/"],["02.Git/102.Git Commit表情大全.md","Git Commit表情大全","/pages/0eff1a/"],["02.Git/103.Git Permissions 0755问题解决.md","permissions 0755 问题解决","/pages/86465f/"]]},{title:"Mac",collapsable:!0,children:[["03.Mac/01.Mac常用软件推荐.md","Mac常用软件推荐","/pages/4eec3f/"],["03.Mac/02.Mac开发必备工具—Homebrew国内源.md","Mac必备工具 — Homebrew国内源","/pages/70e61d/"],["03.Mac/03.Mac终端替代工具iTerm2.md","Mac终端替代工具iTerm2","/pages/46ba7f/"],["03.Mac/04.macOS Catalina 已损坏无法打开.md","MacOS Catalina 已损坏无法打开","/pages/224796/"],["03.Mac/50.hosts默认信息.md","hosts默认信息","/pages/d5393d/"]]},{title:"VSCode",collapsable:!0,children:[["04.VSCode/01.使开发如鱼得水的VSCode插件.md","使开发如鱼得水的VSCode插件","/pages/cda20f/"],["04.VSCode/02.VSCode插件推荐.md","VSCode插件推荐","/pages/9c9984/"],["04.VSCode/03.用好VSCode这几个快捷键，工作效率提升10倍.md","用好VSCode这几个快捷键，工作效率提升10倍","/pages/ecd1c2/"],["04.VSCode/04.VSCode所有的默认配置项介绍.md","VSCode所有的默认配置项介绍","/pages/c1cbea/"]]},{title:"GitHub",collapsable:!0,children:[["05.GitHub/01.2022提高国内访问Github速度的5种方法.md","2022提高国内访问 Github 速度的 5 种方法！","/pages/a782fe/"],["05.GitHub/03.GitHub+jsDelivr+PicGo打造免费图床.md","GitHub+jsDelivr+PicGo打造免费图床","/pages/4cf2e1/"],["05.GitHub/05.GitHub仓库下载慢几种解决办法.md","GitHub仓库下载慢几种解决办法","/pages/95565e/"],["05.GitHub/06.Github文件转jsdelivr地址.md","使用GitHub自建免费小型图床","/pages/d945b5/"]]}],"/07.收藏夹/":[["01.收藏夹.md","前端收藏夹","/bookmarks/"],["02.收藏夹2.md","前端收藏夹2","/pages/9abd62/"],["03.面试相关.md","面试相关","/pages/6a0e2e/"],["04.推荐前端常用库.md","推荐前端常用库","/pages/797db9/"]],"/08.关于/":[["01.关于-我.md","关于 - 我","/about/me/"],["02.关于-赞赏的用途.md","关于 - 赞赏❤️的用途","/about/appreciate/"],["03.关于-网站错误反馈.md","关于 - 网站错误反馈","/about/error/"],["10.关于-本站.md","关于 - 本站","/about/site/"],{title:"Vuepress",collapsable:!0,children:[["99.Vuepress/01.Markdown语法.md","Markdown语法","/pages/36f5a2/"],["99.Vuepress/02.MarkDown常用表情.md","MarkDown 常用表情","/pages/05db39/"],["99.Vuepress/03.Vuepress模版.md","Vuepress 模版","/pages/f55287/"],["99.Vuepress/04.Vuepress手写自动生成侧边栏函数.md","Vuepress 手写自动生成侧边栏函数","/pages/3c34a0/"],["99.Vuepress/05.GitHub Actions部署Vuepress.md","GitHub Actions部署Vuepress","/pages/4369fc/"],["99.Vuepress/06.VuePress搭建个人博客.md","VuePress 搭建个人博客","/pages/f5def0/"],["99.Vuepress/08.Vuepress插件推荐.md","Vuepress插件推荐","/pages/30933c/"]]}],"/09.娱乐/":[{title:"影视",collapsable:!0,children:[["02.影视/01.2022最新免费影视网站推荐.md","2022最新免费影视网站推荐","/pages/88bc78/"]]},{title:"漫画",collapsable:!0,children:[["03.漫画/01.漫画app合集.md","漫画app合集【解锁付费 去广告】","/pages/add5e2/"]]},{title:"音乐",collapsable:!0,children:[["04.音乐/01.在线音乐下载.md","在线音乐下载","/pages/ca521c/"]]}]},blogInfo:{blogCreate:"2022-01-01",indexView:!0,pageView:!0,readingTime:!0,eachFileWords:[{name:"开发",filePath:"/home/runner/work/blog/blog/docs/00.目录页/02.开发.md",wordsCount:52,readingTime:"1",pageComponent:{name:"Catalogue",data:{key:"02.开发",imgUrl:"https://feyoudao.oss-cn-hongkong.aliyuncs.com/frentend/1.jpg",description:"JavaScript、ES6、Vue框架等前端技术"}},title:"开发目录",date:"2020-03-11T21:50:53.000Z",permalink:"/web",sidebar:!1,article:!1,comment:!1,editLink:!1},{name:"算法",filePath:"/home/runner/work/blog/blog/docs/00.目录页/03.算法.md",wordsCount:52,readingTime:"1",pageComponent:{name:"Catalogue",data:{key:"03.算法",imgUrl:"https://feyoudao.oss-cn-hongkong.aliyuncs.com/frentend/1.jpg",description:"JavaScript、ES6、Vue框架等前端技术"}},title:"算法目录",date:"2020-03-11T21:50:53.000Z",permalink:"/algorithm",sidebar:!1,article:!1,comment:!1,editLink:!1},{name:"工具",filePath:"/home/runner/work/blog/blog/docs/00.目录页/06.工具.md",wordsCount:52,readingTime:"1",pageComponent:{name:"Catalogue",data:{key:"06.工具",imgUrl:"https://feyoudao.oss-cn-hongkong.aliyuncs.com/frentend/2.gif",description:"JavaScript、ES6、Vue框架等前端技术"}},title:"工具目录",date:"2020-03-11T21:50:53.000Z",permalink:"/tools",sidebar:!1,article:!1,comment:!1,editLink:!1},{name:"留言区",filePath:"/home/runner/work/blog/blog/docs/00.目录页/08.留言区.md",wordsCount:52,readingTime:"1",title:"留言区",date:"2020-03-11T21:50:53.000Z",permalink:"/message-area",sidebar:!1,article:!1,comment:!1,editLink:!1,prev:!1,next:!1,lastUpdated:!1,tags:null},{name:"娱乐",filePath:"/home/runner/work/blog/blog/docs/00.目录页/09.娱乐.md",wordsCount:52,readingTime:"1",pageComponent:{name:"Catalogue",data:{key:"09.娱乐",imgUrl:"https://feyoudao.oss-cn-hongkong.aliyuncs.com/frentend/3.gif",description:"JavaScript、ES6、Vue框架等前端技术"}},title:"休闲娱乐",date:"2020-03-11T21:50:53.000Z",permalink:"/entertainment",sidebar:!1,article:!1,comment:!1,editLink:!1},{name:"导航-资源导航",filePath:"/home/runner/work/blog/blog/docs/01.导航/01.导航-资源导航.md",wordsCount:"5.2k",readingTime:"25.6 m",title:"开发百宝箱",date:"2022-05-09T02:03:48.000Z",permalink:"/nav",article:!1,categories:[null],tags:[null]},{name:"导航-技术社区",filePath:"/home/runner/work/blog/blog/docs/01.导航/02.导航-技术社区.md",wordsCount:265,readingTime:"1.3 m",title:"导航-技术社区",date:"2022-05-09T02:03:48.000Z",permalink:"/nav/community",article:!1,categories:[null],tags:[null]},{name:"导航-组件库",filePath:"/home/runner/work/blog/blog/docs/01.导航/03.导航-组件库.md",wordsCount:265,readingTime:"1.3 m",title:"导航-技术社区",date:"2022-05-09T02:03:48.000Z",permalink:"/nav/ui",article:!1,categories:[null],tags:[null]},{name:"导航-资料福利",filePath:"/home/runner/work/blog/blog/docs/01.导航/99.导航-资料福利.md",wordsCount:477,readingTime:"2.1 m",title:"资料福利",date:"2022-04-16T17:14:10.000Z",permalink:"/pages/a15787/",categories:[null],tags:[null],sticky:2},{name:"JS中数组有多少种遍历的方法",filePath:"/home/runner/work/blog/blog/docs/02.开发/01.基础知识/01.JS中数组有多少种遍历的方法.md",wordsCount:555,readingTime:"2.2 m",title:"JS中数组有多少种遍历的方法",date:"2022-03-16T17:33:55.000Z",permalink:"/pages/a1a15e/",categories:["前端开发"],tags:["基础知识"]},{name:"正则速查表",filePath:"/home/runner/work/blog/blog/docs/02.开发/02.工程化/02.正则速查表.md",wordsCount:"2.6k",readingTime:"13.5 m",title:"正则速查表",date:"2018-12-28T00:00:00.000Z",tags:["工程化"],permalink:"/pages/97fe24/",categories:["前端","工程化"]},{name:"npm&yarn操作命令都在这了",filePath:"/home/runner/work/blog/blog/docs/02.开发/02.工程化/03.npm&yarn操作命令都在这了.md",wordsCount:"1.9k",readingTime:"8.7 m",title:"npm&yarn操作命令都在这了",date:"2017-12-28T00:00:00.000Z",tags:["工程化"],permalink:"/pages/b89816/",categories:["前端","工程化"]},{name:"手写el-form表单组件",filePath:"/home/runner/work/blog/blog/docs/02.开发/03.组件库/01.手写el-form表单组件.md",wordsCount:"1.5k",readingTime:"6.6 m",title:"手写el-form表单组件",date:"2021-5-29",categories:["frontEnd"],tags:["vue"],permalink:"/pages/eb8ac7/"},{name:"Vue Toast组件开发",filePath:"/home/runner/work/blog/blog/docs/02.开发/03.组件库/02.Vue Toast组件开发.md",wordsCount:339,readingTime:"1.6 m",title:"Vue Toast组件开发",date:"2021-5-29",tags:["vue"],permalink:"/pages/8b7457/",categories:["前端","组件库"]},{name:"Vue button组件开发",filePath:"/home/runner/work/blog/blog/docs/02.开发/03.组件库/04.Vue button组件开发.md",wordsCount:278,readingTime:"1.6 m",title:"Vue button组件开发",date:"2021-5-29",categories:["frontEnd"],tags:["vue"],permalink:"/pages/8ea1aa/"},{name:"Vue icon组件开发",filePath:"/home/runner/work/blog/blog/docs/02.开发/03.组件库/05.Vue icon组件开发.md",wordsCount:70,readingTime:"1",title:"Vue icon组件开发",date:"2021-5-29",categories:["frontEnd"],tags:["vue"],permalink:"/pages/46ca1d/"},{name:"Vue input组件开发",filePath:"/home/runner/work/blog/blog/docs/02.开发/03.组件库/06.Vue input组件开发.md",wordsCount:351,readingTime:"2.1 m",title:"Vue input组件开发",date:"2021-5-29",categories:["frontEnd"],tags:["vue"],permalink:"/pages/689ad5/"},{name:"Vue message组件开发",filePath:"/home/runner/work/blog/blog/docs/02.开发/03.组件库/07.Vue message组件开发.md",wordsCount:148,readingTime:"1",title:"Vue message组件开发",date:"2021-7-28",categories:["frontEnd"],tags:["vue"],permalink:"/pages/db6289/"},{name:"Vue Popover组件开发",filePath:"/home/runner/work/blog/blog/docs/02.开发/03.组件库/08.Vue Popover组件开发.md",wordsCount:391,readingTime:"2.4 m",title:"Vue Popover组件开发",date:"2021-5-29",tags:["vue"],permalink:"/pages/915ee7/",categories:["前端","组件库"]},{name:"必备的CSS小技巧",filePath:"/home/runner/work/blog/blog/docs/02.开发/04.CSS/01.必备的CSS小技巧.md",wordsCount:"1.2k",readingTime:"6.3 m",title:"CSS小技巧",date:"2021-7-28",tags:["CSS"],permalink:"/pages/d43f57/",categories:["前端","CSS"]},{name:"移动端1px问题",filePath:"/home/runner/work/blog/blog/docs/02.开发/04.CSS/02.移动端1px问题.md",wordsCount:"1.5k",readingTime:"6.2 m",title:"移动端1px问题",date:"2021-7-28",tags:["CSS"],permalink:"/pages/0c3675/",categories:["前端","CSS"]},{name:"CSS 实现多行文本“展开收起”",filePath:"/home/runner/work/blog/blog/docs/02.开发/04.CSS/03.CSS 实现多行文本“展开收起”.md",wordsCount:"4.1k",readingTime:"17 m",title:"CSS 实现多行文本“展开收起”",date:"2022-03-16T16:35:52.000Z",permalink:"/pages/5aae97/",categories:["前端开发","CSS"],tags:[null]},{name:"代码被吐槽有什么好的优化方案",filePath:"/home/runner/work/blog/blog/docs/02.开发/05.ES6-ES12/01.代码被吐槽有什么好的优化方案.md",wordsCount:"1.5k",readingTime:"6.1 m",title:"代码被吐槽有什么好的优化方案",date:"2022-01-08T19:41:00.000Z",permalink:"/pages/6eff02/",categories:["前端","ES6-ES12"],tags:[null]},{name:"ES12令人期待的新特性",filePath:"/home/runner/work/blog/blog/docs/02.开发/05.ES6-ES12/02.ES12令人期待的新特性.md",wordsCount:"1.8k",readingTime:"7.8 m",title:"ES12令人期待的新特性",date:"2021-7-28",categories:["frontEnd"],tags:["ES6"],permalink:"/pages/a3ded1/"},{name:"代码中大量的if-else你有什么优化方案",filePath:"/home/runner/work/blog/blog/docs/02.开发/06.JavaScript/01.代码中大量的if-else你有什么优化方案.md",wordsCount:"2k",readingTime:"8.6 m",title:"代码中大量的if/else你有什么优化方案",date:"2021-7-28",tags:["JavaScript"],permalink:"/pages/6f1790/",categories:["前端","JavaScript"]},{name:"慎用NumbertoFixed",filePath:"/home/runner/work/blog/blog/docs/02.开发/06.JavaScript/02.慎用NumbertoFixed.md",wordsCount:640,readingTime:"2.6 m",title:"慎用Number.toFixed()",date:"2021-7-28",tags:["JavaScript"],permalink:"/pages/db36f6/",categories:["前端","JavaScript"]},{name:"nutils-js 前端开发的工具类库",filePath:"/home/runner/work/blog/blog/docs/02.开发/06.JavaScript/03.nutils-js 前端开发的工具类库.md",wordsCount:"4.5k",readingTime:"21 m",title:"nutils-js 前端开发的工具类库",date:"2021-5-29",categories:["frontEnd"],tags:["vue"],permalink:"/pages/46fd38/"},{name:"13个JS一行代码，它们会让你看起来像个大佬",filePath:"/home/runner/work/blog/blog/docs/02.开发/06.JavaScript/05.13个JS一行代码，它们会让你看起来像个大佬.md",wordsCount:780,readingTime:"3.2 m",title:"13个JS一行代码，它们会让你看起来像个大佬",date:"2022-03-16T17:29:23.000Z",permalink:"/pages/18fdc2/",categories:["前端开发","JavaScript"],tags:[null]},{name:"令人眼前一亮的Vue实战技巧",filePath:"/home/runner/work/blog/blog/docs/02.开发/07.Vue2/01.令人眼前一亮的Vue实战技巧.md",wordsCount:"3.4k",readingTime:"14.2 m",title:"令人眼前一亮的Vue实战技巧",date:"2022-01-14T09:43:32.000Z",permalink:"/pages/8466b6/",categories:["Vue2"],tags:[null]},{name:"助你开发更高效的10个Vue指令",filePath:"/home/runner/work/blog/blog/docs/02.开发/07.Vue2/02.助你开发更高效的10个Vue指令.md",wordsCount:"1.5k",readingTime:"6.9 m",title:"助你开发更高效的10个Vue指令",date:"2022-01-08T19:41:00.000Z",permalink:"/pages/d765c6/",categories:["前端","Vue2"],tags:[null]},{name:"理解Vue响应式数据变化",filePath:"/home/runner/work/blog/blog/docs/02.开发/07.Vue2/03.理解Vue响应式数据变化.md",wordsCount:"2.3k",readingTime:"9.1 m",title:"理解Vue响应式数据变化",date:"2018-12-28T00:00:00.000Z",tags:[null],permalink:"/pages/4c7316/",categories:["Vue2"]},{name:"Vue父子组件的生命周期",filePath:"/home/runner/work/blog/blog/docs/02.开发/07.Vue2/04.Vue父子组件的生命周期.md",wordsCount:713,readingTime:"2.6 m",title:"Vue父子组件的生命周期",date:"2022-02-16T23:39:27.000Z",permalink:"/pages/40f989/",categories:["Vue2"],tags:[null]},{name:"Vue3开发知乎日报",filePath:"/home/runner/work/blog/blog/docs/02.开发/08.Vue3/01.Vue3开发知乎日报.md",wordsCount:"2.3k",readingTime:"10.1 m",title:"Vue3开发知乎日报",date:"2022-01-14T09:43:32.000Z",permalink:"/pages/03d760/",categories:["前端","Vue3"],tags:[null]},{name:"Vue3入门",filePath:"/home/runner/work/blog/blog/docs/02.开发/08.Vue3/02.Vue3入门.md",wordsCount:"2.4k",readingTime:"9.5 m",title:"Vue3入门",date:"2022-01-14T09:43:32.000Z",permalink:"/pages/1182d2/",categories:["前端","Vue3"],tags:[null]},{name:"Webpack4入门",filePath:"/home/runner/work/blog/blog/docs/02.开发/09.webpack/01.Webpack4入门.md",wordsCount:"4.9k",readingTime:"21 m",title:"Webpack4入门",date:"2017-12-28T00:00:00.000Z",tags:["webpack"],permalink:"/pages/e8445a/",categories:["前端","Webpack"]},{name:"浏览器存储那些事",filePath:"/home/runner/work/blog/blog/docs/02.开发/10.浏览器/01.浏览器存储那些事.md",wordsCount:"5.2k",readingTime:"19.8 m",title:"浏览器存储那些事",date:"2021-05-28T00:00:00.000Z",tags:["浏览器"],permalink:"/pages/647c21/",categories:["前端","浏览器"]},{name:"如何使console更具可读性",filePath:"/home/runner/work/blog/blog/docs/02.开发/10.浏览器/02.如何使console更具可读性.md",wordsCount:872,readingTime:"3.8 m",title:"如何使console更具可读性",date:"2020-05-28T00:00:00.000Z",tags:["浏览器"],permalink:"/pages/22d46a/",categories:["前端","浏览器"]},{name:" 二叉树的中序遍历",filePath:"/home/runner/work/blog/blog/docs/03.算法/01.二叉树/94. 二叉树的中序遍历.md",wordsCount:236,readingTime:"1.2 m",title:"二叉树的中序遍历 - 简单",date:"2022-03-09T10:07:40.000Z",permalink:"/pages/27447f/",categories:["算法","二叉树"],tags:[null]},{name:"两数之和",filePath:"/home/runner/work/blog/blog/docs/03.算法/02.数组/01.两数之和.md",wordsCount:359,readingTime:"1.7 m",title:"两数之和",date:"2022-03-23T21:05:34.000Z",permalink:"/pages/6dc9e7/",categories:["算法","数组"],tags:["算法","哈希表"]},{name:"Chrome插件推荐",filePath:"/home/runner/work/blog/blog/docs/06.工具/01.浏览器/01.Chrome插件推荐.md",wordsCount:"1.4k",readingTime:"5.5 m",title:"Chrome插件推荐",permalink:"/pages/b08cab/",date:"2022-01-14T09:43:32.000Z",categories:["浏览器"],tags:["Chrome"]},{name:"Git导读",filePath:"/home/runner/work/blog/blog/docs/06.工具/02.Git/01.Git导读.md",wordsCount:98,readingTime:"1",title:"Git导读",date:"2022-05-10T11:32:30.000Z",permalink:"/pages/af5021/",categories:[null],tags:["Git"]},{name:"Git常用操作命令",filePath:"/home/runner/work/blog/blog/docs/06.工具/02.Git/02.Git常用操作命令.md",wordsCount:"1.8k",readingTime:"7.4 m",title:"常用Git命令清单",date:"2022-05-10T11:28:55.000Z",permalink:"/pages/9d41b5/",categories:[null],tags:["Git"]},{name:"Git思维导图",filePath:"/home/runner/work/blog/blog/docs/06.工具/02.Git/03.Git思维导图.md",wordsCount:59,readingTime:"1",title:"Git思维导图",date:"2022-05-10T11:32:30.000Z",permalink:"/pages/afbd7c/",categories:[null],tags:["Git"]},{name:"Git分支开发模型规范",filePath:"/home/runner/work/blog/blog/docs/06.工具/02.Git/04.Git分支开发模型规范.md",wordsCount:858,readingTime:"3.2 m",title:"Git分支开发模型规范",date:"2022-05-10T11:32:30.000Z",categories:[null],tags:["Git"],author:"七寸知架构",link:"https://www.jianshu.com/p/cbd8cf5e232d",permalink:"/pages/c5d2f8/"},{name:"图解Git",filePath:"/home/runner/work/blog/blog/docs/06.工具/02.Git/05.图解Git.md",wordsCount:"2.4k",readingTime:"9.2 m",title:"图解Git",date:"2022-05-10T23:30:59.000Z",permalink:"/pages/20730e/",categories:[null],tags:["Git"]},{name:"Git在macOS中忽略所有DS_Store文件",filePath:"/home/runner/work/blog/blog/docs/06.工具/02.Git/100.Git在macOS中忽略所有DS_Store文件.md",wordsCount:673,readingTime:"2.7 m",title:"Git 在 macOS 中忽略所有 .DS_Store 文件",date:"2022-02-18T14:13:04.000Z",permalink:"/pages/9f8029/",categories:["Git"],tags:[null]},{name:"Git本地仓库关联多个远程仓库",filePath:"/home/runner/work/blog/blog/docs/06.工具/02.Git/101.Git本地仓库关联多个远程仓库.md",wordsCount:250,readingTime:"1 m",title:"Git本地仓库关联多个远程仓库",date:"2021-7-28",tags:["Git"],permalink:"/pages/1115dc/",categories:[null]},{name:"Git Commit表情大全",filePath:"/home/runner/work/blog/blog/docs/06.工具/02.Git/102.Git Commit表情大全.md",wordsCount:695,readingTime:"2.7 m",title:"Git Commit表情大全",date:"2021-7-28",tags:[null],permalink:"/pages/0eff1a/",categories:["emoji"]},{name:"Git Permissions 0755问题解决",filePath:"/home/runner/work/blog/blog/docs/06.工具/02.Git/103.Git Permissions 0755问题解决.md",wordsCount:270,readingTime:"1 m",title:"permissions 0755 问题解决",date:"2019-03-18T11:55:23.000Z",permalink:"/pages/86465f/",categories:[null],tags:[null]},{name:"Git变基合并",filePath:"/home/runner/work/blog/blog/docs/06.工具/02.Git/50.Git变基合并.md",wordsCount:"1.3k",readingTime:"5.3 m",title:"Git变基合并",date:"2022-05-10T11:30:35.000Z",permalink:"/pages/e223b5/",categories:[null],tags:["Git"]},{name:"Mac常用软件推荐",filePath:"/home/runner/work/blog/blog/docs/06.工具/03.Mac/01.Mac常用软件推荐.md",wordsCount:"1.3k",readingTime:"4.9 m",title:"Mac常用软件推荐",date:"2018-12-28T00:00:00.000Z",tags:["Mac"],permalink:"/pages/4eec3f/",categories:[null]},{name:"Mac开发必备工具—Homebrew国内源",filePath:"/home/runner/work/blog/blog/docs/06.工具/03.Mac/02.Mac开发必备工具—Homebrew国内源.md",wordsCount:388,readingTime:"1.7 m",title:"Mac必备工具 — Homebrew国内源",date:"2022-01-08T19:41:13.000Z",permalink:"/pages/70e61d/",categories:[null],tags:[null]},{name:"Mac终端替代工具iTerm2",filePath:"/home/runner/work/blog/blog/docs/06.工具/03.Mac/03.Mac终端替代工具iTerm2.md",wordsCount:909,readingTime:"3.9 m",title:"Mac终端替代工具iTerm2",date:"2018-12-28T00:00:00.000Z",tags:["Mac"],permalink:"/pages/46ba7f/",categories:[null]},{name:"macOS Catalina 已损坏无法打开",filePath:"/home/runner/work/blog/blog/docs/06.工具/03.Mac/04.macOS Catalina 已损坏无法打开.md",wordsCount:214,readingTime:"1",title:"MacOS Catalina 已损坏无法打开",date:"2018-12-28T00:00:00.000Z",permalink:"/pages/224796/",categories:[null],tags:["Mac"]},{name:"hosts默认信息",filePath:"/home/runner/work/blog/blog/docs/06.工具/03.Mac/50.hosts默认信息.md",wordsCount:349,readingTime:"2 m",title:"hosts默认信息",date:"2022-01-15T11:12:53.000Z",permalink:"/pages/d5393d/",categories:[null],tags:[null]},{name:"使开发如鱼得水的VSCode插件",filePath:"/home/runner/work/blog/blog/docs/06.工具/04.VSCode/01.使开发如鱼得水的VSCode插件.md",wordsCount:"2.3k",readingTime:"11.3 m",title:"使开发如鱼得水的VSCode插件",date:"2018-12-28T00:00:00.000Z",tags:["VSCode"],permalink:"/pages/cda20f/",categories:["VSCode"]},{name:"VSCode插件推荐",filePath:"/home/runner/work/blog/blog/docs/06.工具/04.VSCode/02.VSCode插件推荐.md",wordsCount:802,readingTime:"3.1 m",title:"VSCode插件推荐",date:"2018-12-28T00:00:00.000Z",tags:["VSCode"],permalink:"/pages/9c9984/",categories:["VSCode"]},{name:"用好VSCode这几个快捷键，工作效率提升10倍",filePath:"/home/runner/work/blog/blog/docs/06.工具/04.VSCode/03.用好VSCode这几个快捷键，工作效率提升10倍.md",wordsCount:491,readingTime:"2.1 m",title:"用好VSCode这几个快捷键，工作效率提升10倍",date:"2019-12-28T00:00:00.000Z",tags:["VSCode"],permalink:"/pages/ecd1c2/",categories:["VSCode"]},{name:"VSCode所有的默认配置项介绍",filePath:"/home/runner/work/blog/blog/docs/06.工具/04.VSCode/04.VSCode所有的默认配置项介绍.md",wordsCount:"26.1k",readingTime:"1 h 59 m",title:"VSCode所有的默认配置项介绍",date:"2022-02-21T17:31:05.000Z",permalink:"/pages/c1cbea/",categories:["VSCode"],tags:[null]},{name:"2022提高国内访问Github速度的5种方法",filePath:"/home/runner/work/blog/blog/docs/06.工具/05.GitHub/01.2022提高国内访问Github速度的5种方法.md",wordsCount:988,readingTime:"4.5 m",title:"2022提高国内访问 Github 速度的 5 种方法！",date:"2021-02-28T20:55:40.000Z",permalink:"/pages/a782fe/",categories:["GitHub"],tags:[null],sticky:1},{name:"GitHub+jsDelivr+PicGo打造免费图床",filePath:"/home/runner/work/blog/blog/docs/06.工具/05.GitHub/03.GitHub+jsDelivr+PicGo打造免费图床.md",wordsCount:833,readingTime:"3.3 m",title:"GitHub+jsDelivr+PicGo打造免费图床",date:"2021-7-28",tags:[null],permalink:"/pages/4cf2e1/",categories:["GitHub"]},{name:"GitHub仓库下载慢几种解决办法",filePath:"/home/runner/work/blog/blog/docs/06.工具/05.GitHub/05.GitHub仓库下载慢几种解决办法.md",wordsCount:846,readingTime:"3.7 m",title:"GitHub仓库下载慢几种解决办法",date:"2021-5-28",permalink:"/pages/95565e/",categories:["GitHub"],tags:[null]},{name:"Github文件转jsdelivr地址",filePath:"/home/runner/work/blog/blog/docs/06.工具/05.GitHub/06.Github文件转jsdelivr地址.md",wordsCount:565,readingTime:"2.1 m",title:"使用GitHub自建免费小型图床",date:"2021-1-28",permalink:"/pages/d945b5/",categories:[null],tags:[null]},{name:"收藏夹",filePath:"/home/runner/work/blog/blog/docs/07.收藏夹/01.收藏夹.md",wordsCount:"11.6k",readingTime:"52 m",title:"前端收藏夹",date:"2022-02-28T00:39:24.000Z",permalink:"/bookmarks/",categories:["收藏夹"],tags:[null]},{name:"收藏夹2",filePath:"/home/runner/work/blog/blog/docs/07.收藏夹/02.收藏夹2.md",wordsCount:"2.8k",readingTime:"12.4 m",title:"前端收藏夹2",date:"2022-02-28T00:42:04.000Z",permalink:"/pages/9abd62/",categories:["收藏夹"],tags:[null]},{name:"面试相关",filePath:"/home/runner/work/blog/blog/docs/07.收藏夹/03.面试相关.md",wordsCount:630,readingTime:"2.5 m",title:"面试相关",date:"2022-02-28T00:38:04.000Z",permalink:"/pages/6a0e2e/",categories:["收藏夹"],tags:[null]},{name:"推荐前端常用库",filePath:"/home/runner/work/blog/blog/docs/07.收藏夹/04.推荐前端常用库.md",wordsCount:"7.9k",readingTime:"36 m",title:"推荐前端常用库",date:"2022-02-28T00:36:54.000Z",permalink:"/pages/797db9/",categories:["收藏夹"],tags:[null]},{name:"关于-我",filePath:"/home/runner/work/blog/blog/docs/08.关于/01.关于-我.md",wordsCount:382,readingTime:"1.4 m",title:"关于 - 我",date:"2022-04-16T17:52:59.000Z",permalink:"/about/me/",categories:[null],tags:[null]},{name:"关于-赞赏的用途",filePath:"/home/runner/work/blog/blog/docs/08.关于/02.关于-赞赏的用途.md",wordsCount:111,readingTime:"1",title:"关于 - 赞赏❤️的用途",date:"2022-05-10T21:46:33.000Z",permalink:"/about/appreciate/",categories:[null],tags:[null]},{name:"关于-网站错误反馈",filePath:"/home/runner/work/blog/blog/docs/08.关于/03.关于-网站错误反馈.md",wordsCount:87,readingTime:"1",title:"关于 - 网站错误反馈",date:"2022-05-10T22:13:44.000Z",permalink:"/about/error/",categories:[null],tags:[null]},{name:"关于-本站",filePath:"/home/runner/work/blog/blog/docs/08.关于/10.关于-本站.md",wordsCount:540,readingTime:"1.9 m",title:"关于 - 本站",date:"2022-04-16T17:52:59.000Z",permalink:"/about/site/",categories:[null],tags:[null]},{name:"Markdown语法",filePath:"/home/runner/work/blog/blog/docs/08.关于/99.Vuepress/01.Markdown语法.md",wordsCount:668,readingTime:"2.4 m",title:"Markdown语法",date:"2018-12-28T00:00:00.000Z",tags:["VuePress"],permalink:"/pages/36f5a2/",categories:["Vuepress"]},{name:"MarkDown常用表情",filePath:"/home/runner/work/blog/blog/docs/08.关于/99.Vuepress/02.MarkDown常用表情.md",wordsCount:"1.8k",readingTime:"11 m",title:"MarkDown 常用表情",date:"2021-7-28",tags:["MarkDown"],permalink:"/pages/05db39/",categories:[null]},{name:"Vuepress模版",filePath:"/home/runner/work/blog/blog/docs/08.关于/99.Vuepress/03.Vuepress模版.md",wordsCount:368,readingTime:"1.5 m",title:"Vuepress 模版",date:"2018-12-28T00:00:00.000Z",tags:["VuePress"],permalink:"/pages/f55287/",categories:["Vuepress"]},{name:"Vuepress手写自动生成侧边栏函数",filePath:"/home/runner/work/blog/blog/docs/08.关于/99.Vuepress/04.Vuepress手写自动生成侧边栏函数.md",wordsCount:"1.6k",readingTime:"6.9 m",title:"Vuepress 手写自动生成侧边栏函数",date:"2018-12-28T00:00:00.000Z",permalink:"/pages/3c34a0/",categories:["VuePress"],tags:["VuePress"]},{name:"GitHub Actions部署Vuepress",filePath:"/home/runner/work/blog/blog/docs/08.关于/99.Vuepress/05.GitHub Actions部署Vuepress.md",wordsCount:972,readingTime:"4 m",title:"GitHub Actions部署Vuepress",date:"2018-12-28T00:00:00.000Z",tags:["VuePress"],permalink:"/pages/4369fc/",categories:["Vuepress"]},{name:"VuePress搭建个人博客",filePath:"/home/runner/work/blog/blog/docs/08.关于/99.Vuepress/06.VuePress搭建个人博客.md",wordsCount:"1.4k",readingTime:"6.2 m",title:"VuePress 搭建个人博客",date:"2018-12-28T00:00:00.000Z",tags:["VuePress"],permalink:"/pages/f5def0/",categories:["Vuepress"]},{name:"Vuepress插件推荐",filePath:"/home/runner/work/blog/blog/docs/08.关于/99.Vuepress/08.Vuepress插件推荐.md",wordsCount:269,readingTime:"1.3 m",title:"Vuepress插件推荐",date:"2022-02-28T00:43:09.000Z",permalink:"/pages/30933c/",categories:["Vuepress"],tags:[null]},{name:"2022最新免费影视网站推荐",filePath:"/home/runner/work/blog/blog/docs/09.娱乐/02.影视/01.2022最新免费影视网站推荐.md",wordsCount:875,readingTime:"4.1 m",title:"2022最新免费影视网站推荐",date:"2022-01-08T19:49:49.000Z",permalink:"/pages/88bc78/",categories:["影视"],tags:[null],sticky:3},{name:"漫画app合集",filePath:"/home/runner/work/blog/blog/docs/09.娱乐/03.漫画/01.漫画app合集.md",wordsCount:683,readingTime:"2.9 m",title:"漫画app合集【解锁付费 去广告】",date:"2022-01-08T19:56:36.000Z",permalink:"/pages/add5e2/",categories:[null],tags:[null]},{name:"在线音乐下载",filePath:"/home/runner/work/blog/blog/docs/09.娱乐/04.音乐/01.在线音乐下载.md",wordsCount:356,readingTime:"2.1 m",title:"在线音乐下载",date:"2022-01-09T17:55:07.000Z",permalink:"/pages/ca521c/",categories:["音乐"],tags:[null]}],mdFileCountType:"archives",totalWords:"archives",moutedEvent:".blogger-wrapper",indexIteration:2500,pageIteration:2500},indexImg:{navColor:2,switchNavColor:!0,bgTimeColor:!0,bgTimeColorArray:["transparent","rgba(255, 148, 48, .2)","rgba(0, 0, 0, .3)","rgba(0, 0, 0, .5)"],descFade:!0,desc:["成功只有一个 —— 按照自己的方式，去度过人生。—— 当年明月"],descFontSize:"1.6rem",descFadeInTime:300,descFadeOutTime:100,descNextTime:1600,bubble:!1,bubblePosition:0,bubbleNum:200},author:{name:"星野",link:"https://github.com/qqlcx5"},blogger:{avatar:"https://feyoudao.oss-cn-hongkong.aliyuncs.com/site/star_field.png",name:"星野",slogan:"给岁月以文明"},footer:{createYear:2018,copyrightInfo:'星野 | <a href="https://github.com/qqlcx5/frontend/blob/master/LICENSE" target="_blank">MIT License</a>'}}};var Ct=t(65),Et=t(126),At=t(127),zt=t(21);var It={computed:{$filterPosts(){return this.$site.pages.filter(n=>{const{frontmatter:{pageComponent:e,article:t,home:r}}=n;return!(e||!1===t||!0===r)})},$sortPosts(){return(n=this.$filterPosts).sort((n,e)=>{const t=n.frontmatter.sticky,r=e.frontmatter.sticky;return t&&r?t==r?Object(zt.a)(n,e):t-r:t&&!r?-1:!t&&r?1:Object(zt.a)(n,e)}),n;var n},$sortPostsByDate(){return(n=this.$filterPosts).sort((n,e)=>Object(zt.a)(n,e)),n;var n},$groupPosts(){return function(n){const e={},t={};for(let r=0,o=n.length;r<o;r++){const{frontmatter:{categories:o,tags:i}}=n[r];"array"===Object(zt.n)(o)&&o.forEach(t=>{t&&(e[t]||(e[t]=[]),e[t].push(n[r]))}),"array"===Object(zt.n)(i)&&i.forEach(e=>{e&&(t[e]||(t[e]=[]),t[e].push(n[r]))})}return{categories:e,tags:t}}(this.$sortPosts)},$categoriesAndTags(){return function(n){const e=[],t=[];for(let t in n.categories)e.push({key:t,length:n.categories[t].length});for(let e in n.tags)t.push({key:e,length:n.tags[e].length});return{categories:e,tags:t}}(this.$groupPosts)}}};r.b.component(Et.default),r.b.component(At.default);function Pt(n){return n.toString().padStart(2,"0")}t(280);r.b.component("Fantasy",()=>Promise.all([t.e(0),t.e(26)]).then(t.bind(null,428))),r.b.component("IndexBigImg",()=>Promise.all([t.e(0),t.e(27)]).then(t.bind(null,429))),r.b.component("LastReadingPopup",()=>Promise.resolve().then(t.bind(null,65))),r.b.component("NavCard",()=>Promise.all([t.e(0),t.e(28)]).then(t.bind(null,430))),r.b.component("Twikoo",()=>Promise.all([t.e(0),t.e(29)]).then(t.bind(null,431))),r.b.component("Badge",()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,432))),r.b.component("CodeBlock",()=>Promise.resolve().then(t.bind(null,126))),r.b.component("CodeGroup",()=>Promise.resolve().then(t.bind(null,127)));t(281);var $t={name:"ReadingProgress",data:()=>({readingTop:0,readingHeight:1,progressStyle:null,transform:void 0,running:!1}),watch:{$readingShow(){this.progressStyle=this.getProgressStyle(),this.$readingShow&&window.addEventListener("scroll",this.base)}},mounted(){this.transform=this.getTransform(),this.progressStyle=this.getProgressStyle(),this.$readingShow&&window.addEventListener("scroll",this.base)},beforeDestroy(){this.$readingShow&&window.removeEventListener("scroll",this.base)},methods:{base(){this.running||(this.running=!0,requestAnimationFrame(this.getReadingBase))},getReadingBase(){this.readingHeight=this.getReadingHeight()-this.getScreenHeight(),this.readingTop=this.getReadingTop(),this.progressStyle=this.getProgressStyle(),this.running=!1},getReadingHeight:()=>Math.max(document.body.scrollHeight,document.body.offsetHeight,0),getScreenHeight:()=>Math.max(window.innerHeight,document.documentElement.clientHeight,0),getReadingTop:()=>Math.max(window.pageYOffset,document.documentElement.scrollTop,0),getTransform(){const n=document.createElement("div");return["transform","-webkit-transform","-moz-transform","-o-transform","-ms-transform"].find(e=>e in n.style)||void 0},getProgressStyle(){const n=this.readingTop/this.readingHeight;switch(this.$readingShow){case"top":case"bottom":return this.transform?`${this.transform}: scaleX(${n})`:`width: ${100*n}%`;case"left":case"right":return this.transform?`${this.transform}: scaleY(${n})`:`height: ${100*n}%`;default:return null}}}},Bt=(t(282),Object(_t.a)($t,(function(){var n=this._self._c;return n("ClientOnly",[this.$readingShow?n("div",{staticClass:"reading-progress",class:this.$readingShow},[n("div",{staticClass:"progress",style:this.progressStyle})]):this._e()])}),[],!1,null,"3640397f",null).exports),Ot=[({Vue:n,options:e,router:t,siteData:r,isServer:o})=>{let i=!1;n.component(Ct.default.name,Ct.default),n.mixin({mounted(){i||(window.addEventListener("unload",this.saveLastReading),i=!0)},methods:{saveLastReading(){localStorage.setItem("lastReading",JSON.stringify({path:this.$route.path,scrollTop:document.documentElement.scrollTop,timestamp:(new Date).getTime()}))}}})},({Vue:n,options:e,router:t,siteData:r})=>{r.pages.map(n=>{const{frontmatter:{date:e,author:t}}=n;"string"==typeof e&&"Z"===e.charAt(e.length-1)&&(n.frontmatter.date=function(n){n instanceof Date||(n=new Date(n));return`${n.getUTCFullYear()}-${Pt(n.getUTCMonth()+1)}-${Pt(n.getUTCDate())} ${Pt(n.getUTCHours())}:${Pt(n.getUTCMinutes())}:${Pt(n.getUTCSeconds())}`}(e)),t?n.author=t:r.themeConfig.author&&(n.author=r.themeConfig.author)}),n.mixin(It)},{},({Vue:n})=>{n.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},({router:n})=>{function e(e){return n.app.$withBase(decodeURIComponent(e))}var t,r,o,i,a,s;"undefined"!=typeof window&&(t=window,r=document,o="script",i="ga",t.GoogleAnalyticsObject=i,t.ga=t.ga||function(){(t.ga.q=t.ga.q||[]).push(arguments)},t.ga.l=1*new Date,a=r.createElement(o),s=r.getElementsByTagName(o)[0],a.async=1,a.src="https://www.google-analytics.com/analytics.js",s.parentNode.insertBefore(a,s),ga("create","UA-221146734-1","auto"),ga("set","anonymizeIp",!0),window._hmt=window._hmt||[],function(){var n=document.createElement("script");n.src="https://hm.baidu.com/hm.js?848d314a969c90aa16a2e7b99934d50d";var e=document.getElementsByTagName("script")[0];e.parentNode.insertBefore(n,e)}(),n.afterEach((function(n){ga("set","page",e(n.fullPath)),ga("send","pageview"),_hmt.push(["_trackPageview",e(n.fullPath)])})))},({Vue:n})=>{n.component(Bt.name,Bt),n.mixin({computed:{$readingShow(){return this.$page.frontmatter.readingShow}}})}],Dt=["ReadingProgress","Twikoo"];class qt extends class{constructor(){this.store=new r.b({data:{state:{}}})}$get(n){return this.store.state[n]}$set(n,e){r.b.set(this.store.state,n,e)}$emit(...n){this.store.$emit(...n)}$on(...n){this.store.$on(...n)}}{}Object.assign(qt.prototype,{getPageAsyncComponent:ce,getLayoutAsyncComponent:de,getAsyncComponent:ue,getVueComponent:pe});var Lt={install(n){const e=new qt;n.$vuepress=e,n.prototype.$vuepress=e}};function Vt(n,e){const t=e.toLowerCase();return n.options.routes.some(n=>n.path.toLowerCase()===t)}var Ft={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(n){const e=this.pageKey||this.$parent.$page.key;return he("pageKey",e),r.b.component(e)||r.b.component(e,ce(e)),r.b.component(e)?n(e):n("")}},Mt={functional:!0,props:{slotKey:String,required:!0},render:(n,{props:e,slots:t})=>n("div",{class:["content__"+e.slotKey]},t()[e.slotKey])},Gt={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Rt=(t(283),t(284),Object(_t.a)(Gt,(function(){var n=this._self._c;return n("span",[n("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[n("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),n("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),n("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),Nt={functional:!0,render(n,{parent:e,children:t}){if(e._isMounted)return t;e.$once("hook:mounted",()=>{e.$forceUpdate()})}};r.b.config.productionTip=!1,r.b.use(Wn),r.b.use(Lt),r.b.mixin(function(n,e,t=r.b){!function(n){n.locales&&Object.keys(n.locales).forEach(e=>{n.locales[e].path=e});Object.freeze(n)}(e),t.$vuepress.$set("siteData",e);const o=new(n(t.$vuepress.$get("siteData"))),i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(o)),a={};return Object.keys(i).reduce((n,e)=>(e.startsWith("$")&&(n[e]=i[e].get),n),a),{computed:a}}(n=>class{setPage(n){this.__page=n}get $site(){return n}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:n={}}=this.$site;let e,t;for(const r in n)"/"===r?t=n[r]:0===this.$page.path.indexOf(r)&&(e=n[r]);return e||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:n}=this.$page.frontmatter;return"string"==typeof n&&n}get $title(){const n=this.$page,{metaTitle:e}=this.$page.frontmatter;if("string"==typeof e)return e;const t=this.$siteTitle,r=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?r?r+" | "+t:t:r||"VuePress"}get $description(){const n=function(n){if(n){const e=n.filter(n=>"description"===n.name)[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(r.path.toLowerCase()===e.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},Tt)),r.b.component("Content",Ft),r.b.component("ContentSlotsDistributor",Mt),r.b.component("OutboundLink",Rt),r.b.component("ClientOnly",Nt),r.b.component("Layout",de("Layout")),r.b.component("NotFound",de("NotFound")),r.b.prototype.$withBase=function(n){const e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.10",hash:"c397c1e"},async function(n){const e="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Tt.routerBase||Tt.base,t=new Wn({base:e,mode:"history",fallback:!1,routes:jt,scrollBehavior:(n,e,t)=>t||(n.hash?!r.b.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})});!function(n){n.beforeEach((e,t,r)=>{if(Vt(n,e.path))r();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){const t=e.path.replace(/\/$/,"")+".html";Vt(n,t)?r(t):r()}else r();else{const t=e.path+"/",o=e.path+".html";Vt(n,o)?r(o):Vt(n,t)?r(t):r()}})}(t);const o={};try{await Promise.all(Ot.filter(n=>"function"==typeof n).map(e=>e({Vue:r.b,options:o,router:t,siteData:Tt,isServer:n})))}catch(n){console.error(n)}return{app:new r.b(Object.assign(o,{router:t,render:n=>n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},Dt.map(e=>n(e)))])})),router:t}}(!1).then(({app:n,router:e})=>{e.onReady(()=>{n.$mount("#app")})})}]);