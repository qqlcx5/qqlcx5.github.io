(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{504:function(e,t,s){"use strict";s.r(t);var n=s(6),a=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"项目的亮点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目的亮点"}},[e._v("#")]),e._v(" 项目的亮点")]),e._v(" "),t("p",[e._v("Vuepress诞生时候我就入手体验了，也有很多大神写过这方面的文章写的也很不错。起初并不打算想写的，想到或许可以帮助一些人更快更轻松的搭建博客。我搭建的VuePress作为模版，介绍其中一些必要的配置项，更快的了解VuePress，顺便在上面爽爽写文章文档就行。")]),e._v(" "),t("p",[t("strong",[e._v("本项目一些优点")])]),e._v(" "),t("ol",[t("li",[e._v("自动生成侧边栏和分组")]),e._v(" "),t("li",[e._v("GitHub Actions 自动部署")]),e._v(" "),t("li",[e._v("集合一些有趣的插件库")])]),e._v(" "),t("h2",{attrs:{id:"快速上手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速上手"}},[e._v("#")]),e._v(" 快速上手")]),e._v(" "),t("h3",{attrs:{id:"全局安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局安装"}},[e._v("#")]),e._v(" 全局安装")]),e._v(" "),t("p",[e._v("在命令行或者控制台、终端执行以下操作。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# 创建项目目录\nmkdir vuepress && cd vuepress   // 生成一个vuepress文件夹，然后进入该文件夹\n\n# 初始化项目\nnpm init\n\n# 将 VuePress 作为一个本地依赖安装\nyarn add -D vuepress # 或者：npm install -D vuepress\n\n# 新建一个 docs 文件夹\nmkdir docs\n\n# 新建一个 markdown 文件\necho '# Hello VuePress!' > docs/README.md\n\n")])])]),t("p",[e._v("接着，在 "),t("code",[e._v("package.json")]),e._v(" 里加一些脚本:")]),e._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[e._v("  "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[e._v('"scripts"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[e._v('"test"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"echo \\"Error: no test specified\\" && exit 1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[e._v('"docs:dev"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"vuepress dev docs"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[e._v('"docs:build"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"vuepress build docs"')]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])])]),t("p",[e._v("然后就可以运行本项目")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" docs:dev "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 或者：npm run docs:dev")]),e._v("\n")])])]),t("p",[e._v("打包部署到GitHub服务器上")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" docs:build "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 或者：npm run docs:build")]),e._v("\n")])])]),t("h2",{attrs:{id:"目录的结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目录的结构"}},[e._v("#")]),e._v(" 目录的结构")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("vuepress\n├── docs\n│   ├── .vuepress\n│   │   ├── components (Vue 组件将会被自动注册为全局组件)\n│   │   ├── public (静态资源目录)\n│   │   ├── config.js (配置文件的入口文件)\n│   ├── README.md\n│   ├── guide\n│      └── README.md\n└── package.json\n\n")])])]),t("h2",{attrs:{id:"主题基本配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主题基本配置"}},[e._v("#")]),e._v(" 主题基本配置")]),e._v(" "),t("h3",{attrs:{id:"配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[e._v("#")]),e._v(" 配置文件")]),e._v(" "),t("p",[e._v("首先在你的文档目录下创建一个 "),t("code",[e._v(".vuepress")]),e._v(" 目录，所有 "),t("code",[e._v("VuePress")]),e._v(" 相关的文件都将会被放在这里。")]),e._v(" "),t("p",[e._v("一个 VuePress 网站必要的配置文件是 "),t("code",[e._v(".vuepress/config.js")]),e._v("，它应该导出一个 JavaScript 对象：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("module.exports = {\n  title: 'Hello VuePress', //网站的标题\n  description: 'Just playing around' //网站的描述\n}\n")])])]),t("h3",{attrs:{id:"导航栏"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导航栏"}},[e._v("#")]),e._v(" 导航栏")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// .vuepress/config.js\nmodule.exports = {\n  themeConfig: {\n    nav: [\n      { text: '首页', link: '/' },\n      { text: '指南', link: '/guide/' },\n      { text: 'Google', link: 'https://google.com' },\n    ]\n  }\n}\n")])])]),t("p",[e._v("当你提供了一个 items 数组而不是一个单一的 link 时，它将显示为一个 下拉列表：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("module.exports = {\n  themeConfig: {\n    nav: [\n      {\n        text: '语言',\n        items: [\n          { text: '中文', link: '/cn/' },\n          { text: '英语', link: '/en/' }\n        ]\n      }\n    ]\n  }\n}\n")])])]),t("h2",{attrs:{id:"侧边栏分组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#侧边栏分组"}},[e._v("#")]),e._v(" 侧边栏分组")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// .vuepress/config.js\nmodule.exports = {\n  themeConfig: {\n    sidebar: [\n      {\n        title: 'Group 1',   // 必要的\n        path: '/foo/',      // 可选的, 标题的跳转链接，应为绝对路径且必须存在\n        collapsable: false, // 可选的, 默认值是 true,\n        sidebarDepth: 1,    // 可选的, 默认值是 1\n        children: [\n          '/'\n        ]\n      },\n      {\n        title: 'Group 2',\n        children: [ /* ... */ ]\n      }\n    ]\n  }\n}\n")])])]),t("blockquote",[t("p",[e._v("看到这里，有没有发现一件事，你写的文章可能存在"),t("code",[e._v("guide")]),e._v("目录或者其它目录下，可能几篇文章还好，但是考虑到后续有几百篇的文章，存放在侧边栏上，需要手动去配置路径，后续文章修改文件名和路径的情况下，一不下心操作失误可能博客就废的差不多的。难维护。")])]),e._v(" "),t("p",[e._v("接下来就介绍一下，如何把文章存在目录下文章就自动生成侧边栏有没有觉得非常棒！！！")]),e._v(" "),t("h3",{attrs:{id:"自动生成侧边栏"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动生成侧边栏"}},[e._v("#")]),e._v(" 自动生成侧边栏")]),e._v(" "),t("p",[e._v("在"),t("code",[e._v(".vuepress")]),e._v(" 目录下创建一个"),t("code",[e._v("utils")]),e._v("目录，然后创建"),t("code",[e._v("initPage.js")]),e._v("和"),t("code",[e._v("index.js")]),e._v(" 文件")]),e._v(" "),t("p",[t("strong",[e._v("initPage.js文件")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const fs = require('fs');\n// 排除检查的文件\nlet excludes = ['.DS_Store'];\n\nlet filehelper = {\n  getFileName: function(rpath,otherPath) {\n    let filenames = [];\n    let fileTypes = /\\.md$/; //只匹配以md结尾的文件\n    fs.readdirSync(rpath).forEach((file) => {\n      if (excludes.indexOf(file) < 0) {\n        fullpath = rpath + '/' + file;\n        let fileinfo = fs.statSync(fullpath);\n        if (fileinfo.isFile()) {\n          if (fileTypes.test(file) > 0) {\n            if (file === 'README.md') {\n              file = '';\n            } else {\n              file = file.replace('.md', '');\n            }\n            file = otherPath ? otherPath + file : file\n            filenames.push(file);\n          }\n        }\n      }\n    });\n    filenames.sort(); // 排序\n    return filenames;\n  },\n};\nmodule.exports = filehelper;\n\n")])])]),t("p",[t("strong",[e._v("index.js 文件")])]),e._v(" "),t("p",[e._v("index.js 主要是接收参数，将参数转换成对象格式，方便在 config.js 里使用。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const utils = {\n  genSidebar: function (title, children = [''], collapsable = true, sidebarDepth = 2) {\n    let arr = new Array();\n    arr.push({\n      title,\n      children,\n      collapsable,\n      sidebarDepth\n    })\n    return arr;\n  }\n};\n\nmodule.exports = utils;\n")])])]),t("p",[e._v("在"),t("code",[e._v(".vuepress")]),e._v(" 目录下创建一个"),t("code",[e._v("themeConfig.js")]),e._v("文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const path = require('path');\nconst rootpath = path.dirname(__dirname);\nconst utils = require('./utils/index');\nconst filehelper = require('./utils/initPage.js');\n\nconst themeConfig = {\n  nav: [\n    {\n      text: '面试',\n      link: '/Interview/',\n    },\n    {\n      text: 'JavaScript',\n      link: '/JavaScript/',\n    },\n    {\n      text: 'Vuejs',\n      link: '/vue/',\n    },\n    {\n      text: 'CSS',\n      link: '/css/',\n    },\n    {\n      text: '其它',\n      ariaLabel: 'Menu',\n      items: [\n        { text: 'VuePress', link: '/other/vuepress/' },\n        { text: '开发工具', link: '/other/ide/' }\n      ]\n    },\n    {\n      text: '主页',\n      ariaLabel: 'Menu',\n      items: [\n        { text: '主页一', link: '/404/' },\n        { text: '主页二', link: '/404/Personal' }\n      ]\n    },\n  ],\n  \n  sidebar: {\n    '/JavaScript/': concatJs(),\n  },\n};\n\n// JavaScript\nfunction concatJs() {\n  const arr = utils.genSidebar( 'JStst', filehelper.getFileName(rootpath + '/JavaScript/'), false);\n  arr.push(...utils.genSidebar('Js-Vue',filehelper.getFileName(rootpath + '/JavaScript/vue/', 'vue/'),false));\n  return arr;\n}\n\nmodule.exports = themeConfig;\n\n")])])]),t("p",[e._v("通过"),t("code",[e._v("themeConfig.js")]),e._v(" 把一些配置项调整放在这里，这样"),t("code",[e._v(".vuepress/config.js")]),e._v(" 就可以如下代码这样写。避免文件过于太长而且代码更加优雅一些，今后一些目录调整在"),t("code",[e._v("themeConfig.js")]),e._v("稍作调整就行。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const themeConfig = require('./themeConfig');\n\nmodule.exports = {\n  title: '廖纯鑫博客',\n  description: '前端、前端教程、小程序、个人博客、廖纯鑫博客',\n  themeConfig\n};\n")])])]),t("p",[e._v("参考文献：")]),e._v(" "),t("ol",[t("li",[t("a",{attrs:{href:"https://www.jianshu.com/p/7b78f570fc4e",target:"_blank",rel:"noopener noreferrer"}},[e._v("vuepress自动生成侧边栏"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.vuepress.cn/plugin/#%E6%A0%B7%E4%BE%8B",target:"_blank",rel:"noopener noreferrer"}},[e._v("VuePress 中文文档"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[e._v("#")]),e._v(" 部署")]),e._v(" "),t("p",[e._v("在项目目录下创建一个 "),t("code",[e._v("deploy.sh")]),e._v("文件，复制以下代码。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# 确保脚本抛出遇到的错误\n# 上传vuepress源码及文章到码云备份\nset -e\ngit add -A\ngit commit -m 'blogCode'\ngit push git@gitee.com:qqlcx5/vuePressCode.git master\n# 打包及切换到打包后文件夹\nnpm run docs:build && cd docs/.vuepress/dist\n\n# 部署到码云\ngit init\ngit add -A\ngit commit -m 'deploy'\ngit push -f git@gitee.com:qqlcx5/qqlcx5.git master\n\n# 部署到github Page\n# 删除 .git目录重新上传，目前只有想的这种方法\nrm -rf .git\ngit init\ngit add -A\ngit commit -m 'deploy'\ngit push -f git@github.com:qqlcx5/qqlcx5.github.io.git master\ncd -\n")])])]),t("p",[e._v("仓库地址自行更换。")]),e._v(" "),t("p",[e._v("window用户双击"),t("code",[e._v("deploy.sh")]),e._v(" 文件便会将上传文章到码云备份，及部署到GitHub Page。")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在终端且进入vuepress项目中输入：")]),e._v("\n\n./deploy.sh\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 如果出现permission denied，就重新设置一下权限再运行，")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("chmod")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("777")]),e._v(" deploy.sh\n\n./deploy.sh\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);